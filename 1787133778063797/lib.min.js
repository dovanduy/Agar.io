var t_t = window.t_t = function(l, t) {
    var u = {
        __internals: [],
        __packages: {},
        __classmap: {
            Object: Object,
            Function: Function,
            Array: Array,
            String: String
        },
        __sysClass: {
            object: "Object",
            array: "Array",
            string: "String",
            dictionary: "Dictionary"
        },
        __propun: {
            writable: !0,
            enumerable: !1,
            configurable: !0
        },
        __presubstr: String.prototype.substr,
        __substr: function(t, e) {
            return 1 == arguments.length ? u.__presubstr.call(this, t) : u.__presubstr.call(this, t, 0 < e ? e : this.length + e)
        },
        __init: function(t) {
            t.forEach(function(t) {
                t.__init$ && t.__init$()
            })
        },
        __isClass: function(t) {
            return t && (t.__isclass || t == Object || t == String || t == Array)
        },
        __newvec: function(t, e) {
            var i = [];
            i.length = t;
            for (var n = 0; n < t; n++) i[n] = e;
            return i
        },
        __extend: function(t, e) {
            for (var i in e)
                if (e.hasOwnProperty(i)) {
                    var n = Object.getOwnPropertyDescriptor(e, i),
                        s = n.get,
                        r = n.set;
                    s || r ? s && r ? Object.defineProperty(t, i, n) : (s && Object.defineProperty(t, i, s), r && Object.defineProperty(t, i, r)) : t[i] = e[i]
                }
            function o() {
                u.un(this, "constructor", t)
            }
            o.prototype = e.prototype, t.prototype = new o, u.un(t.prototype, "__imps", u.__copy({}, e.prototype.__imps))
        },
        __copy: function(t, e) {
            if (!e) return null;
            for (var i in t = t || {}, e) t[i] = e[i];
            return t
        },
        __package: function(t, e) {
            if (!u.__packages[t]) {
                u.__packages[t] = !0;
                var i = l,
                    n = t.split(".");
                if (1 < n.length)
                    for (var s = 0, r = n.length - 1; s < r; s++) {
                        var o = i[n[s]];
                        i = o || (i[n[s]] = {})
                    }
                i[n[n.length - 1]] || (i[n[n.length - 1]] = e || {})
            }
        },
        __hasOwnProperty: function(t, e) {
            return e = e || this, Object.hasOwnProperty.call(e, t) || function t(e, i) {
                if (Object.hasOwnProperty.call(i.prototype, e)) return !0;
                var n = i.prototype.__super;
                return null == n ? null : t(e, n)
            }(t, e.__class)
        },
        __typeof: function(t, e) {
            if (!t || !e) return !1;
            if (e === String) return "string" == typeof t;
            if (e === Number) return "number" == typeof t;
            if (e.__interface__) e = e.__interface__;
            else if ("string" != typeof e) return t instanceof e;
            return t.__imps && t.__imps[e] || t.__class == e
        },
        __as: function(t, e) {
            return this.__typeof(t, e) ? t : null
        },
        __int: function(t) {
            return t ? parseInt(t) : 0
        },
        interface: function(t, e) {
            u.__package(t, {});
            var i = u.__internals,
                n = i[t] = i[t] || {
                    self: t
                };
            if (e) {
                var s = e.split(",");
                n.extend = [];
                for (var r = 0; r < s.length; r++) {
                    var o = s[r];
                    i[o] = i[o] || {
                        self: o
                    }, n.extend.push(i[o])
                }
            }
            var a = l,
                h = t.split(".");
            for (r = 0; r < h.length - 1; r++) a = a[h[r]];
            a[h[h.length - 1]] = {
                __interface__: t
            }
        },
        class: function(t, e, i, n) {
            if (i && u.__extend(t, i), e)
                if (u.__package(e, t), u.__classmap[e] = t, 0 < e.indexOf(".")) {
                    if (0 == e.indexOf("t_tl.")) {
                        var s = e.split(".");
                        n = n || s[s.length - 1], u[n] && console.log("Warning!,this class[" + n + "] already exist:", u[n]), u[n] = t
                    }
                } else "Main" == e ? l.Main = t : (u[e] && console.log("Error!,this class[" + e + "] already exist:", u[e]), u[e] = t);
            var r = u.un,
                o = t.prototype;
            r(o, "hasOwnProperty", u.__hasOwnProperty), r(o, "__class", t), r(o, "__super", i), r(o, "__className", e), r(t, "__super", i), r(t, "__className", e), r(t, "__isclass", !0), r(t, "super", function(t) {
                this.__super.call(t)
            })
        },
        imps: function(t, e) {
            if (!e) return null;
            var s = t.__imps || u.un(t, "__imps", {});

            function r(t) {
                var e, i;
                if ((e = u.__internals[t]) && (s[t] = !0, i = e.extend))
                    for (var n = 0; n < i.length; n++) r(i[n].self)
            }
            for (var i in e) r(i)
        },
        superSet: function(t, e, i, n) {
            var s = t.prototype["_$set_" + i];
            s && s.call(e, n)
        },
        superGet: function(t, e, i) {
            var n = t.prototype["_$get_" + i];
            return n ? n.call(e) : null
        },
        getset: function(t, e, i, n, s) {
            t ? (n && (e["_$GET_" + i] = n), s && (e["_$SET_" + i] = s)) : (n && u.un(e, "_$get_" + i, n), s && u.un(e, "_$set_" + i, s)), n && s ? Object.defineProperty(e, i, {
                get: n,
                set: s,
                enumerable: !1,
                configurable: !0
            }) : (n && Object.defineProperty(e, i, {
                get: n,
                enumerable: !1,
                configurable: !0
            }), s && Object.defineProperty(e, i, {
                set: s,
                enumerable: !1,
                configurable: !0
            }))
        },
        static: function(i, n) {
            for (var s = 0, t = n.length; s < t; s += 2)
                if ("length" == n[s]) i.length = n[s + 1].call(i);
                else {
                    function e() {
                        var e = n[s],
                            t = n[s + 1];
                        Object.defineProperty(i, e, {
                            get: function() {
                                return delete this[e], this[e] = t.call(this)
                            },
                            set: function(t) {
                                delete this[e], this[e] = t
                            },
                            enumerable: !0,
                            configurable: !0
                        })
                    }
                    e()
                }
        },
        un: function(t, e, i) {
            return i || (i = t[e]), u.__propun.value = i, Object.defineProperty(t, e, u.__propun), i
        },
        uns: function(e, t) {
            t.forEach(function(t) {
                u.un(e, t)
            })
        }
    };
    return l.console = l.console || {
        log: function() {}
    }, l.trace = l.console.log, Error.prototype.throwError = function() {
        throw arguments
    }, Object.defineProperty(Array.prototype, "fixed", {
        enumerable: !1
    }), u
}(window, document);
! function(t, e, i) {
    i.un, i.uns, i.static, i.class, i.getset, i.__newvec
}(window, document, t_t),
function(o, e, b) {
    b.un, b.uns;
    var h = b.static,
        p = b.class,
        u = b.getset;
    b.__newvec;
    b.interface("t_tl.runtime.IMarket"), b.interface("t_tl.filters.IFilter"), b.interface("t_tl.display.ILayout"), b.interface("t_tl.resource.IDispose"), b.interface("t_tl.runtime.IPlatform"), b.interface("t_tl.resource.IDestroy"), b.interface("t_tl.runtime.IConchNode"), b.interface("t_tl.filters.IFilterAction"), b.interface("t_tl.runtime.ICPlatformClass"), b.interface("t_tl.resource.ICreateResource"), b.interface("t_tl.runtime.IConchRenderObject"), b.interface("t_tl.runtime.IPlatformClass", "t_tl.runtime.IPlatform");
    var I = function() {
            function r() {}
            return p(r, "t_tl.utils.RunDriver"), r.FILTER_ACTIONS = [], r.pixelRatio = -1, r._charSizeTestDiv = null, r.now = function() {
                return Date.now()
            }, r.getWindow = function() {
                return o
            }, r.getPixelRatio = function() {
                if (r.pixelRatio < 0) {
                    var t = B.context,
                        e = t.backingStorePixelRatio || t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1;
                    (r.pixelRatio = (B.window.devicePixelRatio || 1) / e) < 1 && (r.pixelRatio = 1)
                }
                return r.pixelRatio
            }, r.getIncludeStr = function(t) {
                return null
            }, r.createShaderCondition = function(t) {
                var e = "(function() {return " + t + ";})";
                return b._runScript(e)
            }, r.fontMap = [], r.measureText = function(t, e) {
                var i = r.hanzi.test(t);
                if (i && r.fontMap[e]) return r.fontMap[e];
                var n = B.context;
                n.font = e;
                var s = n.measureText(t);
                return i && (r.fontMap[e] = s), s
            }, r.getWebGLContext = function(t) {}, r.beginFlush = function() {}, r.endFinish = function() {}, r.addToAtlas = null, r.flashFlushImage = function(t) {}, r.drawToCanvas = function(t, e, i, n, s, r) {
                var o = yt.create("2D"),
                    a = new F(i, n, o);
                return k.renders[e]._fun(t, a, s, r), o
            }, r.createParticleTemplate2D = null, r.createGLTextur = null, r.createWebGLContext2D = null, r.changeWebGLSize = function(t, e) {}, r.createRenderSprite = function(t, e) {
                return new k(t, e)
            }, r.createFilterAction = function(t) {
                return new y
            }, r.createGraphics = function() {
                return new _
            }, r.clear = function(t) {
                D._context.ctx.clear()
            }, r.cancelLoadByUrl = function(t) {}, r.clearAtlas = function(t) {}, r.isAtlas = function(t) {
                return !1
            }, r.addTextureToAtlas = function(t) {}, r.getTexturePixels = function(t, e, i, n, s) {
                return null
            }, r.skinAniSprite = function() {
                return null
            }, r.update3DLoop = function() {}, h(r, ["hanzi", function() {
                return this.hanzi = new RegExp("^[一-龥]$")
            }]), r
        }(),
        n = (u(1, b, "alertGlobalError", null, function(t) {
            var r = 0;
            B.window.onerror = t ? function(t, e, i, n, s) {
                r++ < 5 && s && alert("出错啦，请把此信息截图给研发商\n" + t + "\n" + s.stack || s)
            } : null
        }), b.init = function(t, e, i) {
            for (var n = [], s = 2, r = arguments.length; s < r; s++) n.push(arguments[s]);
            if (!b._isinit) {
                ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = b._arrayBufferSlice), b._isinit = !0, B.__init__(), O.__init__(), _.__init__(), b.timer = new j, b.scaleTimer = new j, b.loader = new ht, J.__init__(), s = 0;
                for (var o = n.length; s < o; s++) n[s].enable && n[s].enable();
                return d.__init__(), a.__init__(), N.__init__(), G.beginCheck(), b._currentStage = b.stage = new mt, b.stage.conchModel && b.stage.conchModel.setRootNode(), b.getUrlPath(), b.render = new D(0, 0), b.stage.size(t, e), k.__init__(), c.__init__(), f.instance.__init__(b.stage, D.canvas), xt.__init__(), P.autoStopMusic = !0, E.__init__(), D.canvas
            }
        }, b.getUrlPath = function() {
            var t = B.window.location,
                e = t.pathname;
            e = ":" == e.charAt(2) ? e.substring(1) : e, R.rootPath = R.basePath = R.getPath("file:" == t.protocol ? e : t.protocol + "//" + t.host + t.pathname)
        }, b._arrayBufferSlice = function(t, e) {
            var i = new Uint8Array(this, t, e - t),
                n = new Uint8Array(i.length);
            return n.set(i), n.buffer
        }, b._runScript = function(t) {
            return B.window["e" + String.fromCharCode(118) + "al"](t)
        }, b.stage = null, b.timer = null, b.scaleTimer = null, b.loader = null, b.version = "1.7.19", b.render = null, b._currentStage = null, b._isinit = !1, b.MiniAdpter = {
            init: function() {
                o.navigator && o.navigator.userAgent && -1 < o.navigator.userAgent.indexOf("MiniGame") && console.error("请先引用小游戏适配库t_tl.wxmini.js,详细教程：https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0")
            }
        }, h(b, ["conchMarket", function() {
            return this.conchMarket = o.conch ? conchMarket : null
        }, "PlatformClass", function() {
            return this.PlatformClass = o.PlatformClass
        }]), function() {
            function t() {}
            return p(t, "Config"), t.WebGLTextCacheCount = 500, t.atlasEnable = !1, t.showCanvasMark = !1, t.animationInterval = 50, t.isAntialias = !1, t.isAlpha = !1, t.premultipliedAlpha = !0, t.isStencil = !0, t.preserveDrawingBuffer = !1, t
        }()),
        l = function() {
            var h;

            function e() {
                this._events = null
            }
            p(e, "t_tl.events.EventDispatcher");
            var t = e.prototype;
            return t.hasListener = function(t) {
                return !!(this._events && this._events[t])
            }, t.event = function(t, e) {
                if (!this._events || !this._events[t]) return !1;
                var i = this._events[t];
                if (i.run) i.once && delete this._events[t], null != e ? i.runWith(e) : i.run();
                else {
                    for (var n = 0, s = i.length; n < s; n++) {
                        var r = i[n];
                        r && (null != e ? r.runWith(e) : r.run()), r && !r.once || (i.splice(n, 1), n--, s--)
                    }
                    0 === i.length && this._events && delete this._events[t]
                }
                return !0
            }, t.on = function(t, e, i, n) {
                return this._createListener(t, e, i, n, !1)
            }, t.once = function(t, e, i, n) {
                return this._createListener(t, e, i, n, !0)
            }, t._createListener = function(t, e, i, n, s, r) {
                void 0 === r && (r = !0), r && this.off(t, e, i, s);
                var o = h.create(e || this, i, n, s);
                this._events || (this._events = {});
                var a = this._events;
                return a[t] ? a[t].run ? a[t] = [a[t], o] : a[t].push(o) : a[t] = o, this
            }, t.off = function(t, e, i, n) {
                if (void 0 === n && (n = !1), !this._events || !this._events[t]) return this;
                var s = this._events[t];
                if (null != i)
                    if (s.run) e && s.caller !== e || s.method !== i || n && !s.once || (delete this._events[t], s.recover());
                    else {
                        for (var r = 0, o = 0, a = s.length; o < a; o++) {
                            var h = s[o];
                            h ? !h || e && h.caller !== e || h.method !== i || n && !h.once || (r++, s[o] = null, h.recover()) : r++
                        }
                        r === a && delete this._events[t]
                    }
                return this
            }, t.offAll = function(t) {
                var e = this._events;
                if (!e) return this;
                if (t) this._recoverHandlers(e[t]), delete e[t];
                else {
                    for (var i in e) this._recoverHandlers(e[i]);
                    this._events = null
                }
                return this
            }, t._recoverHandlers = function(t) {
                if (t)
                    if (t.run) t.recover();
                    else
                        for (var e = t.length - 1; - 1 < e; e--) t[e] && (t[e].recover(), t[e] = null)
            }, t.isMouseEvent = function(t) {
                return e.MOUSE_EVENTS[t]
            }, e.MOUSE_EVENTS = {
                rightmousedown: !0,
                rightmouseup: !0,
                rightclick: !0,
                mousedown: !0,
                mouseup: !0,
                mousemove: !0,
                mouseover: !0,
                mouseout: !0,
                click: !0,
                doubleclick: !0
            }, e.__init$ = function() {
                Object.defineProperty(t_tl.events.EventDispatcher.prototype, "_events", {
                    enumerable: !1,
                    writable: !0
                }), h = function(t) {
                    function s(t, e, i, n) {
                        s.__super.call(this, t, e, i, n)
                    }
                    return p(s, "", v), s.prototype.recover = function() {
                        0 < this._id && (this._id = 0, s._pool.push(this.clear()))
                    }, s.create = function(t, e, i, n) {
                        return void 0 === n && (n = !0), s._pool.length ? s._pool.pop().setTo(t, e, i, n) : new s(t, e, i, n)
                    }, s._pool = [], s
                }()
            }, e
        }(),
        v = function() {
            function s(t, e, i, n) {
                this.once = !1, void(this._id = 0) === n && (n = !1), this.setTo(t, e, i, n)
            }
            p(s, "t_tl.utils.Handler");
            var t = s.prototype;
            return t.setTo = function(t, e, i, n) {
                return this._id = s._gid++, this.caller = t, this.method = e, this.args = i, this.once = n, this
            }, t.run = function() {
                if (null == this.method) return null;
                var t = this._id,
                    e = this.method.apply(this.caller, this.args);
                return this._id === t && this.once && this.recover(), e
            }, t.runWith = function(t) {
                if (null == this.method) return null;
                var e = this._id;
                if (null == t) var i = this.method.apply(this.caller, this.args);
                else i = this.args || t.unshift ? this.args ? this.method.apply(this.caller, this.args.concat(t)) : this.method.apply(this.caller, t) : this.method.call(this.caller, t);
                return this._id === e && this.once && this.recover(), i
            }, t.clear = function() {
                return this.caller = null, this.method = null, this.args = null, this
            }, t.recover = function() {
                0 < this._id && (this._id = 0, s._pool.push(this.clear()))
            }, s.create = function(t, e, i, n) {
                return void 0 === n && (n = !0), s._pool.length ? s._pool.pop().setTo(t, e, i, n) : new s(t, e, i, n)
            }, s._pool = [], s._gid = 1, s
        }(),
        S = function() {
            function t() {
                this._texture = null, this._fontCharDic = {}, this._fontWidthMap = {}, this._complete = null, this._path = null, this._maxWidth = 0, this._spaceWidth = 10, this._padding = null, this.fontSize = 12, this.autoScaleSize = !1, this.letterSpacing = 0
            }
            p(t, "t_tl.display.BitmapFont");
            var e = t.prototype;
            return e.loadFont = function(t, e) {
                this._path = t, this._complete = e, b.loader.load([{
                    url: this._path,
                    type: "xml"
                }, {
                    url: this._path.replace(".fnt", ".png"),
                    type: "image"
                }], v.create(this, this.onLoaded))
            }, e.onLoaded = function() {
                this.parseFont(at.getRes(this._path), at.getRes(this._path.replace(".fnt", ".png"))), this._complete && this._complete.runWith(this._texture ? this : null)
            }, e.parseFont = function(t, e) {
                if (null != t && null != e) {
                    this._texture = e;
                    var i = t.getElementsByTagName("info");
                    if (!i[0].getAttributeNode) return this.parseFont2(t, e);
                    this.fontSize = parseInt(i[0].getAttributeNode("size").nodeValue);
                    var n, s = i[0].getAttributeNode("padding").nodeValue.split(",");
                    this._padding = [parseInt(s[0]), parseInt(s[1]), parseInt(s[2]), parseInt(s[3])], n = t.getElementsByTagName("char");
                    var r = 0;
                    for (r = 0; r < n.length; r++) {
                        var o = n[r],
                            a = parseInt(o.getAttributeNode("id").nodeValue),
                            h = parseInt(o.getAttributeNode("xoffset").nodeValue) / 1,
                            l = parseInt(o.getAttributeNode("yoffset").nodeValue) / 1,
                            u = parseInt(o.getAttributeNode("xadvance").nodeValue) / 1,
                            c = new M;
                        c.x = parseInt(o.getAttributeNode("x").nodeValue), c.y = parseInt(o.getAttributeNode("y").nodeValue), c.width = parseInt(o.getAttributeNode("width").nodeValue), c.height = parseInt(o.getAttributeNode("height").nodeValue);
                        var _ = ut.create(e, c.x, c.y, c.width, c.height, h, l);
                        this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing), this._fontCharDic[a] = _, this._fontWidthMap[a] = u
                    }
                }
            }, e.parseFont2 = function(t, e) {
                if (null != t && null != e) {
                    this._texture = e;
                    var i = t.getElementsByTagName("info");
                    this.fontSize = parseInt(i[0].attributes.size.nodeValue);
                    var n = i[0].attributes.padding.nodeValue.split(",");
                    this._padding = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];
                    var s = t.getElementsByTagName("char"),
                        r = 0;
                    for (r = 0; r < s.length; r++) {
                        var o = s[r].attributes,
                            a = parseInt(o.id.nodeValue),
                            h = parseInt(o.xoffset.nodeValue) / 1,
                            l = parseInt(o.yoffset.nodeValue) / 1,
                            u = parseInt(o.xadvance.nodeValue) / 1,
                            c = new M;
                        c.x = parseInt(o.x.nodeValue), c.y = parseInt(o.y.nodeValue), c.width = parseInt(o.width.nodeValue), c.height = parseInt(o.height.nodeValue);
                        var _ = ut.create(e, c.x, c.y, c.width, c.height, h, l);
                        this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing), this._fontCharDic[a] = _, this._fontWidthMap[a] = u
                    }
                }
            }, e.getCharTexture = function(t) {
                return this._fontCharDic[t.charCodeAt(0)]
            }, e.destroy = function() {
                if (this._texture) {
                    for (var t in this._fontCharDic) {
                        var e = this._fontCharDic[t];
                        e && e.destroy()
                    }
                    this._texture.destroy(), this._fontCharDic = null, this._fontWidthMap = null, this._texture = null
                }
            }, e.setSpaceWidth = function(t) {
                this._spaceWidth = t
            }, e.getCharWidth = function(t) {
                var e = t.charCodeAt(0);
                return this._fontWidthMap[e] ? this._fontWidthMap[e] + this.letterSpacing : " " == t ? this._spaceWidth + this.letterSpacing : 0
            }, e.getTextWidth = function(t) {
                for (var e = 0, i = 0, n = t.length; i < n; i++) e += this.getCharWidth(t.charAt(i));
                return e
            }, e.getMaxWidth = function() {
                return this._maxWidth
            }, e.getMaxHeight = function() {
                return this.fontSize
            }, e.drawText = function(t, e, i, n, s, r) {
                var o, a = this.getTextWidth(t),
                    h = 0;
                "center" === s && (h = (r - a) / 2), "right" === s && (h = r - a);
                for (var l = 0, u = 0, c = t.length; u < c; u++)(o = this.getCharTexture(t.charAt(u))) && (e.graphics.drawTexture(o, i + l + h, n), l += this.getCharWidth(t.charAt(u)))
            }, t
        }(),
        a = function() {
            function i() {
                this.alpha = 1, this.visible = !0, this.scrollRect = null, this.blendMode = null, this._type = 0, this._tf = i._TF_EMPTY
            }
            p(i, "t_tl.display.css.Style");
            var t = i.prototype;
            return t.getTransform = function() {
                return this._tf
            }, t.setTransform = function(t) {
                this._tf = "none" !== t && t ? t : i._TF_EMPTY
            }, t.setTranslateX = function(t) {
                this._tf === i._TF_EMPTY && (this._tf = new s), this._tf.translateX = t
            }, t.setTranslateY = function(t) {
                this._tf === i._TF_EMPTY && (this._tf = new s), this._tf.translateY = t
            }, t.setScaleX = function(t) {
                this._tf === i._TF_EMPTY && (this._tf = new s), this._tf.scaleX = t
            }, t.setScale = function(t, e) {
                this._tf === i._TF_EMPTY && (this._tf = new s), this._tf.scaleX = t, this._tf.scaleY = e
            }, t.setScaleY = function(t) {
                this._tf === i._TF_EMPTY && (this._tf = new s), this._tf.scaleY = t
            }, t.setRotate = function(t) {
                this._tf === i._TF_EMPTY && (this._tf = new s), this._tf.rotate = t
            }, t.setSkewX = function(t) {
                this._tf === i._TF_EMPTY && (this._tf = new s), this._tf.skewX = t
            }, t.setSkewY = function(t) {
                this._tf === i._TF_EMPTY && (this._tf = new s), this._tf.skewY = t
            }, t.destroy = function() {
                this.scrollRect = null
            }, t.render = function(t, e, i, n) {}, t.getCSSStyle = function() {
                return et.EMPTY
            }, t._enableLayout = function() {
                return !1
            }, u(0, t, "scaleX", function() {
                return this._tf.scaleX
            }, function(t) {
                this.setScaleX(t)
            }), u(0, t, "transform", function() {
                return this.getTransform()
            }, function(t) {
                this.setTransform(t)
            }), u(0, t, "translateX", function() {
                return this._tf.translateX
            }, function(t) {
                this.setTranslateX(t)
            }), u(0, t, "translateY", function() {
                return this._tf.translateY
            }, function(t) {
                this.setTranslateY(t)
            }), u(0, t, "scaleY", function() {
                return this._tf.scaleY
            }, function(t) {
                this.setScaleY(t)
            }), u(0, t, "block", function() {
                return 0 != (1 & this._type)
            }), u(0, t, "skewY", function() {
                return this._tf.skewY
            }, function(t) {
                this.setSkewY(t)
            }), u(0, t, "rotate", function() {
                return this._tf.rotate
            }, function(t) {
                this.setRotate(t)
            }), u(0, t, "skewX", function() {
                return this._tf.skewX
            }, function(t) {
                this.setSkewX(t)
            }), u(0, t, "paddingLeft", function() {
                return 0
            }), u(0, t, "paddingTop", function() {
                return 0
            }), u(0, t, "absolute", function() {
                return !0
            }), i.__init__ = function() {
                i._TF_EMPTY = new s, i.EMPTY = new i
            }, i.EMPTY = null, i._TF_EMPTY = null, i
        }(),
        d = function() {
            function e(t) {
                this._type = 0, this._weight = 0, this._decoration = null, this._text = null, this.indent = 0, this._color = z.create(e.defaultColor), this.family = e.defaultFamily, this.stroke = e._STROKE, this.size = e.defaultSize, t && t !== e.EMPTY && t.copyTo(this)
            }
            p(e, "t_tl.display.css.Font");
            var t = e.prototype;
            return t.set = function(t) {
                this._text = null;
                for (var e = t.split(" "), i = 0, n = e.length; i < n; i++) {
                    var s = e[i];
                    switch (s) {
                        case "italic":
                            this.italic = !0;
                            continue;
                        case "bold":
                            this.bold = !0;
                            continue
                    }
                    0 < s.indexOf("px") && (this.size = parseInt(s), this.family = e[i + 1], i++)
                }
            }, t.toString = function() {
                return this._text = "", this.italic && (this._text += "italic "), this.bold && (this._text += "bold "), this._text += this.size + "px " + this.family
            }, t.copyTo = function(t) {
                t._type = this._type, t._text = this._text, t._weight = this._weight, t._color = this._color, t.family = this.family, t.stroke = this.stroke != e._STROKE ? this.stroke.slice() : e._STROKE, t.indent = this.indent, t.size = this.size
            }, u(0, t, "password", function() {
                return 0 != (1024 & this._type)
            }, function(t) {
                t ? this._type |= 1024 : this._type &= -1025
            }), u(0, t, "color", function() {
                return this._color.strColor
            }, function(t) {
                this._color = z.create(t)
            }), u(0, t, "italic", function() {
                return 0 != (512 & this._type)
            }, function(t) {
                t ? this._type |= 512 : this._type &= -513
            }), u(0, t, "bold", function() {
                return 0 != (2048 & this._type)
            }, function(t) {
                t ? this._type |= 2048 : this._type &= -2049
            }), u(0, t, "weight", function() {
                return "" + this._weight
            }, function(t) {
                var e = 0;
                switch (t) {
                    case "normal":
                        break;
                    case "bold":
                        this.bold = !0, e = 700;
                        break;
                    case "bolder":
                        e = 800;
                        break;
                    case "lighter":
                        e = 100;
                        break;
                    default:
                        e = parseInt(t)
                }
                this._weight = e, this._text = null
            }), u(0, t, "decoration", function() {
                return this._decoration ? this._decoration.value : "none"
            }, function(t) {
                var e = t.split(" ");
                switch (this._decoration || (this._decoration = {}), e[0]) {
                    case "_":
                        this._decoration.type = "underline";
                        break;
                    case "-":
                        this._decoration.type = "line-through";
                        break;
                    case "overline":
                        this._decoration.type = "overline";
                        break;
                    default:
                        this._decoration.type = e[0]
                }
                e[1] && (this._decoration.color = z.create(e)), this._decoration.value = t
            }), e.__init__ = function() {
                e.EMPTY = new e(null)
            }, e.EMPTY = null, e.defaultColor = "#000000", e.defaultSize = 12, e.defaultFamily = "Arial", e.defaultFont = "12px Arial", e._STROKE = [0, "#000000"], e._ITALIC = 512, e._PASSWORD = 1024, e._BOLD = 2048, e
        }(),
        s = function() {
            function t() {
                this.translateX = 0, this.translateY = 0, this.scaleX = 1, this.scaleY = 1, this.rotate = 0, this.skewX = 0, this.skewY = 0
            }
            return p(t, "t_tl.display.css.TransformInfo"), t
        }(),
        _ = function() {
            function c() {
                if (this._one = null, this._cmds = null, this._render = this._renderEmpty, D.isConchNode) {
                    this._nativeObj = new o._conchGraphics, this.id = this._nativeObj.conchID
                }
            }
            p(c, "t_tl.display.Graphics");
            var t = c.prototype;
            return t.destroy = function() {
                this.clear(), this._graphicBounds && this._graphicBounds.destroy(), this._graphicBounds = null, this._vectorgraphArray = null, this._sp && (this._sp._renderType = 0), this._sp = null
            }, t.clear = function(t) {
                void 0 === t && (t = !1);
                var e = 0,
                    i = 0;
                if (t) {
                    var n = this._one;
                    if (this._cmds) {
                        for (i = this._cmds.length, e = 0; e < i; e++) !(n = this._cmds[e]) || n.callee !== D._context._drawTexture && n.callee !== D._context._drawTextureWithTransform || (n[0] = null, c._cache.push(n));
                        this._cmds.length = 0
                    } else n && (!n || n.callee !== D._context._drawTexture && n.callee !== D._context._drawTextureWithTransform || (n[0] = null, c._cache.push(n)))
                } else this._cmds = null;
                if (this._one = null, this._render = this._renderEmpty, this._sp && (this._sp._renderType &= -514), this._repaint(), this._vectorgraphArray) {
                    for (e = 0, i = this._vectorgraphArray.length; e < i; e++) Q.getInstance().deleteShape(this._vectorgraphArray[e]);
                    this._vectorgraphArray.length = 0
                }
            }, t._clearBoundsCache = function() {
                this._graphicBounds && this._graphicBounds.reset()
            }, t._initGraphicBounds = function() {
                this._graphicBounds || (this._graphicBounds = new i, this._graphicBounds._graphics = this)
            }, t._repaint = function() {
                this._clearBoundsCache(), this._sp && this._sp.repaint()
            }, t._isOnlyOne = function() {
                return !this._cmds || 0 === this._cmds.length
            }, t.getBounds = function(t) {
                return void 0 === t && (t = !1), this._initGraphicBounds(), this._graphicBounds.getBounds(t)
            }, t.getBoundPoints = function(t) {
                return void 0 === t && (t = !1), this._initGraphicBounds(), this._graphicBounds.getBoundPoints(t)
            }, t._addCmd = function(t) {
                this._cmds = this._cmds || [], t.callee = t.shift(), this._cmds.push(t)
            }, t.setFilters = function(t) {
                this._saveToCmd(D._context._setFilters, t)
            }, t.drawTexture = function(t, e, i, n, s, r, o) {
                if (void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === o && (o = 1), !t || o < .01) return null;
                n || (n = t.sourceWidth), s || (s = t.sourceHeight), o = o < 0 ? 0 : 1 < o ? 1 : o;
                var a, h = !D.isWebGL && (B.onFirefox || B.onEdge || B.onIE || B.onSafari) ? .5 : 0,
                    l = n / t.sourceWidth,
                    u = s / t.sourceHeight;
                return n = t.width * l, s = t.height * u, t.loaded && (n <= 0 || s <= 0) ? null : (e += t.offsetX * l, i += t.offsetY * u, this._sp && (this._sp._renderType |= 512), e -= h, i -= h, n += 2 * h, s += 2 * h, c._cache.length ? ((a = c._cache.pop())[0] = t, a[1] = e, a[2] = i, a[3] = n, a[4] = s, a[5] = r, a[6] = o) : a = [t, e, i, n, s, r, o], a.callee = r || 1 != o ? D._context._drawTextureWithTransform : D._context._drawTexture, null != this._one || r || 1 != o ? this._saveToCmd(a.callee, a) : (this._one = a, this._render = this._renderOneImg), t.loaded || t.once("loaded", this, this._textureLoaded, [t, a]), this._repaint(), a)
            }, t.cleanByTexture = function(t, e, i, n, s) {
                if (void 0 === n && (n = 0), void 0 === s && (s = 0), !t) return this.clear();
                if (this._one && this._render === this._renderOneImg) {
                    n || (n = t.sourceWidth), s || (s = t.sourceHeight);
                    var r = n / t.sourceWidth,
                        o = s / t.sourceHeight;
                    n = t.width * r, s = t.height * o, e += t.offsetX * r, i += t.offsetY * o, this._one[0] = t, this._one[1] = e, this._one[2] = i, this._one[3] = n, this._one[4] = s, this._repaint()
                } else this.clear(), t && this.drawTexture(t, e, i, n, s)
            }, t.drawTextures = function(t, e) {
                t && this._saveToCmd(D._context._drawTextures, [t, e])
            }, t.fillTexture = function(t, e, i, n, s, r, o) {
                if (void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = "repeat"), t) {
                    var a = [t, e, i, n, s, r, o || C.EMPTY, {}];
                    t.loaded || t.once("loaded", this, this._textureLoaded, [t, a]), this._saveToCmd(D._context._fillTexture, a)
                }
            }, t._textureLoaded = function(t, e) {
                e[3] = e[3] || t.width, e[4] = e[4] || t.height, this._repaint()
            }, t.fillCircle = function(t, e, i, n, s, r, o) {
                i.bitmap.enableMerageInAtlas = !1;
                var a = new Float32Array(2 * (o + 1)),
                    h = new Float32Array(2 * (o + 1)),
                    l = new Uint16Array(3 * o),
                    u = 2 * Math.PI / o,
                    c = 0;
                a[0] = n, a[1] = s, h[0] = n / i.width, h[1] = s / i.height;
                for (var _ = 2, d = 0; d < o; d++) {
                    var f = r * Math.cos(c) + n,
                        p = r * Math.sin(c) + s;
                    a[_] = f, a[_ + 1] = p, h[_] = f / i.width, h[_ + 1] = p / i.height, c += u, _ += 2
                }
                for (d = _ = 0; d < o; d++) l[_++] = 0, l[_++] = d + 1, l[_++] = o + 1 <= d + 2 ? 1 : d + 2;
                this.drawTriangles(i, t, e, a, h, l)
            }, t.drawTriangles = function(t, e, i, n, s, r, o, a, h, l) {
                void 0 === a && (a = 1), this._saveToCmd(D._context.drawTriangles, [t, e, i, n, s, r, o, a, h, l])
            }, t._saveToCmd = function(t, e) {
                return this._sp && (this._sp._renderType |= 512), null == this._one ? (this._one = e, this._render = this._renderOne) : (this._sp && (this._sp._renderType &= -2), this._render = this._renderAll, 0 === (this._cmds || (this._cmds = [])).length && this._cmds.push(this._one), this._cmds.push(e)), e.callee = t, this._repaint(), e
            }, t.clipRect = function(t, e, i, n) {
                this._saveToCmd(D._context._clipRect, [t, e, i, n])
            }, t.fillText = function(t, e, i, n, s, r, o) {
                void 0 === o && (o = 0), this._saveToCmd(D._context._fillText, [t, e, i, n || d.defaultFont, s, r])
            }, t.fillBorderText = function(t, e, i, n, s, r, o, a) {
                this._saveToCmd(D._context._fillBorderText, [t, e, i, n || d.defaultFont, s, r, o, a])
            }, t.strokeText = function(t, e, i, n, s, r, o) {
                this._saveToCmd(D._context._strokeText, [t, e, i, n || d.defaultFont, s, r, o])
            }, t.alpha = function(t) {
                t = t < 0 ? 0 : 1 < t ? 1 : t, this._saveToCmd(D._context._alpha, [t])
            }, t.setAlpha = function(t) {
                t = t < 0 ? 0 : 1 < t ? 1 : t, this._saveToCmd(D._context._setAlpha, [t])
            }, t.transform = function(t, e, i) {
                void 0 === e && (e = 0), void 0 === i && (i = 0), this._saveToCmd(D._context._transform, [t, e, i])
            }, t.rotate = function(t, e, i) {
                void 0 === e && (e = 0), void 0 === i && (i = 0), this._saveToCmd(D._context._rotate, [t, e, i])
            }, t.scale = function(t, e, i, n) {
                void 0 === i && (i = 0), void 0 === n && (n = 0), this._saveToCmd(D._context._scale, [t, e, i, n])
            }, t.translate = function(t, e) {
                this._saveToCmd(D._context._translate, [t, e])
            }, t.save = function() {
                this._saveToCmd(D._context._save, [])
            }, t.restore = function() {
                this._saveToCmd(D._context._restore, [])
            }, t.replaceText = function(t) {
                this._repaint();
                var e = this._cmds;
                if (e) {
                    for (var i = e.length - 1; - 1 < i; i--)
                        if (this._isTextCmd(e[i].callee)) return e[i][0].toUpperCase ? e[i][0] = t : e[i][0].setText(t), !0
                } else if (this._one && this._isTextCmd(this._one.callee)) return this._one[0].toUpperCase ? this._one[0] = t : this._one[0].setText(t), !0;
                return !1
            }, t._isTextCmd = function(t) {
                return t === D._context._fillText || t === D._context._fillBorderText || t === D._context._strokeText
            }, t.replaceTextColor = function(t) {
                this._repaint();
                var e = this._cmds;
                if (e)
                    for (var i = e.length - 1; - 1 < i; i--) this._isTextCmd(e[i].callee) && (e[i][4] = t, e[i][0].toUpperCase || (e[i][0].changed = !0));
                else this._one && this._isTextCmd(this._one.callee) && (this._one[4] = t, this._one[0].toUpperCase || (this._one[0].changed = !0))
            }, t.loadImage = function(t, e, i, n, s, r) {
                var o = this;
                void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0);
                var a = at.getRes(t);

                function h(t) {
                    t && (o.drawTexture(t, e, i, n, s), null != r && r.call(o._sp, t))
                }
                a ? h(a) : b.loader.load(t, v.create(null, h), null, "image")
            }, t._renderEmpty = function(t, e, i, n) {}, t._renderAll = function(t, e, i, n) {
                for (var s, r = this._cmds, o = 0, a = r.length; o < a; o++)(s = r[o]).callee.call(e, i, n, s)
            }, t._renderOne = function(t, e, i, n) {
                this._one.callee.call(e, i, n, this._one)
            }, t._renderOneImg = function(t, e, i, n) {
                this._one.callee.call(e, i, n, this._one), 2305 !== t._renderType && (t._renderType |= 1)
            }, t.drawLine = function(t, e, i, n, s, r) {
                void 0 === r && (r = 1);
                var o = 0;
                D.isWebGL && (o = Q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(o));
                var a = r % 2 == 0 ? 0 : .5,
                    h = [t + a, e + a, i + a, n + a, s, r, o];
                this._saveToCmd(D._context._drawLine, h)
            }, t.drawLines = function(t, e, i, n, s) {
                void 0 === s && (s = 1);
                var r = 0;
                if (i && !(i.length < 4)) {
                    D.isWebGL && (r = Q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(r));
                    var o = s % 2 == 0 ? 0 : .5,
                        a = [t + o, e + o, i, n, s, r];
                    this._saveToCmd(D._context._drawLines, a)
                }
            }, t.drawCurves = function(t, e, i, n, s) {
                void 0 === s && (s = 1);
                var r = [t, e, i, n, s];
                this._saveToCmd(D._context._drawCurves, r)
            }, t.drawRect = function(t, e, i, n, s, r, o) {
                void 0 === o && (o = 1);
                var a = r ? o / 2 : 0,
                    h = r ? o : 0,
                    l = [t + a, e + a, i - h, n - h, s, r, o];
                this._saveToCmd(D._context._drawRect, l)
            }, t.drawCircle = function(t, e, i, n, s, r) {
                void 0 === r && (r = 1);
                var o = s ? r / 2 : 0,
                    a = 0;
                D.isWebGL && (a = Q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(a));
                var h = [t, e, i - o, n, s, r, a];
                this._saveToCmd(D._context._drawCircle, h)
            }, t.drawPie = function(t, e, i, n, s, r, o, a) {
                void 0 === a && (a = 1);
                var h = o ? a / 2 : 0,
                    l = o ? a : 0,
                    u = 0;
                D.isWebGL && (u = Q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(u));
                var c = [t + h, e + h, i - l, n, s, r, o, a, u];
                c[3] = q.toRadian(n), c[4] = q.toRadian(s), this._saveToCmd(D._context._drawPie, c)
            }, t.drawPoly = function(t, e, i, n, s, r) {
                void 0 === r && (r = 1);
                var o = 0,
                    a = !1;
                D.isWebGL && (o = Q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(o), a = !(6 < i.length));
                var h = s ? r % 2 == 0 ? 0 : .5 : 0,
                    l = [t + h, e + h, i, n, s, r, o, a];
                this._saveToCmd(D._context._drawPoly, l)
            }, t.drawPath = function(t, e, i, n, s) {
                var r = [t, e, i, n, s];
                this._saveToCmd(D._context._drawPath, r)
            }, u(0, t, "cmds", function() {
                return this._cmds
            }, function(t) {
                this._sp && (this._sp._renderType |= 512), this._cmds = t, this._render = this._renderAll, this._repaint()
            }), c.__init__ = function() {
                if (D.isConchNode) {
                    for (var t = t_tl.display.Graphics.prototype, e = B.window.ConchGraphics.prototype, i = ["clear", "destroy", "alpha", "rotate", "transform", "scale", "translate", "save", "restore", "clipRect", "blendMode", "fillText", "fillBorderText", "_fands", "drawRect", "drawCircle", "drawPie", "drawPoly", "drawPath", "drawImageM", "drawLine", "drawLines", "_drawPs", "drawCurves", "replaceText", "replaceTextColor", "_fillImage", "fillTexture", "setSkinMesh", "drawParticle", "drawImageS"], n = 0, s = i.length; n <= s; n++) {
                        var r = i[n];
                        t[r] = e[r]
                    }
                    t._saveToCmd = null, e.drawImageS && (t.drawTextures = function(t, e) {
                        if (t && t.loaded && t.bitmap && t.source) {
                            var i = t.uv,
                                n = t.bitmap.width,
                                s = t.bitmap.height;
                            this.drawImageS(t.bitmap.source, i[0] * n, i[1] * s, (i[2] - i[0]) * n, (i[5] - i[3]) * s, t.offsetX, t.offsetY, t.width, t.height, e)
                        }
                    }), t.drawTexture = function(t, e, i, n, s, r, o) {
                        if (void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === o && (o = 1), t)
                            if (t.loaded) {
                                if (t.loaded && t.bitmap && t.source && (n || (n = t.sourceWidth), s || (s = t.sourceHeight), o = o < 0 ? 0 : 1 < o ? 1 : o, n = n - t.sourceWidth + t.width, s = s - t.sourceHeight + t.height, !(n <= 0 || s <= 0))) {
                                    e += t.offsetX, i += t.offsetY;
                                    var a = t.uv,
                                        h = t.bitmap.width,
                                        l = t.bitmap.height;
                                    this.drawImageM(t.bitmap.source, a[0] * h, a[1] * l, (a[2] - a[0]) * h, (a[5] - a[3]) * l, e, i, n, s, r, o), this._repaint()
                                }
                            } else t.once("loaded", this, function() {
                                this.drawTexture(t, e, i, n, s, r)
                            })
                    }, t.fillTexture = function(t, e, i, n, s, r, o) {
                        if (void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = "repeat"), t && t.loaded) {
                            var a, h = D._context.ctx,
                                l = t.bitmap.width,
                                u = t.bitmap.height,
                                c = t.uv;
                            a = t.uv != ut.DEF_UV ? h.createPattern(t.bitmap.source, r, c[0] * l, c[1] * u, (c[2] - c[0]) * l, (c[5] - c[3]) * u) : h.createPattern(t.bitmap.source, r);
                            var _ = 0,
                                d = 0;
                            o && (e += o.x % t.width, i += o.y % t.height, _ -= o.x % t.width, d -= o.y % t.height), this._fillImage(a, e, i, _, d, n, s)
                        }
                    }
                }
            }, c._cache = [], c
        }(),
        i = function() {
            function y() {
                this._cacheBoundsType = !1
            }
            p(y, "t_tl.display.GraphicsBounds");
            var t = y.prototype;
            return t.destroy = function() {
                this._graphics = null, this._temp = null, this._rstBoundPoints = null, this._bounds = null
            }, t.reset = function() {
                this._temp && (this._temp.length = 0)
            }, t.getBounds = function(t) {
                return void 0 === t && (t = !1), (!this._bounds || !this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._bounds = M._getWrapRec(this.getBoundPoints(t), this._bounds)), this._cacheBoundsType = t, this._bounds
            }, t.getBoundPoints = function(t) {
                return void 0 === t && (t = !1), (!this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._temp = this._getCmdPoints(t)), this._cacheBoundsType = t, this._rstBoundPoints = q.copyArray(this._rstBoundPoints, this._temp)
            }, t._getCmdPoints = function(t) {
                void 0 === t && (t = !1);
                var e, i, n = D._context,
                    s = this._graphics.cmds;
                if ((e = this._temp || (this._temp = [])).length = 0, s || null == this._graphics._one || (y._tempCmds.length = 0, y._tempCmds.push(this._graphics._one), s = y._tempCmds), !s) return e;
                (i = y._tempMatrixArrays).length = 0;
                var r = y._initMatrix;
                r.identity();
                for (var o, a, h = y._tempMatrix, l = NaN, u = NaN, c = NaN, _ = NaN, d = NaN, f = NaN, p = 0, g = s.length; p < g; p++)
                    if ((o = s[p]).callee) switch (o.callee) {
                        case n._save:
                        case 7:
                            i.push(r), r = r.clone();
                            break;
                        case n._restore:
                        case 8:
                            r = i.pop();
                            break;
                        case n._scale:
                        case 5:
                            h.identity(), h.translate(-o[2], -o[3]), h.scale(o[0], o[1]), h.translate(o[2], o[3]), this._switchMatrix(r, h);
                            break;
                        case n._rotate:
                        case 3:
                            h.identity(), h.translate(-o[1], -o[2]), h.rotate(o[0]), h.translate(o[1], o[2]), this._switchMatrix(r, h);
                            break;
                        case n._translate:
                        case 6:
                            h.identity(), h.translate(o[0], o[1]), this._switchMatrix(r, h);
                            break;
                        case n._transform:
                        case 4:
                            h.identity(), h.translate(-o[1], -o[2]), h.concat(o[0]), h.translate(o[1], o[2]), this._switchMatrix(r, h);
                            break;
                        case 16:
                        case 24:
                            y._addPointArrToRst(e, M._getBoundPointS(o[0], o[1], o[2], o[3]), r);
                            break;
                        case 17:
                            r.copyTo(h), h.concat(o[4]), y._addPointArrToRst(e, M._getBoundPointS(o[0], o[1], o[2], o[3]), h);
                            break;
                        case n._drawTexture:
                            a = o[0], t ? o[3] && o[4] ? y._addPointArrToRst(e, M._getBoundPointS(o[1], o[2], o[3], o[4]), r) : (a = o[0], y._addPointArrToRst(e, M._getBoundPointS(o[1], o[2], a.width, a.height), r)) : (l = (o[3] || a.sourceWidth) / a.width, u = (o[4] || a.sourceHeight) / a.height, c = l * a.sourceWidth, _ = u * a.sourceHeight, d = 0 < a.offsetX ? a.offsetX : 0, f = 0 < a.offsetY ? a.offsetY : 0, d *= l, f *= u, y._addPointArrToRst(e, M._getBoundPointS(o[1] - d, o[2] - f, c, _), r));
                            break;
                        case n._fillTexture:
                            o[3] && o[4] ? y._addPointArrToRst(e, M._getBoundPointS(o[1], o[2], o[3], o[4]), r) : (a = o[0], y._addPointArrToRst(e, M._getBoundPointS(o[1], o[2], a.width, a.height), r));
                            break;
                        case n._drawTextureWithTransform:
                            var m;
                            o[5] ? (r.copyTo(h), h.concat(o[5]), m = h) : m = r, t ? o[3] && o[4] ? y._addPointArrToRst(e, M._getBoundPointS(o[1], o[2], o[3], o[4]), m) : (a = o[0], y._addPointArrToRst(e, M._getBoundPointS(o[1], o[2], a.width, a.height), m)) : (a = o[0], l = (o[3] || a.sourceWidth) / a.width, u = (o[4] || a.sourceHeight) / a.height, c = l * a.sourceWidth, _ = u * a.sourceHeight, d = 0 < a.offsetX ? a.offsetX : 0, f = 0 < a.offsetY ? a.offsetY : 0, d *= l, f *= u, y._addPointArrToRst(e, M._getBoundPointS(o[1] - d, o[2] - f, c, _), m));
                            break;
                        case n._drawRect:
                        case 13:
                            y._addPointArrToRst(e, M._getBoundPointS(o[0], o[1], o[2], o[3]), r);
                            break;
                        case n._drawCircle:
                        case n._fillCircle:
                        case 14:
                            y._addPointArrToRst(e, M._getBoundPointS(o[0] - o[2], o[1] - o[2], o[2] + o[2], o[2] + o[2]), r);
                            break;
                        case n._drawLine:
                        case 20:
                            y._tempPoints.length = 0;
                            var v;
                            v = .5 * o[5], o[0] == o[2] ? y._tempPoints.push(o[0] + v, o[1], o[2] + v, o[3], o[0] - v, o[1], o[2] - v, o[3]) : o[1] == o[3] ? y._tempPoints.push(o[0], o[1] + v, o[2], o[3] + v, o[0], o[1] - v, o[2], o[3] - v) : y._tempPoints.push(o[0], o[1], o[2], o[3]), y._addPointArrToRst(e, y._tempPoints, r);
                            break;
                        case n._drawCurves:
                        case 22:
                            y._addPointArrToRst(e, w.I.getBezierPoints(o[2]), r, o[0], o[1]);
                            break;
                        case n._drawPoly:
                        case n._drawLines:
                        case 18:
                            y._addPointArrToRst(e, o[2], r, o[0], o[1]);
                            break;
                        case n._drawPath:
                        case 19:
                            y._addPointArrToRst(e, this._getPathPoints(o[2]), r, o[0], o[1]);
                            break;
                        case n._drawPie:
                        case 15:
                            y._addPointArrToRst(e, this._getPiePoints(o[0], o[1], o[2], o[3], o[4]), r)
                    }
                return 200 < e.length ? e = q.copyArray(e, M._getWrapRec(e)._getBoundPoints()) : 8 < e.length && (e = x.scanPList(e)), e
            }, t._switchMatrix = function(t, e) {
                e.concat(t), e.copyTo(t)
            }, t._getPiePoints = function(t, e, i, n, s) {
                var r = y._tempPoints;
                y._tempPoints.length = 0, r.push(t, e);
                var o = (s - n) % (2 * Math.PI) / 10,
                    a = NaN,
                    h = n;
                for (a = 0; a <= 10; a++) r.push(t + i * Math.cos(h), e + i * Math.sin(h)), h += o;
                return r
            }, t._getPathPoints = function(t) {
                var e, i, n = 0,
                    s = y._tempPoints;
                for (s.length = 0, e = t.length, n = 0; n < e; n++) 1 < (i = t[n]).length && (s.push(i[1], i[2]), 3 < i.length && s.push(i[3], i[4]));
                return s
            }, y._addPointArrToRst = function(t, e, i, n, s) {
                void 0 === n && (n = 0), void 0 === s && (s = 0);
                var r, o = 0;
                for (r = e.length, o = 0; o < r; o += 2) y._addPointToRst(t, e[o] + n, e[o + 1] + s, i)
            }, y._addPointToRst = function(t, e, i, n) {
                var s = C.TEMP;
                s.setTo(e || 0, i || 0), n.transformPoint(s), t.push(s.x, s.y)
            }, y._tempPoints = [], y._tempMatrixArrays = [], y._tempCmds = [], h(y, ["_tempMatrix", function() {
                return this._tempMatrix = new A
            }, "_initMatrix", function() {
                return this._initMatrix = new A
            }]), y
        }(),
        r = function() {
            function t() {}
            p(t, "t_tl.events.Event");
            var e = t.prototype;
            return e.setTo = function(t, e, i) {
                return this.type = t, this.currentTarget = e, this.target = i, this
            }, e.stopPropagation = function() {
                this._stoped = !0
            }, u(0, e, "stageY", function() {
                return b.stage.mouseY
            }), u(0, e, "charCode", function() {
                return this.nativeEvent.charCode
            }), u(0, e, "touches", function() {
                var t = this.nativeEvent.touches;
                if (t)
                    for (var e = b.stage, i = 0, n = t.length; i < n; i++) {
                        var s = t[i],
                            r = C.TEMP;
                        r.setTo(s.clientX, s.clientY), e._canvasTransform.invertTransformPoint(r), e.transform.invertTransformPoint(r), s.stageX = r.x, s.stageY = r.y
                    }
                return t
            }), u(0, e, "keyLocation", function() {
                return this.nativeEvent.keyLocation
            }), u(0, e, "ctrlKey", function() {
                return this.nativeEvent.ctrlKey
            }), u(0, e, "altKey", function() {
                return this.nativeEvent.altKey
            }), u(0, e, "shiftKey", function() {
                return this.nativeEvent.shiftKey
            }), u(0, e, "stageX", function() {
                return b.stage.mouseX
            }), t.EMPTY = new t, t.MOUSE_DOWN = "mousedown", t.MOUSE_UP = "mouseup", t.CLICK = "click", t.RIGHT_MOUSE_DOWN = "rightmousedown", t.RIGHT_MOUSE_UP = "rightmouseup", t.RIGHT_CLICK = "rightclick", t.MOUSE_MOVE = "mousemove", t.MOUSE_OVER = "mouseover", t.MOUSE_OUT = "mouseout", t.MOUSE_WHEEL = "mousewheel", t.ROLL_OVER = "mouseover", t.ROLL_OUT = "mouseout", t.DOUBLE_CLICK = "doubleclick", t.CHANGE = "change", t.CHANGED = "changed", t.RESIZE = "resize", t.ADDED = "added", t.REMOVED = "removed", t.DISPLAY = "display", t.UNDISPLAY = "undisplay", t.ERROR = "error", t.COMPLETE = "complete", t.LOADED = "loaded", t.PROGRESS = "progress", t.INPUT = "input", t.RENDER = "render", t.OPEN = "open", t.MESSAGE = "message", t.CLOSE = "close", t.KEY_DOWN = "keydown", t.KEY_PRESS = "keypress", t.KEY_UP = "keyup", t.FRAME = "enterframe", t.DRAG_START = "dragstart", t.DRAG_MOVE = "dragmove", t.DRAG_END = "dragend", t.ENTER = "enter", t.SELECT = "select", t.BLUR = "blur", t.FOCUS = "focus", t.VISIBILITY_CHANGE = "visibilitychange", t.FOCUS_CHANGE = "focuschange", t.PLAYED = "played", t.PAUSED = "paused", t.STOPPED = "stopped", t.START = "start", t.END = "end", t.ENABLE_CHANGED = "enablechanged", t.ACTIVE_IN_HIERARCHY_CHANGED = "activeinhierarchychanged", t.COMPONENT_ADDED = "componentadded", t.COMPONENT_REMOVED = "componentremoved", t.LAYER_CHANGED = "layerchanged", t.HIERARCHY_LOADED = "hierarchyloaded", t.RECOVERED = "recovered", t.RELEASED = "released", t.LINK = "link", t.LABEL = "label", t.FULL_SCREEN_CHANGE = "fullscreenchange", t.DEVICE_LOST = "devicelost", t.MESH_CHANGED = "meshchanged", t.MATERIAL_CHANGED = "materialchanged", t.WORLDMATRIX_NEEDCHANGE = "worldmatrixneedchanged", t.ANIMATION_CHANGED = "animationchanged", t.TRIGGER_ENTER = "triggerenter", t.TRIGGER_STAY = "triggerstay", t.TRIGGER_EXIT = "triggerexit", t.TRAIL_FILTER_CHANGE = "trailfilterchange", t.DOMINO_FILTER_CHANGE = "dominofilterchange", t
        }(),
        c = (function() {
            function t() {}
            p(t, "t_tl.events.Keyboard"), t.NUMBER_0 = 48, t.NUMBER_1 = 49, t.NUMBER_2 = 50, t.NUMBER_3 = 51, t.NUMBER_4 = 52, t.NUMBER_5 = 53, t.NUMBER_6 = 54, t.NUMBER_7 = 55, t.NUMBER_8 = 56, t.NUMBER_9 = 57, t.A = 65, t.B = 66, t.C = 67, t.D = 68, t.E = 69, t.F = 70, t.G = 71, t.H = 72, t.I = 73, t.J = 74, t.K = 75, t.L = 76, t.M = 77, t.N = 78, t.O = 79, t.P = 80, t.Q = 81, t.R = 82, t.S = 83, t.T = 84, t.U = 85, t.V = 86, t.W = 87, t.X = 88, t.Y = 89, t.Z = 90, t.F1 = 112, t.F2 = 113, t.F3 = 114, t.F4 = 115, t.F5 = 116, t.F6 = 117, t.F7 = 118, t.F8 = 119, t.F9 = 120, t.F10 = 121, t.F11 = 122, t.F12 = 123, t.F13 = 124, t.F14 = 125, t.F15 = 126, t.NUMPAD = 21, t.NUMPAD_0 = 96, t.NUMPAD_1 = 97, t.NUMPAD_2 = 98, t.NUMPAD_3 = 99, t.NUMPAD_4 = 100, t.NUMPAD_5 = 101, t.NUMPAD_6 = 102, t.NUMPAD_7 = 103, t.NUMPAD_8 = 104, t.NUMPAD_9 = 105, t.NUMPAD_ADD = 107, t.NUMPAD_DECIMAL = 110, t.NUMPAD_DIVIDE = 111, t.NUMPAD_ENTER = 108, t.NUMPAD_MULTIPLY = 106, t.NUMPAD_SUBTRACT = 109, t.SEMICOLON = 186, t.EQUAL = 187, t.COMMA = 188, t.MINUS = 189, t.PERIOD = 190, t.SLASH = 191, t.BACKQUOTE = 192, t.LEFTBRACKET = 219, t.BACKSLASH = 220, t.RIGHTBRACKET = 221, t.QUOTE = 222, t.ALTERNATE = 18, t.BACKSPACE = 8, t.CAPS_LOCK = 20, t.COMMAND = 15, t.CONTROL = 17, t.DELETE = 46, t.ENTER = 13, t.ESCAPE = 27, t.PAGE_UP = 33, t.PAGE_DOWN = 34, t.END = 35, t.HOME = 36, t.LEFT = 37, t.UP = 38, t.RIGHT = 39, t.DOWN = 40, t.SHIFT = 16, t.SPACE = 32, t.TAB = 9, t.INSERT = 45
        }(), function() {
            function s() {}
            return p(s, "t_tl.events.KeyBoardManager"), s.__init__ = function() {
                s._addEvent("keydown"), s._addEvent("keypress"), s._addEvent("keyup")
            }, s._addEvent = function(e) {
                B.document.addEventListener(e, function(t) {
                    t_tl.events.KeyBoardManager._dispatch(t, e)
                }, !0)
            }, s._dispatch = function(t, e) {
                if (s.enabled) {
                    s._event._stoped = !1, s._event.nativeEvent = t, s._event.keyCode = t.keyCode || t.which || t.charCode, "keydown" === e ? s._pressKeys[s._event.keyCode] = !0 : "keyup" === e && (s._pressKeys[s._event.keyCode] = null);
                    for (var i = b.stage.focus && null != b.stage.focus.event && b.stage.focus.displayedInStage ? b.stage.focus : b.stage, n = i; n;) n.event(e, s._event.setTo(e, n, i)), n = n.parent
                }
            }, s.hasKeyDown = function(t) {
                return s._pressKeys[t]
            }, s._pressKeys = {}, s.enabled = !0, h(s, ["_event", function() {
                return this._event = new r
            }]), s
        }()),
        f = (function() {
            function t() {}
            p(t, "t_tl.events.KeyLocation"), t.STANDARD = 0, t.LEFT = 1, t.RIGHT = 2, t.NUM_PAD = 3
        }(), function() {
            function u() {
                this.mouseX = 0, this.mouseY = 0, this.disableMouseEvent = !1, this.mouseDownTime = 0, this.mouseMoveAccuracy = 2, this._stage = null, this._target = null, this._lastMoveTimer = 0, this._isLeftMouse = !1, this._eventList = [], this._touchIDs = {}, this._id = 1, this._tTouchID = 0, this._event = new r, this._matrix = new A, this._point = new C, this._rect = new M, this._prePoint = new C, this._curTouchID = NaN
            }
            p(u, "t_tl.events.MouseManager");
            var t = u.prototype;
            return t.__init__ = function(t, e) {
                var i = this;
                this._stage = t;
                var n = this,
                    s = this._eventList;
                e.oncontextmenu = function(t) {
                    if (u.enabled) return !1
                }, e.addEventListener("mousedown", function(t) {
                    u.enabled && (B.onIE || t.preventDefault(), s.push(t), n.mouseDownTime = B.now())
                }), e.addEventListener("mouseup", function(t) {
                    u.enabled && (t.preventDefault(), s.push(t), n.mouseDownTime = -B.now())
                }, !0), e.addEventListener("mousemove", function(t) {
                    if (u.enabled) {
                        t.preventDefault();
                        var e = B.now();
                        if (e - n._lastMoveTimer < 10) return;
                        n._lastMoveTimer = e, s.push(t)
                    }
                }, !0), e.addEventListener("mouseout", function(t) {
                    u.enabled && s.push(t)
                }), e.addEventListener("mouseover", function(t) {
                    u.enabled && s.push(t)
                }), e.addEventListener("touchstart", function(t) {
                    u.enabled && (s.push(t), u._isFirstTouch || xt.isInputting || t.preventDefault(), n.mouseDownTime = B.now())
                }), e.addEventListener("touchend", function(t) {
                    u.enabled ? (u._isFirstTouch || xt.isInputting || t.preventDefault(), u._isFirstTouch = !1, s.push(t), n.mouseDownTime = -B.now()) : i._curTouchID = NaN
                }, !0), e.addEventListener("touchmove", function(t) {
                    u.enabled && (t.preventDefault(), s.push(t))
                }, !0), e.addEventListener("touchcancel", function(t) {
                    u.enabled ? (t.preventDefault(), s.push(t)) : i._curTouchID = NaN
                }, !0), e.addEventListener("mousewheel", function(t) {
                    u.enabled && s.push(t)
                }), e.addEventListener("DOMMouseScroll", function(t) {
                    u.enabled && s.push(t)
                })
            }, t.initEvent = function(t, e) {
                var i, n = this;
                n._event._stoped = !1, n._event.nativeEvent = e || t, n._target = null, this._point.setTo(t.pageX || t.clientX, t.pageY || t.clientY), this._stage._canvasTransform.invertTransformPoint(this._point), n.mouseX = this._point.x, n.mouseY = this._point.y, n._event.touchId = t.identifier || 0, this._tTouchID = n._event.touchId, (i = g.I._event)._stoped = !1, i.nativeEvent = n._event.nativeEvent, i.touchId = n._event.touchId
            }, t.checkMouseWheel = function(t) {
                this._event.delta = t.wheelDelta ? .025 * t.wheelDelta : -t.detail;
                for (var e = g.I.getLastOvers(), i = 0, n = e.length; i < n; i++) {
                    var s = e[i];
                    s.event("mousewheel", this._event.setTo("mousewheel", s, this._target))
                }
            }, t.onMouseMove = function(t) {
                g.I.onMouseMove(t, this._tTouchID)
            }, t.onMouseDown = function(t) {
                if (xt.isInputting && b.stage.focus && b.stage.focus.focus && !b.stage.focus.contains(this._target)) {
                    var e = b.stage.focus._tf || b.stage.focus,
                        i = t._tf || t;
                    i instanceof t_tl.display.Input && i.multiline == e.multiline ? e._focusOut() : e.focus = !1
                }
                g.I.onMouseDown(t, this._tTouchID, this._isLeftMouse)
            }, t.onMouseUp = function(t) {
                g.I.onMouseUp(t, this._tTouchID, this._isLeftMouse)
            }, t.check = function(t, e, i, n) {
                this._point.setTo(e, i), t.fromParentPoint(this._point), e = this._point.x, i = this._point.y;
                var s = t.scrollRect;
                if (s && (this._rect.setTo(s.x, s.y, s.width, s.height), !this._rect.contains(e, i))) return !1;
                if (!this.disableMouseEvent) {
                    if (t.hitTestPrior && !t.mouseThrough && !this.hitTest(t, e, i)) return !1;
                    for (var r = t._childs.length - 1; - 1 < r; r--) {
                        var o = t._childs[r];
                        if (!o.destroyed && o.mouseEnabled && o.visible && this.check(o, e, i, n)) return !0
                    }
                }
                var a = !(!t.hitTestPrior || t.mouseThrough || this.disableMouseEvent) || this.hitTest(t, e, i);
                return a ? (this._target = t, n.call(this, t)) : n === this.onMouseUp && t === this._stage && (this._target = this._stage, n.call(this, this._target)), a
            }, t.hitTest = function(t, e, i) {
                var n = !1;
                if (t.scrollRect && (e -= t.scrollRect.x, i -= t.scrollRect.y), t.hitArea instanceof t_tl.utils.HitArea) return t.hitArea.isHit(e, i);
                if (0 < t.width && 0 < t.height || t.mouseThrough || t.hitArea)
                    if (t.mouseThrough) n = t.getGraphicBounds().contains(e, i);
                    else {
                        var s = this._rect;
                        t.hitArea ? s = t.hitArea : s.setTo(0, 0, t.width, t.height), n = s.contains(e, i)
                    }
                return n
            }, t.runEvent = function() {
                var t = this._eventList.length;
                if (t) {
                    for (var e, i = this, n = 0, s = 0, r = 0; n < t;) {
                        var o = this._eventList[n];
                        switch ("mousemove" !== o.type && (this._prePoint.x = this._prePoint.y = -1e6), o.type) {
                            case "mousedown":
                                this._touchIDs[0] = this._id++, u._isTouchRespond ? u._isTouchRespond = !1 : (i._isLeftMouse = 0 === o.button, i.initEvent(o), i.check(i._stage, i.mouseX, i.mouseY, i.onMouseDown));
                                break;
                            case "mouseup":
                                i._isLeftMouse = 0 === o.button, i.initEvent(o), i.check(i._stage, i.mouseX, i.mouseY, i.onMouseUp);
                                break;
                            case "mousemove":
                                Math.abs(this._prePoint.x - o.clientX) + Math.abs(this._prePoint.y - o.clientY) >= this.mouseMoveAccuracy && (this._prePoint.x = o.clientX, this._prePoint.y = o.clientY, i.initEvent(o), i.check(i._stage, i.mouseX, i.mouseY, i.onMouseMove));
                                break;
                            case "touchstart":
                                u._isTouchRespond = !0, i._isLeftMouse = !0;
                                var a = o.changedTouches;
                                for (s = 0, r = a.length; s < r; s++) e = a[s], (u.multiTouchEnabled || isNaN(this._curTouchID)) && (this._curTouchID = e.identifier, this._id % 200 == 0 && (this._touchIDs = {}), this._touchIDs[e.identifier] = this._id++, i.initEvent(e, o), i.check(i._stage, i.mouseX, i.mouseY, i.onMouseDown));
                                break;
                            case "touchend":
                            case "touchcancel":
                                u._isTouchRespond = !0, i._isLeftMouse = !0;
                                var h = o.changedTouches;
                                for (s = 0, r = h.length; s < r; s++)
                                    if (e = h[s], u.multiTouchEnabled || e.identifier == this._curTouchID) {
                                        this._curTouchID = NaN, i.initEvent(e, o);
                                        i.check(i._stage, i.mouseX, i.mouseY, i.onMouseUp) || i.onMouseUp(null)
                                    }
                                break;
                            case "touchmove":
                                var l = o.changedTouches;
                                for (s = 0, r = l.length; s < r; s++) e = l[s], (u.multiTouchEnabled || e.identifier == this._curTouchID) && (i.initEvent(e, o), i.check(i._stage, i.mouseX, i.mouseY, i.onMouseMove));
                                break;
                            case "wheel":
                            case "mousewheel":
                            case "DOMMouseScroll":
                                i.checkMouseWheel(o);
                                break;
                            case "mouseout":
                                g.I.stageMouseOut();
                                break;
                            case "mouseover":
                                i._stage.event("mouseover", i._event.setTo("mouseover", i._stage, i._stage))
                        }
                        n++
                    }
                    this._eventList.length = 0
                }
            }, u.enabled = !0, u.multiTouchEnabled = !0, u._isTouchRespond = !1, u._isFirstTouch = !0, h(u, ["instance", function() {
                return this.instance = new u
            }]), u
        }()),
        g = function() {
            function f() {
                this.preOvers = [], this.preDowns = [], this.preRightDowns = [], this.enable = !0, this._lastClickTime = 0, this._event = new r
            }
            p(f, "t_tl.events.TouchManager");
            var t = f.prototype;
            return t._clearTempArrs = function() {
                f._oldArr.length = 0, f._newArr.length = 0, f._tEleArr.length = 0
            }, t.getTouchFromArr = function(t, e) {
                var i, n, s = 0;
                for (i = e.length, s = 0; s < i; s++)
                    if ((n = e[s]).id == t) return n;
                return null
            }, t.removeTouchFromArr = function(t, e) {
                var i = 0;
                for (i = e.length - 1; 0 <= i; i--) e[i].id == t && e.splice(i, 1)
            }, t.createTouchO = function(t, e) {
                var i;
                return (i = $.getItem("TouchData") || {}).id = e, i.tar = t, i
            }, t.onMouseDown = function(t, e, i) {
                var n, s, r, o;
                (void 0 === i && (i = !1), this.enable) && (n = this.getTouchFromArr(e, this.preOvers), r = this.getEles(t, null, f._tEleArr), n ? n.tar = t : (s = this.createTouchO(t, e), this.preOvers.push(s)), B.onMobile && this.sendEvents(r, "mouseover", e), o = i ? this.preDowns : this.preRightDowns, (n = this.getTouchFromArr(e, o)) ? n.tar = t : (s = this.createTouchO(t, e), o.push(s)), this.sendEvents(r, i ? "mousedown" : "rightmousedown", e), this._clearTempArrs())
            }, t.sendEvents = function(t, e, i) {
                void 0 === i && (i = 0);
                var n, s, r, o = 0;
                for (n = t.length, this._event._stoped = !1, s = t[0], o = 0; o < n; o++) {
                    if ((r = t[o]).destroyed) return;
                    if (r.event(e, this._event.setTo(e, r, s)), this._event._stoped) break
                }
            }, t.getEles = function(t, e, i) {
                for (i ? i.length = 0 : i = []; t && t != e;) i.push(t), t = t.parent;
                return i
            }, t.checkMouseOutAndOverOfMove = function(t, e, i) {
                if (void 0 === i && (i = 0), e != t) {
                    var n, s, r = 0,
                        o = 0;
                    if (e.contains(t)) s = this.getEles(t, e, f._tEleArr), this.sendEvents(s, "mouseover", i);
                    else if (t.contains(e)) s = this.getEles(e, t, f._tEleArr), this.sendEvents(s, "mouseout", i);
                    else {
                        var a, h;
                        (s = f._tEleArr).length = 0, a = this.getEles(e, null, f._oldArr), h = this.getEles(t, null, f._newArr), o = a.length;
                        var l = 0;
                        for (r = 0; r < o; r++) {
                            if (n = a[r], 0 <= (l = h.indexOf(n))) {
                                h.splice(l, h.length - l);
                                break
                            }
                            s.push(n)
                        }
                        0 < s.length && this.sendEvents(s, "mouseout", i), 0 < h.length && this.sendEvents(h, "mouseover", i)
                    }
                }
            }, t.onMouseMove = function(t, e) {
                var i, n;
                this.enable && ((i = this.getTouchFromArr(e, this.preOvers)) ? (this.checkMouseOutAndOverOfMove(t, i.tar), i.tar = t, n = this.getEles(t, null, f._tEleArr)) : (n = this.getEles(t, null, f._tEleArr), this.sendEvents(n, "mouseover", e), this.preOvers.push(this.createTouchO(t, e))), this.sendEvents(n, "mousemove", e), this._clearTempArrs())
            }, t.getLastOvers = function() {
                return (f._tEleArr.length = 0) < this.preOvers.length && this.preOvers[0].tar ? this.getEles(this.preOvers[0].tar, null, f._tEleArr) : (f._tEleArr.push(b.stage), f._tEleArr)
            }, t.stageMouseOut = function() {
                var t;
                t = this.getLastOvers(), this.preOvers.length = 0, this.sendEvents(t, "mouseout", 0)
            }, t.onMouseUp = function(t, e, i) {
                if (void 0 === i && (i = !1), this.enable) {
                    var n, s, r, o, a, h, l = 0,
                        u = 0,
                        c = B.onMobile;
                    if (s = this.getEles(t, null, f._tEleArr), this.sendEvents(s, i ? "mouseup" : "rightmouseup", e), h = i ? this.preDowns : this.preRightDowns, n = this.getTouchFromArr(e, h)) {
                        var _, d = B.now();
                        if (_ = d - this._lastClickTime < 300, this._lastClickTime = d, t == n.tar) a = s;
                        else
                            for (r = this.getEles(n.tar, null, f._oldArr), (a = f._newArr).length = 0, u = r.length, l = 0; l < u; l++) o = r[l], 0 <= s.indexOf(o) && a.push(o);
                        0 < a.length && this.sendEvents(a, i ? "click" : "rightclick", e), i && _ && this.sendEvents(a, "doubleclick", e), this.removeTouchFromArr(e, h), n.tar = null, $.recover("TouchData", n)
                    } else;
                    (n = this.getTouchFromArr(e, this.preOvers)) && c && ((a = this.getEles(n.tar, null, a)) && 0 < a.length && this.sendEvents(a, "mouseout", e), this.removeTouchFromArr(e, this.preOvers), n.tar = null, $.recover("TouchData", n)), this._clearTempArrs()
                }
            }, f._oldArr = [], f._newArr = [], f._tEleArr = [], h(f, ["I", function() {
                return this.I = new f
            }]), f
        }(),
        m = function() {
            function t() {
                this._action = null
            }
            p(t, "t_tl.filters.Filter");
            var e = t.prototype;
            return b.imps(e, {
                "t_tl.filters.IFilter": !0
            }), e.callNative = function(t) {}, u(0, e, "type", function() {
                return -1
            }), u(0, e, "action", function() {
                return this._action
            }), t.BLUR = 16, t.COLOR = 32, t.GLOW = 8, t._filterStart = null, t._filterEnd = null, t._EndTarget = null, t._recycleScope = null, t._filter = null, t._useSrc = null, t._endSrc = null, t._useOut = null, t._endOut = null, t
        }(),
        y = function() {
            function t() {
                this.data = null
            }
            p(t, "t_tl.filters.ColorFilterAction");
            var e = t.prototype;
            return b.imps(e, {
                "t_tl.filters.IFilterAction": !0
            }), e.apply = function(t) {
                var e = t.ctx.ctx,
                    i = t.ctx.ctx.canvas;
                if (0 == i.width || 0 == i.height) return i;
                for (var n, s = e.getImageData(0, 0, i.width, i.height), r = s.data, o = 0, a = r.length; o < a; o += 4) n = this.getColor(r[o], r[o + 1], r[o + 2], r[o + 3]), 0 != r[o + 3] && (r[o] = n[0], r[o + 1] = n[1], r[o + 2] = n[2], r[o + 3] = n[3]);
                return e.putImageData(s, 0, 0), t
            }, e.getColor = function(t, e, i, n) {
                var s = [];
                if (this.data._mat && this.data._alpha) {
                    var r = this.data._mat,
                        o = this.data._alpha;
                    s[0] = r[0] * t + r[1] * e + r[2] * i + r[3] * n + o[0], s[1] = r[4] * t + r[5] * e + r[6] * i + r[7] * n + o[1], s[2] = r[8] * t + r[9] * e + r[10] * i + r[11] * n + o[2], s[3] = r[12] * t + r[13] * e + r[14] * i + r[15] * n + o[3]
                }
                return s
            }, t
        }(),
        w = (function() {
            function t() {}
            p(t, "t_tl.maths.Arith"), t.formatR = function(t) {
                return t > Math.PI && (t -= 2 * Math.PI), t < -Math.PI && (t += 2 * Math.PI), t
            }, t.isPOT = function(t, e) {
                return 0 < t && 0 == (t & t - 1) && 0 < e && 0 == (e & e - 1)
            }, t.setMatToArray = function(t, e) {
                t.a, t.b, t.c, t.d, t.tx, t.ty, e[0] = t.a, e[1] = t.b, e[4] = t.c, e[5] = t.d, e[12] = t.tx, e[13] = t.ty
            }
        }(), function() {
            function t() {
                this._controlPoints = [new C, new C, new C], this._calFun = this.getPoint2
            }
            p(t, "t_tl.maths.Bezier");
            var e = t.prototype;
            return e._switchPoint = function(t, e) {
                var i = this._controlPoints.shift();
                i.setTo(t, e), this._controlPoints.push(i)
            }, e.getPoint2 = function(t, e) {
                var i = this._controlPoints[0],
                    n = this._controlPoints[1],
                    s = this._controlPoints[2],
                    r = Math.pow(1 - t, 2) * i.x + 2 * t * (1 - t) * n.x + Math.pow(t, 2) * s.x,
                    o = Math.pow(1 - t, 2) * i.y + 2 * t * (1 - t) * n.y + Math.pow(t, 2) * s.y;
                e.push(r, o)
            }, e.getPoint3 = function(t, e) {
                var i = this._controlPoints[0],
                    n = this._controlPoints[1],
                    s = this._controlPoints[2],
                    r = this._controlPoints[3],
                    o = Math.pow(1 - t, 3) * i.x + 3 * n.x * t * (1 - t) * (1 - t) + 3 * s.x * t * t * (1 - t) + r.x * Math.pow(t, 3),
                    a = Math.pow(1 - t, 3) * i.y + 3 * n.y * t * (1 - t) * (1 - t) + 3 * s.y * t * t * (1 - t) + r.y * Math.pow(t, 3);
                e.push(o, a)
            }, e.insertPoints = function(t, e) {
                var i, n = NaN;
                for (i = 1 / (t = 0 < t ? t : 5), n = 0; n <= 1; n += i) this._calFun(n, e)
            }, e.getBezierPoints = function(t, e, i) {
                void 0 === e && (e = 5), void 0 === i && (i = 2);
                var n, s, r = 0;
                if ((n = t.length) < 2 * (i + 1)) return [];
                switch (s = [], i) {
                    case 2:
                        this._calFun = this.getPoint2;
                        break;
                    case 3:
                        this._calFun = this.getPoint3;
                        break;
                    default:
                        return []
                }
                for (; this._controlPoints.length <= i;) this._controlPoints.push(new C);
                for (r = 0; r < 2 * i; r += 2) this._switchPoint(t[r], t[r + 1]);
                for (r = 2 * i; r < n; r += 2) this._switchPoint(t[r], t[r + 1]), r / 2 % i == 0 && this.insertPoints(e, s);
                return s
            }, h(t, ["I", function() {
                return this.I = new t
            }]), t
        }()),
        x = function() {
            function l() {}
            return p(l, "t_tl.maths.GrahamScan"), l.multiply = function(t, e, i) {
                return (t.x - i.x) * (e.y - i.y) - (e.x - i.x) * (t.y - i.y)
            }, l.dis = function(t, e) {
                return (t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y)
            }, l._getPoints = function(t, e, i) {
                for (void 0 === e && (e = !1), l._mPointList || (l._mPointList = []); l._mPointList.length < t;) l._mPointList.push(new C);
                return i || (i = []), i.length = 0, e ? l.getFrom(i, l._mPointList, t) : l.getFromR(i, l._mPointList, t), i
            }, l.getFrom = function(t, e, i) {
                var n = 0;
                for (n = 0; n < i; n++) t.push(e[n]);
                return t
            }, l.getFromR = function(t, e, i) {
                var n = 0;
                for (n = 0; n < i; n++) t.push(e.pop());
                return t
            }, l.pListToPointList = function(t, e) {
                void 0 === e && (e = !1);
                var i = 0,
                    n = t.length / 2,
                    s = l._getPoints(n, e, l._tempPointList);
                for (i = 0; i < n; i++) s[i].setTo(t[i + i], t[i + i + 1]);
                return s
            }, l.pointListToPlist = function(t) {
                var e, i = 0,
                    n = t.length,
                    s = l._temPList;
                for (i = s.length = 0; i < n; i++) e = t[i], s.push(e.x, e.y);
                return s
            }, l.scanPList = function(t) {
                return q.copyArray(t, l.pointListToPlist(l.scan(l.pListToPointList(t, !0))))
            }, l.scan = function(t) {
                var e, i, n, s = 0,
                    r = 0,
                    o = 0,
                    a = t.length,
                    h = {};
                for ((i = l._temArr).length = 0, s = (a = t.length) - 1; 0 <= s; s--) n = (e = t[s]).x + "_" + e.y, h.hasOwnProperty(n) || (h[n] = !0, i.push(e));
                for (a = i.length, q.copyArray(t, i), s = 1; s < a; s++)(t[s].y < t[o].y || t[s].y == t[o].y && t[s].x < t[o].x) && (o = s);
                for (e = t[0], t[0] = t[o], t[o] = e, s = 1; s < a - 1; s++) {
                    for (r = (o = s) + 1; r < a; r++)(0 < l.multiply(t[r], t[o], t[0]) || 0 == l.multiply(t[r], t[o], t[0]) && l.dis(t[0], t[r]) < l.dis(t[0], t[o])) && (o = r);
                    e = t[s], t[s] = t[o], t[o] = e
                }
                if ((i = l._temArr).length = 0, t.length < 3) return q.copyArray(i, t);
                for (i.push(t[0], t[1], t[2]), s = 3; s < a; s++) {
                    for (; 2 <= i.length && 0 <= l.multiply(t[s], i[i.length - 1], i[i.length - 2]);) i.pop();
                    t[s] && i.push(t[s])
                }
                return i
            }, l._mPointList = null, l._tempPointList = [], l._temPList = [], l._temArr = [], l
        }(),
        T = function() {
            function s() {}
            return p(s, "t_tl.maths.MathUtil"), s.subtractVector3 = function(t, e, i) {
                i[0] = t[0] - e[0], i[1] = t[1] - e[1], i[2] = t[2] - e[2]
            }, s.lerp = function(t, e, i) {
                return t * (1 - i) + e * i
            }, s.scaleVector3 = function(t, e, i) {
                i[0] = t[0] * e, i[1] = t[1] * e, i[2] = t[2] * e
            }, s.lerpVector3 = function(t, e, i, n) {
                var s = t[0],
                    r = t[1],
                    o = t[2];
                n[0] = s + i * (e[0] - s), n[1] = r + i * (e[1] - r), n[2] = o + i * (e[2] - o)
            }, s.lerpVector4 = function(t, e, i, n) {
                var s = t[0],
                    r = t[1],
                    o = t[2],
                    a = t[3];
                n[0] = s + i * (e[0] - s), n[1] = r + i * (e[1] - r), n[2] = o + i * (e[2] - o), n[3] = a + i * (e[3] - a)
            }, s.slerpQuaternionArray = function(t, e, i, n, s, r, o) {
                var a, h, l, u, c, _ = t[e + 0],
                    d = t[e + 1],
                    f = t[e + 2],
                    p = t[e + 3],
                    g = i[n + 0],
                    m = i[n + 1],
                    v = i[n + 2],
                    y = i[n + 3];
                return (h = _ * g + d * m + f * v + p * y) < 0 && (h = -h, g = -g, m = -m, v = -v, y = -y), 1e-6 < 1 - h ? (a = Math.acos(h), l = Math.sin(a), u = Math.sin((1 - s) * a) / l, c = Math.sin(s * a) / l) : (u = 1 - s, c = s), r[o + 0] = u * _ + c * g, r[o + 1] = u * d + c * m, r[o + 2] = u * f + c * v, r[o + 3] = u * p + c * y, r
            }, s.getRotation = function(t, e, i, n) {
                return Math.atan2(n - e, i - t) / Math.PI * 180
            }, s.sortBigFirst = function(t, e) {
                return t == e ? 0 : t < e ? 1 : -1
            }, s.sortSmallFirst = function(t, e) {
                return t == e ? 0 : t < e ? -1 : 1
            }, s.sortNumBigFirst = function(t, e) {
                return parseFloat(e) - parseFloat(t)
            }, s.sortNumSmallFirst = function(t, e) {
                return parseFloat(t) - parseFloat(e)
            }, s.sortByKey = function(i, t, e) {
                var n;
                return void 0 === t && (t = !1), void 0 === e && (e = !0), n = t ? e ? s.sortNumBigFirst : s.sortBigFirst : e ? s.sortNumSmallFirst : s.sortSmallFirst,
                    function(t, e) {
                        return n(t[i], e[i])
                    }
            }, s
        }(),
        A = function() {
            function i(t, e, i, n, s, r) {
                this.inPool = !1, this.bTransform = !1, void 0 === t && (t = 1), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 1), void 0 === s && (s = 0), void 0 === r && (r = 0), this.a = t, this.b = e, this.c = i, this.d = n, this.tx = s, this.ty = r, this._checkTransform()
            }
            p(i, "t_tl.maths.Matrix");
            var t = i.prototype;
            return t.identity = function() {
                return this.a = this.d = 1, this.b = this.tx = this.ty = this.c = 0, this.bTransform = !1, this
            }, t._checkTransform = function() {
                return this.bTransform = 1 !== this.a || 0 !== this.b || 0 !== this.c || 1 !== this.d
            }, t.setTranslate = function(t, e) {
                return this.tx = t, this.ty = e, this
            }, t.translate = function(t, e) {
                return this.tx += t, this.ty += e, this
            }, t.scale = function(t, e) {
                this.a *= t, this.d *= e, this.c *= t, this.b *= e, this.tx *= t, this.ty *= e, this.bTransform = !0
            }, t.rotate = function(t) {
                var e = Math.cos(t),
                    i = Math.sin(t),
                    n = this.a,
                    s = this.c,
                    r = this.tx;
                this.a = n * e - this.b * i, this.b = n * i + this.b * e, this.c = s * e - this.d * i, this.d = s * i + this.d * e, this.tx = r * e - this.ty * i, this.ty = r * i + this.ty * e, this.bTransform = !0
            }, t.skew = function(t, e) {
                var i = Math.tan(t),
                    n = Math.tan(e),
                    s = this.a,
                    r = this.b;
                return this.a += n * this.c, this.b += n * this.d, this.c += i * s, this.d += i * r, this
            }, t.invertTransformPoint = function(t) {
                var e = this.a,
                    i = this.b,
                    n = this.c,
                    s = this.d,
                    r = this.tx,
                    o = e * s - i * n,
                    a = s / o,
                    h = -i / o,
                    l = -n / o,
                    u = e / o,
                    c = (n * this.ty - s * r) / o,
                    _ = -(e * this.ty - i * r) / o;
                return t.setTo(a * t.x + l * t.y + c, h * t.x + u * t.y + _)
            }, t.transformPoint = function(t) {
                return t.setTo(this.a * t.x + this.c * t.y + this.tx, this.b * t.x + this.d * t.y + this.ty)
            }, t.transformPointN = function(t) {
                return t.setTo(this.a * t.x + this.c * t.y, this.b * t.x + this.d * t.y)
            }, t.transformPointArray = function(t, e) {
                for (var i = t.length, n = 0; n < i; n += 2) {
                    var s = t[n],
                        r = t[n + 1];
                    e[n] = this.a * s + this.c * r + this.tx, e[n + 1] = this.b * s + this.d * r + this.ty
                }
                return e
            }, t.transformPointArrayScale = function(t, e) {
                for (var i = t.length, n = 0; n < i; n += 2) {
                    var s = t[n],
                        r = t[n + 1];
                    e[n] = this.a * s + this.c * r, e[n + 1] = this.b * s + this.d * r
                }
                return e
            }, t.getScaleX = function() {
                return 0 === this.b ? this.a : Math.sqrt(this.a * this.a + this.b * this.b)
            }, t.getScaleY = function() {
                return 0 === this.c ? this.d : Math.sqrt(this.c * this.c + this.d * this.d)
            }, t.invert = function() {
                var t = this.a,
                    e = this.b,
                    i = this.c,
                    n = this.d,
                    s = this.tx,
                    r = t * n - e * i;
                return this.a = n / r, this.b = -e / r, this.c = -i / r, this.d = t / r, this.tx = (i * this.ty - n * s) / r, this.ty = -(t * this.ty - e * s) / r, this
            }, t.setTo = function(t, e, i, n, s, r) {
                return this.a = t, this.b = e, this.c = i, this.d = n, this.tx = s, this.ty = r, this
            }, t.concat = function(t) {
                var e = this.a,
                    i = this.c,
                    n = this.tx;
                return this.a = e * t.a + this.b * t.c, this.b = e * t.b + this.b * t.d, this.c = i * t.a + this.d * t.c, this.d = i * t.b + this.d * t.d, this.tx = n * t.a + this.ty * t.c + t.tx, this.ty = n * t.b + this.ty * t.d + t.ty, this
            }, t.scaleEx = function(t, e) {
                var i = this.a,
                    n = this.b,
                    s = this.c,
                    r = this.d;
                0 !== n || 0 !== s ? (this.a = t * i, this.b = t * n, this.c = e * s) : (this.a = t * i, this.b = 0 * r, this.c = 0 * i), this.d = e * r, this.bTransform = !0
            }, t.rotateEx = function(t) {
                var e = Math.cos(t),
                    i = Math.sin(t),
                    n = this.a,
                    s = this.b,
                    r = this.c,
                    o = this.d;
                0 !== s || 0 !== r ? (this.a = e * n + i * r, this.b = e * s + i * o, this.c = -i * n + e * r, this.d = -i * s + e * o) : (this.a = e * n, this.b = i * o, this.c = -i * n, this.d = e * o), this.bTransform = !0
            }, t.clone = function() {
                var t = i.create();
                return t.a = this.a, t.b = this.b, t.c = this.c, t.d = this.d, t.tx = this.tx, t.ty = this.ty, t.bTransform = this.bTransform, t
            }, t.copyTo = function(t) {
                return t.a = this.a, t.b = this.b, t.c = this.c, t.d = this.d, t.tx = this.tx, t.ty = this.ty, t.bTransform = this.bTransform, t
            }, t.toString = function() {
                return this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.tx + "," + this.ty
            }, t.destroy = function() {
                if (!this.inPool) {
                    var t = i._cache;
                    this.inPool = !0, t._length || (t._length = 0), (t[t._length++] = this).a = this.d = 1, this.b = this.c = this.tx = this.ty = 0, this.bTransform = !1
                }
            }, i.mul = function(t, e, i) {
                var n = t.a,
                    s = t.b,
                    r = t.c,
                    o = t.d,
                    a = t.tx,
                    h = t.ty,
                    l = e.a,
                    u = e.b,
                    c = e.c,
                    _ = e.d,
                    d = e.tx,
                    f = e.ty;
                return 0 !== u || 0 !== c ? (i.a = n * l + s * c, i.b = n * u + s * _, i.c = r * l + o * c, i.d = r * u + o * _, i.tx = l * a + c * h + d, i.ty = u * a + _ * h + f) : (i.a = n * l, i.b = s * _, i.c = r * l, i.d = o * _, i.tx = l * a + d, i.ty = _ * h + f), i
            }, i.mul16 = function(t, e, i) {
                var n = t.a,
                    s = t.b,
                    r = t.c,
                    o = t.d,
                    a = t.tx,
                    h = t.ty,
                    l = e.a,
                    u = e.b,
                    c = e.c,
                    _ = e.d,
                    d = e.tx,
                    f = e.ty;
                return 0 !== u || 0 !== c ? (i[0] = n * l + s * c, i[1] = n * u + s * _, i[4] = r * l + o * c, i[5] = r * u + o * _, i[12] = l * a + c * h + d, i[13] = u * a + _ * h + f) : (i[0] = n * l, i[1] = s * _, i[4] = r * l, i[5] = o * _, i[12] = l * a + d, i[13] = _ * h + f), i
            }, i.mulPre = function(t, e, i, n, s, r, o, a) {
                var h = t.a,
                    l = t.b,
                    u = t.c,
                    c = t.d,
                    _ = t.tx,
                    d = t.ty;
                return 0 !== i || 0 !== n ? (a.a = h * e + l * n, a.b = h * i + l * s, a.c = u * e + c * n, a.d = u * i + c * s, a.tx = e * _ + n * d + r, a.ty = i * _ + s * d + o) : (a.a = h * e, a.b = l * s, a.c = u * e, a.d = c * s, a.tx = e * _ + r, a.ty = s * d + o), a
            }, i.mulPos = function(t, e, i, n, s, r, o, a) {
                var h = t.a,
                    l = t.b,
                    u = t.c,
                    c = t.d,
                    _ = t.tx,
                    d = t.ty;
                return 0 !== l || 0 !== u ? (a.a = e * h + i * u, a.b = e * l + i * c, a.c = n * h + s * u, a.d = n * l + s * c, a.tx = h * r + u * o + _, a.ty = l * r + c * o + d) : (a.a = e * h, a.b = i * c, a.c = n * h, a.d = s * c, a.tx = h * r + _, a.ty = c * o + d), a
            }, i.preMul = function(t, e, i) {
                var n = t.a,
                    s = t.b,
                    r = t.c,
                    o = t.d,
                    a = e.a,
                    h = e.b,
                    l = e.c,
                    u = e.d,
                    c = e.tx,
                    _ = e.ty;
                return i.a = a * n, i.b = i.c = 0, i.d = u * o, i.tx = c * n + t.tx, i.ty = _ * o + t.ty, 0 === h && 0 === l && 0 === s && 0 === r || (i.a += h * r, i.d += l * s, i.b += a * s + h * o, i.c += l * n + u * r, i.tx += _ * r, i.ty += c * s), i
            }, i.preMulXY = function(t, e, i, n) {
                var s = t.a,
                    r = t.b,
                    o = t.c,
                    a = t.d;
                return n.a = s, n.b = r, n.c = o, n.d = a, n.tx = e * s + t.tx + i * o, n.ty = i * a + t.ty + e * r, n
            }, i.create = function() {
                var t = i._cache,
                    e = t._length ? t[--t._length] : new i;
                return e.inPool = !1, e
            }, i.EMPTY = new i, i.TEMP = new i, i._cache = [], i
        }(),
        C = function() {
            function t(t, e) {
                void 0 === t && (t = 0), void 0 === e && (e = 0), this.x = t, this.y = e
            }
            p(t, "t_tl.maths.Point");
            var e = t.prototype;
            return e.setTo = function(t, e) {
                return this.x = t, this.y = e, this
            }, e.distance = function(t, e) {
                return Math.sqrt((this.x - t) * (this.x - t) + (this.y - e) * (this.y - e))
            }, e.toString = function() {
                return this.x + "," + this.y
            }, e.normalize = function() {
                var t = Math.sqrt(this.x * this.x + this.y * this.y);
                if (0 < t) {
                    var e = 1 / t;
                    this.x *= e, this.y *= e
                }
            }, t.TEMP = new t, t.EMPTY = new t, t
        }(),
        M = function() {
            function l(t, e, i, n) {
                void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), this.x = t, this.y = e, this.width = i, this.height = n
            }
            p(l, "t_tl.maths.Rectangle");
            var t = l.prototype;
            return t.setTo = function(t, e, i, n) {
                return this.x = t, this.y = e, this.width = i, this.height = n, this
            }, t.copyFrom = function(t) {
                return this.x = t.x, this.y = t.y, this.width = t.width, this.height = t.height, this
            }, t.contains = function(t, e) {
                return !(this.width <= 0 || this.height <= 0) && (t >= this.x && t < this.right && e >= this.y && e < this.bottom)
            }, t.intersects = function(t) {
                return !(t.x > this.x + this.width || t.x + t.width < this.x || t.y > this.y + this.height || t.y + t.height < this.y)
            }, t.intersection = function(t, e) {
                return this.intersects(t) ? (e || (e = new l), e.x = Math.max(this.x, t.x), e.y = Math.max(this.y, t.y), e.width = Math.min(this.right, t.right) - e.x, e.height = Math.min(this.bottom, t.bottom) - e.y, e) : null
            }, t.union = function(t, e) {
                return e || (e = new l), this.clone(e), t.width <= 0 || t.height <= 0 ? e : (e.addPoint(t.x, t.y), e.addPoint(t.right, t.bottom), this)
            }, t.clone = function(t) {
                return t || (t = new l), t.x = this.x, t.y = this.y, t.width = this.width, t.height = this.height, t
            }, t.toString = function() {
                return this.x + "," + this.y + "," + this.width + "," + this.height
            }, t.equals = function(t) {
                return !(!t || t.x !== this.x || t.y !== this.y || t.width !== this.width || t.height !== this.height)
            }, t.addPoint = function(t, e) {
                return this.x > t && (this.width += this.x - t, this.x = t), this.y > e && (this.height += this.y - e, this.y = e), this.width < t - this.x && (this.width = t - this.x), this.height < e - this.y && (this.height = e - this.y), this
            }, t._getBoundPoints = function() {
                var t = l._temB;
                return (t.length = 0) == this.width || 0 == this.height || t.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height), t
            }, t.isEmpty = function() {
                return this.width <= 0 || this.height <= 0
            }, u(0, t, "right", function() {
                return this.x + this.width
            }), u(0, t, "bottom", function() {
                return this.y + this.height
            }), l._getBoundPointS = function(t, e, i, n) {
                var s = l._temA;
                return (s.length = 0) == i || 0 == n || s.push(t, e, t + i, e, t, e + n, t + i, e + n), s
            }, l._getWrapRec = function(t, e) {
                if (!t || t.length < 1) return e ? e.setTo(0, 0, 0, 0) : l.TEMP.setTo(0, 0, 0, 0);
                e = e || new l;
                var i, n, s, r, o, a = t.length,
                    h = C.TEMP;
                for (s = o = -(n = r = 99999), i = 0; i < a; i += 2) h.x = t[i], h.y = t[i + 1], n = n < h.x ? n : h.x, r = r < h.y ? r : h.y, s = s > h.x ? s : h.x, o = o > h.y ? o : h.y;
                return e.setTo(n, r, s - n, o - r)
            }, l.EMPTY = new l, l.TEMP = new l, l._temB = [], l._temA = [], l
        }(),
        P = function() {
            function h() {}
            return p(h, "t_tl.media.SoundManager"), u(1, h, "useAudioMusic", function() {
                return h._useAudioMusic
            }, function(t) {
                h._useAudioMusic = t, h._musicClass = t ? it : null
            }), u(1, h, "autoStopMusic", function() {
                return h._autoStopMusic
            }, function(t) {
                b.stage.off("blur", null, h._stageOnBlur), b.stage.off("focus", null, h._stageOnFocus), b.stage.off("visibilitychange", null, h._visibilityChange), (h._autoStopMusic = t) && (b.stage.on("blur", null, h._stageOnBlur), b.stage.on("focus", null, h._stageOnFocus), b.stage.on("visibilitychange", null, h._visibilityChange))
            }), u(1, h, "muted", function() {
                return h._muted
            }, function(t) {
                t != h._muted && (t && h.stopAllSound(), h.musicMuted = t, h._muted = t)
            }), u(1, h, "musicMuted", function() {
                return h._musicMuted
            }, function(t) {
                t != h._musicMuted && (t ? (h._tMusic && h._musicChannel && !h._musicChannel.isStopped ? h._musicChannel.pause() : h._musicChannel = null, h._musicMuted = t) : (h._musicMuted = t, h._tMusic && h._musicChannel && h._musicChannel.resume()))
            }), u(1, h, "soundMuted", function() {
                return h._soundMuted
            }, function(t) {
                h._soundMuted = t
            }), h.addChannel = function(t) {
                0 <= h._channels.indexOf(t) || h._channels.push(t)
            }, h.removeChannel = function(t) {
                var e = 0;
                for (e = h._channels.length - 1; 0 <= e; e--) h._channels[e] == t && h._channels.splice(e, 1)
            }, h.disposeSoundIfNotUsed = function(t) {
                var e = 0;
                for (e = h._channels.length - 1; 0 <= e; e--)
                    if (h._channels[e].url == t) return;
                h.destroySound(t)
            }, h._visibilityChange = function() {
                b.stage.isVisibility ? h._stageOnFocus() : h._stageOnBlur()
            }, h._stageOnBlur = function() {
                h._isActive = !1, h._musicChannel && (h._musicChannel.isStopped || (h._blurPaused = !0, h._musicChannel.pause())), h.stopAllSound(), b.stage.once("mousedown", null, h._stageOnFocus)
            }, h._recoverWebAudio = function() {
                rt.ctx && "running" != rt.ctx.state && rt.ctx.resume && rt.ctx.resume()
            }, h._stageOnFocus = function() {
                h._isActive = !0, h._recoverWebAudio(), b.stage.off("mousedown", null, h._stageOnFocus), h._blurPaused && h._musicChannel && h._musicChannel.isStopped && (h._blurPaused = !1, h._musicChannel.resume())
            }, h.playSound = function(t, e, i, n, s) {
                if (void 0 === e && (e = 1), void 0 === s && (s = 0), !h._isActive || !t) return null;
                if (h._muted) return null;
                if (h._recoverWebAudio(), (t = R.formatURL(t)) == h._tMusic) {
                    if (h._musicMuted) return null
                } else {
                    if (D.isConchApp) {
                        var r = q.getFileExtension(t);
                        if ("wav" != r && "ogg" != r) return alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document."), null
                    }
                    if (h._soundMuted) return null
                }
                var o, a;
                return B.onMiniGame || (o = b.loader.getRes(t)), n || (n = h._soundClass), o || ((o = new n).load(t), at.cacheRes(t, o)), (a = o.play(s, e)) ? (a.url = t, a.volume = t == h._tMusic ? h.musicVolume : h.soundVolume, a.completeHandler = i, a) : null
            }, h.destroySound = function(t) {
                var e = b.loader.getRes(t);
                e && (at.clearRes(t), e.dispose())
            }, h.playMusic = function(t, e, i, n) {
                return void 0 === e && (e = 0), void 0 === n && (n = 0), t = R.formatURL(t), h._tMusic = t, h._musicChannel && h._musicChannel.stop(), h._musicChannel = h.playSound(t, e, i, h._musicClass, n)
            }, h.stopSound = function(t) {
                t = R.formatURL(t);
                var e, i = 0;
                for (i = h._channels.length - 1; 0 <= i; i--)(e = h._channels[i]).url == t && e.stop()
            }, h.stopAll = function() {
                h._tMusic = null;
                var t = 0;
                for (t = h._channels.length - 1; 0 <= t; t--) h._channels[t].stop()
            }, h.stopAllSound = function() {
                var t, e = 0;
                for (e = h._channels.length - 1; 0 <= e; e--)(t = h._channels[e]).url != h._tMusic && t.stop()
            }, h.stopMusic = function() {
                h._musicChannel && h._musicChannel.stop(), h._tMusic = null
            }, h.setSoundVolume = function(t, e) {
                if (e) e = R.formatURL(e), h._setVolume(e, t);
                else {
                    h.soundVolume = t;
                    var i, n = 0;
                    for (n = h._channels.length - 1; 0 <= n; n--)(i = h._channels[n]).url != h._tMusic && (i.volume = t)
                }
            }, h.setMusicVolume = function(t) {
                h.musicVolume = t, h._setVolume(h._tMusic, t)
            }, h._setVolume = function(t, e) {
                t = R.formatURL(t);
                var i, n = 0;
                for (n = h._channels.length - 1; 0 <= n; n--)(i = h._channels[n]).url == t && (i.volume = e)
            }, h.musicVolume = 1, h.soundVolume = 1, h.playbackRate = 1, h._useAudioMusic = !0, h._muted = !1, h._soundMuted = !1, h._musicMuted = !1, h._tMusic = null, h._musicChannel = null, h._channels = [], h._autoStopMusic = !1, h._blurPaused = !1, h._isActive = !0, h._soundClass = null, h._musicClass = null, h.autoReleaseSound = !0, h
        }(),
        E = function() {
            var t;

            function i() {}
            return p(i, "t_tl.net.LocalStorage"), i.__init__ = function() {
                i._baseClass || (i._baseClass = t).init(), i.items = i._baseClass.items, i.support = i._baseClass.support
            }, i.setItem = function(t, e) {
                i._baseClass.setItem(t, e)
            }, i.getItem = function(t) {
                return i._baseClass.getItem(t)
            }, i.setJSON = function(t, e) {
                i._baseClass.setJSON(t, e)
            }, i.getJSON = function(t) {
                return i._baseClass.getJSON(t)
            }, i.removeItem = function(t) {
                i._baseClass.removeItem(t)
            }, i.clear = function() {
                i._baseClass.clear()
            }, i._baseClass = null, i.items = null, i.support = !1, i.__init$ = function() {
                t = function() {
                    function i() {}
                    return p(i, ""), i.init = function() {
                        try {
                            i.items = o.localStorage, i.setItem("t_tl", "1"), i.removeItem("t_tl"), i.support = !0
                        } catch (t) {}
                        i.support || console.log("LocalStorage is not supprot or browser is private mode.")
                    }, i.setItem = function(t, e) {
                        try {
                            i.support && i.items.setItem(t, e)
                        } catch (t) {
                            console.warn("set localStorage failed", t)
                        }
                    }, i.getItem = function(t) {
                        return i.support ? i.items.getItem(t) : null
                    }, i.setJSON = function(t, e) {
                        try {
                            i.support && i.items.setItem(t, JSON.stringify(e))
                        } catch (t) {
                            console.warn("set localStorage failed", t)
                        }
                    }, i.getJSON = function(t) {
                        return JSON.parse(i.support ? i.items.getItem(t) : null)
                    }, i.removeItem = function(t) {
                        i.support && i.items.removeItem(t)
                    }, i.clear = function() {
                        i.support && i.items.clear()
                    }, i.items = null, i.support = !1, i
                }()
            }, i
        }(),
        L = (function() {
            function n() {}
            p(n, "t_tl.net.ResourceVersion"), n.enable = function(t, e, i) {
                void 0 === i && (i = 2), t_tl.net.ResourceVersion.type = i, b.loader.load(t, v.create(null, n.onManifestLoaded, [e]), null, "json"), R.customFormat = n.addVersionPrefix
            }, n.onManifestLoaded = function(t, e) {
                n.manifest = e, t.run(), e || console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。")
            }, n.addVersionPrefix = function(t) {
                return n.manifest && n.manifest[t] ? 2 == n.type ? n.manifest[t] : n.manifest[t] + "/" + t : t
            }, n.FOLDER_VERSION = 1, n.FILENAME_VERSION = 2, n.manifest = null, n.type = 1
        }(), function() {
            function t() {
                this.fontName = null, this.complete = null, this.err = null, this._fontTxt = null, this._url = null, this._div = null, this._txtWidth = NaN, this._http = null
            }
            p(t, "t_tl.net.TTFLoader");
            var e = t.prototype;
            return e.load = function(t) {
                var e = (this._url = t).split(".ttf")[0].split("/");
                this.fontName = e[e.length - 1], B.window.conch ? this._loadConch() : B.window.FontFace ? this._loadWithFontFace() : this._loadWithCSS()
            }, e._loadConch = function() {
                this._http = new ot, this._http.on("error", this, this._onErr), this._http.on("complete", this, this._onHttpLoaded), this._http.send(this._url, null, "get", "arraybuffer")
            }, e._onHttpLoaded = function(t) {
                B.window.conch.setFontFaceFromBuffer(this.fontName, t), this._clearHttp(), this._complete()
            }, e._clearHttp = function() {
                this._http && (this._http.off("error", this, this._onErr), this._http.off("complete", this, this._onHttpLoaded), this._http = null)
            }, e._onErr = function() {
                this._clearHttp(), this.err && (this.err.runWith("fail:" + this._url), this.err = null)
            }, e._complete = function() {
                b.timer.clear(this, this._complete), b.timer.clear(this, this._checkComplete), this._div && this._div.parentNode && (this._div.parentNode.removeChild(this._div), this._div = null), this.complete && (this.complete.runWith(this), this.complete = null)
            }, e._checkComplete = function() {
                I.measureText("LayaTTFFont", this._fontTxt).width != this._txtWidth && this._complete()
            }, e._loadWithFontFace = function() {
                var t = new B.window.FontFace(this.fontName, "url('" + this._url + "')");
                B.window.document.fonts.add(t);
                var e = this;
                t.loaded.then(function() {
                    e._complete()
                }), t.load()
            }, e._createDiv = function() {
                this._div = B.createElement("div"), this._div.innerHTML = "t_tl";
                var t = this._div.style;
                t.fontFamily = this.fontName, t.position = "absolute", t.left = "-100px", t.top = "-100px", B.document.body.appendChild(this._div)
            }, e._loadWithCSS = function() {
                var t = this,
                    e = B.createElement("style");
                e.type = "text/css", B.document.body.appendChild(e), e.textContent = "@font-face { font-family:'" + this.fontName + "'; src:url('" + this._url + "');}", this._fontTxt = "40px " + this.fontName, this._txtWidth = I.measureText("LayaTTFFont", this._fontTxt).width;
                var i = this;
                e.onload = function() {
                    b.timer.once(1e4, i, t._complete)
                }, b.timer.loop(20, this, this._checkComplete), this._createDiv()
            }, t._testString = "LayaTTFFont", t
        }()),
        R = function() {
            function n(t) {
                this._url = null, this._path = null, this._url = n.formatURL(t), this._path = n.getPath(t)
            }
            p(n, "t_tl.net.URL");
            var t = n.prototype;
            return u(0, t, "path", function() {
                return this._path
            }), u(0, t, "url", function() {
                return this._url
            }), n.formatURL = function(t, e) {
                if (!t) return "null path";
                if (0 < t.indexOf(":")) return t;
                null != n.customFormat && (t = n.customFormat(t, e));
                var i = t.charAt(0);
                if ("." === i) return n.formatRelativePath((e || n.basePath) + t);
                if ("~" === i) return n.rootPath + t.substring(1);
                if ("d" === i) {
                    if (0 === t.indexOf("data:image")) return t
                } else if ("/" === i) return t;
                return (e || n.basePath) + t
            }, n.formatRelativePath = function(t) {
                for (var e = t.split("/"), i = 0, n = e.length; i < n; i++) ".." == e[i] && (e.splice(i - 1, 2), i -= 2);
                return e.join("/")
            }, n.isAbsolute = function(t) {
                return 0 < t.indexOf(":") || "/" == t.charAt(0)
            }, n.getPath = function(t) {
                var e = t.lastIndexOf("/");
                return 0 < e ? t.substr(0, e + 1) : ""
            }, n.getFileName = function(t) {
                var e = t.lastIndexOf("/");
                return 0 < e ? t.substr(e + 1) : t
            }, n.version = {}, n.basePath = "", n.rootPath = "", n.customFormat = function(t) {
                var e = n.version[t];
                return !D.isConchApp && e && (t += "?v=" + e), t
            }, n
        }(),
        D = function() {
            function s(t, e) {
                this._timeId = 0;
                var i = s._mainCanvas.source.style;
                i.position = "absolute", i.top = i.left = "0px", i.background = "#000000", s._mainCanvas.source.id = "layaCanvas";
                var n = t_tl.renders.Render.isWebGL;
                s._mainCanvas.source.width = t, s._mainCanvas.source.height = e, n && s.WebGL.init(s._mainCanvas, t, e), B.container.appendChild(s._mainCanvas.source), (s._context = new F(t, e, n ? null : s._mainCanvas)).ctx.setIsMainContext(), B.window.requestAnimationFrame(function t() {
                    b.stage._loop();
                    B.window.requestAnimationFrame(t)
                }), b.stage.on("visibilitychange", this, this._onVisibilitychange)
            }
            p(s, "t_tl.renders.Render");
            var t = s.prototype;
            return t._onVisibilitychange = function() {
                b.stage.isVisibility ? 0 != this._timeId && B.window.clearInterval(this._timeId) : this._timeId = B.window.setInterval(this._enterFrame, 1e3)
            }, t._enterFrame = function(t) {
                b.stage._loop()
            }, u(1, s, "context", function() {
                return s._context
            }), u(1, s, "canvas", function() {
                return s._mainCanvas.source
            }), s._context = null, s._mainCanvas = null, s.WebGL = null, s.isConchNode = !1, s.isConchApp = !1, s.isConchWebGL = !1, s.isWebGL = !1, s.is3DMode = !1, s.optimizeTextureMemory = function(t, e) {
                return !0
            }, s.__init$ = function() {
                o.ConchRenderType = o.ConchRenderType || 1, o.ConchRenderType |= o.conch ? 4 : 0, s.isConchNode = 5 == (5 & o.ConchRenderType), s.isConchApp = 4 == (4 & o.ConchRenderType), s.isConchWebGL = 6 == o.ConchRenderType
            }, s
        }(),
        F = function() {
            function o(t, e, i) {
                this.x = 0, this.y = 0, this._drawTexture = function(t, e, i) {
                    i[0].loaded && this.ctx.drawTexture(i[0], i[1], i[2], i[3], i[4], t, e)
                }, this._fillTexture = function(t, e, i) {
                    i[0].loaded && this.ctx.fillTexture(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7])
                }, this._drawTextureWithTransform = function(t, e, i) {
                    i[0].loaded && this.ctx.drawTextureWithTransform(i[0], i[1], i[2], i[3], i[4], i[5], t, e, i[6])
                }, this._fillQuadrangle = function(t, e, i) {
                    this.ctx.fillQuadrangle(i[0], i[1], i[2], i[3], i[4])
                }, this._drawRect = function(t, e, i) {
                    var n = this.ctx;
                    null != i[4] && (n.fillStyle = i[4], n.fillRect(t + i[0], e + i[1], i[2], i[3], null)), null != i[5] && (n.strokeStyle = i[5], n.lineWidth = i[6], n.strokeRect(t + i[0], e + i[1], i[2], i[3], i[6]))
                }, this._drawPie = function(t, e, i) {
                    var n = this.ctx;
                    D.isWebGL && n.setPathId(i[8]), n.beginPath(), D.isWebGL ? (n.movePath(i[0] + t, i[1] + e), n.moveTo(0, 0)) : n.moveTo(t + i[0], e + i[1]), n.arc(t + i[0], e + i[1], i[2], i[3], i[4]), n.closePath(), this._fillAndStroke(i[5], i[6], i[7], !0)
                }, this._clipRect = function(t, e, i) {
                    this.ctx.clipRect(t + i[0], e + i[1], i[2], i[3])
                }, this._fillRect = function(t, e, i) {
                    this.ctx.fillRect(t + i[0], e + i[1], i[2], i[3], i[4])
                }, this._drawCircle = function(t, e, i) {
                    var n = this.ctx;
                    D.isWebGL && n.setPathId(i[6]), V.drawCall++, n.beginPath(), D.isWebGL && n.movePath(i[0] + t, i[1] + e), n.arc(i[0] + t, i[1] + e, i[2], 0, o.PI2), n.closePath(), this._fillAndStroke(i[3], i[4], i[5], !0)
                }, this._fillCircle = function(t, e, i) {
                    V.drawCall++;
                    var n = this.ctx;
                    n.beginPath(), n.fillStyle = i[3], n.arc(i[0] + t, i[1] + e, i[2], 0, o.PI2), n.fill()
                }, this._setShader = function(t, e, i) {
                    this.ctx.setShader(i[0])
                }, this._drawLine = function(t, e, i) {
                    var n = this.ctx;
                    D.isWebGL && n.setPathId(i[6]), n.beginPath(), n.strokeStyle = i[4], n.lineWidth = i[5], D.isWebGL ? (n.movePath(t, e), n.moveTo(i[0], i[1]), n.lineTo(i[2], i[3])) : (n.moveTo(t + i[0], e + i[1]), n.lineTo(t + i[2], e + i[3])), n.stroke()
                }, this._drawLines = function(t, e, i) {
                    var n = this.ctx;
                    D.isWebGL && n.setPathId(i[5]), n.beginPath(), t += i[0], e += i[1], D.isWebGL && n.movePath(t, e), n.strokeStyle = i[3], n.lineWidth = i[4];
                    var s = i[2],
                        r = 2,
                        o = s.length;
                    if (D.isWebGL)
                        for (n.moveTo(s[0], s[1]); r < o;) n.lineTo(s[r++], s[r++]);
                    else
                        for (n.moveTo(t + s[0], e + s[1]); r < o;) n.lineTo(t + s[r++], e + s[r++]);
                    n.stroke()
                }, this._drawLinesWebGL = function(t, e, i) {
                    this.ctx.drawLines(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4])
                }, this._drawCurves = function(t, e, i) {
                    this.ctx.drawCurves(t, e, i)
                }, this._draw = function(t, e, i) {
                    i[0].call(null, this, t, e)
                }, this._transformByMatrix = function(t, e, i) {
                    this.ctx.transformByMatrix(i[0])
                }, this._setTransform = function(t, e, i) {
                    this.ctx.setTransform(i[0], i[1], i[2], i[3], i[4], i[5])
                }, this._setTransformByMatrix = function(t, e, i) {
                    this.ctx.setTransformByMatrix(i[0])
                }, this._save = function(t, e, i) {
                    this.ctx.save()
                }, this._restore = function(t, e, i) {
                    this.ctx.restore()
                }, this._translate = function(t, e, i) {
                    this.ctx.translate(i[0], i[1])
                }, this._transform = function(t, e, i) {
                    this.ctx.translate(i[1] + t, i[2] + e);
                    var n = i[0];
                    this.ctx.transform(n.a, n.b, n.c, n.d, n.tx, n.ty), this.ctx.translate(-t - i[1], -e - i[2])
                }, this._rotate = function(t, e, i) {
                    this.ctx.translate(i[1] + t, i[2] + e), this.ctx.rotate(i[0]), this.ctx.translate(-t - i[1], -e - i[2])
                }, this._scale = function(t, e, i) {
                    this.ctx.translate(i[2] + t, i[3] + e), this.ctx.scale(i[0], i[1]), this.ctx.translate(-t - i[2], -e - i[3])
                }, this._alpha = function(t, e, i) {
                    this.ctx.globalAlpha *= i[0]
                }, this._setAlpha = function(t, e, i) {
                    this.ctx.globalAlpha = i[0]
                }, this._fillText = function(t, e, i) {
                    this.ctx.fillText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5])
                }, this._strokeText = function(t, e, i) {
                    this.ctx.strokeText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6])
                }, this._fillBorderText = function(t, e, i) {
                    this.ctx.fillBorderText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7])
                }, this._blendMode = function(t, e, i) {
                    this.ctx.globalCompositeOperation = i[0]
                }, this._beginClip = function(t, e, i) {
                    this.ctx.beginClip && this.ctx.beginClip(t + i[0], e + i[1], i[2], i[3])
                }, this._setIBVB = function(t, e, i) {
                    this.ctx.setIBVB(i[0] + t, i[1] + e, i[2], i[3], i[4], i[5], i[6], i[7])
                }, this._fillTrangles = function(t, e, i) {
                    this.ctx.fillTrangles(i[0], i[1] + t, i[2] + e, i[3], i[4])
                }, this._drawPath = function(t, e, i) {
                    var n = this.ctx;
                    D.isWebGL && n.setPathId(-1), n.beginPath(), t += i[0], e += i[1], D.isWebGL && n.movePath(t, e);
                    for (var s = i[2], r = 0, o = s.length; r < o; r++) {
                        var a = s[r];
                        switch (a[0]) {
                            case "moveTo":
                                D.isWebGL ? n.moveTo(a[1], a[2]) : n.moveTo(t + a[1], e + a[2]);
                                break;
                            case "lineTo":
                                D.isWebGL ? n.lineTo(a[1], a[2]) : n.lineTo(t + a[1], e + a[2]);
                                break;
                            case "arcTo":
                                D.isWebGL ? n.arcTo(a[1], a[2], a[3], a[4], a[5]) : n.arcTo(t + a[1], e + a[2], t + a[3], e + a[4], a[5]);
                                break;
                            case "closePath":
                                n.closePath()
                        }
                    }
                    var h = i[3];
                    null != h && (n.fillStyle = h.fillStyle, n.fill());
                    var l = i[4];
                    null != l && (n.strokeStyle = l.strokeStyle, n.lineWidth = l.lineWidth || 1, n.lineJoin = l.lineJoin, n.lineCap = l.lineCap, n.miterLimit = l.miterLimit, n.stroke())
                }, this.drawPoly = function(t, e, i) {
                    this.ctx.drawPoly(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4], i[5], i[6])
                }, this._drawPoly = function(t, e, i) {
                    var n = this.ctx,
                        s = i[2],
                        r = 2,
                        o = s.length;
                    if (D.isWebGL)
                        for (n.setPathId(i[6]), n.beginPath(), t += i[0], e += i[1], n.movePath(t, e), n.moveTo(s[0], s[1]); r < o;) n.lineTo(s[r++], s[r++]);
                    else
                        for (n.beginPath(), t += i[0], e += i[1], n.moveTo(t + s[0], e + s[1]); r < o;) n.lineTo(t + s[r++], e + s[r++]);
                    n.closePath(), this._fillAndStroke(i[3], i[4], i[5], i[7])
                }, this._drawSkin = function(t, e, i) {
                    var n = i[0];
                    if (n) {
                        var s = this.ctx;
                        n.render(s, t, e)
                    }
                }, this._drawParticle = function(t, e, i) {
                    this.ctx.drawParticle(t + this.x, e + this.y, i[0])
                }, this._setFilters = function(t, e, i) {
                    this.ctx.setFilters(i)
                }, i ? this.ctx = i.getContext("2d") : (i = yt.create("3D"), this.ctx = I.createWebGLContext2D(i), i._setContext(this.ctx)), i.size(t, e), this.canvas = i
            }
            p(o, "t_tl.renders.RenderContext");
            var t = o.prototype;
            return t.destroy = function() {
                this.canvas && (this.canvas.destroy(), this.canvas = null, this.ctx = null), this.ctx && (this.ctx.destroy(), this.ctx = null)
            }, t.drawTexture = function(t, e, i, n, s) {
                t.loaded && this.ctx.drawTexture(t, e, i, n, s, this.x, this.y)
            }, t._drawTextures = function(t, e, i) {
                i[0].loaded && this.ctx.drawTextures(i[0], i[1], t + this.x, e + this.y)
            }, t.drawTextureWithTransform = function(t, e, i, n, s, r, o) {
                t.loaded && this.ctx.drawTextureWithTransform(t, e, i, n, s, r, this.x, this.y, o)
            }, t.fillQuadrangle = function(t, e, i, n, s) {
                this.ctx.fillQuadrangle(t, e, i, n, s)
            }, t.drawCanvas = function(t, e, i, n, s) {
                this.ctx.drawCanvas(t, e + this.x, i + this.y, n, s)
            }, t.drawRect = function(t, e, i, n, s, r) {
                void 0 === r && (r = 1);
                var o = this.ctx;
                o.strokeStyle = s, o.lineWidth = r, o.strokeRect(t + this.x, e + this.y, i, n, r)
            }, t._fillAndStroke = function(t, e, i, n) {
                void 0 === n && (n = !1);
                var s = this.ctx;
                null != t && (s.fillStyle = t, D.isWebGL ? s.fill(n) : s.fill()), null != e && 0 < i && (s.strokeStyle = e, s.lineWidth = i, s.stroke())
            }, t.clipRect = function(t, e, i, n) {
                this.ctx.clipRect(t + this.x, e + this.y, i, n)
            }, t.fillRect = function(t, e, i, n, s) {
                this.ctx.fillRect(t + this.x, e + this.y, i, n, s)
            }, t.drawCircle = function(t, e, i, n, s) {
                void 0 === s && (s = 1), V.drawCall++;
                var r = this.ctx;
                r.beginPath(), r.strokeStyle = n, r.lineWidth = s, r.arc(t + this.x, e + this.y, i, 0, o.PI2), r.stroke()
            }, t.drawTriangles = function(t, e, i) {
                if (D.isWebGL) this.ctx.drawTriangles(i[0], t + i[1], e + i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9]);
                else {
                    var n = i[5],
                        s = 0,
                        r = n.length,
                        o = this.ctx;
                    for (s = 0; s < r; s += 3) {
                        var a = 2 * n[s],
                            h = 2 * n[s + 1],
                            l = 2 * n[s + 2];
                        o.drawTriangle(i[0], i[3], i[4], a, h, l, i[6], !0)
                    }
                }
            }, t.fillCircle = function(t, e, i, n) {
                V.drawCall++;
                var s = this.ctx;
                s.beginPath(), s.fillStyle = n, s.arc(t + this.x, e + this.y, i, 0, o.PI2), s.fill()
            }, t.setShader = function(t) {
                this.ctx.setShader(t)
            }, t.drawLine = function(t, e, i, n, s, r) {
                void 0 === r && (r = 1);
                var o = this.ctx;
                o.beginPath(), o.strokeStyle = s, o.lineWidth = r, o.moveTo(this.x + t, this.y + e), o.lineTo(this.x + i, this.y + n), o.stroke()
            }, t.clear = function() {
                this.ctx.clear()
            }, t.transformByMatrix = function(t) {
                this.ctx.transformByMatrix(t)
            }, t.setTransform = function(t, e, i, n, s, r) {
                this.ctx.setTransform(t, e, i, n, s, r)
            }, t.setTransformByMatrix = function(t) {
                this.ctx.setTransformByMatrix(t)
            }, t.save = function() {
                this.ctx.save()
            }, t.restore = function() {
                this.ctx.restore()
            }, t.translate = function(t, e) {
                this.ctx.translate(t, e)
            }, t.transform = function(t, e, i, n, s, r) {
                this.ctx.transform(t, e, i, n, s, r)
            }, t.rotate = function(t) {
                this.ctx.rotate(t)
            }, t.scale = function(t, e) {
                this.ctx.scale(t, e)
            }, t.alpha = function(t) {
                this.ctx.globalAlpha *= t
            }, t.setAlpha = function(t) {
                this.ctx.globalAlpha = t
            }, t.fillWords = function(t, e, i, n, s, r) {
                void 0 === r && (r = 0), this.ctx.fillWords(t, e, i, n, s, r)
            }, t.fillBorderWords = function(t, e, i, n, s, r, o) {
                this.ctx.fillBorderWords(t, e, i, n, s, r, o)
            }, t.fillText = function(t, e, i, n, s, r) {
                this.ctx.fillText(t, e + this.x, i + this.y, n, s, r)
            }, t.strokeText = function(t, e, i, n, s, r, o) {
                this.ctx.strokeText(t, e + this.x, i + this.y, n, s, r, o)
            }, t.blendMode = function(t) {
                this.ctx.globalCompositeOperation = t
            }, t.flush = function() {
                this.ctx.flush && this.ctx.flush()
            }, t.addRenderObject = function(t) {
                this.ctx.addRenderObject(t)
            }, t.beginClip = function(t, e, i, n) {
                this.ctx.beginClip && this.ctx.beginClip(t, e, i, n)
            }, t.endClip = function() {
                this.ctx.endClip && this.ctx.endClip()
            }, t.fillTrangles = function(t, e, i) {
                this.ctx.fillTrangles(i[0], i[1], i[2], i[3], 4 < i.length ? i[4] : null)
            }, o.PI2 = 2 * Math.PI, o
        }(),
        k = function() {
            function o(t, e) {
                switch (this._next = e || o.NORENDER, t) {
                    case 0:
                        return void(this._fun = this._no);
                    case 1:
                        return void(this._fun = this._image);
                    case 2:
                        return void(this._fun = this._alpha);
                    case 4:
                        return void(this._fun = this._transform);
                    case 8:
                        return void(this._fun = this._blend);
                    case 16:
                        return void(this._fun = this._canvas);
                    case 64:
                        return void(this._fun = this._mask);
                    case 128:
                        return void(this._fun = this._clip);
                    case 256:
                        return void(this._fun = this._style);
                    case 512:
                        return void(this._fun = this._graphics);
                    case 2048:
                        return void(this._fun = this._childs);
                    case 1024:
                        return void(this._fun = this._custom);
                    case 513:
                    case 517:
                        return void(this._fun = this._image2);
                    case 32:
                        return void(this._fun = m._filter);
                    case 69905:
                        return void(this._fun = o._initRenderFun)
                }
                this.onCreate(t)
            }
            p(o, "t_tl.renders.RenderSprite");
            var t = o.prototype;
            return t.onCreate = function(t) {}, t._style = function(t, e, i, n) {
                t._style.render(t, e, i, n);
                var s = this._next;
                s._fun.call(s, t, e, i, n)
            }, t._no = function(t, e, i, n) {}, t._custom = function(t, e, i, n) {
                t.customRender(e, i, n);
                var s = t._style._tf;
                this._next._fun.call(this._next, t, e, i - s.translateX, n - s.translateY)
            }, t._clip = function(t, e, i, n) {
                var s = this._next;
                if (s != o.NORENDER) {
                    var r = t._style.scrollRect;
                    e.ctx.save(), e.ctx.clipRect(i, n, r.width, r.height), s._fun.call(s, t, e, i - r.x, n - r.y), e.ctx.restore()
                }
            }, t._blend = function(t, e, i, n) {
                var s = t._style;
                s.blendMode && (e.ctx.globalCompositeOperation = s.blendMode);
                var r = this._next;
                r._fun.call(r, t, e, i, n), e.ctx.globalCompositeOperation = "source-over"
            }, t._mask = function(t, e, i, n) {
                var s = this._next;
                s._fun.call(s, t, e, i, n);
                var r = t.mask;
                r && (e.ctx.globalCompositeOperation = "destination-in", (0 < r.numChildren || !r.graphics._isOnlyOne()) && (r.cacheAsBitmap = !0), r.render(e, i - t.pivotX, n - t.pivotY)), e.ctx.globalCompositeOperation = "source-over"
            }, t._graphics = function(t, e, i, n) {
                var s = t._style._tf;
                t._graphics && t._graphics._render(t, e, i - s.translateX, n - s.translateY);
                var r = this._next;
                r._fun.call(r, t, e, i, n)
            }, t._image = function(t, e, i, n) {
                var s = t._style;
                e.ctx.drawTexture2(i, n, s._tf.translateX, s._tf.translateY, t.transform, s.alpha, s.blendMode, t._graphics._one)
            }, t._image2 = function(t, e, i, n) {
                var s = t._style._tf;
                e.ctx.drawTexture2(i, n, s.translateX, s.translateY, t.transform, 1, null, t._graphics._one)
            }, t._alpha = function(t, e, i, n) {
                var s;
                if (.01 < (s = t._style.alpha) || t._needRepaint()) {
                    var r = e.ctx.globalAlpha;
                    e.ctx.globalAlpha *= s;
                    var o = this._next;
                    o._fun.call(o, t, e, i, n), e.ctx.globalAlpha = r
                }
            }, t._transform = function(t, e, i, n) {
                var s = t.transform,
                    r = this._next;
                s && r != o.NORENDER ? (e.save(), e.transform(s.a, s.b, s.c, s.d, s.tx + i, s.ty + n), r._fun.call(r, t, e, 0, 0), e.restore()) : r._fun.call(r, t, e, i, n)
            }, t._childs = function(t, e, i, n) {
                var s = t._style,
                    r = s._tf;
                if (i = i - r.translateX + s.paddingLeft, n = n - r.translateY + s.paddingTop, s._calculation) {
                    var o = t._getWords();
                    if (o) {
                        var a = s;
                        a && (a.stroke ? e.fillBorderWords(o, i, n, a.font, a.color, a.strokeColor, a.stroke) : e.fillWords(o, i, n, a.font, a.color, "none" != a.textDecoration && a.underLine ? 1 : 0))
                    }
                }
                var h, l = t._childs,
                    u = l.length;
                if (t.viewport || t.optimizeScrollRect && t._style.scrollRect) {
                    var c = t.viewport || t._style.scrollRect,
                        _ = c.x,
                        d = c.y,
                        f = c.right,
                        p = c.bottom,
                        g = NaN,
                        m = NaN;
                    for (v = 0; v < u; ++v)(h = l[v]).visible && (g = h._x) < f && g + h.width > _ && (m = h._y) < p && m + h.height > d && h.render(e, i, n)
                } else
                    for (var v = 0; v < u; ++v)(h = l[v])._style.visible && h.render(e, i, n)
            }, t._canvas = function(t, e, i, n) {
                var s = t._$P.cacheCanvas;
                if (s) {
                    "bitmap" === s.type ? V.canvasBitmap++ : V.canvasNormal++;
                    var r = s.ctx;
                    if (t._needRepaint() || !r) this._canvas_repaint(t, e, i, n);
                    else {
                        var o = s._cacheRec;
                        e.drawCanvas(r.canvas, i + o.x, n + o.y, o.width, o.height)
                    }
                } else this._next._fun.call(this._next, t, e, i, n)
            }, t._canvas_repaint = function(t, e, i, n) {
                var s = t._$P.cacheCanvas,
                    r = this._next;
                if (s) {
                    var o, a, h, l, u = s.ctx,
                        c = t._needRepaint() || !u,
                        _ = s.type;
                    if ("bitmap" === _ ? V.canvasBitmap++ : V.canvasNormal++, c) {
                        var d, f;
                        s._cacheRec || (s._cacheRec = new M), D.isWebGL && "bitmap" !== _ ? s._cacheRec.setTo(-t.pivotX, -t.pivotY, 1, 1) : ((l = t.getSelfBounds()).x = l.x - t.pivotX, l.y = l.y - t.pivotY, l.x = l.x - 16, l.y = l.y - 16, l.width = l.width + 32, l.height = l.height + 32, l.x = Math.floor(l.x + i) - i, l.y = Math.floor(l.y + n) - n, l.width = Math.floor(l.width), l.height = Math.floor(l.height), s._cacheRec.copyFrom(l)), l = s._cacheRec;
                        var p, g = D.isWebGL ? 1 : B.pixelRatio * b.stage.clientScaleX,
                            m = D.isWebGL ? 1 : B.pixelRatio * b.stage.clientScaleY;
                        if (!D.isWebGL) {
                            var v, y = 1,
                                w = 1;
                            for (v = t; v && v != b.stage;) y *= v.scaleX, w *= v.scaleY, v = v.parent;
                            D.isWebGL ? (y < 1 && (g *= y), w < 1 && (m *= w)) : (1 < y && (g *= y), 1 < w && (m *= w))
                        }
                        if (t.scrollRect) {
                            var x = t.scrollRect;
                            l.x -= x.x, l.y -= x.y
                        }
                        if (d = l.width * g, f = l.height * m, a = l.x, h = l.y, D.isWebGL && "bitmap" === _ && (2048 < d || 2048 < f)) return console.warn("cache bitmap size larger than 2048,cache ignored"), s.ctx && ($.recover("RenderContext", s.ctx), s.ctx.canvas.size(0, 0), s.ctx = null), void r._fun.call(r, t, e, i, n);
                        if (u || (u = s.ctx = $.getItem("RenderContext") || new F(d, f, yt.create("AUTO"))), u.ctx.sprite = t, (o = u.canvas).clear(), (o.width != d || o.height != f) && o.size(d, f), "bitmap" === _ ? o.context.asBitmap = !0 : "normal" === _ && (o.context.asBitmap = !1), 1 != g || 1 != m) {
                            var T = u.ctx;
                            T.save(), T.scale(g, m), !D.isConchWebGL && D.isConchApp && (p = t._$P.cf) && T.setFilterMatrix && T.setFilterMatrix(p._mat, p._alpha), r._fun.call(r, t, u, -a, -h), T.restore(), D.isConchApp && !D.isConchWebGL || t._applyFilters()
                        } else T = u.ctx, !D.isConchWebGL && D.isConchApp && (p = t._$P.cf) && T.setFilterMatrix && T.setFilterMatrix(p._mat, p._alpha), r._fun.call(r, t, u, -a, -h), D.isConchApp && !D.isConchWebGL || t._applyFilters();
                        t._$P.staticCache && (s.reCache = !1), V.canvasReCache++
                    } else a = (l = s._cacheRec).x, h = l.y, o = u.canvas;
                    e.drawCanvas(o, i + a, n + h, l.width, l.height)
                } else r._fun.call(r, t, u, i, n)
            }, o.__init__ = function() {
                var t, e, i = 0;
                for (e = I.createRenderSprite(69905, null), t = o.renders.length = 4096, i = 0; i < t; i++) o.renders[i] = e;
                o.renders[0] = I.createRenderSprite(0, null),
                    function(t, e) {
                        for (var i = 0, n = 0; n < t.length; n++) i |= t[n], o.renders[i] = e
                    }([1, 512, 4, 2], new o(1, null)), o.renders[513] = I.createRenderSprite(513, null), o.renders[517] = new o(517, null)
            }, o._initRenderFun = function(t, e, i, n) {
                var s = t._renderType;
                (o.renders[s] = o._getTypeRender(s))._fun(t, e, i, n)
            }, o._getTypeRender = function(t) {
                for (var e = null, i = 2048; 1 < i;) i & t && (e = I.createRenderSprite(i, e)), i >>= 1;
                return e
            }, o.IMAGE = 1, o.ALPHA = 2, o.TRANSFORM = 4, o.BLEND = 8, o.CANVAS = 16, o.FILTERS = 32, o.MASK = 64, o.CLIP = 128, o.STYLE = 256, o.GRAPHICS = 512, o.CUSTOM = 1024, o.CHILDS = 2048, o.INIT = 69905, o.renders = [], o.NORENDER = new o(0, null), o
        }(),
        O = function() {
            function a() {
                this._repaint = !1
            }
            p(a, "t_tl.resource.Context");
            var t = a.prototype;
            return t.replaceReset = function() {
                var t, e, i = 0;
                for (t = a.replaceKeys.length, i = 0; i < t; i++) e = a.replaceKeys[i], this[a.newKeys[i]] = this[e]
            }, t.replaceResotre = function() {
                this.__restore(), this.__reset()
            }, t.setIsMainContext = function() {}, t.drawTextures = function(t, e, i, n) {
                V.drawCall += e.length / 2;
                for (var s = t.width, r = t.height, o = 0, a = e.length; o < a; o += 2) this.drawTexture(t, e[o], e[o + 1], s, r, i, n)
            }, t.drawCanvas = function(t, e, i, n, s) {
                V.drawCall++, this.drawImage(t.source, e, i, n, s)
            }, t.fillRect = function(t, e, i, n, s) {
                V.drawCall++, s && (this.fillStyle = s), this.__fillRect(t, e, i, n)
            }, t.fillText = function(t, e, i, n, s, r) {
                V.drawCall++, 3 < arguments.length && null != n && (this.font = n, this.fillStyle = s, this.textAlign = r, this.textBaseline = "top"), this.__fillText(t, e, i)
            }, t.fillBorderText = function(t, e, i, n, s, r, o, a) {
                V.drawCall++, this.font = n, this.fillStyle = s, this.textBaseline = "top", this.strokeStyle = r, this.lineWidth = o, this.textAlign = a, this.__strokeText(t, e, i), this.__fillText(t, e, i)
            }, t.strokeText = function(t, e, i, n, s, r, o) {
                V.drawCall++, 3 < arguments.length && null != n && (this.font = n, this.strokeStyle = s, this.lineWidth = r, this.textAlign = o, this.textBaseline = "top"), this.__strokeText(t, e, i)
            }, t.transformByMatrix = function(t) {
                this.transform(t.a, t.b, t.c, t.d, t.tx, t.ty)
            }, t.setTransformByMatrix = function(t) {
                this.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty)
            }, t.clipRect = function(t, e, i, n) {
                V.drawCall++, this.beginPath(), this.rect(t, e, i, n), this.clip()
            }, t.drawTexture = function(t, e, i, n, s, r, o) {
                V.drawCall++;
                var a = t.uv,
                    h = t.bitmap.width,
                    l = t.bitmap.height;
                this.drawImage(t.source, a[0] * h, a[1] * l, (a[2] - a[0]) * h, (a[5] - a[3]) * l, e + r, i + o, n, s)
            }, t.drawTextureWithTransform = function(t, e, i, n, s, r, o, a, h) {
                V.drawCall++;
                var l = t.uv,
                    u = t.bitmap.width,
                    c = t.bitmap.height;
                this.save(), 1 != h && (this.globalAlpha *= h), r ? (this.transform(r.a, r.b, r.c, r.d, r.tx + o, r.ty + a), this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e, i, n, s)) : this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e + o, i + a, n, s), this.restore()
            }, t.drawTexture2 = function(t, e, i, n, s, r, o, a) {
                var h = a[0];
                if (h.loaded && h.bitmap && h.source) {
                    V.drawCall++;
                    var l = 1 !== r;
                    if (l) {
                        var u = this.globalAlpha;
                        this.globalAlpha *= r
                    }
                    var c = h.uv,
                        _ = h.bitmap.width,
                        d = h.bitmap.height;
                    s ? (this.save(), this.transform(s.a, s.b, s.c, s.d, s.tx + t, s.ty + e), this.drawImage(h.source, c[0] * _, c[1] * d, (c[2] - c[0]) * _, (c[5] - c[3]) * d, a[1] - i, a[2] - n, a[3], a[4]), this.restore()) : this.drawImage(h.source, c[0] * _, c[1] * d, (c[2] - c[0]) * _, (c[5] - c[3]) * d, a[1] - i + t, a[2] - n + e, a[3], a[4]), l && (this.globalAlpha = u)
                }
            }, t.fillTexture = function(t, e, i, n, s, r, o, a) {
                if (!a.pat) {
                    if (t.uv != ut.DEF_UV) {
                        var h = new yt("2D");
                        h.getContext("2d"), h.size(t.width, t.height), h.context.drawTexture(t, 0, 0, t.width, t.height, 0, 0), t = new ut(h)
                    }
                    a.pat = this.createPattern(t.bitmap.source, r)
                }
                var l = e,
                    u = i,
                    c = 0,
                    _ = 0;
                o && (l += o.x % t.width, u += o.y % t.height, c -= o.x % t.width, _ -= o.y % t.height), this.translate(l, u), this.fillRect(c, _, n, s, a.pat), this.translate(-l, -u)
            }, t.drawTriangle = function(t, e, i, n, s, r, o, a) {
                var h = t.bitmap,
                    l = h.source,
                    u = t.width,
                    c = t.height,
                    _ = h.width,
                    d = h.height,
                    f = i[n] * _,
                    p = i[s] * _,
                    g = i[r] * _,
                    m = i[n + 1] * d,
                    v = i[s + 1] * d,
                    y = i[r + 1] * d,
                    w = e[n],
                    x = e[s],
                    T = e[r],
                    b = e[n + 1],
                    C = e[s + 1],
                    M = e[r + 1];
                if (a) {
                    var S = (w + x + T) / 3,
                        P = (b + C + M) / 3,
                        E = w - S,
                        I = b - P,
                        A = Math.sqrt(E * E + I * I);
                    w = S + E / A * (A + 1), b = P + I / A * (A + 1), I = C - P, x = S + (E = x - S) / (A = Math.sqrt(E * E + I * I)) * (A + 1), C = P + I / A * (A + 1), I = M - P, T = S + (E = T - S) / (A = Math.sqrt(E * E + I * I)) * (A + 1), M = P + I / A * (A + 1)
                }
                this.save(), o && this.transform(o.a, o.b, o.c, o.d, o.tx, o.ty), this.beginPath(), this.moveTo(w, b), this.lineTo(x, C), this.lineTo(T, M), this.closePath(), this.clip();
                var L = 1 / (f * v + m * g + p * y - v * g - m * p - f * y),
                    R = w * v + m * T + x * y - v * T - m * x - w * y,
                    D = f * x + w * g + p * T - x * g - w * p - f * T,
                    F = f * v * T + m * x * g + w * p * y - w * v * g - m * p * T - f * x * y,
                    k = b * v + m * M + C * y - v * M - m * C - b * y,
                    O = f * C + b * g + p * M - C * g - b * p - f * M,
                    N = f * v * M + m * C * g + b * p * y - b * v * g - m * p * M - f * C * y;
                this.transform(R * L, k * L, D * L, O * L, F * L, N * L), this.drawImage(l, t.uv[0] * _, t.uv[1] * d, u, c, t.uv[0] * _, t.uv[1] * d, u, c), this.restore()
            }, t.flush = function() {
                return 0
            }, t.fillWords = function(t, e, i, n, s, r) {
                n && (this.font = n), s && (this.fillStyle = s);
                this.textBaseline = "top", this.textAlign = "left";
                for (var o = 0, a = t.length; o < a; o++) {
                    var h = t[o];
                    if (this.__fillText(h.char, h.x + e, h.y + i), 1 === r) {
                        var l = h.height,
                            u = .5 * h.style.letterSpacing;
                        u || (u = 0), this.beginPath(), this.strokeStyle = s, this.lineWidth = 1, this.moveTo(e + h.x - u + .5, i + h.y + l + .5), this.lineTo(e + h.x + h.width + u + .5, i + h.y + l + .5), this.stroke()
                    }
                }
            }, t.fillBorderWords = function(t, e, i, n, s, r, o) {
                n && (this.font = n), s && (this.fillStyle = s), this.textBaseline = "top", this.lineWidth = o, this.textAlign = "left", this.strokeStyle = r;
                for (var a = 0, h = t.length; a < h; a++) {
                    var l = t[a];
                    this.__strokeText(l.char, l.x + e, l.y + i), this.__fillText(l.char, l.x + e, l.y + i)
                }
            }, t.destroy = function() {
                this.canvas.width = this.canvas.height = 0
            }, t.clear = function() {
                this.clearRect(0, 0, this._canvas.width, this._canvas.height), this._repaint = !1
            }, t.drawCurves = function(t, e, i) {
                this.beginPath(), this.strokeStyle = i[3], this.lineWidth = i[4];
                var n = i[2];
                t += i[0], e += i[1], this.moveTo(t + n[0], e + n[1]);
                for (var s = 2, r = n.length; s < r;) this.quadraticCurveTo(t + n[s++], e + n[s++], t + n[s++], e + n[s++]);
                this.stroke()
            }, a.__init__ = function(e) {
                var i = t_tl.resource.Context.prototype;
                if (!(e = e || CanvasRenderingContext2D.prototype).inited) {
                    e.inited = !0, e.__fillText = e.fillText, e.__fillRect = e.fillRect, e.__strokeText = e.strokeText;
                    ["drawTextures", "drawTriangle", "fillWords", "fillBorderWords", "setIsMainContext", "fillRect", "strokeText", "fillTexture", "fillText", "transformByMatrix", "setTransformByMatrix", "clipRect", "drawTexture", "drawTexture2", "drawTextureWithTransform", "flush", "clear", "destroy", "drawCanvas", "fillBorderText", "drawCurves"].forEach(function(t) {
                        e[t] = i[t]
                    })
                }
            }, a.replaceCanvasGetSet = function(t, e) {
                var i = Object.getOwnPropertyDescriptor(t, e);
                if (!i || !i.configurable) return !1;
                var n, s = {};
                for (n in i) "set" != n && (s[n] = i[n]);
                var r = i.set;
                return s.set = function(t) {
                    r.call(this, t);
                    var e = this.getContext("2d");
                    e && "__reset" in e && e.__reset()
                }, Object.defineProperty(t, e, s), !0
            }, a.replaceGetSet = function(t, e) {
                var i = Object.getOwnPropertyDescriptor(t, e);
                if (!i || !i.configurable) return !1;
                var n, s = {};
                for (n in i) "set" != n && (s[n] = i[n]);
                var r = i.set,
                    o = "___" + e + "__";
                return a.newKeys.push(o), s.set = function(t) {
                    t != this[o] && (this[o] = t, r.call(this, t))
                }, Object.defineProperty(t, e, s), !0
            }, a._default = new a, a.newKeys = [], h(a, ["replaceKeys", function() {
                return this.replaceKeys = ["font", "fillStyle", "textBaseline"]
            }]), a
        }(),
        N = function() {
            function r(t) {
                this._id = 0, this._name = null, this._resources = null, this._memorySize = 0, this._garbageCollectionRate = NaN, this._isOverflow = !1, this.autoRelease = !1, this.autoReleaseMaxSize = 0, this._id = ++r._uniqueIDCounter, this._name = t || "Content Manager", r._isResourceManagersSorted = !1, this._memorySize = 0, this._isOverflow = !1, this.autoRelease = !1, this.autoReleaseMaxSize = 536870912, this._garbageCollectionRate = .2, r._resourceManagers.push(this), this._resources = []
            }
            p(r, "t_tl.resource.ResourceManager");
            var t = r.prototype;
            return b.imps(t, {
                "t_tl.resource.IDispose": !0
            }), t.getResourceByIndex = function(t) {
                return this._resources[t]
            }, t.getResourcesLength = function() {
                return this._resources.length
            }, t.addResource = function(t) {
                return t.resourceManager && t.resourceManager.removeResource(t), -1 === this._resources.indexOf(t) && ((t._resourceManager = this)._resources.push(t), this.addSize(t.memorySize), !0)
            }, t.removeResource = function(t) {
                var e = this._resources.indexOf(t);
                return -1 !== e && (this._resources.splice(e, 1), t._resourceManager = null, this._memorySize -= t.memorySize, !0)
            }, t.unload = function() {
                for (var t = this._resources.slice(0, this._resources.length), e = 0; e < t.length; e++) {
                    t[e].destroy()
                }
                t.length = 0
            }, t.dispose = function() {
                if (this === r._systemResourceManager) throw new Error("systemResourceManager不能被释放！");
                r._resourceManagers.splice(r._resourceManagers.indexOf(this), 1), r._isResourceManagersSorted = !1;
                for (var t = this._resources.slice(0, this._resources.length), e = 0; e < t.length; e++) {
                    var i = t[e];
                    i.resourceManager.removeResource(i), i.destroy()
                }
                t.length = 0
            }, t.addSize = function(t) {
                t && (this.autoRelease && 0 < t && this._memorySize + t > this.autoReleaseMaxSize && this.garbageCollection((1 - this._garbageCollectionRate) * this.autoReleaseMaxSize), this._memorySize += t)
            }, t.garbageCollection = function(t) {
                var e = this._resources;
                (e = e.slice()).sort(function(t, e) {
                    if (!t || !e) throw new Error("a或b不能为空！");
                    return t.released && e.released ? 0 : t.released ? 1 : e.released ? -1 : t._lastUseFrameCount - e._lastUseFrameCount
                });
                for (var i = V.loopCount, n = 0, s = e.length; n < s; n++) {
                    var r = e[n];
                    if (!(1 < i - r._lastUseFrameCount)) return void(this._memorySize >= t && (this._isOverflow = !0));
                    if (r.releaseResource(), this._memorySize < t) return void(this._isOverflow = !1)
                }
            }, u(0, t, "id", function() {
                return this._id
            }), u(0, t, "name", function() {
                return this._name
            }, function(t) {
                !t && "" === t || this._name === t || (this._name = t, r._isResourceManagersSorted = !1)
            }), u(0, t, "memorySize", function() {
                return this._memorySize
            }), u(1, r, "systemResourceManager", function() {
                return r._systemResourceManager
            }), r.__init__ = function() {
                r.currentResourceManager = r.systemResourceManager
            }, r.getLoadedResourceManagerByIndex = function(t) {
                return r._resourceManagers[t]
            }, r.getLoadedResourceManagersCount = function() {
                return r._resourceManagers.length
            }, r.recreateContentManagers = function(t) {
                void 0 === t && (t = !1);
                for (var e = r.currentResourceManager, i = 0; i < r._resourceManagers.length; i++) {
                    r.currentResourceManager = r._resourceManagers[i];
                    for (var n = 0; n < r.currentResourceManager._resources.length; n++) r.currentResourceManager._resources[n].releaseResource(t), r.currentResourceManager._resources[n].activeResource(t)
                }
                r.currentResourceManager = e
            }, r.releaseContentManagers = function(t) {
                void 0 === t && (t = !1);
                for (var e = r.currentResourceManager, i = 0; i < r._resourceManagers.length; i++) {
                    r.currentResourceManager = r._resourceManagers[i];
                    for (var n = 0; n < r.currentResourceManager._resources.length; n++) {
                        var s = r.currentResourceManager._resources[n];
                        !s.released && s.releaseResource(t)
                    }
                }
                r.currentResourceManager = e
            }, r._uniqueIDCounter = 0, r._isResourceManagersSorted = !1, r._resourceManagers = [], h(r, ["_systemResourceManager", function() {
                return this._systemResourceManager = new r("System Resource Manager")
            }, "currentResourceManager", function() {
                return this.currentResourceManager = r._systemResourceManager
            }]), r
        }(),
        B = (function() {
            function t() {}
            p(t, "t_tl.system.System"), t.changeDefinition = function(t, e) {
                b[t] = e;
                var i = t + "=classObj";
                b._runScript(i)
            }, t.__init__ = function() {
                D.isConchApp && (conch.disableConchResManager(), conch.disableConchAutoRestoreLostedDevice())
            }
        }(), function() {
            function i() {}
            return p(i, "t_tl.utils.Browser"), u(1, i, "pixelRatio", function() {
                return i.__init__(), -1 < i.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)") ? 2 : I.getPixelRatio()
            }), u(1, i, "height", function() {
                return i.__init__(), (b.stage && b.stage.canvasRotation ? i.clientWidth : i.clientHeight) * i.pixelRatio
            }), u(1, i, "clientWidth", function() {
                return i.__init__(), i.window.innerWidth || i.document.body.clientWidth
            }), u(1, i, "window", function() {
                return i.__init__(), i._window
            }), u(1, i, "clientHeight", function() {
                return i.__init__(), i.window.innerHeight || i.document.body.clientHeight || i.document.documentElement.clientHeight
            }), u(1, i, "width", function() {
                return i.__init__(), (b.stage && b.stage.canvasRotation ? i.clientHeight : i.clientWidth) * i.pixelRatio
            }), u(1, i, "container", function() {
                return i.__init__(), i._container || ((i._container = i.createElement("div")).id = "layaContainer", i.document.body.appendChild(i._container)), i._container
            }, function(t) {
                i._container = t
            }), u(1, i, "document", function() {
                return i.__init__(), i._document
            }), i.__init__ = function() {
                if (!i._window) {
                    i._window = I.getWindow(), i._document = i.window.document, i._window.addEventListener("message", function(t) {
                        t_tl.utils.Browser._onMessage(t)
                    }, !1), i.document.__createElement = i.document.createElement, o.requestAnimationFrame = o.requestAnimationFrame || o.webkitRequestAnimationFrame || o.mozRequestAnimationFrame || o.oRequestAnimationFrame || o.msRequestAnimationFrame || function(t) {
                        return o.setTimeout(t, 1e3 / 60)
                    };
                    var t = o.document.body.style;
                    t["-webkit-user-select"] = "none", t["-webkit-tap-highlight-color"] = "rgba(200,200,200,0)", i.userAgent = i.window.navigator.userAgent, i.onIOS = !!(i.u = i.userAgent).match(/\(i[^;]+;(U;)? CPU.+Mac OS X/), i.onMobile = -1 < i.u.indexOf("Mobile"), i.onIPhone = -1 < i.u.indexOf("iPhone"), i.onMac = -1 < i.u.indexOf("Mac OS X"), i.onIPad = -1 < i.u.indexOf("iPad"), i.onAndroid = -1 < i.u.indexOf("Android") || -1 < i.u.indexOf("Adr"), i.onWP = -1 < i.u.indexOf("Windows Phone"), i.onQQBrowser = -1 < i.u.indexOf("QQBrowser"), i.onMQQBrowser = -1 < i.u.indexOf("MQQBrowser") || -1 < i.u.indexOf("Mobile") && -1 < i.u.indexOf("QQ"), i.onIE = !!i.window.ActiveXObject || "ActiveXObject" in i.window, i.onWeiXin = -1 < i.u.indexOf("MicroMessenger"), i.onPC = !i.onMobile, i.onSafari = -1 < i.u.indexOf("Safari"), i.onFirefox = -1 < i.u.indexOf("Firefox"), i.onEdge = -1 < i.u.indexOf("Edge"), i.onMiniGame = -1 < i.u.indexOf("MiniGame"), i.onLimixiu = -1 < i.u.indexOf("limixiu"), i.httpProtocol = "http:" == i.window.location.protocol, i.onMiniGame && null == i.window.focus && console.error("请先初始化小游戏适配库，详细教程https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0"), i.webAudioEnabled = !!(i.window.AudioContext || i.window.webkitAudioContext || i.window.mozAudioContext), i.soundType = i.webAudioEnabled ? "WEBAUDIOSOUND" : "AUDIOSOUND", st = i.webAudioEnabled ? rt : it, i.webAudioEnabled && rt.initWebAudio(), it._initMusicAudio(), i.enableTouch = "ontouchstart" in o || o.DocumentTouch && e instanceof DocumentTouch, o.focus(), P._soundClass = st, P._musicClass = it, D._mainCanvas = D._mainCanvas || yt.create("2D"), i.canvas || (i.canvas = yt.create("2D"), i.context = i.canvas.getContext("2d"))
                }
            }, i._onMessage = function(t) {
                if (t.data && "size" == t.data.name) {
                    if (i.window.innerWidth = t.data.width, i.window.innerHeight = t.data.height, i.window.__innerHeight = t.data.clientHeight, !i.document.createEvent) return void console.warn("no document.createEvent");
                    var e = i.document.createEvent("HTMLEvents");
                    return e.initEvent("resize", !1, !1), void i.window.dispatchEvent(e)
                }
            }, i.createElement = function(t) {
                return i.__init__(), i.document.__createElement(t)
            }, i.getElementById = function(t) {
                return i.__init__(), i.document.getElementById(t)
            }, i.removeElement = function(t) {
                t && t.parentNode && t.parentNode.removeChild(t)
            }, i.now = function() {
                return I.now()
            }, i._window = null, i._document = null, i._container = null, i.userAgent = null, i.u = null, i.onIOS = !1, i.onMac = !1, i.onMobile = !1, i.onIPhone = !1, i.onIPad = !1, i.onAndroid = !1, i.onWP = !1, i.onQQBrowser = !1, i.onMQQBrowser = !1, i.onSafari = !1, i.onFirefox = !1, i.onEdge = !1, i.onIE = !1, i.onWeiXin = !1, i.onMiniGame = !1, i.onLimixiu = !1, i.onPC = !1, i.httpProtocol = !1, i.webAudioEnabled = !1, i.soundType = null, i.enableTouch = !1, i.canvas = null, i.context = null, i.__init$ = function() {}, i
        }()),
        W = function() {
            function e(t) {
                this._xd_ = !0, this._allocated_ = 8, this._pos_ = 0, this._length = 0, t ? (this._u8d_ = new Uint8Array(t), this._d_ = new DataView(this._u8d_.buffer), this._length = this._d_.byteLength) : this.___resizeBuffer(this._allocated_)
            }
            p(e, "t_tl.utils.Byte");
            var t = e.prototype;
            return t.___resizeBuffer = function(e) {
                try {
                    var t = new Uint8Array(e);
                    null != this._u8d_ && (this._u8d_.length <= e ? t.set(this._u8d_) : t.set(this._u8d_.subarray(0, e))), this._u8d_ = t, this._d_ = new DataView(t.buffer)
                } catch (t) {
                    throw "___resizeBuffer err:" + e
                }
            }, t.getString = function() {
                return this.rUTF(this.getUint16())
            }, t.getFloat32Array = function(t, e) {
                var i = t + e;
                i = i > this._length ? this._length : i;
                var n = new Float32Array(this._d_.buffer.slice(t, i));
                return this._pos_ = i, n
            }, t.getUint8Array = function(t, e) {
                var i = t + e;
                i = i > this._length ? this._length : i;
                var n = new Uint8Array(this._d_.buffer.slice(t, i));
                return this._pos_ = i, n
            }, t.getInt16Array = function(t, e) {
                var i = t + e;
                i = i > this._length ? this._length : i;
                var n = new Int16Array(this._d_.buffer.slice(t, i));
                return this._pos_ = i, n
            }, t.getFloat32 = function() {
                if (this._pos_ + 4 > this._length) throw "getFloat32 error - Out of bounds";
                var t = this._d_.getFloat32(this._pos_, this._xd_);
                return this._pos_ += 4, t
            }, t.getFloat64 = function() {
                if (this._pos_ + 8 > this._length) throw "getFloat64 error - Out of bounds";
                var t = this._d_.getFloat64(this._pos_, this._xd_);
                return this._pos_ += 8, t
            }, t.writeFloat32 = function(t) {
                this.ensureWrite(this._pos_ + 4), this._d_.setFloat32(this._pos_, t, this._xd_), this._pos_ += 4
            }, t.writeFloat64 = function(t) {
                this.ensureWrite(this._pos_ + 8), this._d_.setFloat64(this._pos_, t, this._xd_), this._pos_ += 8
            }, t.getInt32 = function() {
                if (this._pos_ + 4 > this._length) throw "getInt32 error - Out of bounds";
                var t = this._d_.getInt32(this._pos_, this._xd_);
                return this._pos_ += 4, t
            }, t.getUint32 = function() {
                if (this._pos_ + 4 > this._length) throw "getUint32 error - Out of bounds";
                var t = this._d_.getUint32(this._pos_, this._xd_);
                return this._pos_ += 4, t
            }, t.writeInt32 = function(t) {
                this.ensureWrite(this._pos_ + 4), this._d_.setInt32(this._pos_, t, this._xd_), this._pos_ += 4
            }, t.writeUint32 = function(t) {
                this.ensureWrite(this._pos_ + 4), this._d_.setUint32(this._pos_, t, this._xd_), this._pos_ += 4
            }, t.getInt16 = function() {
                if (this._pos_ + 2 > this._length) throw "getInt16 error - Out of bounds";
                var t = this._d_.getInt16(this._pos_, this._xd_);
                return this._pos_ += 2, t
            }, t.getUint16 = function() {
                if (this._pos_ + 2 > this._length) throw "getUint16 error - Out of bounds";
                var t = this._d_.getUint16(this._pos_, this._xd_);
                return this._pos_ += 2, t
            }, t.writeUint16 = function(t) {
                this.ensureWrite(this._pos_ + 2), this._d_.setUint16(this._pos_, t, this._xd_), this._pos_ += 2
            }, t.writeInt16 = function(t) {
                this.ensureWrite(this._pos_ + 2), this._d_.setInt16(this._pos_, t, this._xd_), this._pos_ += 2
            }, t.getUint8 = function() {
                if (this._pos_ + 1 > this._length) throw "getUint8 error - Out of bounds";
                return this._d_.getUint8(this._pos_++)
            }, t.writeUint8 = function(t) {
                this.ensureWrite(this._pos_ + 1), this._d_.setUint8(this._pos_, t), this._pos_++
            }, t._getUInt8 = function(t) {
                return this._d_.getUint8(t)
            }, t._getUint16 = function(t) {
                return this._d_.getUint16(t, this._xd_)
            }, t._getMatrix = function() {
                return new A(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32())
            }, t.rUTF = function(t) {
                for (var e = "", i = this._pos_ + t, n = 0, s = String.fromCharCode, r = this._u8d_; this._pos_ < i;)(n = r[this._pos_++]) < 128 ? 0 != n && (e += s(n)) : e += s(n < 224 ? (63 & n) << 6 | 127 & r[this._pos_++] : n < 240 ? (31 & n) << 12 | (127 & r[this._pos_++]) << 6 | 127 & r[this._pos_++] : (15 & n) << 18 | (127 & r[this._pos_++]) << 12 | r[this._pos_++] << 6 & 127 | 127 & r[this._pos_++]), 0;
                return e
            }, t.getCustomString = function(t) {
                for (var e = "", i = 0, n = 0, s = String.fromCharCode, r = this._u8d_; 0 < t;)
                    if ((n = r[this._pos_]) < 128) e += s(n), this._pos_++, t--;
                    else
                        for (i = n - 128, this._pos_++, t -= i; 0 < i;) n = r[this._pos_++], e += s(r[this._pos_++] << 8 | n), i--;
                return e
            }, t.clear = function() {
                this._pos_ = 0, this.length = 0
            }, t.__getBuffer = function() {
                return this._d_.buffer
            }, t.writeUTFBytes = function(t) {
                for (var e = 0, i = (t += "").length; e < i; e++) {
                    var n = t.charCodeAt(e);
                    n <= 127 ? this.writeByte(n) : n <= 2047 ? (this.ensureWrite(this._pos_ + 2), this._u8d_.set([192 | n >> 6, 128 | 63 & n], this._pos_), this._pos_ += 2) : n <= 65535 ? (this.ensureWrite(this._pos_ + 3), this._u8d_.set([224 | n >> 12, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_), this._pos_ += 3) : (this.ensureWrite(this._pos_ + 4), this._u8d_.set([240 | n >> 18, 128 | n >> 12 & 63, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_), this._pos_ += 4)
                }
            }, t.writeUTFString = function(t) {
                var e = this.pos;
                this.writeUint16(1), this.writeUTFBytes(t);
                var i = this.pos - e - 2;
                if (65536 <= i) throw "writeUTFString byte len more than 65536";
                this._d_.setUint16(e, i, this._xd_)
            }, t.readUTFString = function() {
                return this.readUTFBytes(this.getUint16())
            }, t.getUTFString = function() {
                return this.readUTFString()
            }, t.readUTFBytes = function(t) {
                if (void 0 === t && (t = -1), 0 == t) return "";
                var e = this.bytesAvailable;
                if (e < t) throw "readUTFBytes error - Out of bounds";
                return t = 0 < t ? t : e, this.rUTF(t)
            }, t.getUTFBytes = function(t) {
                return void 0 === t && (t = -1), this.readUTFBytes(t)
            }, t.writeByte = function(t) {
                this.ensureWrite(this._pos_ + 1), this._d_.setInt8(this._pos_, t), this._pos_ += 1
            }, t.readByte = function() {
                if (this._pos_ + 1 > this._length) throw "readByte error - Out of bounds";
                return this._d_.getInt8(this._pos_++)
            }, t.getByte = function() {
                return this.readByte()
            }, t.ensureWrite = function(t) {
                this._length < t && (this._length = t), this._allocated_ < t && (this.length = t)
            }, t.writeArrayBuffer = function(t, e, i) {
                if (void 0 === e && (e = 0), void 0 === i && (i = 0), e < 0 || i < 0) throw "writeArrayBuffer error - Out of bounds";
                0 == i && (i = t.byteLength - e), this.ensureWrite(this._pos_ + i);
                var n = new Uint8Array(t);
                this._u8d_.set(n.subarray(e, e + i), this._pos_), this._pos_ += i
            }, u(0, t, "buffer", function() {
                var t = this._d_.buffer;
                return t.byteLength == this.length ? t : t.slice(0, this.length)
            }), u(0, t, "endian", function() {
                return this._xd_ ? "littleEndian" : "bigEndian"
            }, function(t) {
                this._xd_ = "littleEndian" == t
            }), u(0, t, "length", function() {
                return this._length
            }, function(t) {
                this._allocated_ < t ? this.___resizeBuffer(this._allocated_ = Math.floor(Math.max(t, 2 * this._allocated_))) : this._allocated_ > t && this.___resizeBuffer(this._allocated_ = t), this._length = t
            }), u(0, t, "pos", function() {
                return this._pos_
            }, function(t) {
                this._pos_ = t
            }), u(0, t, "bytesAvailable", function() {
                return this._length - this._pos_
            }), e.getSystemEndian = function() {
                if (!e._sysEndian) {
                    var t = new ArrayBuffer(2);
                    new DataView(t).setInt16(0, 256, !0), e._sysEndian = 256 === new Int16Array(t)[0] ? "littleEndian" : "bigEndian"
                }
                return e._sysEndian
            }, e.BIG_ENDIAN = "bigEndian", e.LITTLE_ENDIAN = "littleEndian", e._sysEndian = null, e
        }(),
        G = function() {
            function s() {}
            return p(s, "t_tl.utils.CacheManager"), s.regCacheByFunction = function(t, e) {
                var i;
                s.unRegCacheByFunction(t, e), i = {
                    tryDispose: t,
                    getCacheList: e
                }, s._cacheList.push(i)
            }, s.unRegCacheByFunction = function(t, e) {
                var i, n = 0;
                for (i = s._cacheList.length, n = 0; n < i; n++)
                    if (s._cacheList[n].tryDispose == t && s._cacheList[n].getCacheList == e) return void s._cacheList.splice(n, 1)
            }, s.forceDispose = function() {
                var t = 0,
                    e = s._cacheList.length;
                for (t = 0; t < e; t++) s._cacheList[t].tryDispose(!0)
            }, s.beginCheck = function(t) {
                void 0 === t && (t = 15e3), b.timer.loop(t, null, s._checkLoop)
            }, s.stopCheck = function() {
                b.timer.clear(null, s._checkLoop)
            }, s._checkLoop = function() {
                var t = s._cacheList;
                if (!(t.length < 1)) {
                    var e, i = B.now(),
                        n = 0;
                    for (e = n = t.length; 0 < n && (t[s._index = ++s._index % e].tryDispose(!1), !(B.now() - i > s.loopTimeLimit));) n--
                }
            }, s.loopTimeLimit = 2, s._cacheList = [], s._index = 0, s
        }(),
        U = function() {
            function d() {}
            return p(d, "t_tl.utils.ClassUtils"), d.regClass = function(t, e) {
                d._classMap[t] = e
            }, d.getRegClass = function(t) {
                return d._classMap[t]
            }, d.getInstance = function(t) {
                var e = d.getClass(t);
                return e ? new e : (console.warn("[error] Undefined class:", t), null)
            }, d.createByJson = function(t, e, i, n, s) {
                "string" == typeof t && (t = JSON.parse(t));
                var r = t.props;
                if (!e && !(e = s ? s.runWith(t) : d.getInstance(r.runtime || t.type))) return null;
                var o = t.child;
                if (o)
                    for (var a = 0, h = o.length; a < h; a++) {
                        var l = o[a];
                        if ("render" !== l.props.name && "render" !== l.props.renderType || !e._$set_itemRender)
                            if ("Graphic" == l.type) d.addGraphicsToSprite(l, e);
                            else if (d.isDrawType(l.type)) d.addGraphicToSprite(l, e, !0);
                        else {
                            var u = d.createByJson(l, null, i, n, s);
                            "Script" == l.type ? u.hasOwnProperty("owner") ? u.owner = e : u.hasOwnProperty("target") && (u.target = e) : "mask" == l.props.renderType ? e.mask = u : e.addChild(u)
                        } else e.itemRender = l
                    }
                if (r)
                    for (var c in r) {
                        var _ = r[c];
                        "var" === c && i ? i[_] = e : _ instanceof Array && "function" == typeof e[c] ? e[c].apply(e, _) : e[c] = _
                    }
                return n && t.customProps && n.runWith([e, t]), e.created && e.created(), e
            }, d.addGraphicsToSprite = function(t, e) {
                var i;
                if ((i = t.child) && !(i.length < 1)) {
                    var n;
                    n = d._getGraphicsFromSprite(t, e);
                    var s = 0,
                        r = 0;
                    t.props && (s = d._getObjVar(t.props, "x", 0), r = d._getObjVar(t.props, "y", 0)), 0 != s && 0 != r && n.translate(s, r);
                    var o, a = 0;
                    for (o = i.length, a = 0; a < o; a++) d._addGraphicToGraphics(i[a], n);
                    0 != s && 0 != r && n.translate(-s, -r)
                }
            }, d.addGraphicToSprite = function(t, e, i) {
                var n;
                void 0 === i && (i = !1), n = i ? d._getGraphicsFromSprite(t, e) : e.graphics, d._addGraphicToGraphics(t, n)
            }, d._getGraphicsFromSprite = function(t, e) {
                var i, n;
                if (!t || !t.props) return e.graphics;
                switch (n = t.props.renderType) {
                    case "hit":
                    case "unHit":
                        var s;
                        e.hitArea || (e.hitArea = new X), (s = e.hitArea)[n] || (s[n] = new _), i = s[n]
                }
                return i || (i = e.graphics), i
            }, d._getTransformData = function(t) {
                var e;
                (t.hasOwnProperty("pivotX") || t.hasOwnProperty("pivotY")) && (e = e || new A).translate(-d._getObjVar(t, "pivotX", 0), -d._getObjVar(t, "pivotY", 0));
                var i = d._getObjVar(t, "scaleX", 1),
                    n = d._getObjVar(t, "scaleY", 1),
                    s = d._getObjVar(t, "rotation", 0);
                d._getObjVar(t, "skewX", 0), d._getObjVar(t, "skewY", 0);
                return 1 == i && 1 == n && 0 == s || ((e = e || new A).scale(i, n), e.rotate(.0174532922222222 * s)), e
            }, d._addGraphicToGraphics = function(t, e) {
                var i, n;
                if ((i = t.props) && (n = d.DrawTypeDic[t.type])) {
                    var s, r;
                    s = e;
                    var o = d._getParams(i, n[1], n[2], n[3]);
                    ((r = d._tM) || 1 != d._alpha) && (s.save(), r && s.transform(r), 1 != d._alpha && s.alpha(d._alpha)), s[n[0]].apply(s, o), (r || 1 != d._alpha) && s.restore()
                }
            }, d._adptLineData = function(t) {
                return t[2] = parseFloat(t[0]) + parseFloat(t[2]), t[3] = parseFloat(t[1]) + parseFloat(t[3]), t
            }, d._adptTextureData = function(t) {
                return t[0] = at.getRes(t[0]), t
            }, d._adptLinesData = function(t) {
                return t[2] = d._getPointListByStr(t[2]), t
            }, d.isDrawType = function(t) {
                return "Image" != t && d.DrawTypeDic.hasOwnProperty(t)
            }, d._getParams = function(t, e, i, n) {
                var s;
                void 0 === i && (i = 0), (s = d._temParam).length = e.length;
                var r, o, a = 0;
                for (r = e.length, a = 0; a < r; a++) s[a] = d._getObjVar(t, e[a][0], e[a][1]);
                return d._alpha = d._getObjVar(t, "alpha", 1), (o = d._getTransformData(t)) ? (i || (i = 0), o.translate(s[i], s[i + 1]), s[i] = s[i + 1] = 0, d._tM = o) : d._tM = null, n && d[n] && (s = d[n](s)), s
            }, d._getPointListByStr = function(t) {
                var e, i, n = 0;
                for (i = (e = t.split(",")).length, n = 0; n < i; n++) e[n] = parseFloat(e[n]);
                return e
            }, d._getObjVar = function(t, e, i) {
                return t.hasOwnProperty(e) ? t[e] : i
            }, d._temParam = [], d._classMap = {
                Sprite: "t_tl.display.Sprite",
                Text: "t_tl.display.Text",
                Animation: "t_tl.display.Animation",
                Skeleton: "t_tl.ani.bone.Skeleton",
                Particle2D: "t_tl.particle.Particle2D",
                div: "t_tl.html.dom.HTMLDivElement",
                p: "t_tl.html.dom.HTMLElement",
                img: "t_tl.html.dom.HTMLImageElement",
                span: "t_tl.html.dom.HTMLElement",
                br: "t_tl.html.dom.HTMLBrElement",
                style: "t_tl.html.dom.HTMLStyleElement",
                font: "t_tl.html.dom.HTMLElement",
                a: "t_tl.html.dom.HTMLElement",
                "#text": "t_tl.html.dom.HTMLElement"
            }, d.getClass = function(t) {
                var e = d._classMap[t] || t;
                return "string" == typeof e ? b.__classmap[e] : e
            }, d._tM = null, d._alpha = NaN, h(d, ["DrawTypeDic", function() {
                return this.DrawTypeDic = {
                    Rect: ["drawRect", [
                        ["x", 0],
                        ["y", 0],
                        ["width", 0],
                        ["height", 0],
                        ["fillColor", null],
                        ["lineColor", null],
                        ["lineWidth", 1]
                    ]],
                    Circle: ["drawCircle", [
                        ["x", 0],
                        ["y", 0],
                        ["radius", 0],
                        ["fillColor", null],
                        ["lineColor", null],
                        ["lineWidth", 1]
                    ]],
                    Pie: ["drawPie", [
                        ["x", 0],
                        ["y", 0],
                        ["radius", 0],
                        ["startAngle", 0],
                        ["endAngle", 0],
                        ["fillColor", null],
                        ["lineColor", null],
                        ["lineWidth", 1]
                    ]],
                    Image: ["drawTexture", [
                        ["x", 0],
                        ["y", 0],
                        ["width", 0],
                        ["height", 0]
                    ]],
                    Texture: ["drawTexture", [
                        ["skin", null],
                        ["x", 0],
                        ["y", 0],
                        ["width", 0],
                        ["height", 0]
                    ], 1, "_adptTextureData"],
                    FillTexture: ["fillTexture", [
                        ["skin", null],
                        ["x", 0],
                        ["y", 0],
                        ["width", 0],
                        ["height", 0],
                        ["repeat", null]
                    ], 1, "_adptTextureData"],
                    FillText: ["fillText", [
                        ["text", ""],
                        ["x", 0],
                        ["y", 0],
                        ["font", null],
                        ["color", null],
                        ["textAlign", null]
                    ], 1],
                    Line: ["drawLine", [
                        ["x", 0],
                        ["y", 0],
                        ["toX", 0],
                        ["toY", 0],
                        ["lineColor", null],
                        ["lineWidth", 0]
                    ], 0, "_adptLineData"],
                    Lines: ["drawLines", [
                        ["x", 0],
                        ["y", 0],
                        ["points", ""],
                        ["lineColor", null],
                        ["lineWidth", 0]
                    ], 0, "_adptLinesData"],
                    Curves: ["drawCurves", [
                        ["x", 0],
                        ["y", 0],
                        ["points", ""],
                        ["lineColor", null],
                        ["lineWidth", 0]
                    ], 0, "_adptLinesData"],
                    Poly: ["drawPoly", [
                        ["x", 0],
                        ["y", 0],
                        ["points", ""],
                        ["fillColor", null],
                        ["lineColor", null],
                        ["lineWidth", 1]
                    ], 0, "_adptLinesData"]
                }
            }]), d
        }(),
        z = function() {
            function r(t) {
                if (this._color = [], "string" == typeof t) {
                    null === (this.strColor = t) && (t = "#000000"), "#" == t.charAt(0) && (t = t.substr(1));
                    var e = t.length;
                    if (3 == e || 4 == e) {
                        for (var i = "", n = 0; n < e; n++) i += t[n] + t[n];
                        t = i
                    }
                    var s = this.numColor = parseInt(t, 16);
                    if (8 == t.length) return void(this._color = [parseInt(t.substr(0, 2), 16) / 255, ((16711680 & s) >> 16) / 255, ((65280 & s) >> 8) / 255, (255 & s) / 255])
                } else s = this.numColor = t, this.strColor = q.toHexColor(s);
                this._color = [((16711680 & s) >> 16) / 255, ((65280 & s) >> 8) / 255, (255 & s) / 255, 1], this._color.__id = ++r._COLODID
            }
            return p(r, "t_tl.utils.Color"), r._initDefault = function() {
                for (var t in r._DEFAULT = {}, r._COLOR_MAP) r._SAVE[t] = r._DEFAULT[t] = new r(r._COLOR_MAP[t]);
                return r._DEFAULT
            }, r._initSaveMap = function() {
                for (var t in r._SAVE_SIZE = 0, r._SAVE = {}, r._DEFAULT) r._SAVE[t] = r._DEFAULT[t]
            }, r.create = function(t) {
                var e = r._SAVE[t + ""];
                return null != e ? e : (r._SAVE_SIZE < 1e3 || r._initSaveMap(), r._SAVE[t + ""] = new r(t))
            }, r._SAVE = {}, r._SAVE_SIZE = 0, r._COLOR_MAP = {
                white: "#FFFFFF",
                red: "#FF0000",
                green: "#00FF00",
                blue: "#0000FF",
                black: "#000000",
                yellow: "#FFFF00",
                gray: "#AAAAAA"
            }, r._DEFAULT = r._initDefault(), r._COLODID = 1, r
        }(),
        Y = (function() {
            function t() {
                this._values = [], this._keys = []
            }
            p(t, "t_tl.utils.Dictionary");
            var e = t.prototype;
            e.set = function(t, e) {
                var i = this.indexOf(t);
                0 <= i ? this._values[i] = e : (this._keys.push(t), this._values.push(e))
            }, e.indexOf = function(t) {
                var e = this._keys.indexOf(t);
                return 0 <= e ? e : (t = "string" == typeof t ? Number(t) : "number" == typeof t ? t.toString() : t, this._keys.indexOf(t))
            }, e.get = function(t) {
                var e = this.indexOf(t);
                return e < 0 ? null : this._values[e]
            }, e.remove = function(t) {
                var e = this.indexOf(t);
                return 0 <= e && (this._keys.splice(e, 1), this._values.splice(e, 1), !0)
            }, e.clear = function() {
                this._values.length = 0, this._keys.length = 0
            }, u(0, e, "values", function() {
                return this._values
            }), u(0, e, "keys", function() {
                return this._keys
            })
        }(), function() {
            function t() {
                this.ratio = .92, this.maxOffset = 60, this._dragging = !1, this._clickOnly = !0
            }
            p(t, "t_tl.utils.Dragging");
            var e = t.prototype;
            return e.start = function(t, e, i, n, s, r, o, a) {
                void 0 === a && (a = .92), this.clearTimer(), this.target = t, this.area = e, this.hasInertia = i, this.elasticDistance = e ? n : 0, this.elasticBackTime = s, this.data = r, this._disableMouseEvent = o, this.ratio = a, 1 != t.globalScaleX || 1 != t.globalScaleY ? this._parent = t.parent : this._parent = b.stage, this._clickOnly = !0, this._dragging = !0, this._elasticRateX = this._elasticRateY = 1, this._lastX = this._parent.mouseX, this._lastY = this._parent.mouseY, b.stage.on("mouseup", this, this.onStageMouseUp), b.stage.on("mouseout", this, this.onStageMouseUp), b.timer.frameLoop(1, this, this.loop)
            }, e.clearTimer = function() {
                b.timer.clear(this, this.loop), b.timer.clear(this, this.tweenMove), this._tween && (this._tween.recover(), this._tween = null)
            }, e.stop = function() {
                this._dragging && (f.instance.disableMouseEvent = !1, b.stage.off("mouseup", this, this.onStageMouseUp), b.stage.off("mouseout", this, this.onStageMouseUp), this._dragging = !1, this.target && this.area && this.backToArea(), this.clear())
            }, e.loop = function() {
                var t = this._parent.getMousePoint(),
                    e = t.x,
                    i = t.y,
                    n = e - this._lastX,
                    s = i - this._lastY;
                if (this._clickOnly) {
                    if (!(1 < Math.abs(n * b.stage._canvasTransform.getScaleX()) || 1 < Math.abs(s * b.stage._canvasTransform.getScaleY()))) return;
                    this._clickOnly = !1, this._offsets || (this._offsets = []), this._offsets.length = 0, this.target.event("dragstart", this.data), f.instance.disableMouseEvent = this._disableMouseEvent, this.target._set$P("$_MOUSEDOWN", !1)
                } else this._offsets.push(n, s);
                0 === n && 0 === s || (this._lastX = e, this._lastY = i, this.target.x += n * this._elasticRateX, this.target.y += s * this._elasticRateY, this.area && this.checkArea(), this.target.event("dragmove", this.data))
            }, e.checkArea = function() {
                if (this.elasticDistance <= 0) this.backToArea();
                else {
                    if (this.target.x < this.area.x) var t = this.area.x - this.target.x;
                    else t = this.target.x > this.area.x + this.area.width ? this.target.x - this.area.x - this.area.width : 0;
                    if (this._elasticRateX = Math.max(0, 1 - t / this.elasticDistance), this.target.y < this.area.y) var e = this.area.y - this.target.y;
                    else e = this.target.y > this.area.y + this.area.height ? this.target.y - this.area.y - this.area.height : 0;
                    this._elasticRateY = Math.max(0, 1 - e / this.elasticDistance)
                }
            }, e.backToArea = function() {
                this.target.x = Math.min(Math.max(this.target.x, this.area.x), this.area.x + this.area.width), this.target.y = Math.min(Math.max(this.target.y, this.area.y), this.area.y + this.area.height)
            }, e.onStageMouseUp = function(t) {
                if (f.instance.disableMouseEvent = !1, b.stage.off("mouseup", this, this.onStageMouseUp), b.stage.off("mouseout", this, this.onStageMouseUp), b.timer.clear(this, this.loop), !this._clickOnly && this.target)
                    if (this.hasInertia) {
                        this._offsets.length < 1 && this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY), this._offsetX = this._offsetY = 0;
                        for (var e = this._offsets.length, i = Math.min(e, 6), n = this._offsets.length - i, s = e - 1; n < s; s--) this._offsetY += this._offsets[s--], this._offsetX += this._offsets[s];
                        this._offsetX = this._offsetX / i * 2, this._offsetY = this._offsetY / i * 2, Math.abs(this._offsetX) > this.maxOffset && (this._offsetX = 0 < this._offsetX ? this.maxOffset : -this.maxOffset), Math.abs(this._offsetY) > this.maxOffset && (this._offsetY = 0 < this._offsetY ? this.maxOffset : -this.maxOffset), b.timer.frameLoop(1, this, this.tweenMove)
                    } else 0 < this.elasticDistance ? this.checkElastic() : this.clear()
            }, e.checkElastic = function() {
                var t = NaN,
                    e = NaN;
                if (this.target.x < this.area.x ? t = this.area.x : this.target.x > this.area.x + this.area.width && (t = this.area.x + this.area.width), this.target.y < this.area.y ? e = this.area.y : this.target.y > this.area.y + this.area.height && (e = this.area.y + this.area.height), isNaN(t) && isNaN(e)) this.clear();
                else {
                    var i = {};
                    isNaN(t) || (i.x = t), isNaN(e) || (i.y = e), this._tween = K.to(this.target, i, this.elasticBackTime, H.sineOut, v.create(this, this.clear), 0, !1, !1)
                }
            }, e.tweenMove = function() {
                this._offsetX *= this.ratio * this._elasticRateX, this._offsetY *= this.ratio * this._elasticRateY, this.target.x += this._offsetX, this.target.y += this._offsetY, this.area && this.checkArea(), this.target.event("dragmove", this.data), (Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1 || this._elasticRateX < .5 || this._elasticRateY < .5) && (b.timer.clear(this, this.tweenMove), 0 < this.elasticDistance ? this.checkElastic() : this.clear())
            }, e.clear = function() {
                if (this.target) {
                    this.clearTimer();
                    var t = this.target;
                    this.target = null, this._parent = null, t.event("dragend", this.data)
                }
            }, t
        }()),
        H = function() {
            function a() {}
            return p(a, "t_tl.utils.Ease"), a.linearNone = function(t, e, i, n) {
                return i * t / n + e
            }, a.linearIn = function(t, e, i, n) {
                return i * t / n + e
            }, a.linearInOut = function(t, e, i, n) {
                return i * t / n + e
            }, a.linearOut = function(t, e, i, n) {
                return i * t / n + e
            }, a.bounceIn = function(t, e, i, n) {
                return i - a.bounceOut(n - t, 0, i, n) + e
            }, a.bounceInOut = function(t, e, i, n) {
                return t < .5 * n ? .5 * a.bounceIn(2 * t, 0, i, n) + e : .5 * a.bounceOut(2 * t - n, 0, i, n) + .5 * i + e
            }, a.bounceOut = function(t, e, i, n) {
                return (t /= n) < 1 / 2.75 ? i * (7.5625 * t * t) + e : t < 2 / 2.75 ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : t < 2.5 / 2.75 ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e
            }, a.backIn = function(t, e, i, n, s) {
                return void 0 === s && (s = 1.70158), i * (t /= n) * t * ((s + 1) * t - s) + e
            }, a.backInOut = function(t, e, i, n, s) {
                return void 0 === s && (s = 1.70158), (t /= .5 * n) < 1 ? .5 * i * (t * t * ((1 + (s *= 1.525)) * t - s)) + e : i / 2 * ((t -= 2) * t * ((1 + (s *= 1.525)) * t + s) + 2) + e
            }, a.backOut = function(t, e, i, n, s) {
                return void 0 === s && (s = 1.70158), i * ((t = t / n - 1) * t * ((s + 1) * t + s) + 1) + e
            }, a.elasticIn = function(t, e, i, n, s, r) {
                var o;
                return void 0 === s && (s = 0), void 0 === r && (r = 0), 0 == t ? e : 1 == (t /= n) ? e + i : (r || (r = .3 * n), !s || 0 < i && s < i || i < 0 && s < -i ? (s = i, o = r / 4) : o = r / a.PI2 * Math.asin(i / s), -s * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * n - o) * a.PI2 / r) + e)
            }, a.elasticInOut = function(t, e, i, n, s, r) {
                var o;
                return void 0 === s && (s = 0), void 0 === r && (r = 0), 0 == t ? e : 2 == (t /= .5 * n) ? e + i : (r || (r = n * (.3 * 1.5)), !s || 0 < i && s < i || i < 0 && s < -i ? (s = i, o = r / 4) : o = r / a.PI2 * Math.asin(i / s), t < 1 ? s * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * n - o) * a.PI2 / r) * -.5 + e : s * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * n - o) * a.PI2 / r) * .5 + i + e)
            }, a.elasticOut = function(t, e, i, n, s, r) {
                var o;
                return void 0 === s && (s = 0), void 0 === r && (r = 0), 0 == t ? e : 1 == (t /= n) ? e + i : (r || (r = .3 * n), !s || 0 < i && s < i || i < 0 && s < -i ? (s = i, o = r / 4) : o = r / a.PI2 * Math.asin(i / s), s * Math.pow(2, -10 * t) * Math.sin((t * n - o) * a.PI2 / r) + i + e)
            }, a.strongIn = function(t, e, i, n) {
                return i * (t /= n) * t * t * t * t + e
            }, a.strongInOut = function(t, e, i, n) {
                return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e
            }, a.strongOut = function(t, e, i, n) {
                return i * ((t = t / n - 1) * t * t * t * t + 1) + e
            }, a.sineInOut = function(t, e, i, n) {
                return .5 * -i * (Math.cos(Math.PI * t / n) - 1) + e
            }, a.sineIn = function(t, e, i, n) {
                return -i * Math.cos(t / n * a.HALF_PI) + i + e
            }, a.sineOut = function(t, e, i, n) {
                return i * Math.sin(t / n * a.HALF_PI) + e
            }, a.quintIn = function(t, e, i, n) {
                return i * (t /= n) * t * t * t * t + e
            }, a.quintInOut = function(t, e, i, n) {
                return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e
            }, a.quintOut = function(t, e, i, n) {
                return i * ((t = t / n - 1) * t * t * t * t + 1) + e
            }, a.quartIn = function(t, e, i, n) {
                return i * (t /= n) * t * t * t + e
            }, a.quartInOut = function(t, e, i, n) {
                return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t + e : .5 * -i * ((t -= 2) * t * t * t - 2) + e
            }, a.quartOut = function(t, e, i, n) {
                return -i * ((t = t / n - 1) * t * t * t - 1) + e
            }, a.cubicIn = function(t, e, i, n) {
                return i * (t /= n) * t * t + e
            }, a.cubicInOut = function(t, e, i, n) {
                return (t /= .5 * n) < 1 ? .5 * i * t * t * t + e : .5 * i * ((t -= 2) * t * t + 2) + e
            }, a.cubicOut = function(t, e, i, n) {
                return i * ((t = t / n - 1) * t * t + 1) + e
            }, a.quadIn = function(t, e, i, n) {
                return i * (t /= n) * t + e
            }, a.quadInOut = function(t, e, i, n) {
                return (t /= .5 * n) < 1 ? .5 * i * t * t + e : .5 * -i * (--t * (t - 2) - 1) + e
            }, a.quadOut = function(t, e, i, n) {
                return -i * (t /= n) * (t - 2) + e
            }, a.expoIn = function(t, e, i, n) {
                return 0 == t ? e : i * Math.pow(2, 10 * (t / n - 1)) + e - .001 * i
            }, a.expoInOut = function(t, e, i, n) {
                return 0 == t ? e : t == n ? e + i : (t /= .5 * n) < 1 ? .5 * i * Math.pow(2, 10 * (t - 1)) + e : .5 * i * (2 - Math.pow(2, -10 * --t)) + e
            }, a.expoOut = function(t, e, i, n) {
                return t == n ? e + i : i * (1 - Math.pow(2, -10 * t / n)) + e
            }, a.circIn = function(t, e, i, n) {
                return -i * (Math.sqrt(1 - (t /= n) * t) - 1) + e
            }, a.circInOut = function(t, e, i, n) {
                return (t /= .5 * n) < 1 ? .5 * -i * (Math.sqrt(1 - t * t) - 1) + e : .5 * i * (Math.sqrt(1 - (t -= 2) * t) + 1) + e
            }, a.circOut = function(t, e, i, n) {
                return i * Math.sqrt(1 - (t = t / n - 1) * t) + e
            }, a.HALF_PI = .5 * Math.PI, a.PI2 = 2 * Math.PI, a
        }(),
        X = function() {
            function c() {
                this._hit = null, this._unHit = null
            }
            p(c, "t_tl.utils.HitArea");
            var t = c.prototype;
            return t.isHit = function(t, e) {
                return !!c.isHitGraphic(t, e, this.hit) && !c.isHitGraphic(t, e, this.unHit)
            }, t.contains = function(t, e) {
                return this.isHit(t, e)
            }, u(0, t, "hit", function() {
                return this._hit || (this._hit = new _), this._hit
            }, function(t) {
                this._hit = t
            }), u(0, t, "unHit", function() {
                return this._unHit || (this._unHit = new _), this._unHit
            }, function(t) {
                this._unHit = t
            }), c.isHitGraphic = function(t, e, i) {
                if (!i) return !1;
                var n;
                if (!(n = i.cmds) && i._one && ((n = c._cmds).length = 1, n[0] = i._one), !n) return !1;
                var s, r, o = 0;
                for (s = n.length, o = 0; o < s; o++)
                    if (r = n[o]) {
                        var a = D._context;
                        switch (r.callee) {
                            case a._translate:
                            case 6:
                                t -= r[0], e -= r[1]
                        }
                        if (c.isHitCmd(t, e, r)) return !0
                    }
                return !1
            }, c.isHitCmd = function(t, e, i) {
                if (!i) return !1;
                var n = D._context,
                    s = !1;
                switch (i.callee) {
                    case n._drawRect:
                    case 13:
                        c._rec.setTo(i[0], i[1], i[2], i[3]), s = c._rec.contains(t, e);
                        break;
                    case n._drawCircle:
                    case n._fillCircle:
                    case 14:
                        s = (t -= i[0]) * t + (e -= i[1]) * e < i[2] * i[2];
                        break;
                    case n._drawPoly:
                    case 18:
                        t -= i[0], e -= i[1], s = c.ptInPolygon(t, e, i[2])
                }
                return s
            }, c.ptInPolygon = function(t, e, i) {
                var n;
                (n = c._ptPoint).setTo(t, e);
                var s, r = 0,
                    o = NaN,
                    a = NaN,
                    h = NaN,
                    l = NaN;
                s = i.length;
                for (var u = 0; u < s; u += 2) {
                    if (o = i[u], a = i[u + 1], h = i[(u + 2) % s], a != (l = i[(u + 3) % s]))
                        if (!(n.y < Math.min(a, l)))
                            if (!(n.y >= Math.max(a, l)))(n.y - a) * (h - o) / (l - a) + o > n.x && r++
                }
                return r % 2 == 1
            }, c._cmds = [], h(c, ["_rec", function() {
                return this._rec = new M
            }, "_ptPoint", function() {
                return this._ptPoint = new C
            }]), c
        }(),
        $ = (function() {
            function s(t, e, i, n) {
                this.char = t, this.charNum = t.charCodeAt(0), this._x = this._y = 0, this.width = e, this.height = i, this.style = n, this.isWord = !s._isWordRegExp.test(t)
            }
            p(s, "t_tl.utils.HTMLChar");
            var t = s.prototype;
            b.imps(t, {
                "t_tl.display.ILayout": !0
            }), t.setSprite = function(t) {
                this._sprite = t
            }, t.getSprite = function() {
                return this._sprite
            }, t._isChar = function() {
                return !0
            }, t._getCSSStyle = function() {
                return this.style
            }, u(0, t, "width", function() {
                return this._w
            }, function(t) {
                this._w = t
            }), u(0, t, "x", function() {
                return this._x
            }, function(t) {
                this._sprite && (this._sprite.x = t), this._x = t
            }), u(0, t, "y", function() {
                return this._y
            }, function(t) {
                this._sprite && (this._sprite.y = t), this._y = t
            }), u(0, t, "height", function() {
                return this._h
            }, function(t) {
                this._h = t
            }), s._isWordRegExp = new RegExp("[\\w.]", "")
        }(), function() {
            function e() {}
            p(e, "t_tl.utils.Log"), e.enable = function() {
                e._logdiv || (e._logdiv = B.window.document.createElement("div"), B.window.document.body.appendChild(e._logdiv), e._logdiv.style.cssText = "pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;")
            }, e.toggle = function() {
                var t = e._logdiv.style;
                "1px" == t.width ? t.width = t.height = "50%" : t.width = t.height = "1px"
            }, e.print = function(t) {
                e._logdiv && (e.maxCount <= e._count && e.clear(), e._count++, e._logdiv.innerText += t + "\n", e._logdiv.scrollTop = e._logdiv.scrollHeight)
            }, e.clear = function() {
                e._logdiv.innerText = "", e._count = 0
            }, e._logdiv = null, e._count = 0, e.maxCount = 20
        }(), function() {
            function e() {}
            p(e, "t_tl.utils.Mouse"), u(1, e, "cursor", function() {
                return e._style.cursor
            }, function(t) {
                e._style.cursor = t
            }), e.hide = function() {
                "none" != e.cursor && (e._preCursor = e.cursor, e.cursor = "none")
            }, e.show = function() {
                "none" == e.cursor && (e.cursor = e._preCursor ? e._preCursor : "auto")
            }, e._preCursor = null, h(e, ["_style", function() {
                return this._style = B.document.body.style
            }])
        }(), function() {
            function s() {}
            return p(s, "t_tl.utils.Pool"), s.getPoolBySign = function(t) {
                return s._poolDic[t] || (s._poolDic[t] = [])
            }, s.clearBySign = function(t) {
                s._poolDic[t] && (s._poolDic[t].length = 0)
            }, s.recover = function(t, e) {
                e.__InPool || (e.__InPool = !0, s.getPoolBySign(t).push(e))
            }, s.getItemByClass = function(t, e) {
                var i = s.getPoolBySign(t),
                    n = i.length ? i.pop() : new e;
                return n.__InPool = !1, n
            }, s.getItemByCreateFun = function(t, e) {
                var i = s.getPoolBySign(t),
                    n = i.length ? i.pop() : e();
                return n.__InPool = !1, n
            }, s.getItem = function(t) {
                var e = s.getPoolBySign(t),
                    i = e.length ? e.pop() : null;
                return i && (i.__InPool = !1), i
            }, s._poolDic = {}, s.InPoolSign = "__InPool", s
        }()),
        V = (function() {
            function n() {
                this.sign = null, this.maxCount = 1e3
            }
            p(n, "t_tl.utils.PoolCache");
            var t = n.prototype;
            t.getCacheList = function() {
                return $.getPoolBySign(this.sign)
            }, t.tryDispose = function(t) {
                var e;
                (e = $.getPoolBySign(this.sign)).length > this.maxCount && e.splice(this.maxCount, e.length - this.maxCount)
            }, n.addPoolCacheManager = function(t, e) {
                var i;
                void 0 === e && (e = 100), (i = new n).sign = t, i.maxCount = e, G.regCacheByFunction(q.bind(i.tryDispose, i), q.bind(i.getCacheList, i))
            }
        }(), function() {
            function h() {}
            return p(h, "t_tl.utils.Stat"), u(1, h, "onclick", null, function(t) {
                h._sp && h._sp.on("click", h._sp, t), h._canvas && (h._canvas.source.onclick = t, h._canvas.source.style.pointerEvents = "")
            }), h.show = function(t, e) {
                void 0 === t && (t = 0), void 0 === e && (e = 0), !D.isConchApp || D.isConchWebGL ? (D.isConchWebGL || B.onMiniGame || B.onLimixiu || (h._useCanvas = !0), h._show = !0, h._fpsData.length = 60, h._view[0] = {
                    title: "FPS(Canvas)",
                    value: "_fpsStr",
                    color: "yellow",
                    units: "int"
                }, h._view[1] = {
                    title: "Sprite",
                    value: "_spriteStr",
                    color: "white",
                    units: "int"
                }, h._view[2] = {
                    title: "DrawCall",
                    value: "drawCall",
                    color: "white",
                    units: "int"
                }, h._view[3] = {
                    title: "CurMem",
                    value: "currentMemorySize",
                    color: "yellow",
                    units: "M"
                }, D.isWebGL ? (h._view[4] = {
                    title: "Shader",
                    value: "shaderCall",
                    color: "white",
                    units: "int"
                }, D.is3DMode ? (h._view[0].title = "FPS(3D)", h._view[5] = {
                    title: "TriFaces",
                    value: "trianglesFaces",
                    color: "white",
                    units: "int"
                }, h._view[6] = {
                    title: "treeNodeColl",
                    value: "treeNodeCollision",
                    color: "white",
                    units: "int"
                }, h._view[7] = {
                    title: "treeSpriteColl",
                    value: "treeSpriteCollision",
                    color: "white",
                    units: "int"
                }) : (h._view[0].title = "FPS(WebGL)", h._view[5] = {
                    title: "Canvas",
                    value: "_canvasStr",
                    color: "white",
                    units: "int"
                })) : h._view[4] = {
                    title: "Canvas",
                    value: "_canvasStr",
                    color: "white",
                    units: "int"
                }, h._useCanvas ? h.createUIPre(t, e) : h.createUI(t, e), h.enable()) : B.window.conch.showFPS && B.window.conch.showFPS(t, e)
            }, h.createUIPre = function(t, e) {
                var i = B.pixelRatio;
                h._width = 130 * i, h._vx = 75 * i, h._height = i * (12 * h._view.length + 3 * i) + 4, h._fontSize = 12 * i;
                for (var n = 0; n < h._view.length; n++) h._view[n].x = 4, h._view[n].y = n * h._fontSize + 2 * i;
                h._canvas || ((h._canvas = new yt("2D")).size(h._width, h._height), (h._ctx = h._canvas.getContext("2d")).textBaseline = "top", h._ctx.font = h._fontSize + "px Sans-serif", h._canvas.source.style.cssText = "pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:" + t + "px;top:" + e + "px;width:" + h._width / i + "px;height:" + h._height / i + "px;"), h._first = !0, h.loop(), h._first = !1, B.container.appendChild(h._canvas.source)
            }, h.createUI = function(t, e) {
                var i = h._sp,
                    n = B.pixelRatio;
                i || (i = new ct, (h._leftText = new gt).pos(5, 5), h._leftText.color = "#ffffff", i.addChild(h._leftText), (h._txt = new gt).pos(80 * n, 5), h._txt.color = "#ffffff", i.addChild(h._txt), h._sp = i), i.pos(t, e);
                for (var s = "", r = 0; r < h._view.length; r++) {
                    s += h._view[r].title + "\n"
                }
                h._leftText.text = s;
                var o = 138 * n,
                    a = n * (12 * h._view.length + 3 * n) + 4;
                h._txt.fontSize = h._fontSize * n, h._leftText.fontSize = h._fontSize * n, i.size(o, a), i.graphics.clear(), i.graphics.setAlpha(.5), i.graphics.drawRect(0, 0, o, a, "#999999"), i.graphics.setAlpha(1), h.loop()
            }, h.enable = function() {
                b.timer.frameLoop(1, h, h.loop)
            }, h.hide = function() {
                h._show = !1, b.timer.clear(h, h.loop), h._canvas && B.removeElement(h._canvas.source)
            }, h.clear = function() {
                h.trianglesFaces = h.drawCall = h.shaderCall = h.spriteCount = h.spriteRenderUseCacheCount = h.treeNodeCollision = h.treeSpriteCollision = h.canvasNormal = h.canvasBitmap = h.canvasReCache = 0
            }, h.loop = function() {
                h._count++;
                var t = B.now();
                if (!(t - h._timer < 1e3)) {
                    var e = h._count;
                    if (h.FPS = Math.round(1e3 * e / (t - h._timer)), h._show) {
                        h.trianglesFaces = Math.round(h.trianglesFaces / e), h._useCanvas ? (h.drawCall = Math.round(h.drawCall / e) - 2, h.shaderCall = Math.round(h.shaderCall / e), h.spriteCount = Math.round(h.spriteCount / e) - 1) : (h.drawCall = Math.round(h.drawCall / e) - 2, h.shaderCall = Math.round(h.shaderCall / e) - 4, h.spriteCount = Math.round(h.spriteCount / e) - 4), h.spriteRenderUseCacheCount = Math.round(h.spriteRenderUseCacheCount / e), h.canvasNormal = Math.round(h.canvasNormal / e), h.canvasBitmap = Math.round(h.canvasBitmap / e), h.canvasReCache = Math.ceil(h.canvasReCache / e), h.treeNodeCollision = Math.round(h.treeNodeCollision / e), h.treeSpriteCollision = Math.round(h.treeSpriteCollision / e);
                        var i = 0 < h.FPS ? Math.floor(1e3 / h.FPS).toString() : " ";
                        h._fpsStr = h.FPS + (h.renderSlow ? " slow" : "") + " " + i, h._spriteStr = h.spriteCount + (h.spriteRenderUseCacheCount ? "/" + h.spriteRenderUseCacheCount : ""), h._canvasStr = h.canvasReCache + "/" + h.canvasNormal + "/" + h.canvasBitmap, h.currentMemorySize = N.systemResourceManager.memorySize, h._useCanvas ? h.renderInfoPre() : h.renderInfo(), h.clear()
                    }
                    h._count = 0, h._timer = t
                }
            }, h.renderInfoPre = function() {
                if (h._canvas) {
                    var t = h._ctx;
                    t.clearRect(h._first ? 0 : h._vx, 0, h._width, h._height);
                    for (var e = 0; e < h._view.length; e++) {
                        var i = h._view[e];
                        h._first && (t.fillStyle = "white", t.fillText(i.title, i.x, i.y, null, null, null)), t.fillStyle = i.color;
                        var n = h[i.value];
                        "M" == i.units && (n = Math.floor(n / 1048576 * 100) / 100 + " M"), t.fillText(n + "", i.x + h._vx, i.y, null, null, null)
                    }
                }
            }, h.renderInfo = function() {
                for (var t = "", e = 0; e < h._view.length; e++) {
                    var i = h._view[e],
                        n = h[i.value];
                    "M" == i.units && (n = Math.floor(n / 1048576 * 100) / 100 + " M"), "K" == i.units && (n = Math.floor(n / 1024 * 100) / 100 + " K"), t += n + "\n"
                }
                h._txt.text = t
            }, h.FPS = 0, h.loopCount = 0, h.shaderCall = 0, h.drawCall = 0, h.trianglesFaces = 0, h.spriteCount = 0, h.spriteRenderUseCacheCount = 0, h.treeNodeCollision = 0, h.treeSpriteCollision = 0, h.canvasNormal = 0, h.canvasBitmap = 0, h.canvasReCache = 0, h.renderSlow = !1, h.currentMemorySize = 0, h._fpsStr = null, h._canvasStr = null, h._spriteStr = null, h._fpsData = [], h._timer = 0, h._count = 0, h._view = [], h._fontSize = 12, h._txt = null, h._leftText = null, h._sp = null, h._show = !1, h._useCanvas = !1, h._canvas = null, h._ctx = null, h._first = !1, h._vx = NaN, h._width = 0, h._height = 100, h
        }()),
        j = (function() {
            function t() {
                this._strsToID = {}, this._idToStrs = [], this._length = 0
            }
            p(t, "t_tl.utils.StringKey");
            var e = t.prototype;
            e.add = function(t) {
                var e = this._strsToID[t];
                return null != e ? e : (this._idToStrs[this._length] = t, this._strsToID[t] = this._length++)
            }, e.getID = function(t) {
                var e = this._strsToID[t];
                return null == e ? -1 : e
            }, e.getName = function(t) {
                var e = this._idToStrs[t];
                return null == e ? void 0 : e
            }
        }(), function() {
            var h;

            function l() {
                this._delta = 0, this.scale = 1, this.currFrame = 0, this._mid = 1, this._map = [], this._laters = [], this._handlers = [], this._temp = [], this._count = 0, this.currTimer = this._now(), this._lastTimer = this._now(), this._init()
            }
            p(l, "t_tl.utils.Timer");
            var t = l.prototype;
            return t._init = function() {
                b.timer && b.timer.frameLoop(1, this, this._update)
            }, t._now = function() {
                return Date.now()
            }, t._update = function() {
                if (this.scale <= 0) this._lastTimer = this._now();
                else {
                    var t = this.currFrame = this.currFrame + this.scale,
                        e = this._now();
                    this._delta = (e - this._lastTimer) * this.scale;
                    var i = this.currTimer = this.currTimer + this._delta;
                    this._lastTimer = e;
                    var n = this._handlers;
                    for (o = this._count = 0, a = n.length; o < a; o++)
                        if (null !== (h = n[o]).method) {
                            var s = h.userFrame ? t : i;
                            if (s >= h.exeTime)
                                if (h.repeat)
                                    if (h.jumpFrame)
                                        for (; s >= h.exeTime;) h.exeTime += h.delay, h.run(!1);
                                    else h.exeTime += h.delay, h.run(!1), s > h.exeTime && (h.exeTime += Math.ceil((s - h.exeTime) / h.delay) * h.delay);
                            else h.run(!0)
                        } else this._count++;
                    (30 < this._count || t % 200 == 0) && this._clearHandlers();
                    for (var r = this._laters, o = 0, a = r.length - 1; o <= a; o++) {
                        var h = r[o];
                        null !== h.method && (this._map[h.key] = null, h.run(!1)), this._recoverHandler(h), o === a && (a = r.length - 1)
                    }
                    r.length = 0
                }
            }, t._clearHandlers = function() {
                for (var t = this._handlers, e = 0, i = t.length; e < i; e++) {
                    var n = t[e];
                    null !== n.method ? this._temp.push(n) : this._recoverHandler(n)
                }
                this._handlers = this._temp, this._temp = t, this._temp.length = 0
            }, t._recoverHandler = function(t) {
                this._map[t.key] == t && (this._map[t.key] = null), t.clear(), l._pool.push(t)
            }, t._create = function(t, e, i, n, s, r, o) {
                if (!i) return s.apply(n, r), null;
                if (o) {
                    var a = this._getHandler(n, s);
                    if (a) return a.repeat = e, a.userFrame = t, a.delay = i, a.caller = n, a.method = s, a.args = r, a.exeTime = i + (t ? this.currFrame : this.currTimer + this._now() - this._lastTimer), a
                }
                return (a = 0 < l._pool.length ? l._pool.pop() : new h).repeat = e, a.userFrame = t, a.delay = i, a.caller = n, a.method = s, a.args = r, a.exeTime = i + (t ? this.currFrame : this.currTimer + this._now() - this._lastTimer) + 1, this._indexHandler(a), this._handlers.push(a), a
            }, t._indexHandler = function(t) {
                var e = t.caller,
                    i = t.method,
                    n = e ? e.$_GID || (e.$_GID = q.getGID()) : 0,
                    s = i.$_TID || (i.$_TID = 1e5 * this._mid++);
                t.key = n + s, this._map[t.key] = t
            }, t.once = function(t, e, i, n, s) {
                void 0 === s && (s = !0), this._create(!1, !1, t, e, i, n, s)
            }, t.loop = function(t, e, i, n, s, r) {
                void 0 === s && (s = !0), void 0 === r && (r = !1);
                var o = this._create(!1, !0, t, e, i, n, s);
                o && (o.jumpFrame = r)
            }, t.frameOnce = function(t, e, i, n, s) {
                void 0 === s && (s = !0), this._create(!0, !1, t, e, i, n, s)
            }, t.frameLoop = function(t, e, i, n, s) {
                void 0 === s && (s = !0), this._create(!0, !0, t, e, i, n, s)
            }, t.toString = function() {
                return "callLater:" + this._laters.length + " handlers:" + this._handlers.length + " pool:" + l._pool.length
            }, t.clear = function(t, e) {
                var i = this._getHandler(t, e);
                i && (this._map[i.key] = null, i.key = 0, i.clear())
            }, t.clearAll = function(t) {
                if (t)
                    for (var e = 0, i = this._handlers.length; e < i; e++) {
                        var n = this._handlers[e];
                        n.caller === t && (this._map[n.key] = null, n.key = 0, n.clear())
                    }
            }, t._getHandler = function(t, e) {
                var i = t ? t.$_GID || (t.$_GID = q.getGID()) : 0,
                    n = e.$_TID || (e.$_TID = 1e5 * this._mid++);
                return this._map[i + n]
            }, t.callLater = function(t, e, i) {
                if (null == this._getHandler(t, e)) {
                    if (l._pool.length) var n = l._pool.pop();
                    else n = new h;
                    n.caller = t, n.method = e, n.args = i, this._indexHandler(n), this._laters.push(n)
                }
            }, t.runCallLater = function(t, e) {
                var i = this._getHandler(t, e);
                i && null != i.method && (this._map[i.key] = null, i.run(!0))
            }, t.runTimer = function(t, e) {
                this.runCallLater(t, e)
            }, u(0, t, "delta", function() {
                return this._delta
            }), l._pool = [], l.__init$ = function() {
                h = function() {
                    function t() {
                        this.key = 0, this.repeat = !1, this.delay = 0, this.userFrame = !1, this.exeTime = 0, this.caller = null, this.method = null, this.args = null, this.jumpFrame = !1
                    }
                    p(t, "");
                    var e = t.prototype;
                    return e.clear = function() {
                        this.caller = null, this.method = null, this.args = null
                    }, e.run = function(t) {
                        var e = this.caller;
                        if (e && e.destroyed) return this.clear();
                        var i = this.method,
                            n = this.args;
                        t && this.clear(), null != i && (n ? i.apply(e, n) : i.call(e))
                    }, t
                }()
            }, l
        }()),
        K = function() {
            function c() {
                this.gid = 0
            }
            p(c, "t_tl.utils.Tween");
            var t = c.prototype;
            return t.to = function(t, e, i, n, s, r, o) {
                return void 0 === r && (r = 0), void 0 === o && (o = !1), this._create(t, e, i, n, s, r, o, !0, !1, !0)
            }, t.from = function(t, e, i, n, s, r, o) {
                return void 0 === r && (r = 0), void 0 === o && (o = !1), this._create(t, e, i, n, s, r, o, !1, !1, !0)
            }, t._create = function(t, e, i, n, s, r, o, a, h, l) {
                if (!t) throw new Error("Tween:target is null");
                this._target = t, this._duration = i, this._ease = n || e.ease || c.easeNone, this._complete = s || e.complete, this._delay = r, this._props = [], this._usedTimer = 0, this._startTimer = B.now(), this._usedPool = h, this._delayParam = null, this.update = e.update;
                var u = t.$_GID || (t.$_GID = q.getGID());
                return c.tweenMap[u] ? (o && c.clearTween(t), c.tweenMap[u].push(this)) : c.tweenMap[u] = [this], l ? r <= 0 ? this.firstStart(t, e, a) : (this._delayParam = [t, e, a], b.scaleTimer.once(r, this, this.firstStart, this._delayParam)) : this._initProps(t, e, a), this
            }, t.firstStart = function(t, e, i) {
                this._delayParam = null, t.destroyed ? this.clear() : (this._initProps(t, e, i), this._beginLoop())
            }, t._initProps = function(t, e, i) {
                for (var n in e)
                    if ("number" == typeof t[n]) {
                        var s = i ? t[n] : e[n],
                            r = i ? e[n] : t[n];
                        this._props.push([n, s, r - s]), i || (t[n] = s)
                    }
            }, t._beginLoop = function() {
                b.scaleTimer.frameLoop(1, this, this._doEase)
            }, t._doEase = function() {
                this._updateEase(B.now())
            }, t._updateEase = function(t) {
                var e = this._target;
                if (e) {
                    if (e.destroyed) return c.clearTween(e);
                    var i = this._usedTimer = t - this._startTimer - this._delay;
                    if (!(i < 0)) {
                        if (i >= this._duration) return this.complete();
                        for (var n = 0 < i ? this._ease(i, 0, 1, this._duration) : 0, s = this._props, r = 0, o = s.length; r < o; r++) {
                            var a = s[r];
                            e[a[0]] = a[1] + n * a[2]
                        }
                        this.update && this.update.run()
                    }
                }
            }, t.complete = function() {
                if (this._target) {
                    b.scaleTimer.runTimer(this, this.firstStart);
                    for (var t = this._target, e = this._props, i = this._complete, n = 0, s = e.length; n < s; n++) {
                        var r = e[n];
                        t[r[0]] = r[1] + r[2]
                    }
                    this.update && this.update.run(), this.clear(), i && i.run()
                }
            }, t.pause = function() {
                b.scaleTimer.clear(this, this._beginLoop), b.scaleTimer.clear(this, this._doEase), b.scaleTimer.clear(this, this.firstStart);
                var t;
                (t = B.now() - this._startTimer - this._delay) < 0 && (this._usedTimer = t)
            }, t.setStartTime = function(t) {
                this._startTimer = t
            }, t.clear = function() {
                this._target && (this._remove(), this._clear())
            }, t._clear = function() {
                this.pause(), b.scaleTimer.clear(this, this.firstStart), this._complete = null, this._target = null, this._ease = null, this._props = null, this._delayParam = null, this._usedPool && (this.update = null, $.recover("tween", this))
            }, t.recover = function() {
                this._usedPool = !0, this._clear()
            }, t._remove = function() {
                var t = c.tweenMap[this._target.$_GID];
                if (t)
                    for (var e = 0, i = t.length; e < i; e++)
                        if (t[e] === this) {
                            t.splice(e, 1);
                            break
                        }
            }, t.restart = function() {
                if (this.pause(), this._usedTimer = 0, this._startTimer = B.now(), this._delayParam) b.scaleTimer.once(this._delay, this, this.firstStart, this._delayParam);
                else {
                    for (var t = this._props, e = 0, i = t.length; e < i; e++) {
                        var n = t[e];
                        this._target[n[0]] = n[1]
                    }
                    b.scaleTimer.once(this._delay, this, this._beginLoop)
                }
            }, t.resume = function() {
                this._usedTimer >= this._duration || (this._startTimer = B.now() - this._usedTimer - this._delay, this._delayParam ? this._usedTimer < 0 ? b.scaleTimer.once(-this._usedTimer, this, this.firstStart, this._delayParam) : this.firstStart.apply(this, this._delayParam) : this._beginLoop())
            }, u(0, t, "progress", null, function(t) {
                var e = t * this._duration;
                this._startTimer = B.now() - this._delay - e
            }), c.to = function(t, e, i, n, s, r, o, a) {
                return void 0 === r && (r = 0), void 0 === o && (o = !1), void 0 === a && (a = !0), $.getItemByClass("tween", c)._create(t, e, i, n, s, r, o, !0, a, !0)
            }, c.from = function(t, e, i, n, s, r, o, a) {
                return void 0 === r && (r = 0), void 0 === o && (o = !1), void 0 === a && (a = !0), $.getItemByClass("tween", c)._create(t, e, i, n, s, r, o, !1, a, !0)
            }, c.clearAll = function(t) {
                if (t && t.$_GID) {
                    var e = c.tweenMap[t.$_GID];
                    if (e) {
                        for (var i = 0, n = e.length; i < n; i++) e[i]._clear();
                        e.length = 0
                    }
                }
            }, c.clear = function(t) {
                t.clear()
            }, c.clearTween = function(t) {
                c.clearAll(t)
            }, c.easeNone = function(t, e, i, n) {
                return i * t / n + e
            }, c.tweenMap = {}, c
        }(),
        q = function() {
            function a() {}
            return p(a, "t_tl.utils.Utils"), a.toRadian = function(t) {
                return t * a._pi2
            }, a.toAngle = function(t) {
                return t * a._pi
            }, a.toHexColor = function(t) {
                if (t < 0 || isNaN(t)) return null;
                for (var e = t.toString(16); e.length < 6;) e = "0" + e;
                return "#" + e
            }, a.getGID = function() {
                return a._gid++
            }, a.concatArray = function(t, e) {
                if (!e) return t;
                if (!t) return e;
                var i = 0,
                    n = e.length;
                for (i = 0; i < n; i++) t.push(e[i]);
                return t
            }, a.clearArray = function(t) {
                return t && (t.length = 0), t
            }, a.copyArray = function(t, e) {
                if (t || (t = []), !e) return t;
                t.length = e.length;
                var i = 0,
                    n = e.length;
                for (i = 0; i < n; i++) t[i] = e[i];
                return t
            }, a.getGlobalRecByPoints = function(t, e, i, n, s) {
                var r, o;
                return r = new C(e, i), r = t.localToGlobal(r), o = new C(n, s), o = t.localToGlobal(o), M._getWrapRec([r.x, r.y, o.x, o.y])
            }, a.getGlobalPosAndScale = function(t) {
                return a.getGlobalRecByPoints(t, 0, 0, 1, 1)
            }, a.bind = function(t, e) {
                return t.bind(e)
            }, a.measureText = function(t, e) {
                return I.measureText(t, e)
            }, a.updateOrder = function(t) {
                if (!t || t.length < 2) return !1;
                for (var e, i = 1, n = 0, s = t.length, r = NaN; i < s;) {
                    for (e = t[n = i], r = t[n]._zOrder; - 1 < --n && t[n]._zOrder > r;) t[n + 1] = t[n];
                    t[n + 1] = e, i++
                }
                var o = e.parent.conchModel;
                if (o)
                    if (null != o.updateZOrder) o.updateZOrder();
                    else {
                        for (i = 0; i < s; i++) o.removeChild(t[i].conchModel);
                        for (i = 0; i < s; i++) o.addChildAt(t[i].conchModel, i)
                    }
                return !0
            }, a.transPointList = function(t, e, i) {
                var n = 0,
                    s = t.length;
                for (n = 0; n < s; n += 2) t[n] += e, t[n + 1] += i
            }, a.parseInt = function(t, e) {
                void 0 === e && (e = 0);
                var i = B.window.parseInt(t, e);
                return isNaN(i) ? 0 : i
            }, a.getFileExtension = function(t) {
                a._extReg.lastIndex = t.lastIndexOf(".");
                var e = a._extReg.exec(t);
                return e && 1 < e.length ? e[1].toLowerCase() : null
            }, a.getTransformRelativeToWindow = function(t, e, i) {
                var n = b.stage,
                    s = t_tl.utils.Utils.getGlobalPosAndScale(t),
                    r = n._canvasTransform.clone(),
                    o = r.tx,
                    a = r.ty;
                r.rotate(-Math.PI / 180 * b.stage.canvasDegree), r.scale(b.stage.clientScaleX, b.stage.clientScaleY);
                var h = b.stage.canvasDegree % 180 != 0,
                    l = NaN,
                    u = NaN;
                h ? (l = i + s.y, u = e + s.x, l *= r.d, u *= r.a, 90 == b.stage.canvasDegree ? (l = o - l, u += a) : (l += o, u = a - u)) : (l = e + s.x, u = i + s.y, l *= r.a, u *= r.d, l += o, u += a);
                var c = NaN,
                    _ = NaN;
                return h ? (c = r.d * s.height, _ = r.a * s.width) : (c = r.a * s.width, _ = r.d * s.height), {
                    x: l,
                    y: u,
                    scaleX: c,
                    scaleY: _
                }
            }, a.fitDOMElementInArea = function(t, e, i, n, s, r) {
                t._fitLayaAirInitialized || (t._fitLayaAirInitialized = !0, t.style.transformOrigin = t.style.webKittransformOrigin = "left top", t.style.position = "absolute");
                var o = a.getTransformRelativeToWindow(e, i, n);
                t.style.transform = t.style.webkitTransform = "scale(" + o.scaleX + "," + o.scaleY + ") rotate(" + b.stage.canvasDegree + "deg)", t.style.width = s + "px", t.style.height = r + "px", t.style.left = o.x + "px", t.style.top = o.y + "px"
            }, a.isOkTextureList = function(t) {
                if (!t) return !1;
                var e, i = 0,
                    n = t.length;
                for (i = 0; i < n; i++)
                    if (!(e = t[i]) || !e.source) return !1;
                return !0
            }, a.isOKCmdList = function(t) {
                if (!t) return !1;
                var e, i, n = 0,
                    s = t.length,
                    r = D._context;
                for (n = 0; n < s; n++) switch ((e = t[n]).callee) {
                    case r._drawTexture:
                    case r._fillTexture:
                    case r._drawTextureWithTransform:
                        if (!(i = e[0]) || !i.source) return !1
                }
                return !0
            }, a._gid = 1, a._pi = 180 / Math.PI, a._pi2 = Math.PI / 180, a._extReg = /\.(\w+)\??/g, a.parseXMLFromString = function(t) {
                var e;
                if (t = t.replace(/>\s+</g, "><"), -1 < (e = (new DOMParser).parseFromString(t, "text/xml")).firstChild.textContent.indexOf("This page contains the following errors")) throw new Error(e.firstChild.firstChild.textContent);
                return e
            }, a
        }(),
        Q = function() {
            function t() {
                this.useDic = {}, this.shapeDic = {}, this.shapeLineDic = {}, this._id = 0, this._checkKey = !1, this._freeIdArray = [], D.isWebGL && G.regCacheByFunction(q.bind(this.startDispose, this), q.bind(this.getCacheList, this))
            }
            p(t, "t_tl.utils.VectorGraphManager");
            var e = t.prototype;
            return e.getId = function() {
                return this._id++
            }, e.addShape = function(t, e) {
                this.shapeDic[t] = e, this.useDic[t] || (this.useDic[t] = !0)
            }, e.addLine = function(t, e) {
                this.shapeLineDic[t] = e, this.shapeLineDic[t] || (this.shapeLineDic[t] = !0)
            }, e.getShape = function(t) {
                this._checkKey && null != this.useDic[t] && (this.useDic[t] = !0)
            }, e.deleteShape = function(t) {
                this.shapeDic[t] && (this.shapeDic[t] = null, delete this.shapeDic[t]), this.shapeLineDic[t] && (this.shapeLineDic[t] = null, delete this.shapeLineDic[t]), null != this.useDic[t] && delete this.useDic[t]
            }, e.getCacheList = function() {
                var t, e = [];
                for (t in this.shapeDic) e.push(this.shapeDic[t]);
                for (t in this.shapeLineDic) e.push(this.shapeLineDic[t]);
                return e
            }, e.startDispose = function(t) {
                var e;
                for (e in this.useDic) this.useDic[e] = !1;
                this._checkKey = !0
            }, e.endDispose = function() {
                if (this._checkKey) {
                    var t;
                    for (t in this.useDic) this.useDic[t] || this.deleteShape(t);
                    this._checkKey = !1
                }
            }, t.getInstance = function() {
                return t.instance = t.instance || new t
            }, t.instance = null, t
        }(),
        J = function() {
            function n() {
                this._obj = null, this._obj = n.supportWeakMap ? new B.window.WeakMap : {}, n.supportWeakMap || n._maps.push(this)
            }
            p(n, "t_tl.utils.WeakObject");
            var t = n.prototype;
            return t.set = function(t, e) {
                if (null != t)
                    if (n.supportWeakMap) {
                        var i = t;
                        "string" != typeof t && "number" != typeof t || (i = n._keys[t]) || (i = n._keys[t] = {
                            k: t
                        }), this._obj.set(i, e)
                    } else "string" == typeof t || "number" == typeof t ? this._obj[t] = e : (t.$_GID || (t.$_GID = q.getGID()), this._obj[t.$_GID] = e)
            }, t.get = function(t) {
                if (null == t) return null;
                if (n.supportWeakMap) {
                    var e = "string" == typeof t || "number" == typeof t ? n._keys[t] : t;
                    return e ? this._obj.get(e) : null
                }
                return "string" == typeof t || "number" == typeof t ? this._obj[t] : this._obj[t.$_GID]
            }, t.del = function(t) {
                if (null != t)
                    if (n.supportWeakMap) {
                        var e = "string" == typeof t || "number" == typeof t ? n._keys[t] : t;
                        if (!e) return;
                        this._obj.delete(e)
                    } else "string" == typeof t || "number" == typeof t ? delete this._obj[t] : delete this._obj[this._obj.$_GID]
            }, t.has = function(t) {
                if (null == t) return !1;
                if (n.supportWeakMap) {
                    var e = "string" == typeof t || "number" == typeof t ? n._keys[t] : t;
                    return this._obj.has(e)
                }
                return "string" == typeof t || "number" == typeof t ? null != this._obj[t] : null != this._obj[this._obj.$_GID]
            }, n.__init__ = function() {
                (n.supportWeakMap = null != B.window.WeakMap) || b.timer.loop(n.delInterval, null, n.clearCache)
            }, n.clearCache = function() {
                for (var t = 0, e = n._maps.length; t < e; t++) {
                    n._maps[t]._obj = {}
                }
            }, n.supportWeakMap = !1, n.delInterval = 3e5, n._keys = {}, n._maps = [], h(n, ["I", function() {
                return this.I = new n
            }]), n
        }(),
        Z = function() {
            function t() {
                this.id = NaN, this.save = [], this.toUpperCase = null, this.changed = !1, this._text = null
            }
            p(t, "t_tl.utils.WordText");
            var e = t.prototype;
            return e.setText = function(t) {
                this.changed = !0, this._text = t
            }, e.toString = function() {
                return this._text
            }, e.charCodeAt = function(t) {
                return this._text ? this._text.charCodeAt(t) : NaN
            }, e.charAt = function(t) {
                return this._text ? this._text.charAt(t) : null
            }, u(0, e, "length", function() {
                return this._text ? this._text.length : 0
            }), t
        }(),
        tt = function(t) {
            function o() {
                this._bits = 0, this._displayedInStage = !1, this._parent = null, this.conchModel = null, this.name = "", this._destroyed = !1, o.__super.call(this), this._childs = o.ARRAY_EMPTY, this._$P = o.PROP_EMPTY, this.timer = b.scaleTimer, this.conchModel = D.isConchNode ? this.createConchModel() : null
            }
            p(o, "t_tl.display.Node", l);
            var e = o.prototype;
            return e._setBit = function(t, e) {
                1 == t && (this._getBit(t) != e && this._updateDisplayedInstage());
                e ? this._bits |= t : this._bits &= ~t
            }, e._getBit = function(t) {
                return 0 != (this._bits & t)
            }, e._setUpNoticeChain = function() {
                this._getBit(1) && this._setUpNoticeType(1)
            }, e._setUpNoticeType = function(t) {
                var e = this;
                for (e._setBit(t, !0), e = e.parent; e;) {
                    if (e._getBit(t)) return;
                    e._setBit(t, !0), e = e.parent
                }
            }, e.on = function(t, e, i, n) {
                return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1), this._createListener(t, e, i, n, !1)
            }, e.once = function(t, e, i, n) {
                return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1), this._createListener(t, e, i, n, !0)
            }, e.createConchModel = function() {
                return null
            }, e.destroy = function(t) {
                void 0 === t && (t = !0), this._destroyed = !0, this._parent && this._parent.removeChild(this), this._childs && (t ? this.destroyChildren() : this.removeChildren()), this._childs = null, this._$P = null, this.offAll(), this.timer.clearAll(this)
            }, e.destroyChildren = function() {
                if (this._childs)
                    for (var t = this._childs.length - 1; - 1 < t; t--) this._childs[t].destroy(!0)
            }, e.addChild = function(t) {
                if (!t || this.destroyed || t === this) return t;
                if (t.zOrder && this._set$P("hasZorder", !0), t._parent === this) {
                    var e = this.getChildIndex(t);
                    e !== this._childs.length - 1 && (this._childs.splice(e, 1), this._childs.push(t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, this._childs.length - 1)), this._childChanged())
                } else t.parent && t.parent.removeChild(t), this._childs === o.ARRAY_EMPTY && (this._childs = []), this._childs.push(t), this.conchModel && this.conchModel.addChildAt(t.conchModel, this._childs.length - 1), (t.parent = this)._childChanged();
                return t
            }, e.addChildren = function(t) {
                for (var e = arguments, i = 0, n = e.length; i < n;) this.addChild(e[i++])
            }, e.addChildAt = function(t, e) {
                if (!t || this.destroyed || t === this) return t;
                if (t.zOrder && this._set$P("hasZorder", !0), 0 <= e && e <= this._childs.length) {
                    if (t._parent === this) {
                        var i = this.getChildIndex(t);
                        this._childs.splice(i, 1), this._childs.splice(e, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, e)), this._childChanged()
                    } else t.parent && t.parent.removeChild(t), this._childs === o.ARRAY_EMPTY && (this._childs = []), this._childs.splice(e, 0, t), this.conchModel && this.conchModel.addChildAt(t.conchModel, e), t.parent = this;
                    return t
                }
                throw new Error("appendChildAt:The index is out of bounds")
            }, e.getChildIndex = function(t) {
                return this._childs.indexOf(t)
            }, e.getChildByName = function(t) {
                var e = this._childs;
                if (e)
                    for (var i = 0, n = e.length; i < n; i++) {
                        var s = e[i];
                        if (s.name === t) return s
                    }
                return null
            }, e._get$P = function(t) {
                return this._$P[t]
            }, e._set$P = function(t, e) {
                return this.destroyed || (this._$P === o.PROP_EMPTY && (this._$P = {}), this._$P[t] = e), e
            }, e.getChildAt = function(t) {
                return this._childs[t]
            }, e.setChildIndex = function(t, e) {
                var i = this._childs;
                if (e < 0 || e >= i.length) throw new Error("setChildIndex:The index is out of bounds.");
                var n = this.getChildIndex(t);
                if (n < 0) throw new Error("setChildIndex:node is must child of this object.");
                return i.splice(n, 1), i.splice(e, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, e)), this._childChanged(), t
            }, e._childChanged = function(t) {}, e.removeChild = function(t) {
                if (!this._childs) return t;
                var e = this._childs.indexOf(t);
                return this.removeChildAt(e)
            }, e.removeSelf = function() {
                return this._parent && this._parent.removeChild(this), this
            }, e.removeChildByName = function(t) {
                var e = this.getChildByName(t);
                return e && this.removeChild(e), e
            }, e.removeChildAt = function(t) {
                var e = this.getChildAt(t);
                return e && (this._childs.splice(t, 1), this.conchModel && this.conchModel.removeChild(e.conchModel), e.parent = null), e
            }, e.removeChildren = function(t, e) {
                if (void 0 === t && (t = 0), void 0 === e && (e = 2147483647), this._childs && 0 < this._childs.length) {
                    var i = this._childs;
                    if (0 === t && r <= e) {
                        var n = i;
                        this._childs = o.ARRAY_EMPTY
                    } else n = i.splice(t, e - t);
                    for (var s = 0, r = n.length; s < r; s++) n[s].parent = null, this.conchModel && this.conchModel.removeChild(n[s].conchModel)
                }
                return this
            }, e.replaceChild = function(t, e) {
                var i = this._childs.indexOf(e);
                return -1 < i ? (this._childs.splice(i, 1, t), this.conchModel && (this.conchModel.removeChild(e.conchModel), this.conchModel.addChildAt(t.conchModel, i)), e.parent = null, t.parent = this, t) : null
            }, e._updateDisplayedInstage = function() {
                var t;
                t = this;
                var e = b.stage;
                for (this._displayedInStage = !1; t;) {
                    if (t._getBit(1)) {
                        this._displayedInStage = t._displayedInStage;
                        break
                    }
                    if (t == e || t._displayedInStage) {
                        this._displayedInStage = !0;
                        break
                    }
                    t = t.parent
                }
            }, e._setDisplay = function(t) {
                this._displayedInStage !== t && ((this._displayedInStage = t) ? this.event("display") : this.event("undisplay"))
            }, e._displayChild = function(t, e) {
                var i = t._childs;
                if (i)
                    for (var n = 0, s = i.length; n < s; n++) {
                        var r = i[n];
                        r._getBit(1) && (0 < r._childs.length ? this._displayChild(r, e) : r._setDisplay(e))
                    }
                t._setDisplay(e)
            }, e.contains = function(t) {
                if (t === this) return !0;
                for (; t;) {
                    if (t.parent === this) return !0;
                    t = t.parent
                }
                return !1
            }, e.timerLoop = function(t, e, i, n, s, r) {
                void 0 === s && (s = !0), void 0 === r && (r = !1), this.timer.loop(t, e, i, n, s, r)
            }, e.timerOnce = function(t, e, i, n, s) {
                void 0 === s && (s = !0), this.timer._create(!1, !1, t, e, i, n, s)
            }, e.frameLoop = function(t, e, i, n, s) {
                void 0 === s && (s = !0), this.timer._create(!0, !0, t, e, i, n, s)
            }, e.frameOnce = function(t, e, i, n, s) {
                void 0 === s && (s = !0), this.timer._create(!0, !1, t, e, i, n, s)
            }, e.clearTimer = function(t, e) {
                this.timer.clear(t, e)
            }, u(0, e, "numChildren", function() {
                return this._childs.length
            }), u(0, e, "destroyed", function() {
                return this._destroyed
            }), u(0, e, "parent", function() {
                return this._parent
            }, function(t) {
                this._parent !== t && (t ? (this._parent = t, this.event("added"), this._getBit(1) && (this._setUpNoticeChain(), t.displayedInStage && this._displayChild(this, !0)), t._childChanged(this)) : (this.event("removed"), this._parent._childChanged(), this._getBit(1) && this._displayChild(this, !1), this._parent = t))
            }), u(0, e, "displayedInStage", function() {
                return this._getBit(1) || this._setUpNoticeType(1), this._displayedInStage
            }), o.ARRAY_EMPTY = [], o.PROP_EMPTY = {}, o.NOTICE_DISPLAY = 1, o.MOUSEENABLE = 2, o
        }(),
        et = function(t) {
            function _(t) {
                this._bgground = null, this._border = null, this._rect = null, this.underLine = 0, this.lineHeight = 0, _.__super.call(this), this._padding = _._PADDING, this._spacing = _._SPACING, this._aligns = _._ALIGNS, this._font = d.EMPTY, this._ower = t
            }
            p(_, "t_tl.display.css.CSSStyle", t);
            var e = _.prototype;
            return e.destroy = function() {
                this._ower = null, this._font = null, this._rect = null
            }, e.inherit = function(t) {
                this._font = t._font, this._spacing = t._spacing === _._SPACING ? _._SPACING : t._spacing.slice(), this.lineHeight = t.lineHeight
            }, e._widthAuto = function() {
                return 0 != (262144 & this._type)
            }, e.widthed = function(t) {
                return 0 != (8 & this._type)
            }, e._calculation = function(t, e) {
                if (e.indexOf("%") < 0) return !1;
                var n = this._ower,
                    s = n.parent,
                    r = this._rect;

                function o(t, e, i) {
                    return t * i[0] + e * i[1] + i[2]
                }

                function i(t) {
                    var e = s.width,
                        i = n.width;
                    r.width && (n.width = o(e, i, r.width)), r.height && (n.height = o(e, i, r.height)), r.left && (n.x = o(e, i, r.left)), r.top && (n.y = o(e, i, r.top))
                }
                null === r && (s._getCSSStyle()._type |= 524288, s.on("resize", this, i), this._rect = r = {
                    input: {}
                });
                var a = e.split(" ");
                return a[0] = parseFloat(a[0]) / 100, 1 == a.length ? a[1] = a[2] = 0 : (a[1] = parseFloat(a[1]) / 100, a[2] = parseFloat(a[2])), r[t] = a, r.input[t] = e, i(), !0
            }, e.heighted = function(t) {
                return 0 != (8192 & this._type)
            }, e.size = function(t, e) {
                var i = this._ower,
                    n = !1; - 1 !== t && t != this._ower.width && (this._type |= 8, this._ower.width = t, n = !0), -1 !== e && e != this._ower.height && (this._type |= 8192, this._ower.height = e, n = !0), n && (i._layoutLater(), 524288 & this._type && i.event("resize", this))
            }, e._getAlign = function() {
                return this._aligns[0]
            }, e._getValign = function() {
                return this._aligns[1]
            }, e._getCssFloat = function() {
                return 0 != (32768 & this._type) ? 32768 : 0
            }, e._createFont = function() {
                return 4096 & this._type ? this._font : (this._type |= 4096, this._font = new d(this._font))
            }, e.render = function(t, e, i, n) {
                var s = t.width,
                    r = t.height;
                i -= t.pivotX, n -= t.pivotY, this._bgground && null != this._bgground.color && e.ctx.fillRect(i, n, s, r, this._bgground.color), this._border && this._border.color && e.drawRect(i, n, s, r, this._border.color.strColor, this._border.size)
            }, e.getCSSStyle = function() {
                return this
            }, e.cssText = function(t) {
                this.attrs(_.parseOneCSS(t, ";"))
            }, e.attrs = function(t) {
                if (t)
                    for (var e = 0, i = t.length; e < i; e++) {
                        var n = t[e];
                        this[n[0]] = n[1]
                    }
            }, e.setTransform = function(t) {
                "none" === t ? this._tf = a._TF_EMPTY : this.attrs(_.parseOneCSS(t, ","))
            }, e.translate = function(t, e) {
                this._tf === a._TF_EMPTY && (this._tf = new s), this._tf.translateX = t, this._tf.translateY = e
            }, e.scale = function(t, e) {
                this._tf === a._TF_EMPTY && (this._tf = new s), this._tf.scaleX = t, this._tf.scaleY = e
            }, e._enableLayout = function() {
                return 0 == (2 & this._type) && 0 == (4 & this._type)
            }, u(0, e, "block", t.prototype._$get_block, function(t) {
                t ? this._type |= 1 : this._type &= -2
            }), u(0, e, "valign", function() {
                return _._valigndef[this._aligns[1]]
            }, function(t) {
                this._aligns === _._ALIGNS && (this._aligns = [0, 0, 0]), this._aligns[1] = _._valigndef[t]
            }), u(0, e, "height", null, function(t) {
                if (this._type |= 8192, "string" == typeof t) {
                    if (this._calculation("height", t)) return;
                    t = parseInt(t)
                }
                this.size(-1, t)
            }), u(0, e, "width", null, function(t) {
                if (this._type |= 8, "string" == typeof t) {
                    var e = t.indexOf("auto");
                    if (0 <= e && (this._type |= 262144, t = t.substr(0, e)), this._calculation("width", t)) return;
                    t = parseInt(t)
                }
                this.size(t, -1)
            }), u(0, e, "fontWeight", function() {
                return this._font.weight
            }, function(t) {
                this._createFont().weight = t
            }), u(0, e, "left", null, function(t) {
                var e = this._ower;
                if ("string" == typeof t) {
                    if ("center" === t ? t = "50% -50% 0" : "right" === t && (t = "100% -100% 0"), this._calculation("left", t)) return;
                    t = parseInt(t)
                }
                e.x = t
            }), u(0, e, "_translate", null, function(t) {
                this.translate(t[0], t[1])
            }), u(0, e, "absolute", function() {
                return 0 != (4 & this._type)
            }), u(0, e, "top", null, function(t) {
                var e = this._ower;
                if ("string" == typeof t) {
                    if ("middle" === t ? t = "50% -50% 0" : "bottom" === t && (t = "100% -100% 0"), this._calculation("top", t)) return;
                    t = parseInt(t)
                }
                e.y = t
            }), u(0, e, "align", function() {
                return _._aligndef[this._aligns[0]]
            }, function(t) {
                this._aligns === _._ALIGNS && (this._aligns = [0, 0, 0]), this._aligns[0] = _._aligndef[t]
            }), u(0, e, "bold", function() {
                return this._font.bold
            }, function(t) {
                this._createFont().bold = t
            }), u(0, e, "padding", function() {
                return this._padding
            }, function(t) {
                this._padding = t
            }), u(0, e, "leading", function() {
                return this._spacing[1]
            }, function(t) {
                "string" == typeof t && (t = parseInt(t + "")), this._spacing === _._SPACING && (this._spacing = [0, 0]), this._spacing[1] = t
            }), u(0, e, "lineElement", function() {
                return 0 != (65536 & this._type)
            }, function(t) {
                t ? this._type |= 65536 : this._type &= -65537
            }), u(0, e, "cssFloat", function() {
                return 0 != (32768 & this._type) ? "right" : "left"
            }, function(t) {
                this.lineElement = !1, "right" === t ? this._type |= 32768 : this._type &= -32769
            }), u(0, e, "textDecoration", function() {
                return this._font.decoration
            }, function(t) {
                this._createFont().decoration = t
            }), u(0, e, "whiteSpace", function() {
                return 131072 & this._type ? "nowrap" : ""
            }, function(t) {
                "nowrap" === t && (this._type |= 131072), "none" === t && (this._type &= -131073)
            }), u(0, e, "background", null, function(t) {
                t ? (this._bgground || (this._bgground = {}), this._bgground.color = t, this._ower.conchModel && this._ower.conchModel.bgColor(t), this._type |= 16384, this._ower._renderType |= 256) : this._bgground = null
            }), u(0, e, "wordWrap", function() {
                return 0 == (131072 & this._type)
            }, function(t) {
                t ? this._type &= -131073 : this._type |= 131072
            }), u(0, e, "color", function() {
                return this._font.color
            }, function(t) {
                this._createFont().color = t
            }), u(0, e, "password", function() {
                return this._font.password
            }, function(t) {
                this._createFont().password = t
            }), u(0, e, "backgroundColor", function() {
                return this._bgground ? this._bgground.color : null
            }, function(t) {
                "none" === t ? this._bgground = null : (this._bgground || (this._bgground = {}), this._bgground.color = t), this._ower.conchModel && this._ower.conchModel.bgColor(t), this._ower._renderType |= 256
            }), u(0, e, "font", function() {
                return this._font.toString()
            }, function(t) {
                this._createFont().set(t)
            }), u(0, e, "weight", null, function(t) {
                this._createFont().weight = t
            }), u(0, e, "letterSpacing", function() {
                return this._spacing[0]
            }, function(t) {
                "string" == typeof t && (t = parseInt(t + "")), this._spacing === _._SPACING && (this._spacing = [0, 0]), this._spacing[0] = t
            }), u(0, e, "fontSize", function() {
                return this._font.size
            }, function(t) {
                this._createFont().size = t
            }), u(0, e, "italic", function() {
                return this._font.italic
            }, function(t) {
                this._createFont().italic = t
            }), u(0, e, "fontFamily", function() {
                return this._font.family
            }, function(t) {
                this._createFont().family = t
            }), u(0, e, "stroke", function() {
                return this._font.stroke[0]
            }, function(t) {
                this._createFont().stroke === d._STROKE && (this._font.stroke = [0, "#000000"]), this._font.stroke[0] = t
            }), u(0, e, "strokeColor", function() {
                return this._font.stroke[1]
            }, function(t) {
                this._createFont().stroke === d._STROKE && (this._font.stroke = [0, "#000000"]), this._font.stroke[1] = t
            }), u(0, e, "border", function() {
                return this._border ? this._border.value : ""
            }, function(t) {
                if ("none" != t) {
                    this._border || (this._border = {});
                    var e = (this._border.value = t).split(" ");
                    if (this._border.color = z.create(e[e.length - 1]), 1 == e.length) return this._border.size = 1, void(this._border.type = "solid");
                    var i = 0;
                    0 < e[0].indexOf("px") ? (this._border.size = parseInt(e[0]), i++) : this._border.size = 1, this._border.type = e[i], this._ower._renderType |= 256
                } else this._border = null
            }), u(0, e, "borderColor", function() {
                return this._border && this._border.color ? this._border.color.strColor : null
            }, function(t) {
                t ? (this._border || (this._border = {
                    size: 1,
                    type: "solid"
                }), this._border.color = null == t ? null : z.create(t), this._ower.conchModel && this._ower.conchModel.border(this._border.color.strColor), this._ower._renderType |= 256) : this._border = null
            }), u(0, e, "position", function() {
                return 4 & this._type ? "absolute" : ""
            }, function(t) {
                "absolute" == t ? this._type |= 4 : this._type &= -5
            }), u(0, e, "display", null, function(t) {
                switch (t) {
                    case "":
                        this._type &= -3, this.visible = !0;
                        break;
                    case "none":
                        this._type |= 2, this.visible = !1, this._ower._layoutLater()
                }
            }), u(0, e, "paddingLeft", function() {
                return this.padding[3]
            }), u(0, e, "paddingTop", function() {
                return this.padding[0]
            }), u(0, e, "_scale", null, function(t) {
                this._ower.scale(t[0], t[1])
            }), u(0, e, "_rotate", null, function(t) {
                this._ower.rotation = t
            }), _.parseOneCSS = function(t, e) {
                for (var i, n = [], s = t.split(e), r = 0, o = s.length; r < o; r++) {
                    var a = s[r],
                        h = a.indexOf(":"),
                        l = a.substr(0, h).replace(/^\s+|\s+$/g, "");
                    if (0 != l.length) {
                        var u = a.substr(h + 1).replace(/^\s+|\s+$/g, ""),
                            c = [l, u];
                        switch (l) {
                            case "italic":
                            case "bold":
                                c[1] = "true" == u;
                                break;
                            case "line-height":
                                c[0] = "lineHeight", c[1] = parseInt(u);
                                break;
                            case "font-size":
                                c[0] = "fontSize", c[1] = parseInt(u);
                                break;
                            case "padding":
                                1 < (i = u.split(" ")).length || (i[1] = i[2] = i[3] = i[0]), c[1] = [parseInt(i[0]), parseInt(i[1]), parseInt(i[2]), parseInt(i[3])];
                                break;
                            case "rotate":
                                c[0] = "_rotate", c[1] = parseFloat(u);
                                break;
                            case "scale":
                                i = u.split(" "), c[0] = "_scale", c[1] = [parseFloat(i[0]), parseFloat(i[1])];
                                break;
                            case "translate":
                                i = u.split(" "), c[0] = "_translate", c[1] = [parseInt(i[0]), parseInt(i[1])];
                                break;
                            default:
                                (c[0] = _._CSSTOVALUE[l]) || (c[0] = l)
                        }
                        n.push(c)
                    }
                }
                return n
            }, _.parseCSS = function(t, e) {
                for (var i; null != (i = _._parseCSSRegExp.exec(t));) _.styleSheets[i[1]] = _.parseOneCSS(i[2], ";")
            }, _.EMPTY = new _(null), _._CSSTOVALUE = {
                "letter-spacing": "letterSpacing",
                "line-spacing": "lineSpacing",
                "white-space": "whiteSpace",
                "line-height": "lineHeight",
                "scale-x": "scaleX",
                "scale-y": "scaleY",
                "translate-x": "translateX",
                "translate-y": "translateY",
                "font-family": "fontFamily",
                "font-weight": "fontWeight",
                "vertical-align": "valign",
                "text-decoration": "textDecoration",
                "background-color": "backgroundColor",
                "border-color": "borderColor",
                float: "cssFloat"
            }, _._parseCSSRegExp = new RegExp("([.#]\\w+)\\s*{([\\s\\S]*?)}", "g"), _._aligndef = {
                left: 0,
                center: 1,
                right: 2,
                0: "left",
                1: "center",
                2: "right"
            }, _._valigndef = {
                top: 0,
                middle: 1,
                bottom: 2,
                0: "top",
                1: "middle",
                2: "bottom"
            }, _.styleSheets = {}, _.ALIGN_CENTER = 1, _.ALIGN_RIGHT = 2, _.VALIGN_MIDDLE = 1, _.VALIGN_BOTTOM = 2, _._CSS_BLOCK = 1, _._DISPLAY_NONE = 2, _._ABSOLUTE = 4, _._WIDTH_SET = 8, _._PADDING = [0, 0, 0, 0], _._RECT = [-1, -1, -1, -1], _._SPACING = [0, 0], _._ALIGNS = [0, 0, 0], _.ADDLAYOUTED = 512, _._NEWFONT = 4096, _._HEIGHT_SET = 8192, _._BACKGROUND_SET = 16384, _._FLOAT_RIGHT = 32768, _._LINE_ELEMENT = 65536, _._NOWARP = 131072, _._WIDTHAUTO = 262144, _._LISTERRESZIE = 524288, _
        }(a),
        it = function(t) {
            function o() {
                this.url = null, this.audio = null, this.loaded = !1, o.__super.call(this)
            }
            p(o, "t_tl.media.h5audio.AudioSound", l);
            var e = o.prototype;
            return e.dispose = function() {
                var t = o._audioCache[this.url];
                t && (t.src = "", delete o._audioCache[this.url])
            }, e.load = function(t) {
                var e;
                if (t = R.formatURL(t), (this.url = t) == P._tMusic ? (o._initMusicAudio(), (e = o._musicAudio).src != t && (o._audioCache[e.src] = null, e = null)) : e = o._audioCache[t], e && 2 <= e.readyState) this.event("complete");
                else {
                    e || (t == P._tMusic ? (o._initMusicAudio(), e = o._musicAudio) : e = B.createElement("audio"), (o._audioCache[t] = e).src = t), e.addEventListener("canplaythrough", n), e.addEventListener("error", s);
                    var i = this;
                    (this.audio = e).load ? e.load() : s()
                }

                function n() {
                    r(), i.loaded = !0, i.event("complete")
                }

                function s() {
                    e.load = null, r(), i.event("error")
                }

                function r() {
                    e.removeEventListener("canplaythrough", n), e.removeEventListener("error", s)
                }
            }, e.play = function(t, e) {
                if (void 0 === t && (t = 0), void 0 === e && (e = 0), !this.url) return null;
                var i, n;
                if (!(i = this.url == P._tMusic ? o._musicAudio : o._audioCache[this.url])) return null;
                n = $.getItem("audio:" + this.url), D.isConchApp ? n || ((n = B.createElement("audio")).src = this.url) : this.url == P._tMusic ? (o._initMusicAudio(), (n = o._musicAudio).src = this.url) : n = n || i.cloneNode(!0);
                var s = new _t(n);
                return s.url = this.url, s.loops = e, s.startTime = t, s.play(), P.addChannel(s), s
            }, u(0, e, "duration", function() {
                var t;
                return (t = o._audioCache[this.url]) ? t.duration : 0
            }), o._initMusicAudio = function() {
                o._musicAudio || (o._musicAudio || (o._musicAudio = B.createElement("audio")), D.isConchApp || B.document.addEventListener("mousedown", o._makeMusicOK))
            }, o._makeMusicOK = function() {
                B.document.removeEventListener("mousedown", o._makeMusicOK), o._musicAudio.src ? o._musicAudio.play() : (o._musicAudio.src = "", o._musicAudio.load())
            }, o._audioCache = {}, o._musicAudio = null, o
        }(),
        nt = function(t) {
            function e() {
                this.url = null, this.loops = 0, this.startTime = NaN, this.isStopped = !1, this.completeHandler = null, e.__super.call(this)
            }
            p(e, "t_tl.media.SoundChannel", l);
            var i = e.prototype;
            return i.play = function() {}, i.stop = function() {}, i.pause = function() {}, i.resume = function() {}, i.__runComplete = function(t) {
                t && t.run()
            }, u(0, i, "volume", function() {
                return 1
            }, function(t) {}), u(0, i, "position", function() {
                return 0
            }), u(0, i, "duration", function() {
                return 0
            }), e
        }(),
        st = function(t) {
            function e() {
                e.__super.call(this)
            }
            p(e, "t_tl.media.Sound", l);
            var i = e.prototype;
            return i.load = function(t) {}, i.play = function(t, e) {
                return void 0 === t && (t = 0), void 0 === e && (e = 0), null
            }, i.dispose = function() {}, u(0, i, "duration", function() {
                return 0
            }), e
        }(),
        rt = function(t) {
            function n() {
                this.url = null, this.loaded = !1, this.data = null, this.audioBuffer = null, this.__toPlays = null, this._disposed = !1, n.__super.call(this)
            }
            p(n, "t_tl.media.webaudio.WebAudioSound", l);
            var e = n.prototype;
            return e.load = function(t) {
                var e = this;
                if (t = R.formatURL(t), this.url = t, this.audioBuffer = n._dataCache[t], this.audioBuffer) this._loaded(this.audioBuffer);
                else if (n.e.on("loaded:" + t, this, this._loaded), n.e.on("err:" + t, this, this._err), !n.__loadingSound[t]) {
                    n.__loadingSound[t] = !0;
                    var i = new B.window.XMLHttpRequest;
                    i.open("GET", t, !0), i.responseType = "arraybuffer", i.onload = function() {
                        e._disposed ? e._removeLoadEvents() : (e.data = i.response, n.buffs.push({
                            buffer: e.data,
                            url: e.url
                        }), n.decode())
                    }, i.onerror = function(t) {
                        e._err()
                    }, i.send()
                }
            }, e._err = function() {
                this._removeLoadEvents(), n.__loadingSound[this.url] = !1, this.event("error")
            }, e._loaded = function(t) {
                this._removeLoadEvents(), this._disposed || (this.audioBuffer = t, n._dataCache[this.url] = this.audioBuffer, this.loaded = !0, this.event("complete"))
            }, e._removeLoadEvents = function() {
                n.e.off("loaded:" + this.url, this, this._loaded), n.e.off("err:" + this.url, this, this._err)
            }, e.__playAfterLoaded = function() {
                if (this.__toPlays) {
                    var t, e, i, n = 0;
                    for (t = (e = this.__toPlays).length, n = 0; n < t; n++)(i = e[n])[2] && !i[2].isStopped && this.play(i[0], i[1], i[2]);
                    this.__toPlays.length = 0
                }
            }, e.play = function(t, e, i) {
                return void 0 === t && (t = 0), void 0 === e && (e = 0), i = i || new dt, this.audioBuffer || this.url && (this.__toPlays || (this.__toPlays = []), this.__toPlays.push([t, e, i]), this.once("complete", this, this.__playAfterLoaded), this.load(this.url)), i.url = this.url, i.loops = e, i.audioBuffer = this.audioBuffer, i.startTime = t, i.play(), P.addChannel(i), i
            }, e.dispose = function() {
                this._disposed = !0, delete n._dataCache[this.url], delete n.__loadingSound[this.url], this.audioBuffer = null, this.data = null, this.__toPlays = []
            }, u(0, e, "duration", function() {
                return this.audioBuffer ? this.audioBuffer.duration : 0
            }), n.decode = function() {
                n.buffs.length <= 0 || n.isDecoding || (n.isDecoding = !0, n.tInfo = n.buffs.shift(), n.ctx.decodeAudioData(n.tInfo.buffer, n._done, n._fail))
            }, n._done = function(t) {
                n.e.event("loaded:" + n.tInfo.url, t), n.isDecoding = !1, n.decode()
            }, n._fail = function() {
                n.e.event("err:" + n.tInfo.url, null), n.isDecoding = !1, n.decode()
            }, n._playEmptySound = function() {
                if (null != n.ctx) {
                    var t = n.ctx.createBufferSource();
                    t.buffer = n._miniBuffer, t.connect(n.ctx.destination), t.start(0, 0, 0)
                }
            }, n._unlock = function() {
                n._unlocked || (n._playEmptySound(), "running" == n.ctx.state && (B.document.removeEventListener("mousedown", n._unlock, !0), B.document.removeEventListener("touchend", n._unlock, !0), n._unlocked = !0))
            }, n.initWebAudio = function() {
                "running" != n.ctx.state && (n._unlock(), B.document.addEventListener("mousedown", n._unlock, !0), B.document.addEventListener("touchend", n._unlock, !0))
            }, n._dataCache = {}, n.buffs = [], n.isDecoding = !1, n._unlocked = !1, n.tInfo = null, n.__loadingSound = {}, h(n, ["window", function() {
                return this.window = B.window
            }, "webAudioEnabled", function() {
                return this.webAudioEnabled = n.window.AudioContext || n.window.webkitAudioContext || n.window.mozAudioContext
            }, "ctx", function() {
                return this.ctx = n.webAudioEnabled ? new(n.window.AudioContext || n.window.webkitAudioContext || n.window.mozAudioContext) : void 0
            }, "_miniBuffer", function() {
                return this._miniBuffer = n.ctx.createBuffer(1, 1, 22050)
            }, "e", function() {
                return this.e = new l
            }]), n
        }(),
        ot = function(t) {
            function e() {
                this._responseType = null, this._data = null, e.__super.call(this), this._http = new B.window.XMLHttpRequest
            }
            p(e, "t_tl.net.HttpRequest", l);
            var i = e.prototype;
            return i.send = function(t, e, i, n, s) {
                void 0 === i && (i = "get"), void 0 === n && (n = "text"), this._responseType = n, this._data = null;
                var r = this,
                    o = this._http;
                if (o.open(i, t, !0), s)
                    for (var a = 0; a < s.length; a++) o.setRequestHeader(s[a++], s[a]);
                else D.isConchApp || (e && "string" != typeof e ? o.setRequestHeader("Content-Type", "application/json") : o.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"));
                o.responseType = "arraybuffer" !== n ? "text" : "arraybuffer", o.onerror = function(t) {
                    r._onError(t)
                }, o.onabort = function(t) {
                    r._onAbort(t)
                }, o.onprogress = function(t) {
                    r._onProgress(t)
                }, o.onload = function(t) {
                    r._onLoad(t)
                }, o.send(e)
            }, i._onProgress = function(t) {
                t && t.lengthComputable && this.event("progress", t.loaded / t.total)
            }, i._onAbort = function(t) {
                this.error("Request was aborted by user")
            }, i._onError = function(t) {
                this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText)
            }, i._onLoad = function(t) {
                var e = this._http,
                    i = void 0 !== e.status ? e.status : 200;
                200 === i || 204 === i || 0 === i ? this.complete() : this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL)
            }, i.error = function(t) {
                this.clear(), this.event("error", t)
            }, i.complete = function() {
                this.clear();
                var e = !0;
                try {
                    "json" === this._responseType ? this._data = JSON.parse(this._http.responseText) : "xml" === this._responseType ? this._data = q.parseXMLFromString(this._http.responseText) : this._data = this._http.response || this._http.responseText
                } catch (t) {
                    e = !1, this.error(t.message)
                }
                e && this.event("complete", this._data instanceof Array ? [this._data] : this._data)
            }, i.clear = function() {
                var t = this._http;
                t.onerror = t.onabort = t.onprogress = t.onload = null
            }, u(0, i, "url", function() {
                return this._http.responseURL
            }), u(0, i, "http", function() {
                return this._http
            }), u(0, i, "data", function() {
                return this._data
            }), e
        }(),
        at = function(t) {
            function M() {
                this._data = null, this._class = null, this._url = null, this._type = null, this._cache = !1, this._http = null, this._customParse = !1, M.__super.call(this)
            }
            p(M, "t_tl.net.Loader", l);
            var e = M.prototype;
            return e.load = function(t, e, i, n, s) {
                if (void 0 === i && (i = !0), void 0 === s && (s = !1), 0 === (this._url = t).indexOf("data:image") ? this._type = e = "image" : (this._type = e || (e = this.getTypeFromUrl(t)), t = R.formatURL(t)), this._cache = i, this._data = null, !s && M.loadedMap[t]) return this._data = M.loadedMap[t], this.event("progress", 1), void this.event("complete", this._data);
                if (n && M.setGroup(t, n), null != M.parserMap[e]) return this._customParse = !0, void(M.parserMap[e] instanceof t_tl.utils.Handler ? M.parserMap[e].runWith(this) : M.parserMap[e].call(null, this));
                if ("image" === e || "htmlimage" === e || "nativeimage" === e) return this._loadImage(t);
                if ("sound" === e) return this._loadSound(t);
                if ("ttf" === e) return this._loadTTF(t);
                var r;
                switch (e) {
                    case "atlas":
                    case "plf":
                        r = "json";
                        break;
                    case "font":
                        r = "xml";
                        break;
                    case "pkm":
                        r = "arraybuffer";
                        break;
                    default:
                        r = e
                }
                M.preLoadedMap[t] ? this.onLoaded(M.preLoadedMap[t]) : (this._http || (this._http = new ot, this._http.on("progress", this, this.onProgress), this._http.on("error", this, this.onError), this._http.on("complete", this, this.onLoaded)), this._http.send(t, null, "get", r))
            }, e.getTypeFromUrl = function(t) {
                var e = q.getFileExtension(t);
                return e ? M.typeMap[e] : (console.warn("Not recognize the resources suffix", t), "text")
            }, e._loadTTF = function(t) {
                t = R.formatURL(t);
                var e = new L;
                e.complete = v.create(this, this.onLoaded), e.load(t)
            }, e._loadImage = function(e) {
                e = R.formatURL(e);
                var i, t = this;

                function n() {
                    i.onload = null, i.onerror = null, delete M.imgCache[e]
                }
                var s = function() {
                        n(), t.onLoaded(i)
                    },
                    r = function() {
                        n(), t.event("error", "Load image failed")
                    };
                "nativeimage" === this._type ? ((i = new B.window.Image).crossOrigin = "", i.onload = s, i.onerror = r, i.src = e, M.imgCache[e] = i) : new Tt.create(e, {
                    onload: s,
                    onerror: r,
                    onCreate: function(t) {
                        i = t, M.imgCache[e] = t
                    }
                })
            }, e._loadSound = function(t) {
                var e = new P._soundClass,
                    i = this;

                function n() {
                    e.offAll()
                }
                e.on("complete", this, function() {
                    n(), i.onLoaded(e)
                }), e.on("error", this, function() {
                    n(), e.dispose(), i.event("error", "Load sound failed")
                }), e.load(t)
            }, e.onProgress = function(t) {
                "atlas" === this._type ? this.event("progress", .3 * t) : this.event("progress", t)
            }, e.onError = function(t) {
                this.event("error", t)
            }, e.onLoaded = function(t) {
                var e = this._type;
                if ("plf" == e) this.parsePLFData(t), this.complete(t);
                else if ("image" === e) {
                    var i = new ut(t);
                    i.url = this._url, this.complete(i)
                } else if ("sound" === e || "htmlimage" === e || "nativeimage" === e) this.complete(t);
                else if ("atlas" === e) {
                    if (!t.src && !t._setContext) {
                        if (!this._data) {
                            if ((this._data = t).meta && t.meta.image)
                                for (var n = t.meta.image.split(","), s = 0 <= this._url.indexOf("/") ? "/" : "\\", r = this._url.lastIndexOf(s), o = 0 <= r ? this._url.substr(0, r + 1) : "", a = 0, h = n.length; a < h; a++) n[a] = o + n[a];
                            else n = [this._url.replace(".json", ".png")];
                            n.reverse(), t.toLoads = n, t.pics = []
                        }
                        return this.event("progress", .3 + 1 / n.length * .6), this._loadImage(n.pop())
                    }
                    if (this._data.pics.push(t), 0 < this._data.toLoads.length) return this.event("progress", .3 + 1 / this._data.toLoads.length * .6), this._loadImage(this._data.toLoads.pop());
                    var l = this._data.frames,
                        u = this._url.split("?")[0],
                        c = this._data.meta && this._data.meta.prefix ? this._data.meta.prefix : u.substring(0, u.lastIndexOf(".")) + "/",
                        _ = this._data.pics,
                        d = R.formatURL(this._url),
                        f = M.atlasMap[d] || (M.atlasMap[d] = []);
                    f.dir = c;
                    var p = 1;
                    if (this._data.meta && this._data.meta.scale && 1 != this._data.meta.scale)
                        for (var g in p = parseFloat(this._data.meta.scale), l) {
                            var m = l[g],
                                v = _[m.frame.idx ? m.frame.idx : 0],
                                y = R.formatURL(c + g);
                            v.scaleRate = p, M.cacheRes(y, ut.create(v, m.frame.x, m.frame.y, m.frame.w, m.frame.h, m.spriteSourceSize.x, m.spriteSourceSize.y, m.sourceSize.w, m.sourceSize.h)), M.loadedMap[y].url = y, f.push(y)
                        } else
                            for (g in l) v = _[(m = l[g]).frame.idx ? m.frame.idx : 0], y = R.formatURL(c + g), M.cacheRes(y, ut.create(v, m.frame.x, m.frame.y, m.frame.w, m.frame.h, m.spriteSourceSize.x, m.spriteSourceSize.y, m.sourceSize.w, m.sourceSize.h)), M.loadedMap[y].url = y, f.push(y);
                    delete this._data.pics, this.complete(this._data)
                } else if ("font" == e) {
                    if (!t.src) return this._data = t, this.event("progress", .5), this._loadImage(this._url.replace(".fnt", ".png"));
                    var w = new S;
                    w.parseFont(this._data, t);
                    var x = this._url.split(".fnt")[0].split("/"),
                        T = x[x.length - 1];
                    gt.registerBitmapFont(T, w), this._data = w, this.complete(this._data)
                } else if ("pkm" == e) {
                    var b = Tt.create(t, this._url),
                        C = new ut(b);
                    C.url = this._url, this.complete(C)
                } else this.complete(t)
            }, e.parsePLFData = function(t) {
                var e, i, n;
                for (e in t) switch (n = t[e], e) {
                    case "json":
                    case "text":
                        for (i in n) M.preLoadedMap[R.formatURL(i)] = n[i];
                        break;
                    default:
                        for (i in n) M.preLoadedMap[R.formatURL(i)] = n[i]
                }
            }, e.complete = function(t) {
                this._data = t, this._customParse ? this.event("loaded", t instanceof Array ? [t] : t) : (M._loaders.push(this), M._isWorking || M.checkNext())
            }, e.endLoad = function(t) {
                t && (this._data = t), this._cache && M.cacheRes(this._url, this._data), this.event("progress", 1), this.event("complete", this.data instanceof Array ? [this.data] : this.data)
            }, u(0, e, "url", function() {
                return this._url
            }), u(0, e, "data", function() {
                return this._data
            }), u(0, e, "cache", function() {
                return this._cache
            }), u(0, e, "type", function() {
                return this._type
            }), M.checkNext = function() {
                M._isWorking = !0;
                for (var t = B.now(); M._startIndex < M._loaders.length;)
                    if (B.now(), M._loaders[M._startIndex].endLoad(), M._startIndex++, B.now() - t > M.maxTimeOut) return console.warn("loader callback cost a long time:" + (B.now() - t) + " url=" + M._loaders[M._startIndex - 1].url), void b.timer.frameOnce(1, null, M.checkNext);
                M._loaders.length = 0, M._startIndex = 0, M._isWorking = !1
            }, M.clearRes = function(t, e) {
                void 0 === e && (e = !1), t = R.formatURL(t);
                var i = M.getAtlas(t);
                if (i) {
                    for (var n = 0, s = i.length; n < s; n++) {
                        var r = i[n],
                            o = M.getRes(r);
                        delete M.loadedMap[r], o && o.destroy(e)
                    }
                    i.length = 0, delete M.atlasMap[t], delete M.loadedMap[t]
                } else {
                    var a = M.loadedMap[t];
                    a && (delete M.loadedMap[t], a instanceof t_tl.resource.Texture && a.bitmap && a.destroy(e))
                }
            }, M.clearTextureRes = function(t) {
                t = R.formatURL(t);
                var e = t_tl.net.Loader.getAtlas(t),
                    i = e && 0 < e.length ? t_tl.net.Loader.getRes(e[0]) : t_tl.net.Loader.getRes(t);
                i && i.bitmap && (D.isConchApp && !D.isConchWebGL ? i.bitmap.source.releaseTexture && i.bitmap.source.releaseTexture() : null == i.bitmap._atlaser && i.bitmap.releaseResource(!0))
            }, M.getRes = function(t) {
                return M.loadedMap[R.formatURL(t)]
            }, M.getAtlas = function(t) {
                return M.atlasMap[R.formatURL(t)]
            }, M.cacheRes = function(t, e) {
                t = R.formatURL(t), null != M.loadedMap[t] ? console.warn("Resources already exist,is repeated loading:", t) : M.loadedMap[t] = e
            }, M.setGroup = function(t, e) {
                M.groupMap[e] || (M.groupMap[e] = []), M.groupMap[e].push(t)
            }, M.clearResByGroup = function(t) {
                if (M.groupMap[t]) {
                    var e = M.groupMap[t],
                        i = 0,
                        n = e.length;
                    for (i = 0; i < n; i++) M.clearRes(e[i]);
                    e.length = 0
                }
            }, M.TEXT = "text", M.JSON = "json", M.XML = "xml", M.BUFFER = "arraybuffer", M.IMAGE = "image", M.SOUND = "sound", M.ATLAS = "atlas", M.FONT = "font", M.TTF = "ttf", M.PLF = "plf", M.PKM = "pkm", M.typeMap = {
                png: "image",
                jpg: "image",
                jpeg: "image",
                txt: "text",
                json: "json",
                xml: "xml",
                als: "atlas",
                atlas: "atlas",
                mp3: "sound",
                ogg: "sound",
                wav: "sound",
                part: "json",
                fnt: "font",
                pkm: "pkm",
                ttf: "ttf",
                plf: "plf"
            }, M.parserMap = {}, M.groupMap = {}, M.maxTimeOut = 100, M.loadedMap = {}, M.preLoadedMap = {}, M.atlasMap = {}, M._loaders = [], M._isWorking = !1, M._startIndex = 0, M.imgCache = {}, M
        }(),
        ht = function(t) {
            var _;

            function d() {
                this.retryNum = 1, this.retryDelay = 0, this.maxLoader = 5, this._loaders = [], this._loaderCount = 0, this._resInfos = [], this._infoPool = [], this._maxPriority = 5, this._failRes = {}, d.__super.call(this);
                for (var t = 0; t < this._maxPriority; t++) this._resInfos[t] = []
            }
            p(d, "t_tl.net.LoaderManager", l);
            var e = d.prototype;
            return e.create = function(t, i, e, n, s, r, o, a) {
                if (void 0 === r && (r = 1), void 0 === o && (o = !0), t instanceof Array) {
                    var h = t,
                        l = h.length,
                        u = 0;
                    if (e) var c = v.create(e.caller, e.method, e.args, !1);
                    for (var _ = 0; _ < l; _++) {
                        var d = h[_];
                        "string" == typeof d && (d = h[_] = {
                            url: d
                        }), d.progress = 0
                    }
                    for (_ = 0; _ < l; _++) {
                        d = h[_];
                        var f = e ? v.create(null, m, [d], !1) : null,
                            p = e || i ? v.create(null, g, [d]) : null;
                        this._create(d.url, p, f, d.clas || n, d.params || s, d.priority || r, o, d.group || a)
                    }

                    function g(t, e) {
                        u++, t.progress = 1, u === l && i && i.run()
                    }

                    function m(t, e) {
                        t.progress = e;
                        for (var i = 0, n = 0; n < l; n++) {
                            i += h[n].progress
                        }
                        var s = i / l;
                        c.runWith(s)
                    }
                    return !0
                }
                return this._create(t, i, e, n, s, r, o, a)
            }, e._create = function(e, i, t, n, s, r, o, a) {
                void 0 === r && (r = 1), void 0 === o && (o = !0);
                var h = R.formatURL(e),
                    l = this.getRes(h);
                if (l) !l.hasOwnProperty("loaded") || l.loaded ? (t && t.runWith(1), i && i.run()) : i && b.loader._createListener(e, i.caller, i.method, i.args, !0, !1);
                else {
                    var u = q.getFileExtension(e),
                        c = d.createMap[u];
                    if (!c) throw new Error("LoaderManager:unknown file(" + e + ") extension with: " + u + ".");
                    n || (n = c[0]);
                    var _ = c[1];
                    if ("atlas" == u) this.load(e, i, t, _, r, o);
                    else {
                        n === ut && (_ = "htmlimage"), (l = n ? new n : null).hasOwnProperty("_loaded") && (l._loaded = !1), l._setUrl(e), a && l._setGroup(a), this._createLoad(l, e, v.create(null, function(t) {
                            l && !l.destroyed && t && l.onAsynLoaded.call(l, e, t, s), i && i.run();
                            b.loader.event(e)
                        }), t, _, r, !1, a, !0), o && this.cacheRes(h, l)
                    }
                }
                return l
            }, e.load = function(t, e, i, n, s, r, o, a) {
                var h = this;
                if (void 0 === s && (s = 1), void 0 === r && (r = !0), void 0 === a && (a = !1), t instanceof Array) return this._loadAssets(t, e, i, n, s, r, o);
                var l = at.getRes(t);
                if (null != l) b.timer.frameOnce(1, null, function() {
                    i && i.runWith(1), e && e.runWith(l), h._loaderCount || h.event("complete")
                });
                else {
                    var u = d._resMap[t];
                    u ? (e && u._createListener("complete", e.caller, e.method, e.args, !1, !1), i && u._createListener("progress", i.caller, i.method, i.args, !1, !1)) : ((u = this._infoPool.length ? this._infoPool.pop() : new _).url = t, u.type = n, u.cache = r, u.group = o, u.ignoreCache = a, e && u.on("complete", e.caller, e.method, e.args), i && u.on("progress", i.caller, i.method, i.args), d._resMap[t] = u, s = s < this._maxPriority ? s : this._maxPriority - 1, this._resInfos[s].push(u), this._next())
                }
                return this
            }, e._createLoad = function(t, e, i, n, s, r, o, a, h) {
                var l = this;
                if (void 0 === r && (r = 1), void 0 === o && (o = !0), void 0 === h && (h = !1), e instanceof Array) return this._loadAssets(e, i, n, s, r, o, a);
                var u = at.getRes(e);
                if (null != u) b.timer.frameOnce(1, null, function() {
                    n && n.runWith(1), i && i.runWith(u), l._loaderCount || l.event("complete")
                });
                else {
                    var c = d._resMap[e];
                    c ? (i && c._createListener("complete", i.caller, i.method, i.args, !1, !1), n && c._createListener("progress", n.caller, n.method, n.args, !1, !1)) : ((c = this._infoPool.length ? this._infoPool.pop() : new _).url = e, c.clas = t, c.type = s, c.cache = o, c.group = a, c.ignoreCache = h, i && c.on("complete", i.caller, i.method, i.args), n && c.on("progress", n.caller, n.method, n.args), d._resMap[e] = c, r = r < this._maxPriority ? r : this._maxPriority - 1, this._resInfos[r].push(c), this._next())
                }
                return this
            }, e._next = function() {
                if (!(this._loaderCount >= this.maxLoader)) {
                    for (var t = 0; t < this._maxPriority; t++)
                        for (var e = this._resInfos[t]; 0 < e.length;) {
                            var i = e.shift();
                            if (i) return this._doLoad(i)
                        }
                    this._loaderCount || this.event("complete")
                }
            }, e._doLoad = function(e) {
                this._loaderCount++;
                var i = this._loaders.length ? this._loaders.pop() : new at;
                i.on("complete", null, s), i.on("progress", null, function(t) {
                    e.event("progress", t)
                }), i.on("error", null, function(t) {
                    s(null)
                });
                var n = this;

                function s(t) {
                    i.offAll(), i._data = null, i._customParse = !1, n._loaders.push(i), n._endLoad(e, t instanceof Array ? [t] : t), n._loaderCount--, n._next()
                }
                i._class = e.clas, i.load(e.url, e.type, e.cache, e.group, e.ignoreCache)
            }, e._endLoad = function(t, e) {
                var i = t.url;
                if (null == e) {
                    var n = this._failRes[i] || 0;
                    if (n < this.retryNum) return console.warn("[warn]Retry to load:", i), this._failRes[i] = n + 1, void b.timer.once(this.retryDelay, this, this._addReTry, [t], !1);
                    console.warn("[error]Failed to load:", i), this.event("error", i)
                }
                this._failRes[i] && (this._failRes[i] = 0), delete d._resMap[i], t.event("complete", e), t.offAll(), this._infoPool.push(t)
            }, e._addReTry = function(t) {
                this._resInfos[this._maxPriority - 1].push(t), this._next()
            }, e.clearRes = function(t, e) {
                void 0 === e && (e = !1), at.clearRes(t, e)
            }, e.getRes = function(t) {
                return at.getRes(t)
            }, e.cacheRes = function(t, e) {
                at.cacheRes(t, e)
            }, e.clearTextureRes = function(t) {
                at.clearTextureRes(t)
            }, e.setGroup = function(t, e) {
                at.setGroup(t, e)
            }, e.clearResByGroup = function(t) {
                at.clearResByGroup(t)
            }, e.clearUnLoaded = function() {
                for (var t = 0; t < this._maxPriority; t++) {
                    for (var e = this._resInfos[t], i = e.length - 1; - 1 < i; i--) {
                        var n = e[i];
                        n && (n.offAll(), this._infoPool.push(n))
                    }
                    e.length = 0
                }
                this._loaderCount = 0, d._resMap = {}
            }, e.cancelLoadByUrls = function(t) {
                if (t)
                    for (var e = 0, i = t.length; e < i; e++) this.cancelLoadByUrl(t[e])
            }, e.cancelLoadByUrl = function(t) {
                for (var e = 0; e < this._maxPriority; e++)
                    for (var i = this._resInfos[e], n = i.length - 1; - 1 < n; n--) {
                        var s = i[n];
                        s && s.url === t && (i[n] = null, s.offAll(), this._infoPool.push(s))
                    }
                d._resMap[t] && delete d._resMap[t]
            }, e._loadAssets = function(t, i, o, e, n, s, r) {
                void 0 === n && (n = 1), void 0 === s && (s = !0);
                for (var a = t.length, h = 0, l = 0, u = [], c = !0, _ = 0; _ < a; _++) {
                    var d = t[_];
                    "string" == typeof d && (d = {
                        url: d,
                        type: e,
                        size: 1,
                        priority: n
                    }), d.size || (d.size = 1), d.progress = 0, l += d.size, u.push(d);
                    var f = o ? v.create(null, m, [d], !1) : null,
                        p = i || o ? v.create(null, g, [d]) : null;
                    this.load(d.url, p, f, d.type, d.priority || 1, s, d.group || r)
                }

                function g(t, e) {
                    h++, t.progress = 1, e || (c = !1), h === a && i && i.runWith(c)
                }

                function m(t, e) {
                    if (null != o) {
                        t.progress = e;
                        for (var i = 0, n = 0; n < u.length; n++) {
                            var s = u[n];
                            i += s.size * s.progress
                        }
                        var r = i / l;
                        o.runWith(r)
                    }
                }
                return this
            }, d.cacheRes = function(t, e) {
                at.cacheRes(t, e)
            }, d._resMap = {}, h(d, ["createMap", function() {
                return this.createMap = {
                    atlas: [null, "atlas"]
                }
            }]), d.__init$ = function() {
                _ = function(t) {
                    function e() {
                        this.url = null, this.type = null, this.cache = !1, this.group = null, this.ignoreCache = !1, this.clas = null, e.__super.call(this)
                    }
                    return p(e, "", l), e
                }()
            }, d
        }(),
        lt = (function(t) {
            function s(t) {
                s.__super.call(this), t || (t = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0]), this._mat = new Float32Array(16), this._alpha = new Float32Array(4);
                for (var e = 0, i = 0, n = 0; n < 20; n++) n % 5 != 4 ? this._mat[e++] = t[n] : this._alpha[i++] = t[n];
                this._action = I.createFilterAction(32), this._action.data = this
            }
            p(s, "t_tl.filters.ColorFilter", m);
            var e = s.prototype;
            b.imps(e, {
                "t_tl.filters.IFilter": !0
            }), e.callNative = function(t) {
                t._$P.cf = this;
                t.conchModel && t.conchModel.setFilterMatrix && t.conchModel.setFilterMatrix(this._mat, this._alpha)
            }, u(0, e, "type", function() {
                return 32
            }), u(0, e, "action", function() {
                return this._action
            })
        }(), function(t) {
            function n(t, e, i) {
                this._endian = null, this._stamp = NaN, this._socket = null, this._connected = !1, this._addInputPosition = 0, this._input = null, this._output = null, this.timeout = 0, this.objectEncoding = 0, this.disableInput = !1, this._byteClass = null, this.protocols = [], void 0 === e && (e = 0), n.__super.call(this), this._byteClass = i || W, this.endian = "bigEndian", this.timeout = 2e4, this._addInputPosition = 0, t && 0 < e && e < 65535 && this.connect(t, e)
            }
            p(n, "t_tl.net.Socket", l);
            var e = n.prototype;
            e.connect = function(t, e) {
                var i = "ws://" + t + ":" + e;
                i = "https:" == B.window.location.protocol ? "wss://" + t + ":" + e : "ws://" + t + ":" + e, this.connectByUrl(i)
            }, e.connectByUrl = function(t) {
                var e = this;
                null != this._socket && this.close(), this._socket && this.cleanSocket(), this.protocols && 0 != this.protocols.length ? this._socket = new B.window.WebSocket(t, this.protocols) : this._socket = new B.window.WebSocket(t), this._socket.binaryType = "arraybuffer", this._output = new this._byteClass, this._output.endian = this.endian, this._input = new this._byteClass, this._input.endian = this.endian, this._addInputPosition = 0, this._socket.onopen = function(t) {
                    e._onOpen(t)
                }, this._socket.onmessage = function(t) {
                    e._onMessage(t)
                }, this._socket.onclose = function(t) {
                    e._onClose(t)
                }, this._socket.onerror = function(t) {
                    e._onError(t)
                }
            }, e.cleanSocket = function() {
                try {
                    this._socket.close()
                } catch (t) {}
                this._connected = !1, this._socket.onopen = null, this._socket.onmessage = null, this._socket.onclose = null, this._socket.onerror = null, this._socket = null
            }, e.close = function() {
                if (null != this._socket) try {
                    this._socket.close()
                } catch (t) {}
            }, e._onOpen = function(t) {
                this._connected = !0, this.event("open", t)
            }, e._onMessage = function(t) {
                if (t && t.data) {
                    var e = t.data;
                    if (this.disableInput && e) this.event("message", e);
                    else {
                        0 < this._input.length && this._input.bytesAvailable < 1 && (this._input.clear(), this._addInputPosition = 0);
                        var i = this._input.pos;
                        !this._addInputPosition && (this._addInputPosition = 0), this._input.pos = this._addInputPosition, e && ("string" == typeof e ? this._input.writeUTFBytes(e) : this._input.writeArrayBuffer(e), this._addInputPosition = this._input.pos, this._input.pos = i), this.event("message", e)
                    }
                }
            }, e._onClose = function(t) {
                this._connected = !1, this.event("close", t)
            }, e._onError = function(t) {
                this.event("error", t)
            }, e.send = function(t) {
                this._socket.send(t)
            }, e.flush = function() {
                if (this._output && 0 < this._output.length) {
                    var e;
                    try {
                        this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length))
                    } catch (t) {
                        e = t
                    }
                    this._output.endian = this.endian, this._output.clear(), e && this.event("error", e)
                }
            }, u(0, e, "input", function() {
                return this._input
            }), u(0, e, "output", function() {
                return this._output
            }), u(0, e, "connected", function() {
                return this._connected
            }), u(0, e, "endian", function() {
                return this._endian
            }, function(t) {
                this._endian = t, null != this._input && (this._input.endian = t), null != this._output && (this._output.endian = t)
            }), n.LITTLE_ENDIAN = "littleEndian", n.BIG_ENDIAN = "bigEndian"
        }(), function(t) {
            function s() {
                this.worker = null, s.__super.call(this);
                var e = this;
                this.worker = new B.window.Worker(s.workerPath), this.worker.onmessage = function(t) {
                    e.workerMessage(t.data)
                }
            }
            p(s, "t_tl.net.WorkerLoader", l);
            var e = s.prototype;
            e.workerMessage = function(t) {
                if (t) switch (t.type) {
                    case "Image":
                        this.imageLoaded(t);
                        break;
                    case "Msg":
                        this.event("image_msg", t.msg)
                }
            }, e.imageLoaded = function(t) {
                if (t && t.buffer && t.buffer.length < 10) return s._enable = !1, this._myTrace("buffer lost when postmessage ,disable workerloader"), this.event(t.url, null), void this.event("image_err", t.url + "\n" + t.msg);
                if (!t.dataType) return this.event(t.url, null), void this.event("image_err", t.url + "\n" + t.msg);
                var e, i, n;
                switch (t.dataType) {
                    case "buffer":
                        (n = (i = (e = new yt("2D")).source.getContext("2d")).createImageData(t.width, t.height)).data.set(t.buffer), e.size(n.width, n.height), i.putImageData(n, 0, 0), e.memorySize = 0;
                        break;
                    case "imagedata":
                        i = (e = new yt("2D")).source.getContext("2d"), n = t.imagedata, e.size(n.width, n.height), i.putImageData(n, 0, 0), n = t.imagedata, e.memorySize = 0;
                        break;
                    case "imageBitmap":
                        n = t.imageBitmap, D.isWebGL ? e = n : (i = (e = new yt("2D")).source.getContext("2d"), e.size(n.width, n.height), i.drawImage(n, 0, 0), e.src = t.url)
                }
                D.isWebGL && (e = new t_tl.webgl.resource.WebGLImage(e, t.url)), this.event(t.url, e)
            }, e._myTrace = function(t) {
                var e = arguments,
                    i = [],
                    n = 0,
                    s = e.length;
                for (n = 0; n < s; n++) i.push(e[n]);
                this.event("image_msg", i.join(" "))
            }, e.loadImage = function(t) {
                var e;
                (e = {
                    type: "load"
                }).url = t, this.worker.postMessage(e)
            }, e._loadImage = function(e) {
                var i = this;
                if (!s._enable || e.toLowerCase().indexOf(".png") < 0) s._preLoadFun.call(i, e);
                else {
                    e = R.formatURL(e);
                    var n = function(t) {
                        t_tl.net.WorkerLoader.I.off(e, i, n), t ? i.onLoaded(t) : s._preLoadFun.call(i, e)
                    };
                    t_tl.net.WorkerLoader.I.on(e, i, n), t_tl.net.WorkerLoader.I.loadImage(e)
                }
            }, u(1, s, "enable", function() {
                return s._enable
            }, function(t) {
                s.disableJSDecode && !B.window.createImageBitmap || (s._enable = t) && null == s._preLoadFun && (s._enable = s.__init__())
            }), s.__init__ = function() {
                return null == s._preLoadFun && (!!B.window.Worker && (s._preLoadFun = at.prototype._loadImage, at.prototype._loadImage = s.prototype._loadImage, s.I || (s.I = new s), !0))
            }, s.workerSupported = function() {
                return !!B.window.Worker
            }, s.IMAGE_LOADED = "image_loaded", s.IMAGE_ERR = "image_err", s.IMAGE_MSG = "image_msg", s.I = null, s._preLoadFun = null, s._enable = !1, s.workerPath = "libs/worker.js", s.disableJSDecode = !0
        }(), function(t) {
            function a() {
                a.__super.call(this), this._$1__id = ++a._uniqueIDCounter, this.__loaded = !0, this._destroyed = !1, this._referenceCount = 0, (a._idResourcesMap[this.id] = this)._released = !0, this.lock = !1, this._memorySize = 0, this._lastUseFrameCount = -1, N.currentResourceManager && N.currentResourceManager.addResource(this)
            }
            p(a, "t_tl.resource.Resource", l);
            var e = a.prototype;
            return b.imps(e, {
                "t_tl.resource.ICreateResource": !0,
                "t_tl.resource.IDispose": !0
            }), e._setUrl = function(t) {
                var e;
                this._url !== t && (this._url && ((e = a._urlResourcesMap[this._url]).splice(e.indexOf(this), 1), 0 === e.length && delete a._urlResourcesMap[this._url]), t && ((e = a._urlResourcesMap[t]) || (a._urlResourcesMap[t] = e = []), e.push(this)), this._url = t)
            }, e._getGroup = function() {
                return this._group
            }, e._setGroup = function(t) {
                var e;
                this._group !== t && (this._group && ((e = a._groupResourcesMap[this._group]).splice(e.indexOf(this), 1), 0 === e.length && delete a._groupResourcesMap[this._group]), t && ((e = a._groupResourcesMap[t]) || (a._groupResourcesMap[t] = e = []), e.push(this)), this._group = t)
            }, e._addReference = function() {
                this._referenceCount++
            }, e._removeReference = function() {
                this._referenceCount--
            }, e._clearReference = function() {
                this._referenceCount = 0
            }, e._endLoaded = function() {
                this.__loaded = !0, this.event("loaded", this)
            }, e.recreateResource = function() {
                this.completeCreate()
            }, e.disposeResource = function() {}, e.activeResource = function(t) {
                void 0 === t && (t = !1), this._lastUseFrameCount = V.loopCount, !this._destroyed && this.__loaded && (this._released || t) && this.recreateResource()
            }, e.releaseResource = function(t) {
                return void 0 === t && (t = !1), !(!t && this.lock) && (!(this._released && !t) && (this.disposeResource(), this._released = !0, this._lastUseFrameCount = -1, this.event("released", this), !0))
            }, e.onAsynLoaded = function(t, e, i) {
                throw new Error("Resource: must override this function!")
            }, e.destroy = function() {
                var t;
                this._destroyed || (null !== this._resourceManager && this._resourceManager.removeResource(this), this._destroyed = !0, this.lock = !1, this.releaseResource(), delete a._idResourcesMap[this.id], this._url && ((t = a._urlResourcesMap[this._url]) && (t.splice(t.indexOf(this), 1), 0 === t.length && delete a._urlResourcesMap[this.url]), at.clearRes(this._url), this.__loaded || I.cancelLoadByUrl(this._url)), this._group && ((t = a._groupResourcesMap[this._group]).splice(t.indexOf(this), 1), 0 === t.length && delete a._groupResourcesMap[this.url]))
            }, e.completeCreate = function() {
                this._released = !1, this.event("recovered", this)
            }, e.dispose = function() {
                this.destroy()
            }, u(0, e, "memorySize", function() {
                return this._memorySize
            }, function(t) {
                var e = t - this._memorySize;
                this._memorySize = t, this.resourceManager && this.resourceManager.addSize(e)
            }), u(0, e, "_loaded", null, function(t) {
                this.__loaded = t
            }), u(0, e, "loaded", function() {
                return this.__loaded
            }), u(0, e, "id", function() {
                return this._$1__id
            }), u(0, e, "destroyed", function() {
                return this._destroyed
            }), u(0, e, "group", function() {
                return this._getGroup()
            }, function(t) {
                this._setGroup(t)
            }), u(0, e, "resourceManager", function() {
                return this._resourceManager
            }), u(0, e, "url", function() {
                return this._url
            }), u(0, e, "released", function() {
                return this._released
            }), u(0, e, "referenceCount", function() {
                return this._referenceCount
            }), a.getResourceByID = function(t) {
                return a._idResourcesMap[t]
            }, a.getResourceByURL = function(t, e) {
                return void 0 === e && (e = 0), a._urlResourcesMap[t][e]
            }, a.getResourceCountByURL = function(t) {
                return a._urlResourcesMap[t].length
            }, a.destroyUnusedResources = function(t) {
                var e;
                if (t) {
                    var i = a._groupResourcesMap[t];
                    if (i)
                        for (var n = i.slice(), s = 0, r = n.length; s < r; s++)(e = n[s]).lock || 0 !== e._referenceCount || e.destroy()
                } else
                    for (var o in a._idResourcesMap)(e = a._idResourcesMap[o]).lock || 0 !== e._referenceCount || e.destroy()
            }, a._uniqueIDCounter = 0, a._idResourcesMap = {}, a._urlResourcesMap = {}, a._groupResourcesMap = {}, a
        }()),
        ut = function(t) {
            function S(t, e) {
                this.offsetX = 0, this.offsetY = 0, this.sourceWidth = 0, this.sourceHeight = 0, this._w = 0, this._h = 0, this._uvID = 0, this._atlasID = -1, this.scaleRate = 1, S.__super.call(this), t && null != t._addReference && t._addReference(), this.setTo(t, e)
            }
            p(S, "t_tl.resource.Texture", l);
            var e = S.prototype;
            return e._setUrl = function(t) {
                this.url = t
            }, e.setTo = function(t, e) {
                if (t instanceof o.HTMLElement) {
                    var i = yt.create("2D", t);
                    this.bitmap = i
                } else this.bitmap = t;
                if (this.uv = e || S.DEF_UV, t) {
                    this._w = t.width, this._h = t.height, this.sourceWidth = this.sourceWidth || this._w, this.sourceHeight = this.sourceHeight || this._h, this._loaded = 0 < this._w;
                    var n = this;
                    if (this._loaded) I.addToAtlas && I.addToAtlas(n);
                    else {
                        var s = t;
                        s instanceof t_tl.resource.HTMLImage && s.image && s.image.addEventListener("load", function(t) {
                            I.addToAtlas && I.addToAtlas(n)
                        }, !1)
                    }
                }
            }, e.active = function() {
                this.bitmap && this.bitmap.activeResource()
            }, e.destroy = function(t) {
                if (void 0 === t && (t = !1), this.bitmap && 0 < this.bitmap.referenceCount) {
                    var e = this.bitmap;
                    t ? (D.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(), this.bitmap = null, e.dispose(), e._clearReference()) : (e._removeReference(), 0 == e.referenceCount && (D.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(), this.bitmap = null, e.dispose())), this.url && this === b.loader.getRes(this.url) && b.loader.clearRes(this.url, t), this._loaded = !1
                }
            }, e.load = function(t) {
                var e = this;
                this._loaded = !1, t = R.customFormat(t);
                var i = this.bitmap || (this.bitmap = Tt.create(t));
                i && i._addReference();
                var n = this;
                i.onload = function() {
                    i.onload = null, n._loaded = !0, e.sourceWidth = e._w = i.width, e.sourceHeight = e._h = i.height, n.event("loaded", this), I.addToAtlas && I.addToAtlas(n)
                }
            }, e.addTextureToAtlas = function(t) {
                I.addTextureToAtlas(this)
            }, e.getPixels = function(t, e, i, n) {
                if (D.isConchApp) {
                    var s = this.bitmap;
                    if (s.source && s.source.getImageData) {
                        var r = s.source.getImageData(t, e, i, n),
                            o = new Uint8Array(r);
                        return Array.from(o)
                    }
                    return null
                }
                return D.isWebGL ? I.getTexturePixels(this, t, e, i, n) : (B.canvas.size(i, n), B.canvas.clear(), B.context.drawTexture(this, -t, -e, this.width, this.height, 0, 0), B.context.getImageData(0, 0, i, n).data)
            }, e.onAsynLoaded = function(t, e) {
                e && e._addReference(), this.setTo(e, this.uv)
            }, u(0, e, "source", function() {
                return this.bitmap ? (this.bitmap.activeResource(), this.bitmap.source) : null
            }), u(0, e, "loaded", function() {
                return this._loaded
            }), u(0, e, "released", function() {
                return !this.bitmap || this.bitmap.released
            }), u(0, e, "width", function() {
                return this._w ? this._w : this.uv && this.uv !== S.DEF_UV ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width
            }, function(t) {
                this._w = t, this.sourceWidth || (this.sourceWidth = t)
            }), u(0, e, "repeat", function() {
                return !D.isWebGL || !this.bitmap || this.bitmap.repeat
            }, function(t) {
                t && D.isWebGL && this.bitmap && (this.bitmap.repeat = t) && (this.bitmap.enableMerageInAtlas = !1)
            }), u(0, e, "height", function() {
                return this._h ? this._h : this.uv && this.uv !== S.DEF_UV ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height
            }, function(t) {
                this._h = t, this.sourceHeight || (this.sourceHeight = t)
            }), u(0, e, "isLinearSampling", function() {
                return !D.isWebGL || 9728 != this.bitmap.minFifter
            }, function(t) {
                !t && D.isWebGL && (t || -1 != this.bitmap.minFifter || -1 != this.bitmap.magFifter || (this.bitmap.minFifter = 9728, this.bitmap.magFifter = 9728, this.bitmap.enableMerageInAtlas = !1))
            }), S.moveUV = function(t, e, i) {
                for (var n = 0; n < 8; n += 2) i[n] += t, i[n + 1] += e;
                return i
            }, S.create = function(t, e, i, n, s, r, o, a, h) {
                void 0 === r && (r = 0), void 0 === o && (o = 0), void 0 === a && (a = 0), void 0 === h && (h = 0);
                var l = t instanceof t_tl.resource.Texture,
                    u = l ? t.uv : S.DEF_UV,
                    c = l ? t.bitmap : t,
                    _ = I.isAtlas(c);
                if (_) {
                    var d = c._atlaser,
                        f = t._atlasID;
                    if (-1 == f) throw new Error("create texture error");
                    c = d._inAtlasTextureBitmapValue[f], u = d._inAtlasTextureOriUVValue[f]
                }
                var p = new S(c, null);
                c.width && e + n > c.width && (n = c.width - e), c.height && i + s > c.height && (s = c.height - i), p.width = n, p.height = s, p.offsetX = r, p.offsetY = o, p.sourceWidth = a || n, p.sourceHeight = h || s;
                var g = 1 / c.width,
                    m = 1 / c.height;
                e *= g, i *= m, n *= g, s *= m;
                var v = p.uv[0],
                    y = p.uv[1],
                    w = p.uv[4],
                    x = p.uv[5],
                    T = w - v,
                    b = x - y,
                    C = S.moveUV(u[0], u[1], [e, i, e + n, i, e + n, i + s, e, i + s]);
                p.uv = [v + C[0] * T, y + C[1] * b, w - (1 - C[2]) * T, y + C[3] * b, w - (1 - C[4]) * T, x - (1 - C[5]) * b, v + C[6] * T, x - (1 - C[7]) * b], _ && p.addTextureToAtlas();
                var M = c.scaleRate;
                return M && 1 != M ? (p.sourceWidth /= M, p.sourceHeight /= M, p.width /= M, p.height /= M, p.scaleRate = M, p.offsetX /= M, p.offsetY /= M) : p.scaleRate = 1, p
            }, S.createFromTexture = function(t, e, i, n, s) {
                var r = t.scaleRate;
                1 != r && (e *= r, i *= r, n *= r, s *= r);
                var o = M.TEMP.setTo(e - t.offsetX, i - t.offsetY, n, s),
                    a = o.intersection(S._rect1.setTo(0, 0, t.width, t.height), S._rect2);
                if (!a) return null;
                var h = S.create(t, a.x, a.y, a.width, a.height, a.x - o.x, a.y - o.y, n, s);
                return h.bitmap._removeReference(), h
            }, S.DEF_UV = [0, 0, 1, 0, 1, 1, 0, 1], S.INV_UV = [0, 1, 1, 1, 1, 0, 0, 0], S._rect1 = new M, S._rect2 = new M, S
        }(),
        t = function(t) {
            var a;

            function r() {
                this._labelDic = null, this._tweenDic = {}, this._tweenDataList = [], this._endTweenDataList = null, this._currTime = 0, this._lastTime = 0, this._startTime = 0, this._index = 0, this._gidIndex = 0, this._firstTweenDic = {}, this._startTimeSort = !1, this._endTimeSort = !1, this._loopKey = !1, this.scale = 1, this._frameRate = 60, this._frameIndex = 0, this._total = 0, r.__super.call(this)
            }
            p(r, "t_tl.utils.TimeLine", l);
            var e = r.prototype;
            return e.to = function(t, e, i, n, s) {
                return void 0 === s && (s = 0), this._create(t, e, i, n, s, !0)
            }, e.from = function(t, e, i, n, s) {
                return void 0 === s && (s = 0), this._create(t, e, i, n, s, !1)
            }, e._create = function(t, e, i, n, s, r) {
                var o = $.getItemByClass("tweenData", a);
                return o.isTo = r, o.type = 0, o.target = t, o.duration = i, o.data = e, o.startTime = this._startTime + s, o.endTime = o.startTime + o.duration, o.ease = n, this._startTime = Math.max(o.endTime, this._startTime), this._tweenDataList.push(o), this._startTimeSort = !0, this._endTimeSort = !0, this
            }, e.addLabel = function(t, e) {
                var i = $.getItemByClass("tweenData", a);
                return i.type = 1, i.data = t, i.endTime = i.startTime = this._startTime + e, this._labelDic || (this._labelDic = {}), this._labelDic[t] = i, this._tweenDataList.push(i), this
            }, e.removeLabel = function(t) {
                if (this._labelDic && this._labelDic[t]) {
                    var e = this._labelDic[t];
                    if (e) {
                        var i = this._tweenDataList.indexOf(e); - 1 < i && this._tweenDataList.splice(i, 1)
                    }
                    delete this._labelDic[t]
                }
            }, e.gotoTime = function(t) {
                if (null != this._tweenDataList && 0 != this._tweenDataList.length) {
                    var e, i, n, s;
                    for (var r in this._firstTweenDic)
                        if (i = this._firstTweenDic[r])
                            for (var o in i) i.diyTarget.hasOwnProperty(o) && (i.diyTarget[o] = i[o]);
                    for (r in this._tweenDic)(e = this._tweenDic[r]).clear(), delete this._tweenDic[r];
                    if (this._index = 0, this._gidIndex = 0, this._currTime = t, this._lastTime = B.now(), null == this._endTweenDataList || this._endTimeSort) {
                        this._endTimeSort = !1, this._endTweenDataList = n = this._tweenDataList.concat(), n.sort(function(t, e) {
                            return t.endTime > e.endTime ? 1 : t.endTime < e.endTime ? -1 : 0
                        })
                    } else n = this._endTweenDataList;
                    for (var a = 0, h = n.length; a < h; a++)
                        if (0 == (s = n[a]).type) {
                            if (!(t >= s.endTime)) break;
                            this._index = Math.max(this._index, a + 1);
                            var l = s.data;
                            if (s.isTo)
                                for (var u in l) s.target[u] = l[u]
                        }
                    for (a = 0, h = this._tweenDataList.length; a < h; a++) 0 == (s = this._tweenDataList[a]).type && t >= s.startTime && t < s.endTime && (this._index = Math.max(this._index, a + 1), this._gidIndex++, (e = $.getItemByClass("tween", K))._create(s.target, s.data, s.duration, s.ease, v.create(this, this._animComplete, [this._gidIndex]), 0, !1, s.isTo, !0, !1), e.setStartTime(this._currTime - (t - s.startTime)), e._updateEase(this._currTime), e.gid = this._gidIndex, this._tweenDic[this._gidIndex] = e)
                }
            }, e.gotoLabel = function(t) {
                if (null != this._labelDic) {
                    var e = this._labelDic[t];
                    e && this.gotoTime(e.startTime)
                }
            }, e.pause = function() {
                b.timer.clear(this, this._update)
            }, e.resume = function() {
                this.play(this._currTime, this._loopKey)
            }, e.play = function(t, e) {
                if (void 0 === t && (t = 0), void 0 === e && (e = !1), this._tweenDataList) {
                    if (this._startTimeSort) {
                        this._startTimeSort = !1, this._tweenDataList.sort(function(t, e) {
                            return t.startTime > e.startTime ? 1 : t.startTime < e.startTime ? -1 : 0
                        });
                        for (var i = 0, n = this._tweenDataList.length; i < n; i++) {
                            var s = this._tweenDataList[i];
                            if (null != s && 0 == s.type) {
                                var r = s.target,
                                    o = r.$_GID || (r.$_GID = q.getGID()),
                                    a = null;
                                for (var h in null == this._firstTweenDic[o] ? ((a = {}).diyTarget = r, this._firstTweenDic[o] = a) : a = this._firstTweenDic[o], s.data) null == a[h] && (a[h] = r[h])
                            }
                        }
                    }
                    "string" == typeof t ? this.gotoLabel(t) : this.gotoTime(t), this._loopKey = e, this._lastTime = B.now(), b.timer.frameLoop(1, this, this._update)
                }
            }, e._update = function() {
                if (this._currTime >= this._startTime) {
                    if (!this._loopKey) {
                        for (var t in this._tweenDic)(e = this._tweenDic[t]).complete();
                        return this._complete(), void this.pause()
                    }
                    if (this._complete(), !this._tweenDataList) return;
                    this.gotoTime(0)
                }
                var e, i = B.now(),
                    n = i - this._lastTime,
                    s = this._currTime += n * this.scale;
                for (t in this._lastTime = i, this._tweenDic)(e = this._tweenDic[t])._updateEase(s);
                if (0 != this._tweenDataList.length && this._index < this._tweenDataList.length) {
                    var r = this._tweenDataList[this._index];
                    s >= r.startTime && (this._index++, 0 == r.type ? (this._gidIndex++, (e = $.getItemByClass("tween", K))._create(r.target, r.data, r.duration, r.ease, v.create(this, this._animComplete, [this._gidIndex]), 0, !1, r.isTo, !0, !1), e.setStartTime(s), e.gid = this._gidIndex, (this._tweenDic[this._gidIndex] = e)._updateEase(s)) : this.event("label", r.data))
                }
            }, e._animComplete = function(t) {
                this._tweenDic[t] && delete this._tweenDic[t]
            }, e._complete = function() {
                this.event("complete")
            }, e.reset = function() {
                var t;
                if (this._labelDic)
                    for (t in this._labelDic) delete this._labelDic[t];
                for (t in this._tweenDic) this._tweenDic[t].clear(), delete this._tweenDic[t];
                for (t in this._firstTweenDic) delete this._firstTweenDic[t];
                if (this._endTweenDataList = null, this._tweenDataList && this._tweenDataList.length) {
                    var e, i = 0;
                    for (e = this._tweenDataList.length, i = 0; i < e; i++) this._tweenDataList[i] && this._tweenDataList[i].destroy()
                }
                this._tweenDataList.length = 0, this._currTime = 0, this._lastTime = 0, this._startTime = 0, this._index = 0, this._gidIndex = 0, this.scale = 1, b.timer.clear(this, this._update)
            }, e.destroy = function() {
                this.reset(), this._labelDic = null, this._tweenDic = null, this._tweenDataList = null, this._firstTweenDic = null
            }, u(0, e, "index", function() {
                return this._frameIndex
            }, function(t) {
                this._frameIndex = t, this.gotoTime(this._frameIndex / this._frameRate * 1e3)
            }), u(0, e, "total", function() {
                return this._total = Math.floor(this._startTime / 1e3 * this._frameRate), this._total
            }), r.to = function(t, e, i, n, s) {
                return void 0 === s && (s = 0), (new r).to(t, e, i, n, s)
            }, r.from = function(t, e, i, n, s) {
                return void 0 === s && (s = 0), (new r).from(t, e, i, n, s)
            }, r.__init$ = function() {
                a = function() {
                    function t() {
                        this.type = 0, this.isTo = !0, this.startTime = NaN, this.endTime = NaN, this.target = null, this.duration = NaN, this.ease = null, this.data = null
                    }
                    return p(t, ""), t.prototype.destroy = function() {
                        this.target = null, this.ease = null, this.data = null, this.isTo = !0, this.type = 0, $.recover("tweenData", this)
                    }, t
                }()
            }, r
        }(),
        ct = function(s) {
            function i() {
                this._transform = null, this._tfChanged = !1, this._x = 0, this._y = 0, this._width = 0, this._height = 0, this._repaint = 1, this._mouseEnableState = 0, this._zOrder = 0, this._graphics = null, this._renderType = 0, this._optimizeScrollRect = !1, this._texture = null, this.mouseThrough = !1, this.autoSize = !1, this.hitTestPrior = !1, this.viewport = null, i.__super.call(this), this._style = a.EMPTY
            }
            p(i, "t_tl.display.Sprite", s);
            var t = i.prototype;
            return b.imps(t, {
                "t_tl.display.ILayout": !0
            }), t.createConchModel = function() {
                return new ConchNode
            }, t.destroy = function(t) {
                void 0 === t && (t = !0), this._releaseMem(), s.prototype.destroy.call(this, t), this._style && this._style.destroy(), this._transform && this._transform.destroy(), this._transform = null, this._style = null, this._graphics = null
            }, t.updateZOrder = function() {
                q.updateOrder(this._childs) && this.repaint()
            }, t.reCache = function() {
                this._$P.cacheCanvas && (this._$P.cacheCanvas.reCache = !0), this._repaint = 1
            }, t.setBounds = function(t) {
                this._set$P("uBounds", t)
            }, t.getBounds = function() {
                return this._$P.mBounds || this._set$P("mBounds", new M), M._getWrapRec(this._boundPointsToParent(), this._$P.mBounds)
            }, t.getSelfBounds = function() {
                return this._$P.uBounds ? this._$P.uBounds : (this._$P.mBounds || this._set$P("mBounds", new M), M._getWrapRec(this._getBoundPointsM(!1), this._$P.mBounds))
            }, t._boundPointsToParent = function(t) {
                void 0 === t && (t = !1);
                var e = 0,
                    i = 0;
                this._style && (e = this._style._tf.translateX, i = this._style._tf.translateY, t = t || 0 !== this._style._tf.rotate, this._style.scrollRect && (e += this._style.scrollRect.x, i += this._style.scrollRect.y));
                var n = this._getBoundPointsM(t);
                if (!n || n.length < 1) return n;
                if (8 != n.length && (n = t ? x.scanPList(n) : M._getWrapRec(n, M.TEMP)._getBoundPoints()), !this.transform) return q.transPointList(n, this._x - e, this._y - i), n;
                var s = C.TEMP,
                    r = 0,
                    o = n.length;
                for (r = 0; r < o; r += 2) s.x = n[r], s.y = n[r + 1], this.toParentPoint(s), n[r] = s.x, n[r + 1] = s.y;
                return n
            }, t.getGraphicBounds = function(t) {
                return void 0 === t && (t = !1), this._graphics ? this._graphics.getBounds(t) : M.TEMP.setTo(0, 0, 0, 0)
            }, t._getBoundPointsM = function(t) {
                if (void 0 === t && (t = !1), this._$P.uBounds) return this._$P.uBounds._getBoundPoints();
                if (this._$P.temBM || this._set$P("temBM", []), this.scrollRect) {
                    var e = q.clearArray(this._$P.temBM),
                        i = M.TEMP;
                    return i.copyFrom(this.scrollRect), q.concatArray(e, i._getBoundPoints()), e
                }
                for (var n, s, r, o = this._graphics ? this._graphics.getBoundPoints() : q.clearArray(this._$P.temBM), a = 0, h = (r = this._childs).length; a < h; a++)(n = r[a]) instanceof t_tl.display.Sprite && 1 == n.visible && (s = n._boundPointsToParent(t)) && (o = o ? q.concatArray(o, s) : s);
                return o
            }, t.getStyle = function() {
                return this._style === a.EMPTY && (this._style = new a), this._style
            }, t.setStyle = function(t) {
                this._style = t
            }, t._adjustTransform = function() {
                this._tfChanged = !1;
                var t, e = this._style._tf,
                    i = e.scaleX,
                    n = e.scaleY;
                if (e.rotate || 1 !== i || 1 !== n || e.skewX || e.skewY) {
                    (t = this._transform || (this._transform = A.create())).bTransform = !0;
                    var s = .0174532922222222 * (e.rotate - e.skewX),
                        r = .0174532922222222 * (e.rotate + e.skewY),
                        o = Math.cos(r),
                        a = Math.sin(r),
                        h = Math.sin(s),
                        l = Math.cos(s);
                    return t.a = i * o, t.b = i * a, t.c = -n * h, t.d = n * l, t.tx = t.ty = 0, t
                }
                return this._transform && this._transform.destroy(), this._transform = null, this._renderType &= -5, t
            }, t.pos = function(t, e, i) {
                if (void 0 === i && (i = !1), this._x !== t || this._y !== e) {
                    if (this.destroyed) return this;
                    if (i) {
                        this._x = t, this._y = e, this.conchModel && this.conchModel.pos(this._x, this._y);
                        var n = this._parent;
                        n && 0 === n._repaint && (n._repaint = 1, n.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint())
                    } else this.x = t, this.y = e
                }
                return this
            }, t.pivot = function(t, e) {
                return this.pivotX = t, this.pivotY = e, this
            }, t.size = function(t, e) {
                return this.width = t, this.height = e, this
            }, t.scale = function(t, e, i) {
                void 0 === i && (i = !1);
                var n = this.getStyle(),
                    s = n._tf;
                if (s.scaleX != t || s.scaleY != e) {
                    if (this.destroyed) return this;
                    if (i) {
                        n.setScale(t, e), this._tfChanged = !0, this.conchModel && this.conchModel.scale(t, e), this._renderType |= 4;
                        var r = this._parent;
                        r && 0 === r._repaint && (r._repaint = 1, r.parentRepaint())
                    } else this.scaleX = t, this.scaleY = e
                }
                return this
            }, t.skew = function(t, e) {
                return this.skewX = t, this.skewY = e, this
            }, t.render = function(t, e, i) {
                V.spriteCount++, k.renders[this._renderType]._fun(this, t, e + this._x, i + this._y), this._repaint = 0
            }, t.drawToCanvas = function(t, e, i, n) {
                if (D.isConchNode) {
                    var s = yt.create("2D");
                    return new F(t, e, s).ctx.setCanvasType(1), this.conchModel.drawToCanvas(s.source, i, n), s
                }
                return I.drawToCanvas(this, this._renderType, t, e, i, n)
            }, t.customRender = function(t, e, i) {
                this._renderType |= 1024
            }, t._applyFilters = function() {
                var t;
                if (!D.isWebGL && ((t = this._$P.filters) && !(t.length < 1)))
                    for (var e = 0, i = t.length; e < i; e++) t[e].action.apply(this._$P.cacheCanvas)
            }, t._isHaveGlowFilter = function() {
                var t, e = 0;
                if (this.filters)
                    for (e = 0; e < this.filters.length; e++)
                        if (8 == this.filters[e].type) return !0;
                for (e = 0, t = this._childs.length; e < t; e++)
                    if (this._childs[e]._isHaveGlowFilter()) return !0;
                return !1
            }, t.localToGlobal = function(t, e) {
                void 0 === e && (e = !1), !0 === e && (t = new C(t.x, t.y));
                for (var i = this; i && i != b.stage;) t = i.toParentPoint(t), i = i.parent;
                return t
            }, t.globalToLocal = function(t, e) {
                void 0 === e && (e = !1), e && (t = new C(t.x, t.y));
                for (var i = this, n = []; i && i != b.stage;) n.push(i), i = i.parent;
                for (var s = n.length - 1; 0 <= s;) t = (i = n[s]).fromParentPoint(t), s--;
                return t
            }, t.toParentPoint = function(t) {
                if (!t) return t;
                t.x -= this.pivotX, t.y -= this.pivotY, this.transform && this._transform.transformPoint(t), t.x += this._x, t.y += this._y;
                var e = this._style.scrollRect;
                return e && (t.x -= e.x, t.y -= e.y), t
            }, t.fromParentPoint = function(t) {
                if (!t) return t;
                t.x -= this._x, t.y -= this._y;
                var e = this._style.scrollRect;
                return e && (t.x += e.x, t.y += e.y), this.transform && this._transform.invertTransformPoint(t), t.x += this.pivotX, t.y += this.pivotY, t
            }, t.on = function(t, e, i, n) {
                return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0, this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(t, e, i, n, !1)) : s.prototype.on.call(this, t, e, i, n)
            }, t.once = function(t, e, i, n) {
                return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0, this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(t, e, i, n, !0)) : s.prototype.once.call(this, t, e, i, n)
            }, t._$2__onDisplay = function() {
                if (1 !== this._mouseEnableState) {
                    var t = this;
                    for (t = t.parent; t && 1 !== t._mouseEnableState && !t._getBit(2);) t.mouseEnabled = !0, t._setBit(2, !0), t = t.parent
                }
            }, t.loadImage = function(t, e, i, n, s, r) {
                var o = this;
                return void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), this.graphics.loadImage(t, e, i, n, s, function(t) {
                    o.destroyed || (o.size(e + (n || t.width), i + (s || t.height)), o.repaint(), r && r.runWith(t))
                }), this
            }, t.repaint = function() {
                this.conchModel && this.conchModel.repaint && this.conchModel.repaint(), 0 === this._repaint && (this._repaint = 1, this.parentRepaint()), this._$P && this._$P.maskParent && this._$P.maskParent.repaint()
            }, t._needRepaint = function() {
                return 0 !== this._repaint && this._$P.cacheCanvas && this._$P.cacheCanvas.reCache
            }, t._childChanged = function(t) {
                this._childs.length ? this._renderType |= 2048 : this._renderType &= -2049, t && this._get$P("hasZorder") && b.timer.callLater(this, this.updateZOrder), this.repaint()
            }, t.parentRepaint = function() {
                var t = this._parent;
                t && 0 === t._repaint && (t._repaint = 1, t.parentRepaint())
            }, t.startDrag = function(t, e, i, n, s, r, o) {
                void 0 === e && (e = !1), void 0 === i && (i = 0), void 0 === n && (n = 300), void 0 === r && (r = !1), void 0 === o && (o = .92), this._$P.dragging || this._set$P("dragging", new Y), this._$P.dragging.start(this, t, e, i, n, s, r, o)
            }, t.stopDrag = function() {
                this._$P.dragging && this._$P.dragging.stop()
            }, t._releaseMem = function() {
                if (this._$P) {
                    var t = this._$P.cacheCanvas;
                    t && t.ctx && ($.recover("RenderContext", t.ctx), t.ctx.canvas.size(0, 0), t.ctx = null);
                    var e = this._$P._filterCache;
                    e && (e.destroy(), e.recycle(), this._set$P("_filterCache", null)), this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", !1), this._$P._isHaveGlowFilter = null
                }
            }, t._setDisplay = function(t) {
                t || this._releaseMem(), s.prototype._setDisplay.call(this, t)
            }, t.hitTestPoint = function(t, e) {
                var i = this.globalToLocal(C.TEMP.setTo(t, e));
                return t = i.x, e = i.y, (this._$P.hitArea ? this._$P.hitArea : 0 < this._width && 0 < this._height ? M.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds()).contains(t, e)
            }, t.getMousePoint = function() {
                return this.globalToLocal(C.TEMP.setTo(b.stage.mouseX, b.stage.mouseY))
            }, t._getWords = function() {
                return null
            }, t._addChildsToLayout = function(n) {
                var t = this._getWords();
                if (null == t && 0 == this._childs.length) return !1;
                if (t)
                    for (var e = 0, i = t.length; e < i; e++) n.push(t[e]);
                return this._childs.forEach(function(t, e, i) {
                    t._style._enableLayout() && t._addToLayout(n)
                }), !0
            }, t._addToLayout = function(t) {
                this._style.absolute || (this._style.block ? t.push(this) : this._addChildsToLayout(t) && (this.x = this.y = 0))
            }, t._isChar = function() {
                return !1
            }, t._getCSSStyle = function() {
                return this._style.getCSSStyle()
            }, t._setAttributes = function(t, e) {
                switch (t) {
                    case "x":
                        this.x = parseFloat(e);
                        break;
                    case "y":
                        this.y = parseFloat(e);
                        break;
                    case "width":
                        this.width = parseFloat(e);
                        break;
                    case "height":
                        this.height = parseFloat(e);
                        break;
                    default:
                        this[t] = e
                }
            }, t._layoutLater = function() {
                this.parent && this.parent._layoutLater()
            }, u(0, t, "optimizeScrollRect", function() {
                return this._optimizeScrollRect
            }, function(t) {
                this._optimizeScrollRect != t && (this._optimizeScrollRect = t, this.conchModel && this.conchModel.optimizeScrollRect(t))
            }), u(0, t, "customRenderEnable", null, function(t) {
                if (t && (this._renderType |= 1024, D.isConchNode)) {
                    i.CustomList.push(this);
                    var e = new yt("2d");
                    e._setContext(new CanvasRenderingContext2D), this.customContext = new F(0, 0, e), e.context.setCanvasType && e.context.setCanvasType(2), this.conchModel.custom(e.context)
                }
            }), u(0, t, "cacheAsBitmap", function() {
                return "none" !== this.cacheAs
            }, function(t) {
                this.cacheAs = t ? this._$P.hasFilter ? "none" : "normal" : "none"
            }), u(0, t, "cacheAs", function() {
                return null == this._$P.cacheCanvas ? "none" : this._$P.cacheCanvas.type
            }, function(t) {
                var e = this._$P.cacheCanvas;
                if (t !== (e ? e.type : "none")) {
                    if ("none" !== t) this._getBit(1) || this._setUpNoticeType(1), e || (e = this._set$P("cacheCanvas", $.getItemByClass("cacheCanvas", Object))), e.type = t, e.reCache = !0, this._renderType |= 16, "bitmap" == t && this.conchModel && this.conchModel.cacheAs(1), this._set$P("cacheForFilters", !1);
                    else if (this._$P._mask);
                    else if (this._$P.hasFilter) this._set$P("cacheForFilters", !0);
                    else {
                        if (e) {
                            var i = e;
                            i && i.ctx && ($.recover("RenderContext", i.ctx), i.ctx.canvas.size(0, 0), i.ctx = null), $.recover("cacheCanvas", e)
                        }
                        this._$P.cacheCanvas = null, this._renderType &= -17, this.conchModel && this.conchModel.cacheAs(0)
                    }
                    this.repaint()
                }
            }), u(0, t, "zOrder", function() {
                return this._zOrder
            }, function(t) {
                this._zOrder != t && (this._zOrder = t, this.conchModel && this.conchModel.setZOrder && this.conchModel.setZOrder(t), this._parent && (t && this._parent._set$P("hasZorder", !0), b.timer.callLater(this._parent, this.updateZOrder)))
            }), u(0, t, "rotation", function() {
                return this._style._tf.rotate
            }, function(t) {
                var e = this.getStyle();
                if (e._tf.rotate !== t) {
                    e.setRotate(t), this._tfChanged = !0, this.conchModel && this.conchModel.rotate(t), this._renderType |= 4;
                    var i = this._parent;
                    i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint())
                }
            }), u(0, t, "width", function() {
                return this.autoSize ? this.getSelfBounds().width : this._width
            }, function(t) {
                this._width !== t && (this._width = t, this.conchModel && this.conchModel.size(t, this._height), this.repaint())
            }), u(0, t, "x", function() {
                return this._x
            }, function(t) {
                if (this._x !== t) {
                    if (this.destroyed) return;
                    this._x = t, this.conchModel && this.conchModel.pos(t, this._y);
                    var e = this._parent;
                    e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint())
                }
            }), u(0, t, "globalScaleY", function() {
                for (var t = 1, e = this; e && e !== b.stage;) t *= e.scaleY, e = e.parent;
                return t
            }), u(0, t, "hitArea", function() {
                return this._$P.hitArea
            }, function(t) {
                this._set$P("hitArea", t)
            }), u(0, t, "staticCache", function() {
                return this._$P.staticCache
            }, function(t) {
                this._set$P("staticCache", t), t || this.reCache()
            }), u(0, t, "texture", function() {
                return this._texture
            }, function(t) {
                this._texture != t && (this._texture = t, this.graphics.cleanByTexture(t, 0, 0))
            }), u(0, t, "y", function() {
                return this._y
            }, function(t) {
                if (this._y !== t) {
                    if (this.destroyed) return;
                    this._y = t, this.conchModel && this.conchModel.pos(this._x, t);
                    var e = this._parent;
                    e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint())
                }
            }), u(0, t, "height", function() {
                return this.autoSize ? this.getSelfBounds().height : this._height
            }, function(t) {
                this._height !== t && (this._height = t, this.conchModel && this.conchModel.size(this._width, t), this.repaint())
            }), u(0, t, "blendMode", function() {
                return this._style.blendMode
            }, function(t) {
                this.getStyle().blendMode = t, this.conchModel && this.conchModel.blendMode(t), t && "source-over" != t ? this._renderType |= 8 : this._renderType &= -9, this.parentRepaint()
            }), u(0, t, "scaleX", function() {
                return this._style._tf.scaleX
            }, function(t) {
                var e = this.getStyle();
                if (e._tf.scaleX !== t) {
                    e.setScaleX(t), this._tfChanged = !0, this.conchModel && this.conchModel.scale(t, e._tf.scaleY), this._renderType |= 4;
                    var i = this._parent;
                    i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint())
                }
            }), u(0, t, "scaleY", function() {
                return this._style._tf.scaleY
            }, function(t) {
                var e = this.getStyle();
                if (e._tf.scaleY !== t) {
                    e.setScaleY(t), this._tfChanged = !0, this.conchModel && this.conchModel.scale(e._tf.scaleX, t), this._renderType |= 4;
                    var i = this._parent;
                    i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint())
                }
            }), u(0, t, "stage", function() {
                return b.stage
            }), u(0, t, "skewX", function() {
                return this._style._tf.skewX
            }, function(t) {
                var e = this.getStyle();
                if (e._tf.skewX !== t) {
                    e.setSkewX(t), this._tfChanged = !0, this.conchModel && this.conchModel.skew(t, e._tf.skewY), this._renderType |= 4;
                    var i = this._parent;
                    i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint())
                }
            }), u(0, t, "scrollRect", function() {
                return this._style.scrollRect
            }, function(t) {
                this.getStyle().scrollRect = t, this.repaint(), t ? (this._renderType |= 128, this.conchModel && this.conchModel.scrollRect(t.x, t.y, t.width, t.height)) : (this._renderType &= -129, this.conchModel && (i.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(64) : this.conchModel.removeType(128)))
            }), u(0, t, "skewY", function() {
                return this._style._tf.skewY
            }, function(t) {
                var e = this.getStyle();
                if (e._tf.skewY !== t) {
                    e.setSkewY(t), this._tfChanged = !0, this.conchModel && this.conchModel.skew(e._tf.skewX, t), this._renderType |= 4;
                    var i = this._parent;
                    i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint())
                }
            }), u(0, t, "transform", function() {
                return this._tfChanged ? this._adjustTransform() : this._transform
            }, function(t) {
                this._tfChanged = !1, (this._transform = t) && (this._x = t.tx, this._y = t.ty, t.tx = t.ty = 0, this.conchModel && this.conchModel.transform(t.a, t.b, t.c, t.d, this._x, this._y)), t ? this._renderType |= 4 : (this._renderType &= -5, this.conchModel && this.conchModel.removeType(4)), this.parentRepaint()
            }), u(0, t, "pivotX", function() {
                return this._style._tf.translateX
            }, function(t) {
                this.getStyle().setTranslateX(t), this.conchModel && this.conchModel.pivot(t, this._style._tf.translateY), this.repaint()
            }), u(0, t, "pivotY", function() {
                return this._style._tf.translateY
            }, function(t) {
                this.getStyle().setTranslateY(t), this.conchModel && this.conchModel.pivot(this._style._tf.translateX, t), this.repaint()
            }), u(0, t, "alpha", function() {
                return this._style.alpha
            }, function(t) {
                this._style && this._style.alpha !== t && (t = t < 0 ? 0 : 1 < t ? 1 : t, this.getStyle().alpha = t, this.conchModel && this.conchModel.alpha(t), 1 !== t ? this._renderType |= 2 : this._renderType &= -3, this.parentRepaint())
            }), u(0, t, "visible", function() {
                return this._style.visible
            }, function(t) {
                this._style && this._style.visible !== t && (this.getStyle().visible = t, this.conchModel && this.conchModel.visible(t), this.parentRepaint())
            }), u(0, t, "graphics", function() {
                return this._graphics || (this.graphics = I.createGraphics())
            }, function(t) {
                this._graphics && (this._graphics._sp = null), (this._graphics = t) ? (this._renderType &= -2, this._renderType |= 512, (t._sp = this).conchModel && this.conchModel.graphics(this._graphics)) : (this._renderType &= -513, this._renderType &= -2, this.conchModel && (i.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(256) : this.conchModel.removeType(512))), this.repaint()
            }), u(0, t, "filters", function() {
                return this._$P.filters
            }, function(t) {
                t && 0 === t.length && (t = null), this._$P.filters != t && (this._set$P("filters", t ? t.slice() : null), D.isConchApp && (this.conchModel && (i.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(16) : this.conchModel.removeType(32)), this._$P.filters && 1 == this._$P.filters.length && this._$P.filters[0].callNative(this)), D.isWebGL && (t && t.length ? this._renderType |= 32 : this._renderType &= -33), t && 0 < t.length ? (this._getBit(1) || this._setUpNoticeType(1), D.isWebGL && 1 == t.length && t[0] instanceof t_tl.filters.ColorFilter || ("bitmap" != this.cacheAs && (D.isConchNode || (this.cacheAs = "bitmap"), this._set$P("cacheForFilters", !0)), this._set$P("hasFilter", !0))) : (this._set$P("hasFilter", !1), this._$P.cacheForFilters && "bitmap" == this.cacheAs && (this.cacheAs = "none")), this.repaint())
            }), u(0, t, "parent", s.prototype._$get_parent, function(t) {
                b.superSet(tt, this, "parent", t), t && this._getBit(2) && this._$2__onDisplay()
            }), u(0, t, "mask", function() {
                return this._$P._mask
            }, function(t) {
                t && this.mask && this.mask._$P.maskParent || (t ? (this.cacheAs = "bitmap", this._set$P("_mask", t), t._set$P("maskParent", this)) : (this.mask && this.mask._set$P("maskParent", null), this._set$P("_mask", t), this.cacheAs = "none"), this.conchModel && this.conchModel.mask(t ? t.conchModel : null), this._renderType |= 64, this.parentRepaint())
            }), u(0, t, "mouseEnabled", function() {
                return 1 < this._mouseEnableState
            }, function(t) {
                this._mouseEnableState = t ? 2 : 1
            }), u(0, t, "globalScaleX", function() {
                for (var t = 1, e = this; e && e !== b.stage;) t *= e.scaleX, e = e.parent;
                return t
            }), u(0, t, "mouseX", function() {
                return this.getMousePoint().x
            }), u(0, t, "mouseY", function() {
                return this.getMousePoint().y
            }), i.fromImage = function(t) {
                return (new i).loadImage(t)
            }, i.CustomList = [], h(i, ["RUNTIMEVERION", function() {
                return this.RUNTIMEVERION = o.conch ? conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf("-") + 1) : ""
            }]), i
        }(tt),
        _t = function(t) {
            function e(t) {
                this._audio = null, this._onEnd = null, this._resumePlay = null, e.__super.call(this), this._onEnd = q.bind(this.__onEnd, this), this._resumePlay = q.bind(this.__resumePlay, this), t.addEventListener("ended", this._onEnd), this._audio = t
            }
            p(e, "t_tl.media.h5audio.AudioSoundChannel", nt);
            var i = e.prototype;
            return i.__onEnd = function() {
                if (1 == this.loops) return this.completeHandler && (b.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null), this.stop(), void this.event("complete");
                0 < this.loops && this.loops--, this.startTime = 0, this.play()
            }, i.__resumePlay = function() {
                this._audio && this._audio.removeEventListener("canplay", this._resumePlay);
                try {
                    this._audio.currentTime = this.startTime, B.container.appendChild(this._audio), this._audio.play()
                } catch (t) {
                    this.event("error")
                }
            }, i.play = function() {
                this.isStopped = !1;
                try {
                    this._audio.playbackRate = P.playbackRate, this._audio.currentTime = this.startTime
                } catch (t) {
                    return void this._audio.addEventListener("canplay", this._resumePlay)
                }
                P.addChannel(this), B.container.appendChild(this._audio), "play" in this._audio && this._audio.play()
            }, i.stop = function() {
                this.isStopped = !0, P.removeChannel(this), this.completeHandler = null, this._audio && ("pause" in this._audio && D.isConchApp && this._audio.stop(), this._audio.pause(), this._audio.removeEventListener("ended", this._onEnd), this._audio.removeEventListener("canplay", this._resumePlay), B.onIE || this._audio != it._musicAudio && $.recover("audio:" + this.url, this._audio), B.removeElement(this._audio), this._audio = null)
            }, i.pause = function() {
                this.isStopped = !0, P.removeChannel(this), "pause" in this._audio && this._audio.pause()
            }, i.resume = function() {
                this._audio && (this.isStopped = !1, P.addChannel(this), "play" in this._audio && this._audio.play())
            }, u(0, i, "position", function() {
                return this._audio ? this._audio.currentTime : 0
            }), u(0, i, "duration", function() {
                return this._audio ? this._audio.duration : 0
            }), u(0, i, "volume", function() {
                return this._audio ? this._audio.volume : 1
            }, function(t) {
                this._audio && (this._audio.volume = t)
            }), e
        }(),
        dt = function(t) {
            function e() {
                this.audioBuffer = null, this.gain = null, this.bufferSource = null, this._currentTime = 0, this._volume = 1, this._startTime = 0, this._pauseTime = 0, this._onPlayEnd = null, this.context = rt.ctx, e.__super.call(this), this._onPlayEnd = q.bind(this.__onPlayEnd, this), this.context.createGain ? this.gain = this.context.createGain() : this.gain = this.context.createGainNode()
            }
            p(e, "t_tl.media.webaudio.WebAudioSoundChannel", nt);
            var i = e.prototype;
            return i.play = function() {
                if (P.addChannel(this), this.isStopped = !1, this._clearBufferSource(), this.audioBuffer) {
                    var t = this.context,
                        e = this.gain,
                        i = t.createBufferSource();
                    (this.bufferSource = i).buffer = this.audioBuffer, i.connect(e), e && e.disconnect(), e.connect(t.destination), i.onended = this._onPlayEnd, this.startTime >= this.duration && (this.startTime = 0), this._startTime = B.now(), this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, .1) : this.gain.gain.value = this._volume, 0 == this.loops && (i.loop = !0), i.playbackRate.setTargetAtTime ? i.playbackRate.setTargetAtTime(P.playbackRate, this.context.currentTime, .1) : i.playbackRate.value = P.playbackRate, i.start(0, this.startTime), this._currentTime = 0
                }
            }, i.__onPlayEnd = function() {
                if (1 == this.loops) return this.completeHandler && (b.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null), this.stop(), void this.event("complete");
                0 < this.loops && this.loops--, this.startTime = 0, this.play()
            }, i._clearBufferSource = function() {
                if (this.bufferSource) {
                    var t = this.bufferSource;
                    t.stop ? t.stop(0) : t.noteOff(0), t.disconnect(0), t.onended = null, e._tryCleanFailed || this._tryClearBuffer(t), this.bufferSource = null
                }
            }, i._tryClearBuffer = function(t) {
                if (B.onMac) try {
                    t.buffer = rt._miniBuffer
                } catch (t) {
                    e._tryCleanFailed = !0
                } else try {
                    t.buffer = null
                } catch (t) {
                    e._tryCleanFailed = !0
                }
            }, i.stop = function() {
                this._clearBufferSource(), this.audioBuffer = null, this.gain && this.gain.disconnect(), this.isStopped = !0, P.removeChannel(this), this.completeHandler = null, P.autoReleaseSound && b.timer.once(5e3, null, P.disposeSoundIfNotUsed, [this.url], !1)
            }, i.pause = function() {
                this.isStopped || (this._pauseTime = this.position), this._clearBufferSource(), this.gain && this.gain.disconnect(), this.isStopped = !0, P.removeChannel(this), P.autoReleaseSound && b.timer.once(5e3, null, P.disposeSoundIfNotUsed, [this.url], !1)
            }, i.resume = function() {
                this.startTime = this._pauseTime, this.play()
            }, u(0, i, "position", function() {
                return this.bufferSource ? (B.now() - this._startTime) / 1e3 + this.startTime : 0
            }), u(0, i, "duration", function() {
                return this.audioBuffer ? this.audioBuffer.duration : 0
            }), u(0, i, "volume", function() {
                return this._volume
            }, function(t) {
                this.isStopped || (this._volume = t, this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(t, this.context.currentTime, .1) : this.gain.gain.value = t)
            }), e._tryCleanFailed = !1, e
        }(),
        ft = function(t) {
            function e() {
                e.__super.call(this), this._w = 0, this._h = 0
            }
            p(e, "t_tl.resource.Bitmap", lt);
            var i = e.prototype;
            return u(0, i, "width", function() {
                return this._w
            }), u(0, i, "height", function() {
                return this._h
            }), u(0, i, "source", function() {
                return this._source
            }), e
        }(),
        pt = function(e) {
            function t() {
                this.loop = !1, this.wrapMode = 0, this._index = 0, this._count = 0, this._isPlaying = !1, this._labels = null, this._isReverse = !1, this._frameRateChanged = !1, this._controlNode = null, this._actionName = null, t.__super.call(this), this._interval = n.animationInterval, this._setUpNoticeType(1)
            }
            p(t, "t_tl.display.AnimationPlayerBase", e);
            var i = t.prototype;
            return i.play = function(t, e, i, n) {
                void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0), this._isPlaying = !0, this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.loop = e, this._actionName = i, this._isReverse = 1 == this.wrapMode, 0 < this.interval && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0)
            }, i._getFrameByLabel = function(t) {
                var e = 0;
                for (e = 0; e < this._count; e++)
                    if (this._labels[e] && 0 <= this._labels[e].indexOf(t)) return e;
                return 0
            }, i._frameLoop = function() {
                if (this._isReverse) {
                    if (this._index--, this._index < 0) {
                        if (!this.loop) return this._index = 0, this.stop(), void this.event("complete");
                        2 == this.wrapMode ? (this._index = 0 < this._count ? 1 : 0, this._isReverse = !1) : this._index = this._count - 1, this.event("complete")
                    }
                } else if (this._index++, this._index >= this._count) {
                    if (!this.loop) return this._index--, this.stop(), void this.event("complete");
                    2 == this.wrapMode ? (this._index = 0 <= this._count - 2 ? this._count - 2 : 0, this._isReverse = !0) : this._index = 0, this.event("complete")
                }
                this.index = this._index
            }, i._setControlNode = function(t) {
                this._controlNode && (this._controlNode.off("display", this, this._checkResumePlaying), this._controlNode.off("undisplay", this, this._checkResumePlaying)), (this._controlNode = t) && t != this && (t.on("display", this, this._checkResumePlaying), t.on("undisplay", this, this._checkResumePlaying))
            }, i._setDisplay = function(t) {
                e.prototype._setDisplay.call(this, t), this._checkResumePlaying()
            }, i._checkResumePlaying = function() {
                this._isPlaying && (this._controlNode.displayedInStage ? this.play(this._index, this.loop, this._actionName) : this.clearTimer(this, this._frameLoop))
            }, i.stop = function() {
                this._isPlaying = !1, this.clearTimer(this, this._frameLoop)
            }, i.addLabel = function(t, e) {
                this._labels || (this._labels = {}), this._labels[e] || (this._labels[e] = []), this._labels[e].push(t)
            }, i.removeLabel = function(t) {
                if (t) {
                    if (this._labels)
                        for (var e in this._labels) this._removeLabelFromLabelList(this._labels[e], t)
                } else this._labels = null
            }, i._removeLabelFromLabelList = function(t, e) {
                if (t)
                    for (var i = t.length - 1; 0 <= i; i--) t[i] == e && t.splice(i, 1)
            }, i.gotoAndStop = function(t) {
                this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.stop()
            }, i._displayToIndex = function(t) {}, i.clear = function() {
                this.stop(), this._labels = null
            }, u(0, i, "interval", function() {
                return this._interval
            }, function(t) {
                this._interval != t && (this._frameRateChanged = !0, this._interval = t, this._isPlaying && 0 < t && this.timerLoop(t, this, this._frameLoop, null, !0, !0))
            }), u(0, i, "isPlaying", function() {
                return this._isPlaying
            }), u(0, i, "index", function() {
                return this._index
            }, function(t) {
                if (this._index = t, this._displayToIndex(t), this._labels && this._labels[t])
                    for (var e = this._labels[t], i = 0, n = e.length; i < n; i++) this.event("label", e[i])
            }), u(0, i, "count", function() {
                return this._count
            }), t.WRAP_POSITIVE = 0, t.WRAP_REVERSE = 1, t.WRAP_PINGPONG = 2, t
        }(ct),
        gt = function(e) {
            function d() {
                this._clipPoint = null, this._currBitmapFont = null, this._text = null, this._isChanged = !1, this._textWidth = 0, this._textHeight = 0, this._lines = [], this._lineWidths = [], this._startX = NaN, this._startY = NaN, this._lastVisibleLineIndex = -1, this._words = null, this._charSize = {}, this.underline = !1, this._underlineColor = null, d.__super.call(this), this.overflow = d.VISIBLE, this._style = new et(this), this._style.wordWrap = !1
            }
            p(d, "t_tl.display.Text", e);
            var t = d.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), e.prototype.destroy.call(this, t), this._lines = null, this._words && (this._words.length = 0, this._words = null)
            }, t._getBoundPointsM = function(t) {
                void 0 === t && (t = !1);
                var e = M.TEMP;
                return e.setTo(0, 0, this.width, this.height), e._getBoundPoints()
            }, t.getGraphicBounds = function(t) {
                void 0 === t && (t = !1);
                var e = M.TEMP;
                return e.setTo(0, 0, this.width, this.height), e
            }, t._getCSSStyle = function() {
                return this._style
            }, t.lang = function(t, e, i, n, s, r, o, a, h, l, u) {
                if (t = d.langPacks && d.langPacks[t] ? d.langPacks[t] : t, arguments.length < 2) this._text = t;
                else {
                    for (var c = 0, _ = arguments.length; c < _; c++) t = t.replace("{" + c + "}", arguments[c + 1]);
                    this._text = t
                }
            }, t._isPassWordMode = function() {
                var t = this._style.password;
                return "prompt" in this && this.prompt == this._text && (t = !1), t
            }, t._getPassWordTxt = function(t) {
                var e;
                e = "";
                for (var i = t.length; 0 < i; i--) e += "●";
                return e
            }, t.renderText = function(t, e) {
                var i = this.graphics;
                i.clear(!0);
                var n = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + (B.onIPhone && t_tl.display.Text._fontFamilyMap[this.font] || this.font);
                B.context.font = n;
                var s = this.padding,
                    r = s[3],
                    o = "left",
                    a = this._lines,
                    h = this.leading + this._charSize.height,
                    l = this._currBitmapFont;
                l && (h = this.leading + l.getMaxHeight());
                var u = s[0];
                if (!l && 0 < this._width && this._textWidth <= this._width && ("right" == this.align ? (o = "right", r = this._width - s[1]) : "center" == this.align && (o = "center", r = .5 * this._width + s[3] - s[1])), 0 < this._height) {
                    var c = this._textHeight > this._height ? "top" : this.valign;
                    "middle" === c ? u = .5 * (this._height - e * h) + s[0] - s[2] : "bottom" === c && (u = this._height - e * h - s[2])
                }
                var _ = this._style;
                if (l && l.autoScaleSize) var d = l.fontSize / this.fontSize;
                if (this._clipPoint)
                    if (i.save(), l && l.autoScaleSize) {
                        var f = 0,
                            p = 0;
                        f = this._width ? this._width - s[3] - s[1] : this._textWidth, p = this._height ? this._height - s[0] - s[2] : this._textHeight, f *= d, p *= d, i.clipRect(s[3], s[0], f, p)
                    } else i.clipRect(s[3], s[0], this._width ? this._width - s[3] - s[1] : this._textWidth, this._height ? this._height - s[0] - s[2] : this._textHeight);
                var g = _.password;
                "prompt" in this && this.prompt == this._text && (g = !1);
                for (var m = 0, v = 0, y = Math.min(this._lines.length, e + t) || 1, w = t; w < y; w++) {
                    var x, T = a[w];
                    if (g) {
                        var b = T.length;
                        T = "";
                        for (var C = b; 0 < C; C--) T += "●"
                    }
                    if (m = r - (this._clipPoint ? this._clipPoint.x : 0), v = u + h * w - (this._clipPoint ? this._clipPoint.y : 0), this.underline && this.drawUnderline(o, m, v, w), l) {
                        var M = this.width;
                        l.autoScaleSize && (M = this.width * d), l.drawText(T, this, m, v, this.align, M)
                    } else D.isWebGL ? (this._words || (this._words = []), (x = this._words.length > w - t ? this._words[w - t] : new Z).setText(T)) : x = T, _.stroke ? i.fillBorderText(x, m, v, n, this.color, _.strokeColor, _.stroke, o) : i.fillText(x, m, v, n, this.color, o)
                }
                if (l && l.autoScaleSize) {
                    var S = 1 / d;
                    this.scale(S, S)
                }
                this._clipPoint && i.restore(), this._startX = r, this._startY = u
            }, t.drawUnderline = function(t, e, i, n) {
                var s = this._lineWidths[n];
                switch (t) {
                    case "center":
                        e -= s / 2;
                        break;
                    case "right":
                        e -= s
                }
                i += this._charSize.height, this._graphics.drawLine(e, i, e + s, i, this.underlineColor || this.color, 1)
            }, t.typeset = function() {
                if (this._isChanged = !1, !this._text) return this._clipPoint = null, this._textWidth = this._textHeight = 0, void this.graphics.clear(!0);
                B.context.font = this._getCSSStyle().font, this._lines.length = 0, this._lineWidths.length = 0, this._isPassWordMode() ? this.parseLines(this._getPassWordTxt(this._text)) : this.parseLines(this._text), this.evalTextSize(), this.checkEnabledViewportOrNot() ? this._clipPoint || (this._clipPoint = new C(0, 0)) : this._clipPoint = null;
                var t = this._lines.length;
                if (this.overflow != d.VISIBLE) {
                    var e = this.overflow == d.HIDDEN ? Math.floor : Math.ceil;
                    t = Math.min(t, e((this.height - this.padding[0] - this.padding[2]) / (this.leading + this._charSize.height)))
                }
                var i = this.scrollY / (this._charSize.height + this.leading) | 0;
                this.renderText(i, t), this.repaint()
            }, t.evalTextSize = function() {
                var t, e = NaN;
                t = Math.max.apply(this, this._lineWidths), e = this._currBitmapFont ? this._lines.length * (this._currBitmapFont.getMaxHeight() + this.leading) + this.padding[0] + this.padding[2] : this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2], t == this._textWidth && e == this._textHeight || (this._textWidth = t, this._textHeight = e, this._width && this._height || this.conchModel && this.conchModel.size(this._width || this._textWidth, this._height || this._textHeight))
            }, t.checkEnabledViewportOrNot = function() {
                return this.overflow == d.SCROLL && (0 < this._width && this._textWidth > this._width || 0 < this._height && this._textHeight > this._height)
            }, t.changeText = function(t) {
                this._text !== t && (this.lang(t + ""), this._graphics && this._graphics.replaceText(this._text) || this.typeset())
            }, t.parseLines = function(t) {
                var e = this.wordWrap || this.overflow == d.HIDDEN;
                if (e) var i = this.getWordWrapWidth();
                if (this._currBitmapFont) this._charSize.width = this._currBitmapFont.getMaxWidth(), this._charSize.height = this._currBitmapFont.getMaxHeight();
                else {
                    var n = B.context.measureText(d._testWord);
                    D.isConchApp && 0 === n.width && 0 === n.height && (n = B.context.measureText("W")), this._charSize.width = n.width, this._charSize.height = n.height || this.fontSize
                }
                for (var s = t.replace(/\r\n/g, "\n").split("\n"), r = 0, o = s.length; r < o; r++) {
                    var a = s[r];
                    e ? this.parseLine(a, i) : (this._lineWidths.push(this.getTextWidth(a)), this._lines.push(a))
                }
            }, t.parseLine = function(t, e) {
                B.context;
                var i, n = this._lines,
                    s = 0,
                    r = NaN,
                    o = NaN,
                    a = 0;
                if ((r = this.getTextWidth(t)) <= e) return n.push(t), void this._lineWidths.push(r);
                r = this._charSize.width, 0 == (s = Math.floor(e / r)) && (s = 1), o = r = this.getTextWidth(t.substring(0, s));
                for (var h = s, l = t.length; h < l; h++)
                    if (e < (o += r = this.getTextWidth(t.charAt(h))))
                        if (this.wordWrap) {
                            var u = t.substring(a, h);
                            if (u.charCodeAt(u.length - 1) < 255 ? (i = /(?:\w|-)+$/.exec(u)) && (h = i.index + a, 0 == i.index ? h += u.length : u = t.substring(a, h)) : d.RightToLeft && (i = /([\u0600-\u06FF])+$/.exec(u)) && (h = i.index + a, 0 == i.index ? h += u.length : u = t.substring(a, h)), n.push(u), this._lineWidths.push(o - r), !((a = h) + s < l)) {
                                n.push(t.substring(a, l)), this._lineWidths.push(this.getTextWidth(n[n.length - 1])), a = -1;
                                break
                            }
                            h += s, o = r = this.getTextWidth(t.substring(a, h)), h--
                        } else if (this.overflow == d.HIDDEN) return n.push(t.substring(0, h)), void this._lineWidths.push(this.getTextWidth(n[n.length - 1]));
                this.wordWrap && -1 != a && (n.push(t.substring(a, l)), this._lineWidths.push(this.getTextWidth(n[n.length - 1])))
            }, t.getTextWidth = function(t) {
                return this._currBitmapFont ? this._currBitmapFont.getTextWidth(t) : B.context.measureText(t).width
            }, t.getWordWrapWidth = function() {
                var t = this.padding,
                    e = NaN;
                return (e = this._currBitmapFont && this._currBitmapFont.autoScaleSize ? this._width * (this._currBitmapFont.fontSize / this.fontSize) : this._width) <= 0 && (e = this.wordWrap ? 100 : B.width), e <= 0 && (e = 100), e - t[3] - t[1]
            }, t.getCharPoint = function(t, e) {
                this._isChanged && b.timer.runCallLater(this, this.typeset);
                for (var i = 0, n = this._lines, s = 0, r = 0, o = n.length; r < o; r++) {
                    if (t < (i += n[r].length)) {
                        var a = r;
                        break
                    }
                    s = i
                }
                var h = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + this.font;
                B.context.font = h;
                var l = this.getTextWidth(this._text.substring(s, t));
                return (e || new C).setTo(this._startX + l - (this._clipPoint ? this._clipPoint.x : 0), this._startY + a * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y : 0))
            }, u(0, t, "width", function() {
                return this._width ? this._width : this.textWidth + this.padding[1] + this.padding[3]
            }, function(t) {
                t != this._width && (b.superSet(ct, this, "width", t), this.isChanged = !0)
            }), u(0, t, "textWidth", function() {
                return this._isChanged && b.timer.runCallLater(this, this.typeset), this._textWidth
            }), u(0, t, "height", function() {
                return this._height ? this._height : this.textHeight + this.padding[0] + this.padding[2]
            }, function(t) {
                t != this._height && (b.superSet(ct, this, "height", t), this.isChanged = !0)
            }), u(0, t, "textHeight", function() {
                return this._isChanged && b.timer.runCallLater(this, this.typeset), this._textHeight
            }), u(0, t, "padding", function() {
                return this._getCSSStyle().padding
            }, function(t) {
                this._getCSSStyle().padding = t, this.isChanged = !0
            }), u(0, t, "bold", function() {
                return this._getCSSStyle().bold
            }, function(t) {
                this._getCSSStyle().bold = t, this.isChanged = !0
            }), u(0, t, "text", function() {
                return this._text || ""
            }, function(t) {
                this._text !== t && (this.lang(t + ""), this.isChanged = !0, this.event("change"))
            }), u(0, t, "color", function() {
                return this._getCSSStyle().color
            }, function(t) {
                this._getCSSStyle().color != t && (this._getCSSStyle().color = t, !this._isChanged && this._graphics ? this._graphics.replaceTextColor(this.color) : this.isChanged = !0)
            }), u(0, t, "font", function() {
                return this._getCSSStyle().fontFamily
            }, function(t) {
                this._currBitmapFont && (this._currBitmapFont = null, this.scale(1, 1)), d._bitmapFonts && d._bitmapFonts[t] && (this._currBitmapFont = d._bitmapFonts[t]), this._getCSSStyle().fontFamily = t, this.isChanged = !0
            }), u(0, t, "fontSize", function() {
                return this._getCSSStyle().fontSize
            }, function(t) {
                this._getCSSStyle().fontSize = t, this.isChanged = !0
            }), u(0, t, "italic", function() {
                return this._getCSSStyle().italic
            }, function(t) {
                this._getCSSStyle().italic = t, this.isChanged = !0
            }), u(0, t, "align", function() {
                return this._getCSSStyle().align
            }, function(t) {
                this._getCSSStyle().align = t, this.isChanged = !0
            }), u(0, t, "valign", function() {
                return this._getCSSStyle().valign
            }, function(t) {
                this._getCSSStyle().valign = t, this.isChanged = !0
            }), u(0, t, "wordWrap", function() {
                return this._getCSSStyle().wordWrap
            }, function(t) {
                this._getCSSStyle().wordWrap = t, this.isChanged = !0
            }), u(0, t, "leading", function() {
                return this._getCSSStyle().leading
            }, function(t) {
                this._getCSSStyle().leading = t, this.isChanged = !0
            }), u(0, t, "bgColor", function() {
                return this._getCSSStyle().backgroundColor
            }, function(t) {
                this._getCSSStyle().backgroundColor = t, this.isChanged = !0
            }), u(0, t, "borderColor", function() {
                return this._getCSSStyle().borderColor
            }, function(t) {
                this._getCSSStyle().borderColor = t, this.isChanged = !0
            }), u(0, t, "stroke", function() {
                return this._getCSSStyle().stroke
            }, function(t) {
                this._getCSSStyle().stroke = t, this.isChanged = !0
            }), u(0, t, "strokeColor", function() {
                return this._getCSSStyle().strokeColor
            }, function(t) {
                this._getCSSStyle().strokeColor = t, this.isChanged = !0
            }), u(0, t, "isChanged", null, function(t) {
                this._isChanged !== t && (this._isChanged = t) && b.timer.callLater(this, this.typeset)
            }), u(0, t, "scrollX", function() {
                return this._clipPoint ? this._clipPoint.x : 0
            }, function(t) {
                if (!(this.overflow != d.SCROLL || this.textWidth < this._width) && this._clipPoint) {
                    t = t < this.padding[3] ? this.padding[3] : t;
                    var e = this._textWidth - this._width;
                    t = e < t ? e : t;
                    var i = this._height / (this._charSize.height + this.leading) | 1;
                    this._clipPoint.x = t, this.renderText(this._lastVisibleLineIndex, i)
                }
            }), u(0, t, "scrollY", function() {
                return this._clipPoint ? this._clipPoint.y : 0
            }, function(t) {
                if (!(this.overflow != d.SCROLL || this.textHeight < this._height) && this._clipPoint) {
                    t = t < this.padding[0] ? this.padding[0] : t;
                    var e = this._textHeight - this._height,
                        i = (t = e < t ? e : t) / (this._charSize.height + this.leading) | 0;
                    this._lastVisibleLineIndex = i;
                    var n = 1 + (this._height / (this._charSize.height + this.leading) | 0);
                    this._clipPoint.y = t, this.renderText(i, n)
                }
            }), u(0, t, "maxScrollX", function() {
                return this.textWidth < this._width ? 0 : this._textWidth - this._width
            }), u(0, t, "maxScrollY", function() {
                return this.textHeight < this._height ? 0 : this._textHeight - this._height
            }), u(0, t, "lines", function() {
                return this._isChanged && this.typeset(), this._lines
            }), u(0, t, "underlineColor", function() {
                return this._underlineColor
            }, function(t) {
                this._underlineColor = t, this._isChanged = !0, this.typeset()
            }), d.registerBitmapFont = function(t, e) {
                d._bitmapFonts || (d._bitmapFonts = {}), d._bitmapFonts[t] = e
            }, d.unregisterBitmapFont = function(t, e) {
                if (void 0 === e && (e = !0), d._bitmapFonts && d._bitmapFonts[t]) {
                    var i = d._bitmapFonts[t];
                    e && i.destroy(), delete d._bitmapFonts[t]
                }
            }, d.setTextRightToLeft = function() {
                var t;
                (t = B.canvas.source.style).display = "none", t.position = "absolute", t.direction = "rtl", D._mainCanvas.source.style.direction = "rtl", t_tl.display.Text.RightToLeft = !0, B.document.body.appendChild(B.canvas.source)
            }, d.supportFont = function(t) {
                B.context.font = "10px sans-serif";
                var e = B.context.measureText("abcji").width;
                B.context.font = "10px " + t;
                var i = B.context.measureText("abcji").width;
                return console.log(e, i), e !== i
            }, d._testWord = "游", d.langPacks = null, d.VISIBLE = "visible", d.SCROLL = "scroll", d.HIDDEN = "hidden", d.CharacterCache = !0, d.RightToLeft = !1, d._bitmapFonts = null, h(d, ["_fontFamilyMap", function() {
                return this._fontFamilyMap = {
                    "报隶": "报隶-简",
                    "黑体": "黑体-简",
                    "楷体": "楷体-简",
                    "兰亭黑": "兰亭黑-简",
                    "隶变": "隶变-简",
                    "凌慧体": "凌慧体-简",
                    "翩翩体": "翩翩体-简",
                    "苹方": "苹方-简",
                    "手札体": "手札体-简",
                    "宋体": "宋体-简",
                    "娃娃体": "娃娃体-简",
                    "魏碑": "魏碑-简",
                    "行楷": "行楷-简",
                    "雅痞": "雅痞-简",
                    "圆体": "圆体-简"
                }
            }]), d
        }(ct),
        mt = function(c) {
            function o() {
                this.focus = null, this.designWidth = 0, this.designHeight = 0, this.canvasRotation = !1, this.canvasDegree = 0, this.renderingEnabled = !0, this.screenAdaptationEnabled = !0, this._screenMode = "none", this._scaleMode = "noscale", this._alignV = "top", this._alignH = "left", this._bgColor = "black", this._mouseMoveTime = 0, this._renderCount = 0, this._frameStartTime = NaN, this._isFocused = !1, this._isVisibility = !1, this._scenes = null, this._frameRate = "fast", o.__super.call(this), this.offset = new C, this._canvasTransform = new A, this._previousOrientation = B.window.orientation;
                var e = this;
                this.transform = A.create(), this._scenes = [], this.mouseEnabled = !0, this.hitTestPrior = !0, this.autoSize = !1, this._displayedInStage = !0, this._isFocused = !0, this._isVisibility = !0;
                var t = B.window,
                    i = this;
                t.addEventListener("focus", function() {
                    e._isFocused = !0, i.event("focus"), i.event("focuschange")
                }), t.addEventListener("blur", function() {
                    e._isFocused = !1, i.event("blur"), i.event("focuschange"), i._isInputting() && (xt.inputElement.target.focus = !1)
                });
                var n = "visibilityState",
                    s = "visibilitychange",
                    r = t.document;
                void 0 !== r.hidden ? (s = "visibilitychange", n = "visibilityState") : void 0 !== r.mozHidden ? (s = "mozvisibilitychange", n = "mozVisibilityState") : void 0 !== r.msHidden ? (s = "msvisibilitychange", n = "msVisibilityState") : void 0 !== r.webkitHidden && (s = "webkitvisibilitychange", n = "webkitVisibilityState"), t.document.addEventListener(s, function() {
                    "hidden" == B.document[n] ? i._setStageVisible(!1) : i._setStageVisible(!0)
                }), t.document.addEventListener("qbrowserVisibilityChange", function(t) {
                    i._setStageVisible(!t.hidden)
                }), t.addEventListener("resize", function() {
                    var t = B.window.orientation;
                    null != t && t != e._previousOrientation && i._isInputting() && (xt.inputElement.target.focus = !1), e._previousOrientation = t, i._isInputting() || i._resetCanvas()
                }), t.addEventListener("orientationchange", function(t) {
                    i._resetCanvas()
                }), this.on("mousemove", this, this._onmouseMove), B.onMobile && this.on("mousedown", this, this._onmouseMove)
            }
            p(o, "t_tl.display.Stage", c);
            var t = o.prototype;
            return t._setStageVisible = function(t) {
                this._isVisibility != t && (this._isVisibility = t, this._isVisibility || this._isInputting() && (xt.inputElement.target.focus = !1), this.event("visibilitychange"))
            }, t._isInputting = function() {
                return B.onMobile && xt.isInputting
            }, t._changeCanvasSize = function() {
                this.setScreenSize(B.clientWidth * B.pixelRatio, B.clientHeight * B.pixelRatio)
            }, t._resetCanvas = function() {
                if (this.screenAdaptationEnabled) {
                    var t = D._mainCanvas;
                    t.source.style;
                    t.size(1, 1), b.timer.once(100, this, this._changeCanvasSize)
                }
            }, t.setScreenSize = function(t, e) {
                var i = !1;
                if ("none" !== this._screenMode && (i = (t / e < 1 ? "vertical" : "horizontal") !== this._screenMode)) {
                    var n = e;
                    e = t, t = n
                }
                this.canvasRotation = i;
                var s = D._mainCanvas,
                    r = s.source.style,
                    o = this._canvasTransform.identity(),
                    a = this._scaleMode,
                    h = t / this.designWidth,
                    l = e / this.designHeight,
                    u = this.designWidth,
                    c = this.designHeight,
                    _ = t,
                    d = e,
                    f = B.pixelRatio;
                switch (this._width = this.designWidth, this._height = this.designHeight, a) {
                    case "noscale":
                        h = l = 1, _ = this.designWidth, d = this.designHeight;
                        break;
                    case "showall":
                        h = l = Math.min(h, l), u = _ = Math.round(this.designWidth * h), c = d = Math.round(this.designHeight * l);
                        break;
                    case "noborder":
                        h = l = Math.max(h, l), _ = Math.round(this.designWidth * h), d = Math.round(this.designHeight * l);
                        break;
                    case "full":
                        h = l = 1, this._width = u = t, this._height = c = e;
                        break;
                    case "fixedwidth":
                        l = h, this._height = c = Math.round(e / h);
                        break;
                    case "fixedheight":
                        h = l, this._width = u = Math.round(t / l);
                        break;
                    case "fixedauto":
                        t / e < this.designWidth / this.designHeight ? (l = h, this._height = c = Math.round(e / h)) : (h = l, this._width = u = Math.round(t / l))
                }
                this.conchModel && this.conchModel.size(this._width, this._height), h *= this.scaleX, l *= this.scaleY, 1 === h && 1 === l ? this.transform.identity() : (this.transform.a = this._formatData(h / (_ / u)), this.transform.d = this._formatData(l / (d / c)), this.conchModel && this.conchModel.scale(this.transform.a, this.transform.d)), s.size(u, c), I.changeWebGLSize(u, c), o.scale(_ / u / f, d / c / f), "left" === this._alignH ? this.offset.x = 0 : "right" === this._alignH ? this.offset.x = (t - _) / f : this.offset.x = .5 * (t - _) / f, "top" === this._alignV ? this.offset.y = 0 : "bottom" === this._alignV ? this.offset.y = (e - d) / f : this.offset.y = .5 * (e - d) / f, this.offset.x = Math.round(this.offset.x), this.offset.y = Math.round(this.offset.y), o.translate(this.offset.x, this.offset.y), this.canvasDegree = 0, i && ("horizontal" === this._screenMode ? (o.rotate(Math.PI / 2), o.translate(e / f, 0), this.canvasDegree = 90) : (o.rotate(-Math.PI / 2), o.translate(0, t / f), this.canvasDegree = -90)), o.a = this._formatData(o.a), o.d = this._formatData(o.d), o.tx = this._formatData(o.tx), o.ty = this._formatData(o.ty), r.transformOrigin = r.webkitTransformOrigin = r.msTransformOrigin = r.mozTransformOrigin = r.oTransformOrigin = "0px 0px 0px", r.transform = r.webkitTransform = r.msTransform = r.mozTransform = r.oTransform = "matrix(" + o.toString() + ")", o.translate(parseInt(r.left) || 0, parseInt(r.top) || 0), this.visible = !0, this._repaint = 1, this.event("resize")
            }, t._formatData = function(t) {
                return Math.abs(t) < 1e-6 ? 0 : Math.abs(1 - t) < .001 ? 0 < t ? 1 : -1 : t
            }, t.getMousePoint = function() {
                return C.TEMP.setTo(this.mouseX, this.mouseY)
            }, t.repaint = function() {
                this._repaint = 1
            }, t.parentRepaint = function() {}, t._loop = function() {
                return this.render(D.context, 0, 0), !0
            }, t._onmouseMove = function(t) {
                this._mouseMoveTime = B.now()
            }, t.getTimeFromFrameStart = function() {
                return B.now() - this._frameStartTime
            }, t.render = function(t, e, i) {
                if ("sleep" === this._frameRate && !D.isConchApp) {
                    var n = B.now();
                    if (!(1e3 <= n - this._frameStartTime)) return;
                    this._frameStartTime = n
                }
                if (this._renderCount++, D.isFlash && this.repaint(), this._style.visible) {
                    this._frameStartTime = B.now();
                    var s = "slow" !== ("mouse" === this._frameRate ? this._frameStartTime - this._mouseMoveTime < 2e3 ? "fast" : "slow" : this._frameRate),
                        r = this._renderCount % 2 == 0;
                    if (V.renderSlow = !s, s || r || D.isConchApp) {
                        var o;
                        V.loopCount++, f.instance.runEvent(), b.timer._update(), I.update3DLoop();
                        var a = 0,
                            h = 0;
                        if (D.isConchNode)
                            for (a = 0, h = this._scenes.length; a < h; a++)(o = this._scenes[a]) && o._updateSceneConch();
                        else
                            for (a = 0, h = this._scenes.length; a < h; a++)(o = this._scenes[a]) && o._updateScene();
                        if (D.isConchNode) {
                            var l = ct.CustomList;
                            for (a = 0, h = l.length; a < h; a++) {
                                var u = l[a];
                                u.customRender(u.customContext, 0, 0)
                            }
                            return
                        }
                    }
                    D.isConchNode || this.renderingEnabled && (s || !r || D.isConchWebGL) && (D.isWebGL ? (t.clear(), c.prototype.render.call(this, t, e, i), V._show && V._sp && V._sp.render(t, e, i), I.clear(this._bgColor), I.beginFlush(), t.flush(), I.endFinish(), Q.instance && Q.getInstance().endDispose()) : (I.clear(this._bgColor), c.prototype.render.call(this, t, e, i), V._show && V._sp && V._sp.render(t, e, i)))
                } else this._renderCount % 5 == 0 && (V.loopCount++, f.instance.runEvent(), b.timer._update())
            }, t._requestFullscreen = function() {
                var t = B.document.documentElement;
                t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen()
            }, t._fullScreenChanged = function() {
                b.stage.event("fullscreenchange")
            }, t.exitFullscreen = function() {
                var t = B.document;
                t.exitFullscreen ? t.exitFullscreen() : t.mozCancelFullScreen ? t.mozCancelFullScreen() : t.webkitExitFullscreen && t.webkitExitFullscreen()
            }, u(0, t, "clientScaleX", function() {
                return this._transform ? this._transform.getScaleX() : 1
            }), u(0, t, "desginHeight", function() {
                return console.debug("desginHeight已经弃用，请使用designHeight代替"), this.designHeight
            }), u(0, t, "frameRate", function() {
                return this._frameRate
            }, function(t) {
                if (this._frameRate = t, D.isConchApp) switch (this._frameRate) {
                    case "slow":
                        B.window.conch && B.window.conchConfig.setSlowFrame && B.window.conchConfig.setSlowFrame(!0);
                        break;
                    case "fast":
                        B.window.conch && B.window.conchConfig.setSlowFrame && B.window.conchConfig.setSlowFrame(!1);
                        break;
                    case "mouse":
                        B.window.conch && B.window.conchConfig.setMouseFrame && B.window.conchConfig.setMouseFrame(2e3);
                        break;
                    case "sleep":
                        B.window.conch && B.window.conchConfig.setLimitFPS && B.window.conchConfig.setLimitFPS(1);
                        break;
                    default:
                        throw new Error("Stage:frameRate invalid.")
                }
            }), u(0, t, "clientScaleY", function() {
                return this._transform ? this._transform.getScaleY() : 1
            }), u(0, t, "width", c.prototype._$get_width, function(t) {
                this.designWidth = t, b.superSet(ct, this, "width", t), b.timer.callLater(this, this._changeCanvasSize)
            }), u(0, t, "alignH", function() {
                return this._alignH
            }, function(t) {
                this._alignH = t, b.timer.callLater(this, this._changeCanvasSize)
            }), u(0, t, "isFocused", function() {
                return this._isFocused
            }), u(0, t, "height", c.prototype._$get_height, function(t) {
                this.designHeight = t, b.superSet(ct, this, "height", t), b.timer.callLater(this, this._changeCanvasSize)
            }), u(0, t, "transform", function() {
                return this._tfChanged && this._adjustTransform(), this._transform = this._transform || A.create()
            }, c.prototype._$set_transform), u(0, t, "isVisibility", function() {
                return this._isVisibility
            }), u(0, t, "desginWidth", function() {
                return console.debug("desginWidth已经弃用，请使用designWidth代替"), this.designWidth
            }), u(0, t, "scaleMode", function() {
                return this._scaleMode
            }, function(t) {
                this._scaleMode = t, b.timer.callLater(this, this._changeCanvasSize)
            }), u(0, t, "alignV", function() {
                return this._alignV
            }, function(t) {
                this._alignV = t, b.timer.callLater(this, this._changeCanvasSize)
            }), u(0, t, "bgColor", function() {
                return this._bgColor
            }, function(t) {
                this._bgColor = t, this.conchModel && this.conchModel.bgColor(t), D.isWebGL && (t ? o._wgColor = z.create(t)._color : B.onMiniGame || (o._wgColor = null)), B.onLimixiu ? o._wgColor = z.create(t)._color : D.canvas.style.background = t || "none"
            }), u(0, t, "mouseX", function() {
                return Math.round(f.instance.mouseX / this.clientScaleX)
            }), u(0, t, "mouseY", function() {
                return Math.round(f.instance.mouseY / this.clientScaleY)
            }), u(0, t, "screenMode", function() {
                return this._screenMode
            }, function(t) {
                this._screenMode = t
            }), u(0, t, "visible", c.prototype._$get_visible, function(t) {
                this.visible !== t && (b.superSet(ct, this, "visible", t), D._mainCanvas.source.style.visibility = t ? "visible" : "hidden")
            }), u(0, t, "fullScreenEnabled", null, function(t) {
                var e = B.document,
                    i = D.canvas;
                t ? (i.addEventListener("mousedown", this._requestFullscreen), i.addEventListener("touchstart", this._requestFullscreen), e.addEventListener("fullscreenchange", this._fullScreenChanged), e.addEventListener("mozfullscreenchange", this._fullScreenChanged), e.addEventListener("webkitfullscreenchange", this._fullScreenChanged), e.addEventListener("msfullscreenchange", this._fullScreenChanged)) : (i.removeEventListener("mousedown", this._requestFullscreen), i.removeEventListener("touchstart", this._requestFullscreen), e.removeEventListener("fullscreenchange", this._fullScreenChanged), e.removeEventListener("mozfullscreenchange", this._fullScreenChanged), e.removeEventListener("webkitfullscreenchange", this._fullScreenChanged), e.removeEventListener("msfullscreenchange", this._fullScreenChanged))
            }), o.SCALE_NOSCALE = "noscale", o.SCALE_EXACTFIT = "exactfit", o.SCALE_SHOWALL = "showall", o.SCALE_NOBORDER = "noborder", o.SCALE_FULL = "full", o.SCALE_FIXED_WIDTH = "fixedwidth", o.SCALE_FIXED_HEIGHT = "fixedheight", o.SCALE_FIXED_AUTO = "fixedauto", o.ALIGN_LEFT = "left", o.ALIGN_RIGHT = "right", o.ALIGN_CENTER = "center", o.ALIGN_TOP = "top", o.ALIGN_MIDDLE = "middle", o.ALIGN_BOTTOM = "bottom", o.SCREEN_NONE = "none", o.SCREEN_HORIZONTAL = "horizontal", o.SCREEN_VERTICAL = "vertical", o.FRAME_FAST = "fast", o.FRAME_SLOW = "slow", o.FRAME_MOUSE = "mouse", o.FRAME_SLEEP = "sleep", o.FRAME_MOUSE_THREDHOLD = 2e3, h(o, ["_wgColor", function() {
                return this._wgColor = [0, 0, 0, 1]
            }]), o
        }(ct),
        vt = (function(t) {
            function e() {
                this.url = null, this._channel = null, this._tar = null, this._playEvents = null, this._stopEvents = null, e.__super.call(this), this.visible = !1, this.on("added", this, this._onParentChange), this.on("removed", this, this._onParentChange)
            }
            p(e, "t_tl.media.SoundNode", ct);
            var i = e.prototype;
            i._onParentChange = function() {
                this.target = this.parent
            }, i.play = function(t, e) {
                void 0 === t && (t = 1), isNaN(t) && (t = 1), this.url && (this.stop(), this._channel = P.playSound(this.url, t, e))
            }, i.stop = function() {
                this._channel && !this._channel.isStopped && this._channel.stop(), this._channel = null
            }, i._setPlayAction = function(t, e, i, n) {
                void 0 === n && (n = !0), this[i] && t && (n ? t.on(e, this, this[i]) : t.off(e, this, this[i]))
            }, i._setPlayActions = function(t, e, i, n) {
                if (void 0 === n && (n = !0), t && e) {
                    var s, r = e.split(","),
                        o = 0;
                    for (s = r.length, o = 0; o < s; o++) this._setPlayAction(t, r[o], i, n)
                }
            }, u(0, i, "playEvent", null, function(t) {
                (this._playEvents = t) && this._tar && this._setPlayActions(this._tar, t, "play")
            }), u(0, i, "target", null, function(t) {
                this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !1), this._setPlayActions(this._tar, this._stopEvents, "stop", !1)), this._tar = t, this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !0), this._setPlayActions(this._tar, this._stopEvents, "stop", !0))
            }), u(0, i, "stopEvent", null, function(t) {
                (this._stopEvents = t) && this._tar && this._setPlayActions(this._tar, t, "stop")
            })
        }(), function(t) {
            function e() {
                this._src = null, this._onload = null, this._onerror = null, e.__super.call(this)
            }
            p(e, "t_tl.resource.FileBitmap", ft);
            var i = e.prototype;
            return u(0, i, "src", function() {
                return this._src
            }, function(t) {
                this._src = t
            }), u(0, i, "onload", null, function(t) {}), u(0, i, "onerror", null, function(t) {}), e
        }()),
        yt = function(t) {
            function i(t, e) {
                this._is2D = !1, i.__super.call(this);
                var n = this;
                if (this._source = this, "2D" === t || "AUTO" === t && !D.isWebGL) {
                    this._is2D = !0, this._source = e || B.createElement("canvas"), this._w = this._source.width, this._h = this._source.height;
                    var s = this;
                    s.getContext = function(t, e) {
                        if (n._ctx) return n._ctx;
                        var i = n._ctx = n._source.getContext(t, e);
                        return i && (i._canvas = s, D.isFlash || B.onLimixiu || (i.size = function(t, e) {})), i
                    }
                }
                this.lock = !0
            }
            p(i, "t_tl.resource.HTMLCanvas", ft);
            var e = i.prototype;
            return e.clear = function() {
                this._ctx && this._ctx.clear()
            }, e.destroy = function() {
                this._ctx && this._ctx.destroy(), this._ctx = null, t_tl.resource.Resource.prototype.destroy.call(this)
            }, e.release = function() {}, e._setContext = function(t) {
                this._ctx = t
            }, e.getContext = function(t, e) {
                return this._ctx ? this._ctx : this._ctx = i._createContext(this)
            }, e.getMemSize = function() {
                return 0
            }, e.size = function(t, e) {
                (this._w != t || this._h != e || this._source && (this._source.width != t || this._source.height != e)) && (this._w = t, this._h = e, this.memorySize = this._w * this._h * 4, this._ctx && this._ctx.size(t, e), this._source && (this._source.height = e, this._source.width = t))
            }, e.getCanvas = function() {
                return this._source
            }, e.toBase64 = function(t, e, i) {
                if (this._source)
                    if (D.isConchApp && this._source.toBase64) this._source.toBase64(t, e, i);
                    else {
                        var n = this._source.toDataURL(t, e);
                        i.call(this, n)
                    }
            }, u(0, e, "context", function() {
                return this._ctx
            }), u(0, e, "asBitmap", null, function(t) {}), i.create = function(t, e) {
                return new i(t, e)
            }, i.TYPE2D = "2D", i.TYPE3D = "3D", i.TYPEAUTO = "AUTO", i._createContext = null, i
        }(),
        wt = (function(t) {
            function h(t, e, i, n, s, r, o, a) {
                throw h.__super.call(this), new Error("不允许new！")
            }
            p(h, "t_tl.resource.HTMLSubImage", ft), h.create = function(t, e, i, n, s, r, o, a) {
                return void 0 === a && (a = !1), new h(t, e, i, n, s, r, o, a)
            }
        }(), function(t) {
            function c() {
                this._frames = null, this._url = null, c.__super.call(this), this._setControlNode(this)
            }
            p(c, "t_tl.display.Animation", t);
            var e = c.prototype;
            e.destroy = function(t) {
                void 0 === t && (t = !0), this.stop(), t_tl.display.Sprite.prototype.destroy.call(this, t), this._frames = null, this._labels = null
            }, e.play = function(t, e, i, n) {
                void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0), i && this._setFramesFromCache(i, n), this._isPlaying = !0, this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.loop = e, this._actionName = i, this._isReverse = 1 == this.wrapMode, this._frames && 0 < this.interval && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0)
            }, e._setFramesFromCache = function(t, e) {
                var i;
                return void 0 === e && (e = !1), this._url && (t = this._url + "#" + t), t && c.framesMap[t] ? ((i = c.framesMap[t]) instanceof Array ? (this._frames = c.framesMap[t], this._count = this._frames.length) : (i.nodeRoot && (c.framesMap[t] = this._parseGraphicAnimationByData(i), i = c.framesMap[t]), this._frames = i.frames, this._count = this._frames.length, this._frameRateChanged || (this._interval = i.interval), this._labels = this._copyLabels(i.labels)), !0) : (e && console.log("ani not found:", t), !1)
            }, e._copyLabels = function(t) {
                if (!t) return null;
                var e, i;
                for (i in e = {}, t) e[i] = q.copyArray([], t[i]);
                return e
            }, e._frameLoop = function() {
                this._style.visible && .01 < this._style.alpha && t.prototype._frameLoop.call(this)
            }, e._displayToIndex = function(t) {
                this._frames && (this.graphics = this._frames[t])
            }, e.clear = function() {
                this.stop(), this.graphics = null, this._frames = null, this._labels = null
            }, e.loadImages = function(t, e) {
                return void 0 === e && (e = ""), this._url = "", this._setFramesFromCache(e) || (this.frames = c.framesMap[e] ? c.framesMap[e] : c.createFrames(t, e)), this
            }, e.loadAtlas = function(e, i, n) {
                void 0 === n && (n = ""), this._url = "";
                var s = this;

                function t(t) {
                    e === t && (s.frames = c.framesMap[n] ? c.framesMap[n] : c.createFrames(e, n), i && i.run())
                }
                return s._setFramesFromCache(n) || (at.getAtlas(e) ? t(e) : b.loader.load(e, v.create(null, t, [e]), null, "atlas")), this
            }, e.loadAnimation = function(t, e, i) {
                this._url = t;
                return this._actionName || (this._actionName = ""), this._setFramesFromCache("") ? (this._setFramesFromCache(this._actionName, !0), this.index = 0, e && e.run()) : !i || at.getAtlas(i) ? this._loadAnimationData(t, e, i) : b.loader.load(i, v.create(this, this._loadAnimationData, [t, e, i]), null, "atlas"), this
            }, e._loadAnimationData = function(a, h, t) {
                var l = this;
                if (!t || at.getAtlas(t)) {
                    var u = this;
                    at.getRes(a) ? e(a) : b.loader.load(a, v.create(null, e, [a]), null, "json"), at.clearRes(a)
                } else console.warn("atlas load fail:" + t);

                function e(t) {
                    if (at.getRes(t) && a === t) {
                        var e;
                        if (c.framesMap[a + "#"]) u._setFramesFromCache(l._actionName, !0), l.index = 0, l._checkResumePlaying();
                        else {
                            var i = u._parseGraphicAnimation(at.getRes(a));
                            if (!i) return;
                            var n, s = i.animationList,
                                r = 0,
                                o = s.length;
                            for (r = 0; r < o; r++) e = s[r], c.framesMap[a + "#" + e.name] = e, n || (n = e);
                            n && (c.framesMap[a + "#"] = n, u._setFramesFromCache(l._actionName, !0), l.index = 0), l._checkResumePlaying()
                        }
                        h && h.run()
                    }
                }
            }, e._parseGraphicAnimation = function(t) {
                return bt.parseAnimationData(t)
            }, e._parseGraphicAnimationByData = function(t) {
                return bt.parseAnimationByData(t)
            }, u(0, e, "frames", function() {
                return this._frames
            }, function(t) {
                (this._frames = t) && (this._count = t.length, this._isPlaying ? this.play(this._index, this.loop, this._actionName) : this.index = this._index)
            }), u(0, e, "autoPlay", null, function(t) {
                t ? this.play() : this.stop()
            }), u(0, e, "source", null, function(t) {
                -1 < t.indexOf(".ani") ? this.loadAnimation(t) : -1 < t.indexOf(".json") || -1 < t.indexOf("als") || -1 < t.indexOf("atlas") ? this.loadAtlas(t) : this.loadImages(t.split(","))
            }), u(0, e, "autoAnimation", null, function(t) {
                this.play(0, !0, t, !1)
            }), c.createFrames = function(t, e) {
                var i, n, s = 0,
                    r = 0;
                if ("string" == typeof t) {
                    var o = at.getAtlas(t);
                    if (o && o.length)
                        for (i = [], s = 0, r = o.length; s < r; s++)(n = new I.createGraphics).drawTexture(at.getRes(o[s]), 0, 0), i.push(n)
                } else if (t instanceof Array)
                    for (i = [], s = 0, r = t.length; s < r; s++)(n = new I.createGraphics).loadImage(t[s], 0, 0), i.push(n);
                return e && (c.framesMap[e] = i), i
            }, c.clearCache = function(t) {
                var e, i = c.framesMap,
                    n = t + "#";
                for (e in i) e !== t && 0 != e.indexOf(n) || delete c.framesMap[e]
            }, c.framesMap = {}
        }(pt), function(t) {
            function r() {
                this._targetDic = null, this._animationData = null, this._animationNewFrames = null, r.__super.call(this), null == r._sortIndexFun && (r._sortIndexFun = T.sortByKey("index", !1, !0))
            }
            p(r, "t_tl.display.FrameAnimation", t);
            var e = r.prototype;
            return e._setUp = function(t, e) {
                this._labels = null, this._animationNewFrames = null, this._targetDic = t, this._animationData = e, this.interval = 1e3 / e.frameRate, e.parsed ? (this._count = e.count, this._labels = e.labels, this._animationNewFrames = e.animationNewFrames) : (this._animationNewFrames = [], this._calculateDatas()), e.parsed = !0, e.labels = this._labels, e.count = this._count, e.animationNewFrames = this._animationNewFrames
            }, e.clear = function() {
                t.prototype.clear.call(this), this._targetDic = null, this._animationData = null
            }, e._displayToIndex = function(t) {
                if (this._animationData) {
                    t < 0 && (t = 0), t > this._count && (t = this._count);
                    var e = this._animationData.nodes,
                        i = 0,
                        n = e.length;
                    for (i = 0; i < n; i++) this._displayNodeToFrame(e[i], t)
                }
            }, e._displayNodeToFrame = function(t, e, i) {
                i || (i = this._targetDic);
                var n = i[t.target];
                if (n) {
                    var s, r, o, a = t.frames,
                        h = t.keys,
                        l = 0,
                        u = h.length;
                    for (l = 0; l < u; l++) o = (r = a[s = h[l]]).length > e ? r[e] : r[r.length - 1], n[s] = o
                }
            }, e._calculateDatas = function() {
                if (this._animationData) {
                    var t, e = this._animationData.nodes,
                        i = 0,
                        n = e.length;
                    for (i = this._count = 0; i < n; i++) t = e[i], this._calculateNodeKeyFrames(t);
                    this._count += 1
                }
            }, e._calculateNodeKeyFrames = function(t) {
                var e, i, n = t.keyframes,
                    s = t.target;
                for (e in t.frames || (t.frames = {}), t.keys ? t.keys.length = 0 : t.keys = [], t.initValues || (t.initValues = {}), n) i = n[e], t.frames[e] || (t.frames[e] = []), this._targetDic && this._targetDic[s] && (t.initValues[e] = this._targetDic[s][e]), i.sort(r._sortIndexFun), t.keys.push(e), this._calculateNodePropFrames(i, t.frames[e], e, s)
            }, e.resetToInitState = function() {
                if (this._targetDic && this._animationData) {
                    var t, e, i = this._animationData.nodes,
                        n = 0,
                        s = i.length;
                    for (n = 0; n < s; n++)
                        if (e = (t = i[n]).initValues) {
                            var r, o = this._targetDic[t.target];
                            if (o)
                                for (r in e) o[r] = e[r]
                        }
                }
            }, e._calculateNodePropFrames = function(t, e, i, n) {
                var s = 0,
                    r = t.length - 1;
                for (e.length = t[r].index + 1, s = 0; s < r; s++) this._dealKeyFrame(t[s]), this._calculateFrameValues(t[s], t[s + 1], e);
                0 == r && (e[0] = t[0].value, this._animationNewFrames && (this._animationNewFrames[t[0].index] = !0)), this._dealKeyFrame(t[s])
            }, e._dealKeyFrame = function(t) {
                t.label && "" != t.label && this.addLabel(t.label, t.index)
            }, e._calculateFrameValues = function(t, e, i) {
                var n, s = 0,
                    r = t.index,
                    o = e.index,
                    a = t.value,
                    h = e.value - t.value,
                    l = o - r;
                if (o > this._count && (this._count = o), t.tween)
                    for (null == (n = H[t.tweenMethod]) && (n = H.linearNone), s = r; s < o; s++) i[s] = n(s - r, a, h, l), this._animationNewFrames && (this._animationNewFrames[s] = !0);
                else
                    for (s = r; s < o; s++) i[s] = a;
                this._animationNewFrames && (this._animationNewFrames[t.index] = !0, this._animationNewFrames[e.index] = !0), i[e.index] = e.value
            }, r._sortIndexFun = null, r
        }(pt)),
        xt = function(e) {
            function s() {
                this._focus = !1, this._multiline = !1, this._editable = !0, this._restrictPattern = null, this._type = "text", this._prompt = "", this._promptColor = "#A9A9A9", this._originColor = "#000000", this._content = "", s.__super.call(this), this._maxChars = 1e5, this._width = 100, this._height = 20, this.multiline = !1, this.overflow = gt.SCROLL, this.on("mousedown", this, this._onMouseDown), this.on("undisplay", this, this._onUnDisplay)
            }
            p(s, "t_tl.display.Input", e);
            var t = s.prototype;
            return t.setSelection = function(t, e) {
                this.focus = !0, t_tl.display.Input.inputElement.selectionStart = t, t_tl.display.Input.inputElement.selectionEnd = e
            }, t._onUnDisplay = function(t) {
                this.focus = !1
            }, t._onMouseDown = function(t) {
                this.focus = !0
            }, t._syncInputTransform = function() {
                var t = this.nativeInput,
                    e = q.getTransformRelativeToWindow(this, this.padding[3], this.padding[0]),
                    i = this._width - this.padding[1] - this.padding[3],
                    n = this._height - this.padding[0] - this.padding[2];
                D.isConchApp ? (t.setScale(e.scaleX, e.scaleY), t.setSize(i, n), t.setPos(e.x, e.y)) : (s.inputContainer.style.transform = s.inputContainer.style.webkitTransform = "scale(" + e.scaleX + "," + e.scaleY + ") rotate(" + b.stage.canvasDegree + "deg)", t.style.width = i + "px", t.style.height = n + "px", s.inputContainer.style.left = e.x + "px", s.inputContainer.style.top = e.y + "px")
            }, t.select = function() {
                this.nativeInput.select()
            }, t._setInputMethod = function() {
                s.input.parentElement && s.inputContainer.removeChild(s.input), s.area.parentElement && s.inputContainer.removeChild(s.area), s.inputElement = this._multiline ? s.area : s.input, s.inputContainer.appendChild(s.inputElement), gt.RightToLeft && (s.inputElement.style.direction = "rtl")
            }, t._focusIn = function() {
                t_tl.display.Input.isInputting = !0;
                var t = this.nativeInput;
                this._focus = !0;
                var e = t.style;
                e.whiteSpace = this.wordWrap ? "pre-wrap" : "nowrap", this._setPromptColor(), t.readOnly = !this._editable, D.isConchApp && (t.setType(this._type), t.setForbidEdit(!this._editable)), t.maxLength = this._maxChars;
                this.padding;
                if (t.type = this._type, t.value = this._content, t.placeholder = this._prompt, b.stage.off("keydown", this, this._onKeyDown), b.stage.on("keydown", this, this._onKeyDown), (b.stage.focus = this).event("focus"), B.onPC && t.focus(), !B.onMiniGame) {
                    this._text;
                    this._text = null
                }
                this.typeset(), t.setColor(this._originColor), t.setFontSize(this.fontSize), t.setFontFace(B.onIPhone && gt._fontFamilyMap[this.font] || this.font), D.isConchApp && t.setMultiAble && t.setMultiAble(this._multiline), e.lineHeight = this.leading + this.fontSize + "px", e.fontStyle = this.italic ? "italic" : "normal", e.fontWeight = this.bold ? "bold" : "normal", e.textAlign = this.align, e.padding = "0 0", this._syncInputTransform(), !D.isConchApp && B.onPC && b.timer.frameLoop(1, this, this._syncInputTransform)
            }, t._setPromptColor = function() {
                (s.promptStyleDOM = B.getElementById("promptStyle")) || ((s.promptStyleDOM = B.createElement("style")).setAttribute("id", "promptStyle"), B.document.head.appendChild(s.promptStyleDOM)), s.promptStyleDOM.innerText = "input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {color:" + this._promptColor + "}input:-moz-placeholder, textarea:-moz-placeholder {color:" + this._promptColor + "}input::-moz-placeholder, textarea::-moz-placeholder {color:" + this._promptColor + "}input:-ms-input-placeholder, textarea:-ms-input-placeholder {color:" + this._promptColor + "}"
            }, t._focusOut = function() {
                t_tl.display.Input.isInputting = !1, this._focus = !1, this._text = null, this._content = this.nativeInput.value, this._content ? (b.superSet(gt, this, "text", this._content), b.superSet(gt, this, "color", this._originColor)) : (b.superSet(gt, this, "text", this._prompt), b.superSet(gt, this, "color", this._promptColor)), b.stage.off("keydown", this, this._onKeyDown), b.stage.focus = null, this.event("blur"), D.isConchApp && this.nativeInput.blur(), B.onPC && b.timer.clear(this, this._syncInputTransform)
            }, t._onKeyDown = function(t) {
                13 === t.keyCode && (B.onMobile && !this._multiline && (this.focus = !1), this.event("enter"))
            }, t.changeText = function(t) {
                this._content = t, this._focus ? (this.nativeInput.value = t || "", this.event("change")) : e.prototype.changeText.call(this, t)
            }, u(0, t, "color", e.prototype._$get_color, function(t) {
                this._focus && this.nativeInput.setColor(t), b.superSet(gt, this, "color", this._content ? t : this._promptColor), this._originColor = t
            }), u(0, t, "inputElementYAdjuster", function() {
                return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。"), 0
            }, function(t) {
                console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。")
            }), u(0, t, "multiline", function() {
                return this._multiline
            }, function(t) {
                this._multiline = t, this.valign = t ? "top" : "middle"
            }), u(0, t, "maxChars", function() {
                return this._maxChars
            }, function(t) {
                t <= 0 && (t = 1e5), this._maxChars = t
            }), u(0, t, "text", function() {
                return this._focus ? this.nativeInput.value : this._content || ""
            }, function(t) {
                b.superSet(gt, this, "color", this._originColor), t += "", this._focus ? (this.nativeInput.value = t || "", this.event("change")) : (this._multiline || (t = t.replace(/\r?\n/g, "")), (this._content = t) ? b.superSet(gt, this, "text", t) : (b.superSet(gt, this, "text", this._prompt), b.superSet(gt, this, "color", this.promptColor)))
            }), u(0, t, "nativeInput", function() {
                return this._multiline ? s.area : s.input
            }), u(0, t, "prompt", function() {
                return this._prompt
            }, function(t) {
                !this._text && t && b.superSet(gt, this, "color", this._promptColor), this.promptColor = this._promptColor, this._text ? b.superSet(gt, this, "text", this._text == this._prompt ? t : this._text) : b.superSet(gt, this, "text", t), this._prompt = gt.langPacks && gt.langPacks[t] ? gt.langPacks[t] : t
            }), u(0, t, "focus", function() {
                return this._focus
            }, function(t) {
                var e = this.nativeInput;
                this._focus !== t && (t ? (e.target ? e.target._focusOut() : this._setInputMethod(), (e.target = this)._focusIn()) : (e.target = null, this._focusOut(), B.document.body.scrollTop = 0, e.blur(), D.isConchApp ? e.setPos(-1e4, -1e4) : s.inputContainer.contains(e) && s.inputContainer.removeChild(e)))
            }), u(0, t, "restrict", function() {
                return this._restrictPattern ? this._restrictPattern.source : ""
            }, function(t) {
                t ? (-1 < (t = "[^" + t + "]").indexOf("^^") && (t = t.replace("^^", "")), this._restrictPattern = new RegExp(t, "g")) : this._restrictPattern = null
            }), u(0, t, "editable", function() {
                return this._editable
            }, function(t) {
                this._editable = t, D.isConchApp && s.input.setForbidEdit(!t)
            }), u(0, t, "promptColor", function() {
                return this._promptColor
            }, function(t) {
                this._promptColor = t, this._content || b.superSet(gt, this, "color", t)
            }), u(0, t, "type", function() {
                return this._type
            }, function(t) {
                this._getCSSStyle().password = "password" == t, this._type = t, D.isConchApp && this.nativeInput.setType(t)
            }), u(0, t, "inputElementXAdjuster", function() {
                return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。"), 0
            }, function(t) {
                console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。")
            }), u(0, t, "asPassword", function() {
                return this._getCSSStyle().password
            }, function(t) {
                this._getCSSStyle().password = t, this._type = "password", console.warn('deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去'), this.isChanged = !0
            }), s.__init__ = function() {
                s._createInputElement(), B.onMobile && D.canvas.addEventListener(s.IOS_IFRAME ? B.onMiniGame ? "touchend" : "click" : "touchend", s._popupInputMethod)
            }, s._popupInputMethod = function(t) {
                t_tl.display.Input.isInputting && t_tl.display.Input.inputElement.focus()
            }, s._createInputElement = function() {
                s._initInput(s.area = B.createElement("textarea")), s._initInput(s.input = B.createElement("input")), (s.inputContainer = B.createElement("div")).style.position = "absolute", s.inputContainer.style.zIndex = 1e5, B.container.appendChild(s.inputContainer), s.inputContainer.setPos = function(t, e) {
                    s.inputContainer.style.left = t + "px", s.inputContainer.style.top = e + "px"
                }
            }, s._initInput = function(e) {
                var t = e.style;
                t.cssText = "position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;", t.resize = "none", t.backgroundColor = "transparent", t.border = "none", t.outline = "none", t.zIndex = 1, e.addEventListener("input", s._processInputting), e.addEventListener("mousemove", s._stopEvent), e.addEventListener("mousedown", s._stopEvent), e.addEventListener("touchmove", s._stopEvent), e.setFontFace = function(t) {
                    e.style.fontFamily = t
                }, D.isConchApp || (e.setColor = function(t) {
                    e.style.color = t
                }, e.setFontSize = function(t) {
                    e.style.fontSize = t + "px"
                })
            }, s._processInputting = function(t) {
                var e = t_tl.display.Input.inputElement.target;
                if (e) {
                    var i = t_tl.display.Input.inputElement.value;
                    e._restrictPattern && (i = i.replace(/\u2006|\x27/g, ""), e._restrictPattern.test(i) && (i = i.replace(e._restrictPattern, ""), t_tl.display.Input.inputElement.value = i)), e._text = i, e.event("input")
                }
            }, s._stopEvent = function(t) {
                "touchmove" == t.type && t.preventDefault(), t.stopPropagation && t.stopPropagation()
            }, s.TYPE_TEXT = "text", s.TYPE_PASSWORD = "password", s.TYPE_EMAIL = "email", s.TYPE_URL = "url", s.TYPE_NUMBER = "number", s.TYPE_RANGE = "range", s.TYPE_DATE = "date", s.TYPE_MONTH = "month", s.TYPE_WEEK = "week", s.TYPE_TIME = "time", s.TYPE_DATE_TIME = "datetime", s.TYPE_DATE_TIME_LOCAL = "datetime-local", s.TYPE_SEARCH = "search", s.input = null, s.area = null, s.inputElement = null, s.inputContainer = null, s.confirmButton = null, s.promptStyleDOM = null, s.inputHeight = 45, s.isInputting = !1, s.stageMatrix = null, h(s, ["IOS_IFRAME", function() {
                return this.IOS_IFRAME = B.onIOS && B.window.top != B.window.self
            }]), s
        }(gt),
        Tt = function(t) {
            function i(t, e) {
                this._recreateLock = !1, this._needReleaseAgain = !1, this._enableMerageInAtlas = !0, i.__super.call(this), this._init_(t, e)
            }
            p(i, "t_tl.resource.HTMLImage", vt);
            var e = i.prototype;
            return e._init_ = function(t, e) {
                this._src = t, this._source = new B.window.Image, e && (e.onload && (this.onload = e.onload), e.onerror && (this.onerror = e.onerror), e.onCreate && e.onCreate(this)), 0 != t.indexOf("data:image") && (this._source.crossOrigin = ""), t && (this._source.src = t)
            }, e.recreateResource = function() {
                var t = this;
                if ("" === this._src) throw new Error("src no null！");
                if (this._needReleaseAgain = !1, this._source) {
                    if (this._recreateLock) return;
                    this.memorySize = this._w * this._h * 4, this._recreateLock = !1, this.completeCreate()
                } else {
                    this._recreateLock = !0;
                    var e = this;
                    this._source = new B.window.Image, this._source.crossOrigin = "", this._source.onload = function() {
                        if (e._needReleaseAgain) return e._needReleaseAgain = !1, e._source.onload = null, void(e._source = null);
                        e._source.onload = null, e.memorySize = t._w * t._h * 4, e._recreateLock = !1, e.completeCreate()
                    }, this._source.src = this._src
                }
            }, e.disposeResource = function() {
                this._recreateLock && (this._needReleaseAgain = !0), this._source && (this._source = null, this.memorySize = 0)
            }, e.onresize = function() {
                this._w = this._source.width, this._h = this._source.height
            }, u(0, e, "onload", null, function(t) {
                var e = this;
                this._onload = t, this._source && (this._source.onload = null != this._onload ? function() {
                    e.onresize(), e._onload()
                } : null)
            }), u(0, e, "onerror", null, function(t) {
                var e = this;
                this._onerror = t, this._source && (this._source.onerror = null != this._onerror ? function() {
                    e._onerror()
                } : null)
            }), u(0, e, "enableMerageInAtlas", function() {
                return this._enableMerageInAtlas
            }, function(t) {
                this._enableMerageInAtlas = t, D.isConchApp && this._source && (this._source.enableMerageInAtlas = t)
            }), i.create = function(t, e) {
                return new i(t, e)
            }, i
        }(),
        bt = (function(r) {
            function t() {
                this._target = null, this._playEvents = null, this._initData = {}, this._aniKeys = null, this._effectClass = null, t.__super.call(this)
            }
            p(t, "t_tl.display.EffectAnimation", r);
            var e = t.prototype;
            e._onOtherBegin = function(t) {
                t != this && this.stop()
            }, e.addEvent = function() {
                this._target && this._playEvents && (this._setControlNode(this._target), this._target.on(this._playEvents, this, this._onPlayAction))
            }, e._onPlayAction = function() {
                this.play(0, !1)
            }, e.play = function(t, e, i, n) {
                void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0), this._target && (this._target.event("effectanimationbegin", [this]), this._recordInitData(), t_tl.display.AnimationPlayerBase.prototype.play.call(this, t, e, i, n))
            }, e._recordInitData = function() {
                if (this._aniKeys) {
                    var t, e, i = 0;
                    for (t = this._aniKeys.length, i = 0; i < t; i++) e = this._aniKeys[i], this._initData[e] = this._target[e]
                }
            }, e._displayToIndex = function(t) {
                if (this._animationData) {
                    t < 0 && (t = 0), t > this._count && (t = this._count);
                    var e = this._animationData.nodes,
                        i = 0,
                        n = e.length;
                    for (n = 1 < n ? 1 : n, i = 0; i < n; i++) this._displayNodeToFrame(e[i], t)
                }
            }, e._displayNodeToFrame = function(t, e, i) {
                if (this._target) {
                    var n;
                    n = this._target;
                    var s, r, o, a, h = t.frames,
                        l = t.keys,
                        u = 0,
                        c = l.length;
                    a = t.secondFrames;
                    var _, d, f, p, g = 0;
                    for (u = 0; u < c; u++) r = h[s = l[u]], -1 == (g = a[s]) ? o = this._initData[s] : e < g ? (f = (d = t.keyframes[s])[0]).tween ? (null == (_ = H[f.tweenMethod]) && (_ = H.linearNone), p = d[1], o = _(e, this._initData[s], p.value - this._initData[s], p.index)) : o = this._initData[s] : o = r.length > e ? r[e] : r[r.length - 1], n[s] = o
                }
            }, e._calculateNodeKeyFrames = function(t) {
                r.prototype._calculateNodeKeyFrames.call(this, t);
                var e, i, n, s = t.keyframes;
                t.target;
                for (e in n = {}, t.secondFrames = n, s)(i = s[e]).length <= 1 ? n[e] = -1 : n[e] = i[1].index
            }, u(0, e, "target", function() {
                return this._target
            }, function(t) {
                this._target && this._target.off("effectanimationbegin", this, this._onOtherBegin), this._target = t, this._target && this._target.on("effectanimationbegin", this, this._onOtherBegin), this.addEvent()
            }), u(0, e, "playEvent", null, function(t) {
                (this._playEvents = t) && this.addEvent()
            }), u(0, e, "effectData", null, function(t) {
                var e;
                t && ((e = t.animations) && e[0] && (this._setUp({}, e[0]), e[0].nodes && e[0].nodes[0] && (this._aniKeys = e[0].nodes[0].keys)))
            }), u(0, e, "effectClass", null, function(t) {
                var e, i;
                (this._effectClass = U.getClass(t), this._effectClass) && ((e = this._effectClass.uiView) && (i = e.animations) && i[0] && (this._setUp({}, i[0]), i[0].nodes && i[0].nodes[0] && (this._aniKeys = i[0].nodes[0].keys)))
            }), t.EffectAnimationBegin = "effectanimationbegin"
        }(wt), function(e) {
            var P;

            function E() {
                this.animationList = null, this.animationDic = null, this._nodeList = null, this._nodeDefaultProps = null, this._gList = null, this._nodeIDAniDic = {}, this._rootNode = null, this._nodeGDic = null, E.__super.call(this)
            }
            p(E, "t_tl.utils.GraphicAnimation", e);
            var t = E.prototype;
            return t._parseNodeList = function(t) {
                this._nodeList || (this._nodeList = []), this._nodeDefaultProps[t.compId] = t.props, t.compId && this._nodeList.push(t.compId);
                var e = t.child;
                if (e) {
                    var i = 0,
                        n = e.length;
                    for (i = 0; i < n; i++) this._parseNodeList(e[i])
                }
            }, t._calGraphicData = function(t) {
                var e;
                if (this._setUp(null, t), this._createGraphicData(), this._nodeIDAniDic)
                    for (e in this._nodeIDAniDic) this._nodeIDAniDic[e] = null
            }, t._createGraphicData = function() {
                var t, e = [],
                    i = 0,
                    n = this.count,
                    s = this._animationNewFrames;
                for (s || (s = []), i = 0; i < n; i++) !s[i] && t || (t = this._createFrameGraphic(i)), e.push(t);
                this._gList = e
            }, t._createFrameGraphic = function(t) {
                var e = I.createGraphics();
                return E._rootMatrix || (E._rootMatrix = new A), this._updateNodeGraphic(this._rootNode, t, E._rootMatrix, e), e
            }, t._updateNodeGraphic = function(t, e, i, n, s) {
                var r;
                void 0 === s && (s = 1);
                var o, a, h, l = (r = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId])).alpha * s;
                if (!(l < .01) && (r.resultTransform || (r.resultTransform = A.create()), o = r.resultTransform, A.mul(r.transform, i, o), r.skin && (a = this._getTextureByUrl(r.skin)) && (o._checkTransform() ? (n.drawTexture(a, 0, 0, r.width, r.height, o, l), r.resultTransform = null) : n.drawTexture(a, o.tx, o.ty, r.width, r.height, null, l)), h = t.child)) {
                    var u, c = 0;
                    for (u = h.length, c = 0; c < u; c++) this._updateNodeGraphic(h[c], e, o, n, l)
                }
            }, t._updateNoChilds = function(t, e) {
                if (t.skin) {
                    var i = this._getTextureByUrl(t.skin);
                    if (i) {
                        var n = t.transform;
                        n._checkTransform();
                        !n.bTransform ? e.drawTexture(i, n.tx, n.ty, t.width, t.height, null, t.alpha) : e.drawTexture(i, 0, 0, t.width, t.height, n.clone(), t.alpha)
                    }
                }
            }, t._updateNodeGraphic2 = function(t, e, i) {
                var n;
                if (n = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId]), t.child) {
                    var s = n.transform;
                    s._checkTransform();
                    var r, o;
                    o = (r = !s.bTransform) && (0 != s.tx || 0 != s.ty);
                    var a, h, l;
                    if ((a = s.bTransform || 1 != n.alpha) && i.save(), 1 != n.alpha && i.alpha(n.alpha), r ? o && i.translate(s.tx, s.ty) : i.transform(s.clone()), h = t.child, n.skin && (l = this._getTextureByUrl(n.skin)) && i.drawTexture(l, 0, 0, n.width, n.height), h) {
                        var u, c = 0;
                        for (u = h.length, c = 0; c < u; c++) this._updateNodeGraphic2(h[c], e, i)
                    }
                    a ? i.restore() : r ? o && i.translate(-s.tx, -s.ty) : i.transform(s.clone().invert())
                } else this._updateNoChilds(n, i)
            }, t._calculateNodeKeyFrames = function(t) {
                e.prototype._calculateNodeKeyFrames.call(this, t), this._nodeIDAniDic[t.target] = t
            }, t.getNodeDataByID = function(t) {
                return this._nodeIDAniDic[t]
            }, t._getParams = function(t, e, i, n) {
                var s = E._temParam;
                s.length = e.length;
                var r = 0,
                    o = e.length;
                for (r = 0; r < o; r++) s[r] = this._getObjVar(t, e[r][0], i, e[r][1], n);
                return s
            }, t._getObjVar = function(t, e, i, n, s) {
                if (t.hasOwnProperty(e)) {
                    var r = t[e];
                    return i >= r.length && (i = r.length - 1), t[e][i]
                }
                return s.hasOwnProperty(e) ? s[e] : n
            }, t._getNodeGraphicData = function(t, e, i) {
                i || (i = P.create()), i.transform ? i.transform.identity() : i.transform = A.create();
                var n = this.getNodeDataByID(t);
                if (!n) return i;
                var s, r, o = n.frames,
                    a = this._getParams(o, E._drawTextureCmd, e, this._nodeDefaultProps[t]),
                    h = a[0],
                    l = NaN,
                    u = NaN,
                    c = a[5],
                    _ = a[6],
                    d = a[13],
                    f = a[14],
                    p = a[7],
                    g = a[8],
                    m = a[9],
                    v = a[11],
                    y = a[12];
                l = a[3], u = a[4], 0 != l && 0 != u || (h = null), -1 == l && (l = 0), -1 == u && (u = 0), i.skin = h, i.width = l, i.height = u, h && ((s = this._getTextureByUrl(h)) ? (l || (l = s.sourceWidth), u || (u = s.sourceHeight)) : console.warn("lost skin:", h, ",you may load pics first")), i.alpha = a[10], r = i.transform, 0 != d && (c = d * l), 0 != f && (_ = f * u), 0 == c && 0 == _ || r.translate(-c, -_);
                var w = null;
                if (m || 1 !== p || 1 !== g || v || y) {
                    (w = E._tempMt).identity(), w.bTransform = !0;
                    var x = .0174532922222222 * (m - v),
                        T = .0174532922222222 * (m + y),
                        b = Math.cos(T),
                        C = Math.sin(T),
                        M = Math.sin(x),
                        S = Math.cos(x);
                    w.a = p * b, w.b = p * C, w.c = -g * M, w.d = g * S, w.tx = w.ty = 0
                }
                return w && (r = A.mul(r, w, r)), r.translate(a[1], a[2]), i
            }, t._getTextureByUrl = function(t) {
                return at.getRes(t)
            }, t.setAniData = function(t, e) {
                if (t.animations) {
                    this._nodeDefaultProps = {}, this._nodeGDic = {}, this._nodeList && (this._nodeList.length = 0), this._rootNode = t, this._parseNodeList(t);
                    var i, n = {},
                        s = [],
                        r = t.animations,
                        o = 0,
                        a = r.length;
                    for (o = 0; o < a; o++)
                        if (i = r[o], this._labels = null, (!e || e == i.name) && i) {
                            try {
                                this._calGraphicData(i)
                            } catch (t) {
                                console.warn("parse animation fail:" + i.name + ",empty animation created"), this._gList = []
                            }
                            var h = {};
                            h.interval = 1e3 / i.frameRate, h.frames = this._gList, h.labels = this._labels, h.name = i.name, s.push(h), n[i.name] = h
                        }
                    this.animationList = s, this.animationDic = n
                }
                E._temParam.length = 0
            }, t.parseByData = function(t) {
                var e, i;
                e = t.nodeRoot, i = t.aniO, delete t.nodeRoot, delete t.aniO, this._nodeDefaultProps = {}, this._nodeGDic = {}, this._nodeList && (this._nodeList.length = 0), this._rootNode = e, this._parseNodeList(e), this._labels = null;
                try {
                    this._calGraphicData(i)
                } catch (t) {
                    console.warn("parse animation fail:" + i.name + ",empty animation created"), this._gList = []
                }
                var n = t;
                return n.interval = 1e3 / i.frameRate, n.frames = this._gList, n.labels = this._labels, n.name = i.name, n
            }, t.setUpAniData = function(t) {
                if (t.animations) {
                    var e, i = {},
                        n = [],
                        s = t.animations,
                        r = 0,
                        o = s.length;
                    for (r = 0; r < o; r++)
                        if (e = s[r]) {
                            var a = {};
                            a.name = e.name, a.aniO = e, a.nodeRoot = t, n.push(a), i[e.name] = a
                        }
                    this.animationList = n, this.animationDic = i
                }
            }, t._clear = function() {
                var t, e;
                if (this.animationList = null, this.animationDic = null, this._gList = null, this._nodeGDic)
                    for (t in this._nodeGDic)(e = this._nodeGDic[t]) && e.recover();
                this._nodeGDic = null
            }, E.parseAnimationByData = function(t) {
                var e;
                return E._I || (E._I = new E), e = E._I.parseByData(t), E._I._clear(), e
            }, E.parseAnimationData = function(t) {
                var e;
                return E._I || (E._I = new E), E._I.setUpAniData(t), (e = {}).animationList = E._I.animationList, e.animationDic = E._I.animationDic, E._I._clear(), e
            }, E._drawTextureCmd = [
                ["skin", null],
                ["x", 0],
                ["y", 0],
                ["width", -1],
                ["height", -1],
                ["pivotX", 0],
                ["pivotY", 0],
                ["scaleX", 1],
                ["scaleY", 1],
                ["rotation", 0],
                ["alpha", 1],
                ["skewX", 0],
                ["skewY", 0],
                ["anchorX", 0],
                ["anchorY", 0]
            ], E._temParam = [], E._I = null, E._rootMatrix = null, h(E, ["_tempMt", function() {
                return this._tempMt = new A
            }]), E.__init$ = function() {
                P = function() {
                    function t() {
                        this.skin = null, this.transform = null, this.resultTransform = null, this.width = NaN, this.height = NaN, this.alpha = 1
                    }
                    return p(t, ""), t.prototype.recover = function() {
                        this.skin = null, this.width = 0, this.height = 0, this.alpha = 1, this.transform && (this.transform.destroy(), this.transform = null), this.resultTransform && (this.resultTransform.destroy(), this.resultTransform = null), $.recover("GraphicNode", this)
                    }, t.create = function() {
                        return $.getItemByClass("GraphicNode", t)
                    }, t
                }()
            }, E
        }(wt));
    b.__init([l, ht, D, B, j, E, t, bt])
}(window, document, t_t),
function(t, e, i) {
    i.un, i.uns, i.static;
    var n = i.class;
    i.getset, i.__newvec;
    new(function() {
        function t() {}
        return n(t, "LayaMain"), t
    }())
}(window, document, t_t), "function" == typeof define && define.amd && define("t_tl.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
            value: !0
        }), t_t) {
        var n = t_t[i];
        n && n.__isclass && (e[i] = n)
    }
});
! function(t, e, T) {
    T.un, T.uns;
    var n = T.static,
        c = T.class,
        l = T.getset,
        a = T.__newvec,
        u = t_tl.maths.Arith,
        _ = t_tl.maths.Bezier,
        i = t_tl.resource.Bitmap,
        f = t_tl.utils.Browser,
        h = t_tl.utils.Byte,
        d = t_tl.utils.Color,
        A = (t_tl.filters.ColorFilter, T.Config),
        r = t_tl.resource.Context,
        E = (t_tl.events.Event, t_tl.filters.Filter),
        s = t_tl.display.Graphics,
        o = t_tl.resource.HTMLCanvas,
        m = (t_tl.utils.HTMLChar, t_tl.resource.HTMLImage),
        p = t_tl.resource.HTMLSubImage,
        S = (t_tl.utils.Handler, t_tl.net.Loader, t_tl.maths.Matrix),
        w = t_tl.maths.Point,
        R = t_tl.maths.Rectangle,
        g = t_tl.renders.Render,
        v = (t_tl.renders.RenderContext, t_tl.renders.RenderSprite),
        x = t_tl.resource.Resource,
        b = t_tl.resource.ResourceManager,
        y = t_tl.utils.RunDriver,
        I = t_tl.display.Sprite,
        M = t_tl.display.Stage,
        C = t_tl.utils.Stat,
        L = t_tl.utils.StringKey,
        P = (t_tl.display.css.Style, t_tl.system.System),
        D = t_tl.display.Text,
        F = t_tl.resource.Texture,
        B = (t_tl.display.css.TransformInfo, t_tl.net.URL, t_tl.utils.Utils),
        N = t_tl.utils.VectorGraphManager;
    t_tl.utils.WordText;
    T.interface("t_tl.webgl.shapes.IShape"), T.interface("t_tl.webgl.submit.ISubmit"), T.interface("t_tl.webgl.text.ICharSegment"), T.interface("t_tl.webgl.canvas.save.ISaveData"), T.interface("t_tl.webgl.resource.IMergeAtlasBitmap"), T.interface("t_tl.filters.IFilterActionGL", "t_tl.filters.IFilterAction");
    var O = function() {
            function t() {}
            c(t, "t_tl.filters.webgl.FilterActionGL");
            var e = t.prototype;
            return T.imps(e, {
                "t_tl.filters.IFilterActionGL": !0
            }), e.setValue = function(t) {}, e.setValueMix = function(t) {}, e.apply3d = function(t, e, i, r, s) {
                return null
            }, e.apply = function(t) {
                return null
            }, l(0, e, "typeMix", function() {
                return 0
            }), t
        }(),
        V = function() {
            function t() {}
            return c(t, "t_tl.webgl.shader.ShaderValue"), t
        }(),
        U = function() {
            var r, s;

            function t(t, e, i) {
                this._atlasID = 0, this._width = 0, this._height = 0, this._texCount = 0, this._rowInfo = null, this._cells = null, this._failSize = new s, void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), this._cells = null, this._rowInfo = null, this._init(t, e), this._atlasID = i
            }
            c(t, "t_tl.webgl.atlas.AtlasGrid");
            var e = t.prototype;
            return e.getAltasID = function() {
                return this._atlasID
            }, e.setAltasID = function(t) {
                0 <= t && (this._atlasID = t)
            }, e.addTex = function(t, e, i) {
                var r = this._get(e, i);
                return 0 == r.ret || (this._fill(r.x, r.y, e, i, t), this._texCount++), r
            }, e._release = function() {
                null != this._cells && (this._cells.length = 0, this._cells = null), this._rowInfo && (this._rowInfo.length = 0, this._rowInfo = null)
            }, e._init = function(t, e) {
                if (this._width = t, this._height = e, this._release(), 0 == this._width) return !1;
                this._cells = new Uint8Array(this._width * this._height * 3), this._rowInfo = a(this._height);
                for (var i = 0; i < this._height; i++) this._rowInfo[i] = new r;
                return this._clear(), !0
            }, e._get = function(t, e) {
                var i = new H;
                if (t >= this._failSize.width && e >= this._failSize.height) return i;
                for (var r = -1, s = -1, a = this._width, n = this._height, h = this._cells, l = 0; l < n; l++)
                    if (!(this._rowInfo[l].spaceCount < t))
                        for (var o = 0; o < a;) {
                            var u = 3 * (l * a + o);
                            if (0 != h[u] || h[u + 1] < t || h[u + 2] < e) o += h[u + 1];
                            else {
                                r = o, s = l;
                                for (var _ = 0; _ < t; _++)
                                    if (h[3 * _ + u + 2] < e) {
                                        r = -1;
                                        break
                                    }
                                if (!(r < 0)) return i.ret = !0, i.x = r, i.y = s, i;
                                o += h[u + 1]
                            }
                        }
                return i
            }, e._fill = function(t, e, i, r, s) {
                var a = this._width,
                    n = this._height;
                this._check(t + i <= a && e + r <= n);
                for (var h = e; h < r + e; ++h) {
                    this._check(this._rowInfo[h].spaceCount >= i), this._rowInfo[h].spaceCount -= i;
                    for (var l = 0; l < i; l++) {
                        var o = 3 * (t + h * a + l);
                        this._check(0 == this._cells[o]), this._cells[o] = s, this._cells[o + 1] = i, this._cells[o + 2] = r
                    }
                }
                if (0 < t)
                    for (h = 0; h < r; ++h) {
                        var u = 0;
                        for (l = t - 1; 0 <= l && 0 == this._cells[3 * ((e + h) * a + l)]; --l, ++u);
                        for (l = u; 0 < l; --l) this._cells[3 * ((e + h) * a + t - l) + 1] = l, this._check(0 < l)
                    }
                if (0 < e)
                    for (l = t; l < t + i; ++l) {
                        for (u = 0, h = e - 1; 0 <= h && 0 == this._cells[3 * (l + h * a)]; --h, u++);
                        for (h = u; 0 < h; --h) this._cells[3 * (l + (e - h) * a) + 2] = h, this._check(0 < h)
                    }
            }, e._check = function(t) {
                0 == t && console.log("xtexMerger 错误啦")
            }, e._clear = function() {
                for (var t = this._texCount = 0; t < this._height; t++) this._rowInfo[t].spaceCount = this._width;
                for (var e = 0; e < this._height; e++)
                    for (var i = 0; i < this._width; i++) {
                        var r = 3 * (e * this._width + i);
                        this._cells[r] = 0, this._cells[r + 1] = this._width - i, this._cells[r + 2] = this._width - e
                    }
                this._failSize.width = this._width + 1, this._failSize.height = this._height + 1
            }, t.__init$ = function() {
                r = function() {
                    function t() {
                        this.spaceCount = 0
                    }
                    return c(t, ""), t
                }(), s = function() {
                    function t() {
                        this.width = 0, this.height = 0
                    }
                    return c(t, ""), t
                }()
            }, t
        }(),
        k = function() {
            function g(t, e, i, r) {
                this._currentAtlasCount = 0, this._maxAtlaserCount = 0, this._width = 0, this._height = 0, this._gridSize = 0, this._gridNumX = 0, this._gridNumY = 0, this._init = !1, this._curAtlasIndex = 0, this._setAtlasParam = !1, this._atlaserArray = null, this._needGC = !1, this._setAtlasParam = !0, this._width = t, this._height = e, this._gridSize = i, this._maxAtlaserCount = r, this._gridNumX = t / i, this._gridNumY = e / i, this._curAtlasIndex = 0, this._atlaserArray = []
            }
            c(g, "t_tl.webgl.atlas.AtlasResourceManager");
            var t = g.prototype;
            return t.setAtlasParam = function(t, e, i, r) {
                if (1 == this._setAtlasParam) return g._sid_ = 0, this._width = t, this._height = e, this._gridSize = i, this._maxAtlaserCount = r, this._gridNumX = t / i, this._gridNumY = e / i, this._curAtlasIndex = 0, this.freeAll(), !0;
                throw console.log("设置大图合集参数错误，只能在开始页面设置各种参数"), -1
            }, t.pushData = function(t) {
                var e, i = t.bitmap,
                    r = -1,
                    s = null,
                    a = 0,
                    n = 0;
                for (a = 0, e = this._atlaserArray.length; a < e && (n = (this._curAtlasIndex + a) % e, -1 == (r = (s = this._atlaserArray[n]).findBitmapIsExist(i))); a++);
                if (-1 != r) {
                    var h = s.InAtlasWebGLImagesOffsetValue[r];
                    return d = h[0], m = h[1], s.addToAtlas(t, d, m), !0
                }
                this._setAtlasParam = !1;
                for (var l = Math.ceil((t.bitmap.width + 2) / this._gridSize), o = Math.ceil((t.bitmap.height + 2) / this._gridSize), u = !1, _ = 0; _ < 2; _++) {
                    var c = this._maxAtlaserCount;
                    for (a = 0; a < c; a++) {
                        n = (this._curAtlasIndex + a) % c, this._atlaserArray.length - 1 >= n || this._atlaserArray.push(new Rt(this._gridNumX, this._gridNumY, this._width, this._height, g._sid_++));
                        var f = this._atlaserArray[n],
                            d = 0,
                            m = 0,
                            p = f.addTex(1, l, o);
                        if (p.ret) {
                            d = p.x * this._gridSize + 1, m = p.y * this._gridSize + 1, i.lock = !0, f.addToAtlasTexture(i, d, m), f.addToAtlas(t, d, m), u = !0, this._curAtlasIndex = n;
                            break
                        }
                    }
                    if (u) break;
                    this._atlaserArray.push(new Rt(this._gridNumX, this._gridNumY, this._width, this._height, g._sid_++)), this._needGC = !0, this.garbageCollection(), this._curAtlasIndex = this._atlaserArray.length - 1
                }
                return u || console.log(">>>AtlasManager pushData error"), u
            }, t.addToAtlas = function(t) {
                t_tl.webgl.atlas.AtlasResourceManager.instance.pushData(t)
            }, t.garbageCollection = function() {
                if (!0 === this._needGC) {
                    for (var t = this._atlaserArray.length - this._maxAtlaserCount, e = 0; e < t; e++) this._atlaserArray[e].dispose(), console.log("AtlasResourceManager:Dispose the inner Atlas。");
                    console.log(">>>>altas garbageCollection =" + t), this._atlaserArray.splice(0, t), this._needGC = !1
                }
                return !0
            }, t.freeAll = function() {
                for (var t = 0, e = this._atlaserArray.length; t < e; t++) this._atlaserArray[t].dispose();
                this._atlaserArray.length = 0, this._curAtlasIndex = 0
            }, t.getAtlaserCount = function() {
                return this._atlaserArray.length
            }, t.getAtlaserByIndex = function(t) {
                return this._atlaserArray[t]
            }, l(1, g, "instance", function() {
                return g._Instance || (g._Instance = new g(t_tl.webgl.atlas.AtlasResourceManager.atlasTextureWidth, t_tl.webgl.atlas.AtlasResourceManager.atlasTextureHeight, 16, t_tl.webgl.atlas.AtlasResourceManager.maxTextureCount)), g._Instance
            }), l(1, g, "enabled", function() {
                return A.atlasEnable
            }), l(1, g, "atlasLimitWidth", function() {
                return g._atlasLimitWidth
            }, function(t) {
                g._atlasLimitWidth = t
            }), l(1, g, "atlasLimitHeight", function() {
                return g._atlasLimitHeight
            }, function(t) {
                g._atlasLimitHeight = t
            }), g._enable = function() {
                A.atlasEnable = !0
            }, g._disable = function() {
                A.atlasEnable = !1
            }, g.__init__ = function() {
                g.atlasTextureWidth = 2048, g.atlasTextureHeight = 2048, g.maxTextureCount = 6, g.atlasLimitWidth = 512, g.atlasLimitHeight = 512
            }, g._atlasLimitWidth = 0, g._atlasLimitHeight = 0, g.gridSize = 16, g.atlasTextureWidth = 0, g.atlasTextureHeight = 0, g.maxTextureCount = 0, g._atlasRestore = 0, g.BOARDER_TYPE_NO = 0, g.BOARDER_TYPE_RIGHT = 1, g.BOARDER_TYPE_LEFT = 2, g.BOARDER_TYPE_BOTTOM = 4, g.BOARDER_TYPE_TOP = 8, g.BOARDER_TYPE_ALL = 15, g._sid_ = 0, g._Instance = null, g
        }(),
        H = function() {
            function t() {
                this.x = 0, this.y = 0, this.ret = !1, this.ret = !1, this.x = 0, this.y = 0
            }
            return c(t, "t_tl.webgl.atlas.MergeFillInfo"), t
        }(),
        G = function() {
            function e() {}
            return c(e, "t_tl.webgl.canvas.BlendMode"), e._init_ = function(t) {
                e.fns = [e.BlendNormal, e.BlendAdd, e.BlendMultiply, e.BlendScreen, e.BlendOverlay, e.BlendLight, e.BlendMask, e.BlendDestinationOut], e.targetFns = [e.BlendNormalTarget, e.BlendAddTarget, e.BlendMultiplyTarget, e.BlendScreenTarget, e.BlendOverlayTarget, e.BlendLightTarget, e.BlendMask, e.BlendDestinationOut]
            }, e.BlendNormal = function(t) {
                t.blendFunc(1, 771)
            }, e.BlendAdd = function(t) {
                t.blendFunc(1, 772)
            }, e.BlendMultiply = function(t) {
                t.blendFunc(774, 771)
            }, e.BlendScreen = function(t) {
                t.blendFunc(1, 1)
            }, e.BlendOverlay = function(t) {
                t.blendFunc(1, 769)
            }, e.BlendLight = function(t) {
                t.blendFunc(1, 1)
            }, e.BlendNormalTarget = function(t) {
                t.blendFunc(1, 771)
            }, e.BlendAddTarget = function(t) {
                t.blendFunc(1, 772)
            }, e.BlendMultiplyTarget = function(t) {
                t.blendFunc(774, 771)
            }, e.BlendScreenTarget = function(t) {
                t.blendFunc(1, 1)
            }, e.BlendOverlayTarget = function(t) {
                t.blendFunc(1, 769)
            }, e.BlendLightTarget = function(t) {
                t.blendFunc(1, 1)
            }, e.BlendMask = function(t) {
                t.blendFunc(0, 770)
            }, e.BlendDestinationOut = function(t) {
                t.blendFunc(0, 0)
            }, e.activeBlendFunction = null, e.NAMES = ["normal", "add", "multiply", "screen", "overlay", "light", "mask", "destination-out"], e.TOINT = {
                normal: 0,
                add: 1,
                multiply: 2,
                screen: 3,
                lighter: 1,
                overlay: 4,
                light: 5,
                mask: 6,
                "destination-out": 7
            }, e.NORMAL = "normal", e.ADD = "add", e.MULTIPLY = "multiply", e.SCREEN = "screen", e.LIGHT = "light", e.OVERLAY = "overlay", e.DESTINATIONOUT = "destination-out", e.fns = [], e.targetFns = [], e
        }(),
        W = function() {
            function i(t) {
                this._color = d.create("black"), this.setValue(t)
            }
            c(i, "t_tl.webgl.canvas.DrawStyle");
            var t = i.prototype;
            return t.setValue = function(t) {
                if (t) {
                    if ("string" == typeof t) return void(this._color = d.create(t));
                    if (t instanceof t_tl.utils.Color) return void(this._color = t)
                }
            }, t.reset = function() {
                this._color = d.create("black")
            }, t.equal = function(t) {
                return "string" == typeof t ? this._color.strColor === t : t instanceof t_tl.utils.Color && this._color.numColor === t.numColor
            }, t.toColorStr = function() {
                return this._color.strColor
            }, i.create = function(t) {
                var e;
                if (t && ("string" == typeof t ? e = d.create(t) : t instanceof t_tl.utils.Color && (e = t), e)) return e._drawStyle || (e._drawStyle = new i(t));
                return t_tl.webgl.canvas.DrawStyle.DEFAULT
            }, n(i, ["DEFAULT", function() {
                return this.DEFAULT = new i("#000000")
            }]), i
        }(),
        z = function() {
            function t() {
                this._x = 0, this._y = 0, this.dirty = !1, this.offset = 0, this.count = 0, this.geoStart = 0, this.tempArray = [], this.closePath = !1, this.geomatrys = [];
                bt.mainContext;
                this.ib = $t.create(35048), this.vb = Jt.create(5)
            }
            c(t, "t_tl.webgl.canvas.Path");
            var e = t.prototype;
            return e.addPoint = function(t, e) {
                this.tempArray.push(t, e)
            }, e.getEndPointX = function() {
                return this.tempArray[this.tempArray.length - 2]
            }, e.getEndPointY = function() {
                return this.tempArray[this.tempArray.length - 1]
            }, e.polygon = function(t, e, i, r, s, a) {
                var n;
                return this.geomatrys.push(this._curGeomatry = n = new Lt(t, e, i, r, s, a)), r || (n.fill = !1), null == a && (n.borderWidth = 0), n
            }, e.setGeomtry = function(t) {
                this.geomatrys.push(this._curGeomatry = t)
            }, e.drawLine = function(t, e, i, r, s) {
                var a;
                return this.closePath ? this.geomatrys.push(this._curGeomatry = a = new Ct(t, e, i, r, s)) : this.geomatrys.push(this._curGeomatry = a = new Mt(t, e, i, r, s)), a.fill = !1, a
            }, e.update = function() {
                var t = this.ib._byteLength,
                    e = this.geomatrys.length;
                this.offset = t;
                for (var i = this.geoStart; i < e; i++) this.geomatrys[i].getData(this.ib, this.vb, this.vb._byteLength / 20);
                this.geoStart = e, this.count = (this.ib._byteLength - t) / mt.BYTES_PIDX
            }, e.reset = function() {
                this.vb.clear(), this.ib.clear(), this.offset = this.count = this.geoStart = 0, this.geomatrys.length = 0
            }, e.recover = function() {
                this._curGeomatry = null, this.vb.destory(), this.vb = null, this.ib.destory(), this.ib = null
            }, t
        }(),
        Y = function() {
            function h() {}
            c(h, "t_tl.webgl.canvas.save.SaveBase");
            var t = h.prototype;
            return T.imps(t, {
                "t_tl.webgl.canvas.save.ISaveData": !0
            }), t.isSaveMark = function() {
                return !1
            }, t.restore = function(t) {
                this._dataObj[this._valueName] = this._value, (h._cache[h._cache._length++] = this)._newSubmit && (t._curSubmit = at.RENDERBASE, t._renderKey = 0)
            }, h._createArray = function() {
                var t = [];
                return t._length = 0, t
            }, h._init = function() {
                var t = h._namemap = {};
                return t[1] = "ALPHA", t[2] = "fillStyle", t[8] = "font", t[256] = "lineWidth", t[512] = "strokeStyle", t[8192] = "_mergeID", t[1024] = t[2048] = t[4096] = [], t[16384] = "textBaseline", t[32768] = "textAlign", t[65536] = "_nBlendType", t[1048576] = "shader", t[2097152] = "filters", t
            }, h.save = function(t, e, i, r) {
                if ((t._saveMark._saveuse & e) !== e) {
                    t._saveMark._saveuse |= e;
                    var s = h._cache,
                        a = 0 < s._length ? s[--s._length] : new h;
                    a._value = i[a._valueName = h._namemap[e]], a._dataObj = i, a._newSubmit = r;
                    var n = t._save;
                    n[n._length++] = a
                }
            }, h._cache = t_tl.webgl.canvas.save.SaveBase._createArray(), h._namemap = h._init(), h
        }(),
        X = function() {
            function a() {
                this._clipRect = new R
            }
            c(a, "t_tl.webgl.canvas.save.SaveClipRect");
            var t = a.prototype;
            return T.imps(t, {
                "t_tl.webgl.canvas.save.ISaveData": !0
            }), t.isSaveMark = function() {
                return !1
            }, t.restore = function(t) {
                t._clipRect = this._clipSaveRect, (a._cache[a._cache._length++] = this)._submitScissor.submitLength = t._submits._length - this._submitScissor.submitIndex, t._curSubmit = at.RENDERBASE, t._renderKey = 0
            }, a.save = function(t, e) {
                if (131072 != (131072 & t._saveMark._saveuse)) {
                    t._saveMark._saveuse |= 131072;
                    var i = a._cache,
                        r = 0 < i._length ? i[--i._length] : new a;
                    r._clipSaveRect = t._clipRect, t._clipRect = r._clipRect.copyFrom(t._clipRect), r._submitScissor = e;
                    var s = t._save;
                    s[s._length++] = r
                }
            }, n(a, ["_cache", function() {
                return this._cache = Y._createArray()
            }]), a
        }(),
        K = function() {
            function f() {
                this._contextX = 0, this._contextY = 0, this._clipRect = new R, this._rect = new R, this._matrix = new S
            }
            c(f, "t_tl.webgl.canvas.save.SaveClipRectStencil");
            var t = f.prototype;
            return T.imps(t, {
                "t_tl.webgl.canvas.save.ISaveData": !0
            }), t.isSaveMark = function() {
                return !1
            }, t.restore = function(t) {
                ut.restore(t, this._rect, this._saveMatrix, this._contextX, this._contextY), t._clipRect = this._clipSaveRect, t._curMat = this._saveMatrix, t._x = this._contextX, t._y = this._contextY, f._cache[f._cache._length++] = this, t._curSubmit = at.RENDERBASE
            }, f.save = function(t, e, i, r, s, a, n, h, l, o) {
                if (262144 != (262144 & t._saveMark._saveuse)) {
                    t._saveMark._saveuse |= 262144;
                    var u = f._cache,
                        _ = 0 < u._length ? u[--u._length] : new f;
                    _._clipSaveRect = t._clipRect, _._clipRect.setTo(n, h, l, o), t._clipRect = _._clipRect, _._rect.x = i, _._rect.y = r, _._rect.width = s, _._rect.height = a, _._contextX = t._x, _._contextY = t._y, _._saveMatrix = t._curMat, t._curMat.copyTo(_._matrix), t._curMat = _._matrix, _._submitStencil = e;
                    var c = t._save;
                    c[c._length++] = _
                }
            }, n(f, ["_cache", function() {
                return this._cache = Y._createArray()
            }]), f
        }(),
        Q = function() {
            function r() {
                this._saveuse = 0
            }
            c(r, "t_tl.webgl.canvas.save.SaveMark");
            var t = r.prototype;
            return T.imps(t, {
                "t_tl.webgl.canvas.save.ISaveData": !0
            }), t.isSaveMark = function() {
                return !0
            }, t.restore = function(t) {
                t._saveMark = this._preSaveMark, r._no[r._no._length++] = this
            }, r.Create = function(t) {
                var e = r._no,
                    i = 0 < e._length ? e[--e._length] : new r;
                return i._saveuse = 0, i._preSaveMark = t._saveMark, t._saveMark = i
            }, n(r, ["_no", function() {
                return this._no = Y._createArray()
            }]), r
        }(),
        Z = function() {
            function a() {
                this._matrix = new S
            }
            c(a, "t_tl.webgl.canvas.save.SaveTransform");
            var t = a.prototype;
            return T.imps(t, {
                "t_tl.webgl.canvas.save.ISaveData": !0
            }), t.isSaveMark = function() {
                return !1
            }, t.restore = function(t) {
                t._curMat = this._savematrix, a._no[a._no._length++] = this
            }, a.save = function(t) {
                var e = t._saveMark;
                if (2048 != (2048 & e._saveuse)) {
                    e._saveuse |= 2048;
                    var i = a._no,
                        r = 0 < i._length ? i[--i._length] : new a;
                    r._savematrix = t._curMat, t._curMat = t._curMat.copyTo(r._matrix);
                    var s = t._save;
                    s[s._length++] = r
                }
            }, n(a, ["_no", function() {
                return this._no = Y._createArray()
            }]), a
        }(),
        q = function() {
            function s() {}
            c(s, "t_tl.webgl.canvas.save.SaveTranslate");
            var t = s.prototype;
            return T.imps(t, {
                "t_tl.webgl.canvas.save.ISaveData": !0
            }), t.isSaveMark = function() {
                return !1
            }, t.restore = function(t) {
                t._curMat;
                t._x = this._x, t._y = this._y, s._no[s._no._length++] = this
            }, s.save = function(t) {
                var e = s._no,
                    i = 0 < e._length ? e[--e._length] : new s;
                i._x = t._x, i._y = t._y;
                var r = t._save;
                r[r._length++] = i
            }, n(s, ["_no", function() {
                return this._no = Y._createArray()
            }]), s
        }(),
        j = function() {
            function t() {
                this.target = null, this.repaint = !1, this._width = NaN, this._height = NaN, this._sp = null, this._clipRect = new R
            }
            c(t, "t_tl.webgl.resource.RenderTargetMAX");
            var e = t.prototype;
            return e.setSP = function(t) {
                this._sp = t
            }, e.size = function(t, e) {
                var i = this;
                this._width !== t || this._height !== e ? (this.repaint = !0, this._width = t, this._height = e, this.target ? this.target.size(t, e) : this.target = Nt.create(t, e), this.target.hasListener("recovered") || this.target.on("recovered", this, function(t) {
                    T.timer.callLater(i._sp, i._sp.repaint)
                })) : this.target.size(t, e)
            }, e._flushToTarget = function(t, e) {
                if (!e._destroy) {
                    var i = vt.worldScissorTest,
                        r = vt.worldClipRect;
                    vt.worldClipRect = this._clipRect, this._clipRect.x = this._clipRect.y = 0, this._clipRect.width = this._width, this._clipRect.height = this._height, vt.worldScissorTest = !1, bt.mainContext.disable(3089);
                    var s = vt.worldAlpha,
                        a = vt.worldMatrix4,
                        n = vt.worldMatrix,
                        h = vt.worldFilters,
                        l = vt.worldShaderDefines;
                    if (vt.worldMatrix = S.EMPTY, vt.restoreTempArray(), vt.worldMatrix4 = vt.TEMPMAT4_ARRAY, vt.worldAlpha = 1, vt.worldFilters = null, vt.worldShaderDefines = null, Bt.activeShader = null, e.start(), A.showCanvasMark ? e.clear(0, 1, 0, .3) : e.clear(0, 0, 0, 0), t.flush(), e.end(), Bt.activeShader = null, vt.worldAlpha = s, vt.worldMatrix4 = a, vt.worldMatrix = n, vt.worldFilters = h, vt.worldShaderDefines = l, vt.worldScissorTest = i) {
                        var o = vt.height - r.y - r.height;
                        bt.mainContext.scissor(r.x, o, r.width, r.height), bt.mainContext.enable(3089)
                    }
                    vt.worldClipRect = r
                }
            }, e.flush = function(t) {
                this.repaint && (this._flushToTarget(t, this.target), this.repaint = !1)
            }, e.drawTo = function(t, e, i, r, s) {
                t.drawTexture(this.target.getTexture(), e, i, r, s, 0, 0)
            }, e.destroy = function() {
                this.target && (this.target.destroy(), this.target = null, this._sp = null)
            }, t
        }(),
        $ = function() {
            function t() {
                this.ALPHA = 1, this.shaderType = 0, this.defines = new It
            }
            return c(t, "t_tl.webgl.shader.d2.Shader2D"), t.prototype.destroy = function() {
                this.defines = null, this.filters = null, this.glTexture = null, this.strokeStyle = null, this.fillStyle = null
            }, t.__init__ = function() {
                var t, e;
                Qt.addInclude("parts/ColorFilter_ps_uniform.glsl", "uniform vec4 colorAlpha;\nuniform mat4 colorMat;"), Qt.addInclude("parts/ColorFilter_ps_logic.glsl", "mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n"), Qt.addInclude("parts/GlowFilter_ps_uniform.glsl", "uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;"), Qt.addInclude("parts/GlowFilter_ps_logic.glsl", "const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n\tfor(float j = 0.0;j<=c_IterationTime; ++j){\n\t\tvec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n\t\tvec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n\t}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;"), Qt.addInclude("parts/BlurFilter_ps_logic.glsl", "gl_FragColor =   blur();\ngl_FragColor.w*=alpha;"), Qt.addInclude("parts/BlurFilter_ps_uniform.glsl", "uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}"), Qt.addInclude("parts/ColorAdd_ps_uniform.glsl", "uniform vec4 colorAdd;\n"), Qt.addInclude("parts/ColorAdd_ps_logic.glsl", "gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;"), t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}", e = 'precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}', Qt.preCompile2D(0, 1, t, e, null), t = "attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}", e = 'precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\nvoid main() {\n\tvec4 a = vec4(color.r, color.g, color.b, color.a);\n\ta.w = alpha;\n\ta.xyz *= alpha;\n\tgl_FragColor = a;\n\t#include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n}', Qt.preCompile2D(0, 2, t, e, null), t = "attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}", e = "precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=alpha;\n}", Qt.preCompile2D(0, 4, t, e, null), t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}", e = '#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}', Qt.preCompile2D(0, 256, t, e, null), t = "attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}", e = "precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n\tvec4 t_color = texture2D(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}", Qt.preCompile2D(0, 512, t, e, null)
            }, t
        }(),
        J = function() {
            function e(t, e, i) {
                this._value = 0, this._name2int = t, this._int2name = e, this._int2nameMap = i
            }
            c(e, "t_tl.webgl.shader.ShaderDefines");
            var t = e.prototype;
            return t.add = function(t) {
                return "string" == typeof t && (t = this._name2int[t]), this._value |= t, this._value
            }, t.addInt = function(t) {
                return this._value |= t, this._value
            }, t.remove = function(t) {
                return "string" == typeof t && (t = this._name2int[t]), this._value &= ~t, this._value
            }, t.isDefine = function(t) {
                return (this._value & t) === t
            }, t.getValue = function() {
                return this._value
            }, t.setValue = function(t) {
                this._value = t
            }, t.toNameDic = function() {
                var t = this._int2nameMap[this._value];
                return t || e._toText(this._value, this._int2name, this._int2nameMap)
            }, e._reg = function(t, e, i, r) {
                r[i[t] = e] = t
            }, e._toText = function(t, e, i) {
                var r = i[t];
                if (r) return r;
                for (var s = {}, a = 1, n = 0; n < 32 && !(t < (a = 1 << n)); n++)
                    if (t & a) {
                        var h = e[a];
                        h && (s[h] = "")
                    }
                return i[t] = s
            }, e._toInt = function(t, e) {
                for (var i = t.split("."), r = 0, s = 0, a = i.length; s < a; s++) {
                    var n = e[i[s]];
                    if (!n) throw new Error("Defines to int err:" + t + "/" + i[s]);
                    r |= n
                }
                return r
            }, e
        }(),
        tt = function() {
            function n() {
                this.mVBBuffer = null, this.mIBBuffer = null, this.mVBData = null, this.mIBData = null, this.mEleNum = 0, this.mTexture = null, this.transform = null, this._vs = null, this._ps = null, this._indexStart = -1, this._verticles = null, this._uvs = null, this._tempMatrix = new S
            }
            c(n, "t_tl.webgl.shader.d2.skinAnishader.SkinMesh");
            var t = n.prototype;
            return t.init = function(t, e, i) {
                if (e) this._vs = e;
                else {
                    this._vs = [];
                    var r = t.width,
                        s = t.height;
                    this._vs.push(0, 0, 0, 0, 1, 1, 1, 1), this._vs.push(r, 0, 1, 0, 1, 1, 1, 1), this._vs.push(r, s, 1, 1, 1, 1, 1, 1), this._vs.push(0, s, 0, 1, 1, 1, 1, 1)
                }
                i ? this._ps = i : (n._defaultPS || (n._defaultPS = []).push(0, 1, 3, 3, 1, 2), this._ps = n._defaultPS), this.mVBData = new Float32Array(this._vs), this.mIBData = new Uint16Array(this._ps.length), this.mIBData.start = -1, this.mEleNum = this._ps.length, this.mTexture = t
            }, t.init2 = function(t, e, i, r, s) {
                this.transform && (this.transform = null), i ? this._ps = i : (this._ps = [], this._ps.push(0, 1, 3, 3, 1, 2)), this._verticles = r, this._uvs = s, this.mEleNum = this._ps.length, this.mTexture = t, (g.isConchNode || g.isConchApp) && (this._initMyData(), this.mVBData = new Float32Array(this._vs))
            }, t._initMyData = function() {
                var t = 0,
                    e = 0,
                    i = 4 * this._verticles.length;
                this._vs = n._tempVS;
                var r = !1;
                if (g.isConchNode || g.isConchApp ? (this._vs.length = i, r = !0) : this._vs.length < i && (this._vs.length = i, r = !0), n._tVSLen = i, r)
                    for (; t < i;) this._vs[t] = this._verticles[e], this._vs[t + 1] = this._verticles[e + 1], this._vs[t + 2] = this._uvs[e], this._vs[t + 3] = this._uvs[e + 1], this._vs[t + 4] = 1, this._vs[t + 5] = 1, this._vs[t + 6] = 1, this._vs[t + 7] = 1, t += 8, e += 2;
                else
                    for (; t < i;) this._vs[t] = this._verticles[e], this._vs[t + 1] = this._verticles[e + 1], this._vs[t + 2] = this._uvs[e], this._vs[t + 3] = this._uvs[e + 1], t += 8, e += 2
            }, t.getData2 = function(t, e, i) {
                var r;
                this.mVBBuffer = t, this.mIBBuffer = e, this._initMyData(), t.appendEx2(this._vs, Float32Array, n._tVSLen, 4), this._indexStart = e._byteLength, (r = n._tempIB).length < this._ps.length && (r.length = this._ps.length);
                for (var s = 0, a = this._ps.length; s < a; s++) r[s] = this._ps[s] + i;
                e.appendEx2(r, Uint16Array, this._ps.length, 2)
            }, t.getData = function(t, e, i) {
                if (this.mVBBuffer = t, this.mIBBuffer = e, t.append(this.mVBData), this._indexStart = e._byteLength, this.mIBData.start != i) {
                    for (var r = 0, s = this._ps.length; r < s; r++) this.mIBData[r] = this._ps[r] + i;
                    this.mIBData.start = i
                }
                e.append(this.mIBData)
            }, t.render = function(t, e, i) {
                if (g.isWebGL && this.mTexture) {
                    t._renderKey = 0, t._shader2D.glTexture = null, et.getInstance().addSkinMesh(this);
                    var r = at.createShape(t, this.mIBBuffer, this.mVBBuffer, this.mEleNum, this._indexStart, Et.create(512, 0));
                    this.transform || (this.transform = S.EMPTY), this.transform.translate(e, i), S.mul(this.transform, t._curMat, this._tempMatrix), this.transform.translate(-e, -i);
                    var s = r.shaderValue,
                        a = s.u_mmat2 || vt.getMatrArray();
                    vt.mat2MatArray(this._tempMatrix, a), s.textureHost = this.mTexture, s.offsetX = 0, s.offsetY = 0, s.u_mmat2 = a, s.ALPHA = t._shader2D.ALPHA, t._submits[t._submits._length++] = r
                } else g.isConchApp && this.mTexture && (this.transform || (this.transform = S.EMPTY), t.setSkinMesh && t.setSkinMesh(e, i, this._ps, this.mVBData, this.mEleNum, 0, this.mTexture, this.transform))
            }, n._tempVS = [], n._tempIB = [], n._defaultPS = null, n._tVSLen = 0, n
        }(),
        et = function() {
            function t() {
                this.ib = null, this.vb = null;
                bt.mainContext;
                this.ib = $t.create(35048), this.vb = Jt.create(8)
            }
            c(t, "t_tl.webgl.shader.d2.skinAnishader.SkinMeshBuffer");
            var e = t.prototype;
            return e.addSkinMesh = function(t) {
                t.getData2(this.vb, this.ib, this.vb._byteLength / 32)
            }, e.reset = function() {
                this.vb.clear(), this.ib.clear()
            }, t.getInstance = function() {
                return t.instance = t.instance || new t
            }, t.instance = null, t
        }(),
        it = function() {
            function t(t, e, i, r, s, a, n, h, l) {
                this.r0 = 0, this.fill = !0, this.r1 = Math.PI / 2, void 0 === l && (l = 0), this.x = t, this.y = e, this.width = i, this.height = r, this.edges = s, this.color = a, this.borderWidth = n, this.borderColor = h
            }
            c(t, "t_tl.webgl.shapes.BasePoly");
            var e = t.prototype;
            return T.imps(e, {
                "t_tl.webgl.shapes.IShape": !0
            }), e.getData = function(t, e, i) {}, e.rebuild = function(t) {}, e.setMatrix = function(t) {}, e.needUpdate = function(t) {
                return !0
            }, e.sector = function(t, e, i) {
                var r = this.x,
                    s = this.y,
                    a = this.edges,
                    n = (this.r1 - this.r0) / a,
                    h = this.width,
                    l = this.height,
                    o = this.color,
                    u = (o >> 16 & 255) / 255,
                    _ = (o >> 8 & 255) / 255,
                    c = (255 & o) / 255;
                t.push(r, s, u, _, c);
                for (var f = 0; f < a + 1; f++) t.push(r + Math.sin(n * f + this.r0) * h, s + Math.cos(n * f + this.r0) * l), t.push(u, _, c);
                for (f = 0; f < a; f++) e.push(i, i + f + 1, i + f + 2)
            }, e.createLine2 = function(t, e, i, r, s, a) {
                var n, h, l, o, u, _, c, f, d, m, p, g, v, x, b, y, T, A, E, S, w = t.concat(),
                    R = s,
                    I = this.borderColor,
                    M = (I >> 16 & 255) / 255,
                    C = (I >> 8 & 255) / 255,
                    L = (255 & I) / 255,
                    P = w.length / 2,
                    D = r,
                    F = i / 2;
                l = w[0], o = w[1], m = l - (u = w[2]), d = (d = -(o - (_ = w[3]))) / (S = Math.sqrt(d * d + m * m)) * F, m = m / S * F, R.push(l - d + this.x, o - m + this.y, M, C, L, l + d + this.x, o + m + this.y, M, C, L);
                for (var B = 1; B < P - 1; B++) l = w[2 * (B - 1)], o = w[2 * (B - 1) + 1], u = w[2 * B], _ = w[2 * B + 1], c = w[2 * (B + 1)], f = w[2 * (B + 1) + 1], m = l - u, g = u - c, b = (-(d = (d = -(o - _)) / (S = Math.sqrt(d * d + m * m)) * F) + l) * (-(m = m / S * F) + _) - (-d + u) * (-m + o), A = (-(p = (p = -(_ - f)) / (S = Math.sqrt(p * p + g * g)) * F) + c) * (-(g = g / S * F) + _) - (-p + u) * (-g + f), E = (v = -m + o - (-m + _)) * (T = -p + u - (-p + c)) - (y = -g + f - (-g + _)) * (x = -d + u - (-d + l)), Math.abs(E) < .1 ? (E += 10.1, R.push(u - d + this.x, _ - m + this.y, M, C, L, u + d + this.x, _ + m + this.y, M, C, L)) : (((n = (x * A - T * b) / E) - u) * (n - u) + ((h = (y * b - v * A) / E) - _) + (h - _), R.push(n + this.x, h + this.y, M, C, L, u - (n - u) + this.x, _ - (h - _) + this.y, M, C, L));
                l = w[w.length - 4], o = w[w.length - 3], m = l - (u = w[w.length - 2]), d = (d = -(o - (_ = w[w.length - 1]))) / (S = Math.sqrt(d * d + m * m)) * F, m = m / S * F, R.push(u - d + this.x, _ - m + this.y, M, C, L, u + d + this.x, _ + m + this.y, M, C, L);
                var N = a;
                for (B = 1; B < N; B++) e.push(D + 2 * (B - 1), D + 2 * (B - 1) + 1, D + 2 * B + 1, D + 2 * B + 1, D + 2 * B, D + 2 * (B - 1));
                return R
            }, e.createLine = function(t, e, i, r) {
                var s = t.concat(),
                    a = t,
                    n = this.borderColor,
                    h = (n >> 16 & 255) / 255,
                    l = (n >> 8 & 255) / 255,
                    o = (255 & n) / 255;
                s.splice(0, 5);
                var u, _, c, f, d, m, p, g, v, x, b, y, T, A, E, S, w, R, I, M, C = s.length / 5,
                    L = r,
                    P = i / 2;
                c = s[0], f = s[1], x = c - (d = s[5]), v = (v = -(f - (m = s[6]))) / (M = Math.sqrt(v * v + x * x)) * P, x = x / M * P, a.push(c - v, f - x, h, l, o, c + v, f + x, h, l, o);
                for (var D = 1; D < C - 1; D++) c = s[5 * (D - 1)], f = s[5 * (D - 1) + 1], d = s[5 * D], m = s[5 * D + 1], p = s[5 * (D + 1)], g = s[5 * (D + 1) + 1], x = c - d, y = d - p, E = (-(v = (v = -(f - m)) / (M = Math.sqrt(v * v + x * x)) * P) + c) * (-(x = x / M * P) + m) - (-v + d) * (-x + f), R = (-(b = (b = -(m - g)) / (M = Math.sqrt(b * b + y * y)) * P) + p) * (-(y = y / M * P) + m) - (-b + d) * (-y + g), I = (T = -x + f - (-x + m)) * (w = -b + d - (-b + p)) - (S = -y + g - (-y + m)) * (A = -v + d - (-v + c)), Math.abs(I) < .1 ? (I += 10.1, a.push(d - v, m - x, h, l, o, d + v, m + x, h, l, o)) : (((u = (A * R - w * E) / I) - d) * (u - d) + ((_ = (S * E - T * R) / I) - m) + (_ - m), a.push(u, _, h, l, o, d - (u - d), m - (_ - m), h, l, o));
                c = s[s.length - 10], f = s[s.length - 9], x = c - (d = s[s.length - 5]), v = (v = -(f - (m = s[s.length - 4]))) / (M = Math.sqrt(v * v + x * x)) * P, x = x / M * P, a.push(d - v, m - x, h, l, o, d + v, m + x, h, l, o);
                var F = this.edges + 1;
                for (D = 1; D < F; D++) e.push(L + 2 * (D - 1), L + 2 * (D - 1) + 1, L + 2 * D + 1, L + 2 * D + 1, L + 2 * D, L + 2 * (D - 1));
                return a
            }, e.createLoopLine = function(t, e, i, r, s, a) {
                var n = t.concat(),
                    h = s || t,
                    l = this.borderColor,
                    o = (l >> 16 & 255) / 255,
                    u = (l >> 8 & 255) / 255,
                    _ = (255 & l) / 255;
                n.splice(0, 5);
                var c = [n[0], n[1]],
                    f = [n[n.length - 5], n[n.length - 4]],
                    d = f[0] + .5 * (c[0] - f[0]),
                    m = f[1] + .5 * (c[1] - f[1]);
                n.unshift(d, m, 0, 0, 0), n.push(d, m, 0, 0, 0);
                var p, g, v, x, b, y, T, A, E, S, w, R, I, M, C, L, P, D, F, B, N = n.length / 5,
                    O = r,
                    V = i / 2;
                v = n[0], x = n[1], S = v - (b = n[5]), E = (E = -(x - (y = n[6]))) / (B = Math.sqrt(E * E + S * S)) * V, S = S / B * V, h.push(v - E, x - S, o, u, _, v + E, x + S, o, u, _);
                for (var U = 1; U < N - 1; U++) v = n[5 * (U - 1)], x = n[5 * (U - 1) + 1], b = n[5 * U], y = n[5 * U + 1], T = n[5 * (U + 1)], A = n[5 * (U + 1) + 1], S = v - b, R = b - T, C = (-(E = (E = -(x - y)) / (B = Math.sqrt(E * E + S * S)) * V) + v) * (-(S = S / B * V) + y) - (-E + b) * (-S + x), D = (-(w = (w = -(y - A)) / (B = Math.sqrt(w * w + R * R)) * V) + T) * (-(R = R / B * V) + y) - (-w + b) * (-R + A), F = (I = -S + x - (-S + y)) * (P = -w + b - (-w + T)) - (L = -R + A - (-R + y)) * (M = -E + b - (-E + v)), Math.abs(F) < .1 ? (F += 10.1, h.push(b - E, y - S, o, u, _, b + E, y + S, o, u, _)) : (((p = (M * D - P * C) / F) - b) * (p - b) + ((g = (L * C - I * D) / F) - y) + (g - y), h.push(p, g, o, u, _, b - (p - b), y - (g - y), o, u, _));
                a && (e = a);
                var k = this.edges + 1;
                for (U = 1; U < k; U++) e.push(O + 2 * (U - 1), O + 2 * (U - 1) + 1, O + 2 * U + 1, O + 2 * U + 1, O + 2 * U, O + 2 * (U - 1));
                return e.push(O + 2 * (U - 1), O + 2 * (U - 1) + 1, O + 1, O + 1, O, O + 2 * (U - 1)), h
            }, t
        }(),
        rt = function() {
            function m() {}
            return c(m, "t_tl.webgl.shapes.Earcut"), m.earcut = function(t, e, i) {
                i = i || 2;
                var r, s, a, n, h, l, o, u = e && e.length,
                    _ = u ? e[0] * i : t.length,
                    c = m.linkedList(t, 0, _, i, !0),
                    f = [];
                if (!c) return f;
                if (u && (c = m.eliminateHoles(t, e, c, i)), t.length > 80 * i) {
                    r = a = t[0], s = n = t[1];
                    for (var d = i; d < _; d += i)(h = t[d]) < r && (r = h), (l = t[d + 1]) < s && (s = l), a < h && (a = h), n < l && (n = l);
                    o = 0 !== (o = Math.max(a - r, n - s)) ? 1 / o : 0
                }
                return m.earcutLinked(c, f, i, r, s, o), f
            }, m.linkedList = function(t, e, i, r, s) {
                var a, n;
                if (s === 0 < m.signedArea(t, e, i, r))
                    for (a = e; a < i; a += r) n = m.insertNode(a, t[a], t[a + 1], n);
                else
                    for (a = i - r; e <= a; a -= r) n = m.insertNode(a, t[a], t[a + 1], n);
                return n && m.equals(n, n.next) && (m.removeNode(n), n = n.next), n
            }, m.filterPoints = function(t, e) {
                if (!t) return t;
                e || (e = t);
                var i, r = t;
                do {
                    if (i = !1, r.steiner || !m.equals(r, r.next) && 0 !== m.area(r.prev, r, r.next)) r = r.next;
                    else {
                        if (m.removeNode(r), (r = e = r.prev) === r.next) break;
                        i = !0
                    }
                } while (i || r !== e);
                return e
            }, m.earcutLinked = function(t, e, i, r, s, a, n) {
                if (t) {
                    !n && a && m.indexCurve(t, r, s, a);
                    for (var h, l, o = t; t.prev !== t.next;)
                        if (h = t.prev, l = t.next, a ? m.isEarHashed(t, r, s, a) : m.isEar(t)) e.push(h.i / i), e.push(t.i / i), e.push(l.i / i), m.removeNode(t), t = l.next, o = l.next;
                        else if ((t = l) === o) {
                        n ? 1 === n ? (t = m.cureLocalIntersections(t, e, i), m.earcutLinked(t, e, i, r, s, a, 2)) : 2 === n && m.splitEarcut(t, e, i, r, s, a) : m.earcutLinked(m.filterPoints(t, null), e, i, r, s, a, 1);
                        break
                    }
                }
            }, m.isEar = function(t) {
                var e = t.prev,
                    i = t,
                    r = t.next;
                if (0 <= m.area(e, i, r)) return !1;
                for (var s = t.next.next; s !== t.prev;) {
                    if (m.pointInTriangle(e.x, e.y, i.x, i.y, r.x, r.y, s.x, s.y) && 0 <= m.area(s.prev, s, s.next)) return !1;
                    s = s.next
                }
                return !0
            }, m.isEarHashed = function(t, e, i, r) {
                var s = t.prev,
                    a = t,
                    n = t.next;
                if (0 <= m.area(s, a, n)) return !1;
                for (var h = s.x < a.x ? s.x < n.x ? s.x : n.x : a.x < n.x ? a.x : n.x, l = s.y < a.y ? s.y < n.y ? s.y : n.y : a.y < n.y ? a.y : n.y, o = s.x > a.x ? s.x > n.x ? s.x : n.x : a.x > n.x ? a.x : n.x, u = s.y > a.y ? s.y > n.y ? s.y : n.y : a.y > n.y ? a.y : n.y, _ = m.zOrder(h, l, e, i, r), c = m.zOrder(o, u, e, i, r), f = t.nextZ; f && f.z <= c;) {
                    if (f !== t.prev && f !== t.next && m.pointInTriangle(s.x, s.y, a.x, a.y, n.x, n.y, f.x, f.y) && 0 <= m.area(f.prev, f, f.next)) return !1;
                    f = f.nextZ
                }
                for (f = t.prevZ; f && f.z >= _;) {
                    if (f !== t.prev && f !== t.next && m.pointInTriangle(s.x, s.y, a.x, a.y, n.x, n.y, f.x, f.y) && 0 <= m.area(f.prev, f, f.next)) return !1;
                    f = f.prevZ
                }
                return !0
            }, m.cureLocalIntersections = function(t, e, i) {
                var r = t;
                do {
                    var s = r.prev,
                        a = r.next.next;
                    !m.equals(s, a) && m.intersects(s, r, r.next, a) && m.locallyInside(s, a) && m.locallyInside(a, s) && (e.push(s.i / i), e.push(r.i / i), e.push(a.i / i), m.removeNode(r), m.removeNode(r.next), r = t = a), r = r.next
                } while (r !== t);
                return r
            }, m.splitEarcut = function(t, e, i, r, s, a) {
                var n = t;
                do {
                    for (var h = n.next.next; h !== n.prev;) {
                        if (n.i !== h.i && m.isValidDiagonal(n, h)) {
                            var l = m.splitPolygon(n, h);
                            return n = m.filterPoints(n, n.next), l = m.filterPoints(l, l.next), m.earcutLinked(n, e, i, r, s, a), void m.earcutLinked(l, e, i, r, s, a)
                        }
                        h = h.next
                    }
                    n = n.next
                } while (n !== t)
            }, m.eliminateHoles = function(t, e, i, r) {
                var s, a, n, h, l, o = [];
                for (s = 0, a = e.length; s < a; s++) n = e[s] * r, h = s < a - 1 ? e[s + 1] * r : t.length, (l = m.linkedList(t, n, h, r, !1)) === l.next && (l.steiner = !0), o.push(m.getLeftmost(l));
                for (o.sort(m.compareX), s = 0; s < o.length; s++) m.eliminateHole(o[s], i), i = m.filterPoints(i, i.next);
                return i
            }, m.compareX = function(t, e) {
                return t.x - e.x
            }, m.eliminateHole = function(t, e) {
                if (e = m.findHoleBridge(t, e)) {
                    var i = m.splitPolygon(e, t);
                    m.filterPoints(i, i.next)
                }
            }, m.findHoleBridge = function(t, e) {
                var i, r = e,
                    s = t.x,
                    a = t.y,
                    n = -1 / 0;
                do {
                    if (a <= r.y && a >= r.next.y && r.next.y !== r.y) {
                        var h = r.x + (a - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                        if (h <= s && n < h) {
                            if ((n = h) === s) {
                                if (a === r.y) return r;
                                if (a === r.next.y) return r.next
                            }
                            i = r.x < r.next.x ? r : r.next
                        }
                    }
                    r = r.next
                } while (r !== e);
                if (!i) return null;
                if (s === n) return i.prev;
                var l, o = i,
                    u = i.x,
                    _ = i.y,
                    c = 1 / 0;
                for (r = i.next; r !== o;) s >= r.x && r.x >= u && s !== r.x && m.pointInTriangle(a < _ ? s : n, a, u, _, a < _ ? n : s, a, r.x, r.y) && ((l = Math.abs(a - r.y) / (s - r.x)) < c || l === c && r.x > i.x) && m.locallyInside(r, t) && (i = r, c = l), r = r.next;
                return i
            }, m.indexCurve = function(t, e, i, r) {
                for (var s = t; null === s.z && (s.z = m.zOrder(s.x, s.y, e, i, r)), s.prevZ = s.prev, s.nextZ = s.next, (s = s.next) !== t;);
                s.prevZ.nextZ = null, s.prevZ = null, m.sortLinked(s)
            }, m.sortLinked = function(t) {
                var e, i, r, s, a, n, h, l, o = 1;
                do {
                    for (i = t, a = t = null, n = 0; i;) {
                        for (n++, r = i, e = h = 0; e < o && (h++, r = r.nextZ); e++);
                        for (l = o; 0 < h || 0 < l && r;) 0 !== h && (0 === l || !r || i.z <= r.z) ? (i = (s = i).nextZ, h--) : (r = (s = r).nextZ, l--), a ? a.nextZ = s : t = s, s.prevZ = a, a = s;
                        i = r
                    }
                    a.nextZ = null, o *= 2
                } while (1 < n);
                return t
            }, m.zOrder = function(t, e, i, r, s) {
                return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - i) * s) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - r) * s) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1
            }, m.getLeftmost = function(t) {
                for (var e = t, i = t; e.x < i.x && (i = e), (e = e.next) !== t;);
                return i
            }, m.pointInTriangle = function(t, e, i, r, s, a, n, h) {
                return 0 <= (s - n) * (e - h) - (t - n) * (a - h) && 0 <= (t - n) * (r - h) - (i - n) * (e - h) && 0 <= (i - n) * (a - h) - (s - n) * (r - h)
            }, m.isValidDiagonal = function(t, e) {
                return t.next.i !== e.i && t.prev.i !== e.i && !m.intersectsPolygon(t, e) && m.locallyInside(t, e) && m.locallyInside(e, t) && m.middleInside(t, e)
            }, m.area = function(t, e, i) {
                return (e.y - t.y) * (i.x - e.x) - (e.x - t.x) * (i.y - e.y)
            }, m.equals = function(t, e) {
                return t.x === e.x && t.y === e.y
            }, m.intersects = function(t, e, i, r) {
                return !!(m.equals(t, e) && m.equals(i, r) || m.equals(t, r) && m.equals(i, e)) || 0 < m.area(t, e, i) != 0 < m.area(t, e, r) && 0 < m.area(i, r, t) != 0 < m.area(i, r, e)
            }, m.intersectsPolygon = function(t, e) {
                var i = t;
                do {
                    if (i.i !== t.i && i.next.i !== t.i && i.i !== e.i && i.next.i !== e.i && m.intersects(i, i.next, t, e)) return !0;
                    i = i.next
                } while (i !== t);
                return !1
            }, m.locallyInside = function(t, e) {
                return m.area(t.prev, t, t.next) < 0 ? 0 <= m.area(t, e, t.next) && 0 <= m.area(t, t.prev, e) : m.area(t, e, t.prev) < 0 || m.area(t, t.next, e) < 0
            }, m.middleInside = function(t, e) {
                for (var i = t, r = !1, s = (t.x + e.x) / 2, a = (t.y + e.y) / 2; i.y > a != i.next.y > a && i.next.y !== i.y && s < (i.next.x - i.x) * (a - i.y) / (i.next.y - i.y) + i.x && (r = !r), (i = i.next) !== t;);
                return r
            }, m.splitPolygon = function(t, e) {
                var i = new st(t.i, t.x, t.y),
                    r = new st(e.i, e.x, e.y),
                    s = t.next,
                    a = e.prev;
                return (t.next = e).prev = t, (i.next = s).prev = i, (r.next = i).prev = r, (a.next = r).prev = a, r
            }, m.insertNode = function(t, e, i, r) {
                var s = new st(t, e, i);
                return r ? (s.next = r.next, (s.prev = r).next.prev = s, r.next = s) : (s.prev = s).next = s, s
            }, m.removeNode = function(t) {
                t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ)
            }, m.signedArea = function(t, e, i, r) {
                for (var s = 0, a = e, n = i - r; a < i; a += r) s += (t[n] - t[a]) * (t[a + 1] + t[n + 1]), n = a;
                return s
            }, m
        }(),
        st = function() {
            function t(t, e, i) {
                this.i = null, this.x = null, this.y = null, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = null, this.i = t, this.x = e, this.y = i, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1
            }
            return c(t, "t_tl.webgl.shapes.EarcutNode"), t
        }(),
        at = (function() {
            function t(t, e, i, r, s, a, n) {
                this.lineWidth = t, this.lineColor = e, this.lineAlpha = i, this.fillColor = r, this.fillAlpha = s, this.shape = n, this.fill = a
            }
            c(t, "t_tl.webgl.shapes.GeometryData");
            var e = t.prototype;
            e.clone = function() {
                return new t(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.fill, this.shape)
            }, e.getIndexData = function() {
                return null
            }, e.getVertexData = function() {
                return null
            }, e.destroy = function() {
                this.shape = null
            }
        }(), function() {
            function t(t) {
                if (t instanceof Float32Array) this.points = t;
                else if (t instanceof Array) {
                    t.length;
                    this.points = new Float32Array(t)
                }
            }
            c(t, "t_tl.webgl.shapes.Vertex");
            var e = t.prototype;
            T.imps(e, {
                "t_tl.webgl.shapes.IShape": !0
            }), e.getData = function(t, e, i) {}, e.needUpdate = function(t) {
                return !1
            }, e.rebuild = function(t) {}, e.setMatrix = function(t) {}
        }(), function() {
            function l(t) {
                void 0 === t && (t = 1e4), this._renderType = t
            }
            c(l, "t_tl.webgl.submit.Submit");
            var t = l.prototype;
            return T.imps(t, {
                "t_tl.webgl.submit.ISubmit": !0
            }), t.releaseRender = function() {
                var t = l._cache;
                (t[t._length++] = this).shaderValue.release(), this._vb = null
            }, t.getRenderType = function() {
                return this._renderType
            }, t.renderSubmit = function() {
                if (0 === this._numEle) return 1;
                var t = this.shaderValue.textureHost;
                if (t) {
                    var e = t.source;
                    if (!t.bitmap || !e) return 1;
                    this.shaderValue.texture = e
                }
                this._vb.bind_upload(this._ib);
                var i = bt.mainContext;
                return this.shaderValue.upload(), G.activeBlendFunction !== this._blendFn && (i.enable(3042), this._blendFn(i), G.activeBlendFunction = this._blendFn), C.drawCall++, C.trianglesFaces += this._numEle / 3, i.drawElements(4, this._numEle, 5123, this._startIdx), 1
            }, l.__init__ = function() {
                var t = l.RENDERBASE = new l(-1);
                t.shaderValue = new Et(0, 0), t.shaderValue.ALPHA = -1234
            }, l.createSubmit = function(t, e, i, r, s) {
                var a = l._cache._length ? l._cache[--l._cache._length] : new l;
                null == i && ((i = a._selfVb || (a._selfVb = Jt.create(-1))).clear(), r = 0), a._ib = e, a._vb = i, a._startIdx = r * mt.BYTES_PIDX, a._numEle = 0;
                var n = t._nBlendType;
                a._blendFn = t._targets ? G.targetFns[n] : G.fns[n], a.shaderValue = s, a.shaderValue.setValue(t._shader2D);
                var h = t._shader2D.filters;
                return h && a.shaderValue.setFilters(h), a
            }, l.createShape = function(t, e, i, r, s, a) {
                var n = l._cache._length ? l._cache[--l._cache._length] : new l;
                n._ib = e, n._vb = i, n._numEle = r, n._startIdx = s, n.shaderValue = a, n.shaderValue.setValue(t._shader2D);
                var h = t._nBlendType;
                return n._blendFn = t._targets ? G.targetFns[h] : G.fns[h], n
            }, l.TYPE_2D = 1e4, l.TYPE_CANVAS = 10003, l.TYPE_CMDSETRT = 10004, l.TYPE_CUSTOM = 10005, l.TYPE_BLURRT = 10006, l.TYPE_CMDDESTORYPRERT = 10007, l.TYPE_DISABLESTENCIL = 10008, l.TYPE_OTHERIBVB = 10009, l.TYPE_PRIMITIVE = 10010, l.TYPE_RT = 10011, l.TYPE_BLUR_RT = 10012, l.TYPE_TARGET = 10013, l.TYPE_CHANGE_VALUE = 10014, l.TYPE_SHAPE = 10015, l.TYPE_TEXTURE = 10016, l.TYPE_FILLTEXTURE = 10017, l.RENDERBASE = null, l._cache = ((l._cache = [])._length = 0, l._cache), l
        }()),
        nt = function() {
            function r() {
                this.fun = null, this.args = null
            }
            c(r, "t_tl.webgl.submit.SubmitCMD");
            var t = r.prototype;
            return T.imps(t, {
                "t_tl.webgl.submit.ISubmit": !0
            }), t.renderSubmit = function() {
                return this.fun.apply(null, this.args), 1
            }, t.getRenderType = function() {
                return 0
            }, t.releaseRender = function() {
                var t = r._cache;
                t[t._length++] = this
            }, r.create = function(t, e) {
                var i = r._cache._length ? r._cache[--r._cache._length] : new r;
                return i.fun = e, i.args = t, i
            }, r._cache = ((r._cache = [])._length = 0, r._cache), r
        }(),
        ht = function() {
            function e() {
                this.variables = {}
            }
            c(e, "t_tl.webgl.submit.SubmitCMDScope");
            var t = e.prototype;
            return t.getValue = function(t) {
                return this.variables[t]
            }, t.addValue = function(t, e) {
                return this.variables[t] = e
            }, t.setValue = function(t, e) {
                return this.variables.hasOwnProperty(t) ? this.variables[t] = e : null
            }, t.clear = function() {
                for (var t in this.variables) delete this.variables[t]
            }, t.recycle = function() {
                this.clear(), e.POOL.push(this)
            }, e.create = function() {
                var t = e.POOL.pop();
                return t || (t = new e), t
            }, e.POOL = [], e
        }(),
        lt = function() {
            function _() {
                this.offset = 0, this.startIndex = 0, this._mat = S.create()
            }
            c(_, "t_tl.webgl.submit.SubmitOtherIBVB");
            var t = _.prototype;
            return T.imps(t, {
                "t_tl.webgl.submit.ISubmit": !0
            }), t.releaseRender = function() {
                var t = _._cache;
                t[t._length++] = this
            }, t.getRenderType = function() {
                return 10009
            }, t.renderSubmit = function() {
                var t = this._shaderValue.textureHost;
                if (t) {
                    var e = t.source;
                    if (!t.bitmap || !e) return 1;
                    this._shaderValue.texture = e
                }
                this._vb.bind_upload(this._ib);
                var i = vt.worldMatrix4,
                    r = S.TEMP;
                S.mulPre(this._mat, i[0], i[1], i[4], i[5], i[12], i[13], r);
                var s = vt.worldMatrix4 = _.tempMatrix4;
                s[0] = r.a, s[1] = r.b, s[4] = r.c, s[5] = r.d, s[12] = r.tx, s[13] = r.ty, this._shader._offset = this.offset, this._shaderValue.refresh(), this._shader.upload(this._shaderValue), this._shader._offset = 0;
                var a = bt.mainContext;
                return G.activeBlendFunction !== this._blendFn && (a.enable(3042), this._blendFn(a), G.activeBlendFunction = this._blendFn), C.drawCall++, C.trianglesFaces += this._numEle / 3, a.drawElements(4, this._numEle, 5123, this.startIndex), vt.worldMatrix4 = i, Bt.activeShader = null, 1
            }, _.create = function(t, e, i, r, s, a, n, h, l) {
                void 0 === l && (l = 0);
                var o = _._cache._length ? _._cache[--_._cache._length] : new _;
                o._ib = i, o._vb = e, o._numEle = r, o._shader = s, o._shaderValue = a;
                var u = t._nBlendType;
                switch (o._blendFn = t._targets ? G.targetFns[u] : G.fns[u], l) {
                    case 0:
                        o.offset = 0, o.startIndex = h / (mt.BYTES_PE * e.vertexStride) * 1.5, o.startIndex *= mt.BYTES_PIDX;
                        break;
                    case 1:
                        o.startIndex = n, o.offset = h
                }
                return o
            }, _._cache = ((_._cache = [])._length = 0, _._cache), _.tempMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], _
        }(),
        ot = function() {
            function i() {
                this.submitIndex = 0, this.submitLength = 0, this.context = null, this.clipRect = new R, this.screenRect = new R
            }
            c(i, "t_tl.webgl.submit.SubmitScissor");
            var t = i.prototype;
            return T.imps(t, {
                "t_tl.webgl.submit.ISubmit": !0
            }), t._scissor = function(t, e, i, r) {
                var s = vt.worldMatrix4,
                    a = s[0],
                    n = s[5],
                    h = s[12],
                    l = s[13];
                if (r *= n, (i *= a) < 1 || r < 1) return !1;
                var o = (t = t * a + h) + i,
                    u = (e = e * n + l) + r;
                t < 0 && (i = o - (t = 0)), e < 0 && (r = u - (e = 0));
                var _ = vt.worldClipRect;
                if (t = Math.max(t, _.x), e = Math.max(e, _.y), i = Math.min(o, _.right) - t, r = Math.min(u, _.bottom) - e, i < 1 || r < 1) return !1;
                var c = vt.worldScissorTest;
                return this.screenRect.copyFrom(_), _.x = t, _.y = e, _.width = i, _.height = r, vt.worldScissorTest = !0, e = vt.height - e - r, bt.mainContext.scissor(t, e, i, r), bt.mainContext.enable(3089), this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength), c ? (e = vt.height - this.screenRect.y - this.screenRect.height, bt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height), bt.mainContext.enable(3089)) : (bt.mainContext.disable(3089), vt.worldScissorTest = !1), _.copyFrom(this.screenRect), !0
            }, t._scissorWithTagart = function(t, e, i, r) {
                if (i < 1 || r < 1) return !1;
                var s = t + i,
                    a = e + r;
                t < 0 && (i = s - (t = 0)), e < 0 && (r = a - (e = 0));
                var n = vt.worldClipRect;
                if (t = Math.max(t, n.x), e = Math.max(e, n.y), i = Math.min(s, n.right) - t, r = Math.min(a, n.bottom) - e, i < 1 || r < 1) return !1;
                var h = vt.worldScissorTest;
                return this.screenRect.copyFrom(n), vt.worldScissorTest = !0, n.x = t, n.y = e, n.width = i, n.height = r, e = vt.height - e - r, bt.mainContext.scissor(t, e, i, r), bt.mainContext.enable(3089), this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength), h ? (e = vt.height - this.screenRect.y - this.screenRect.height, bt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height), bt.mainContext.enable(3089)) : (bt.mainContext.disable(3089), vt.worldScissorTest = !1), n.copyFrom(this.screenRect), !0
            }, t.renderSubmit = function() {
                return this.submitLength = Math.min(this.context._submits._length - 1, this.submitLength), this.submitLength < 1 || this.clipRect.width < 1 || this.clipRect.height < 1 || (this.context._targets ? this._scissorWithTagart(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height) : this._scissor(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height)), this.submitLength + 1
            }, t.getRenderType = function() {
                return 0
            }, t.releaseRender = function() {
                var t = i._cache;
                (t[t._length++] = this).context = null
            }, i.create = function(t) {
                var e = i._cache._length ? i._cache[--i._cache._length] : new i;
                return e.context = t, e
            }, i._cache = ((i._cache = [])._length = 0, i._cache), i
        }(),
        ut = function() {
            function l() {
                this.step = 0, this.blendMode = null, this.level = 0
            }
            c(l, "t_tl.webgl.submit.SubmitStencil");
            var t = l.prototype;
            return T.imps(t, {
                "t_tl.webgl.submit.ISubmit": !0
            }), t.renderSubmit = function() {
                switch (this.step) {
                    case 1:
                        this.do1();
                        break;
                    case 2:
                        this.do2();
                        break;
                    case 3:
                        this.do3();
                        break;
                    case 4:
                        this.do4();
                        break;
                    case 5:
                        this.do5();
                        break;
                    case 6:
                        this.do6();
                        break;
                    case 7:
                        this.do7();
                        break;
                    case 8:
                        this.do8()
                }
                return 1
            }, t.getRenderType = function() {
                return 0
            }, t.releaseRender = function() {
                var t = l._cache;
                t[t._length++] = this
            }, t.do1 = function() {
                var t = bt.mainContext;
                t.enable(2960), t.clear(1024), t.colorMask(!1, !1, !1, !1), t.stencilFunc(514, this.level, 255), t.stencilOp(7680, 7680, 7682)
            }, t.do2 = function() {
                var t = bt.mainContext;
                t.stencilFunc(514, this.level + 1, 255), t.colorMask(!0, !0, !0, !0), t.stencilOp(7680, 7680, 7680)
            }, t.do3 = function() {
                var t = bt.mainContext;
                t.colorMask(!0, !0, !0, !0), t.stencilOp(7680, 7680, 7680), t.clear(1024), t.disable(2960)
            }, t.do4 = function() {
                var t = bt.mainContext;
                0 == this.level && (t.enable(2960), t.clear(1024)), t.colorMask(!1, !1, !1, !1), t.stencilFunc(519, 0, 255), t.stencilOp(7680, 7680, 7682)
            }, t.do5 = function() {
                var t = bt.mainContext;
                t.stencilFunc(514, this.level, 255), t.colorMask(!0, !0, !0, !0), t.stencilOp(7680, 7680, 7680)
            }, t.do6 = function() {
                var t = bt.mainContext;
                G.targetFns[G.TOINT[this.blendMode]](t)
            }, t.do7 = function() {
                var t = bt.mainContext;
                t.colorMask(!1, !1, !1, !1), t.stencilOp(7680, 7680, 7683)
            }, t.do8 = function() {
                var t = bt.mainContext;
                t.colorMask(!0, !0, !0, !0), t.stencilFunc(514, this.level, 255), t.stencilOp(7680, 7680, 7680)
            }, l.restore = function(t, e, i, r, s) {
                var a;
                if ((t._renderKey = 0) < l._mask && l._mask--, 0 == l._mask) a = t_tl.webgl.submit.SubmitStencil.create(3), t.addRenderObject(a), t._curSubmit = at.RENDERBASE;
                else {
                    a = t_tl.webgl.submit.SubmitStencil.create(7), t.addRenderObject(a);
                    var n = t._vb;
                    n._byteLength;
                    if (pt.fillRectImgVb(n, null, e.x, e.y, e.width, e.height, F.DEF_UV, i, r, s, 0, 0)) {
                        t._shader2D.glTexture = null;
                        var h = t._curSubmit = at.createSubmit(t, t._ib, n, (n._byteLength - 64) / 32 * 3, Et.create(2, 0));
                        h.shaderValue.ALPHA = 1, t._submits[t._submits._length++] = h, t._curSubmit._numEle += 6, t._curSubmit = at.RENDERBASE
                    } else alert("clipRect calc stencil rect error");
                    a = t_tl.webgl.submit.SubmitStencil.create(8), t.addRenderObject(a)
                }
            }, l.restore2 = function(t, e) {
                var i;
                (t._renderKey = 0) < l._mask && l._mask--, 0 == l._mask ? (i = t_tl.webgl.submit.SubmitStencil.create(3), t.addRenderObject(i), t._curSubmit = at.RENDERBASE) : (i = t_tl.webgl.submit.SubmitStencil.create(7), t.addRenderObject(i), t._submits[t._submits._length++] = e, i = t_tl.webgl.submit.SubmitStencil.create(8), t.addRenderObject(i))
            }, l.create = function(t) {
                var e = l._cache._length ? l._cache[--l._cache._length] : new l;
                return 5 == (e.step = t) && ++l._mask, e.level = l._mask, e
            }, l._cache = ((l._cache = [])._length = 0, l._cache), l._mask = 0, l
        }(),
        _t = function() {
            function h() {
                this._renderType = 0, this._vb = null, this._ib = null, this._startIdx = 0, this._numEle = 0, this.shaderValue = null, this.blendType = 0, this.proName = null, this.scope = null
            }
            c(h, "t_tl.webgl.submit.SubmitTarget");
            var t = h.prototype;
            return T.imps(t, {
                "t_tl.webgl.submit.ISubmit": !0
            }), t.renderSubmit = function() {
                this._vb.bind_upload(this._ib);
                var t = this.scope.getValue(this.proName);
                return t && (this.shaderValue.texture = t.source, this.shaderValue.strength && !this.shaderValue.blurInfo && (this.shaderValue.blurInfo = [t.width, t.height]), this.shaderValue.upload(), this.blend(), C.drawCall++, C.trianglesFaces += this._numEle / 3, bt.mainContext.drawElements(4, this._numEle, 5123, this._startIdx)), 1
            }, t.blend = function() {
                if (G.activeBlendFunction !== G.fns[this.blendType]) {
                    var t = bt.mainContext;
                    t.enable(3042), G.fns[this.blendType](t), G.activeBlendFunction = G.fns[this.blendType]
                }
            }, t.getRenderType = function() {
                return 0
            }, t.releaseRender = function() {
                var t = h._cache;
                t[t._length++] = this
            }, h.create = function(t, e, i, r, s, a) {
                var n = h._cache._length ? h._cache[--h._cache._length] : new h;
                return n._ib = e, n._vb = i, n.proName = a, n._startIdx = r * mt.BYTES_PIDX, n._numEle = 0, n.blendType = t._nBlendType, n.shaderValue = s, n.shaderValue.setValue(t._shader2D), n
            }, h._cache = ((h._cache = [])._length = 0, h._cache), h
        }(),
        ct = function() {
            function t() {
                this._sourceStr = null
            }
            c(t, "t_tl.webgl.text.CharSegment");
            var e = t.prototype;
            return T.imps(e, {
                "t_tl.webgl.text.ICharSegment": !0
            }), e.textToSpit = function(t) {
                this._sourceStr = t
            }, e.getChar = function(t) {
                return this._sourceStr.charAt(t)
            }, e.getCharCode = function(t) {
                return this._sourceStr.charCodeAt(t)
            }, e.length = function() {
                return this._sourceStr.length
            }, t
        }(),
        ft = function() {
            var t;

            function C() {}
            return c(C, "t_tl.webgl.text.DrawText"), C.__init__ = function() {
                C._charsTemp = new Array, C._drawValue = new t, C._charSeg = new ct
            }, C.customCharSeg = function(t) {
                C._charSeg = t
            }, C.getChar = function(t, e, i) {
                var r = Yt.createOneChar(t, i);
                return -1 != e && (C._charsCache[e] = r), r
            }, C._drawSlow = function(t, e, i, r, s, a, n, h, l, o, u, _, c, f, d) {
                var m, p, g = C._drawValue.value(a, h, l, o, c, f, d),
                    v = 0,
                    x = 0,
                    b = C._charsTemp,
                    y = 0,
                    T = NaN;
                if (r)
                    for (b.length = r.length, v = 0, x = r.length; v < x; v++) T = (p = r[v]).charNum + g.txtID, b[v] = m = C._charsCache[T] || C.getChar(p.char, T, g), m.active();
                else {
                    var A = i instanceof t_tl.utils.WordText ? i.toString() : i;
                    if (D.CharacterCache) {
                        C._charSeg.textToSpit(A);
                        var E = C._charSeg.length();
                        for (v = 0, x = b.length = E; v < x; v++) T = C._charSeg.getCharCode(v) + g.txtID, b[v] = m = C._charsCache[T] || C.getChar(C._charSeg.getChar(v), T, g), m.active(), y += m.cw
                    } else b.length = 0, (m = C.getChar(A, -1, g)).active(), y += m.cw, b[0] = m
                }
                var S = 0;
                null !== n && "left" !== n && (S = -("center" == n ? y / 2 : y));
                var w, R, I = NaN,
                    M = 0;
                if (r)
                    for (v = 0, x = b.length; v < x; v++)(m = b[v]).isSpace || (p = r[v], I = m.borderSize, w = m.texture, e._drawText(w, u + S + p.x * c - I, _ + p.y * f - I, w.width, w.height, s, 0, 0, 0, 0));
                else {
                    for (v = 0, x = b.length; v < x; v++)(m = b[v]).isSpace || (I = m.borderSize, w = m.texture, e._drawText(w, u + S - I, _ - I, w.width, w.height, s, 0, 0, 0, 0), t && ((R = t[M++]) || (R = t[M - 1] = []), R[0] = w, R[1] = S - I, R[2] = -I)), S += m.cw;
                    t && (t.length = M)
                }
            }, C._drawFast = function(t, e, i, r, s) {
                for (var a, n, h = 0, l = t.length; h < l; h++)(a = (n = t[h])[0]).active(), e._drawText(a, r + n[1], s + n[2], a.width, a.height, i, 0, 0, 0, 0)
            }, C.drawText = function(t, e, i, r, s, a, n, h, l, o, u, _) {
                if (void 0 === _ && (_ = 0), !(e && 0 === e.length || i && 0 === i.length)) {
                    var c = r.a,
                        f = r.d;
                    (0 !== r.b || 0 !== r.c) && (c = f = 1);
                    var d = 1 !== c || 1 !== f;
                    if (d && T.stage.transform) {
                        var m = T.stage.transform;
                        d = m.a === c && m.d === f
                    } else d = !1;
                    if (d) {
                        var p = (r = r.copyTo(At._tmpMatrix)).tx,
                            g = r.ty;
                        r.scale(1 / c, 1 / f), r._checkTransform(), o *= c, u *= f, o += p - r.tx, u += g - r.ty
                    } else c = f = 1;
                    if (i) C._drawSlow(null, t, e, i, r, s, a, n, h, l, o, u, c, f, _);
                    else {
                        if (null === e.toUpperCase) {
                            var v = c + 1e5 * f,
                                x = e;
                            return void(x.changed || x.id !== v ? (x.id = v, x.changed = !1, C._drawSlow(x.save, t, e, i, r, s, a, n, h, l, o, u, c, f, _)) : C._drawFast(x.save, t, r, o, u))
                        }
                        var b = e + s.toString() + n + h + l + c + f + a,
                            y = C._textsCache[b];
                        D.CharacterCache ? y ? C._drawFast(y, t, r, o, u) : (C._textsCache.__length || (C._textsCache.__length = 0), C._textsCache.__length > A.WebGLTextCacheCount && ((C._textsCache = {}).__length = 0, C._curPoolIndex = 0), C._textCachesPool[C._curPoolIndex] ? (y = C._textsCache[b] = C._textCachesPool[C._curPoolIndex]).length = 0 : C._textCachesPool[C._curPoolIndex] = y = C._textsCache[b] = [], C._textsCache.__length++, C._curPoolIndex++, C._drawSlow(y, t, e, i, r, s, a, n, h, l, o, u, c, f, _)) : C._drawSlow(y, t, e, i, r, s, a, n, h, l, o, u, c, f, _)
                    }
                }
            }, C._charsTemp = null, C._textCachesPool = [], C._curPoolIndex = 0, C._charsCache = {}, C._textsCache = {}, C._drawValue = null, C.d = [], C._charSeg = null, C.__init$ = function() {
                t = function() {
                    function l() {}
                    return c(l, ""), l.prototype.value = function(t, e, i, r, s, a, n) {
                        this.font = t, this.fillColor = e, this.borderColor = i, this.lineWidth = r, this.scaleX = s, this.scaleY = a, this.underLine = n;
                        var h = t.toString() + s + a + r + e + i + n;
                        return this.txtID = l._keymap[h], this.txtID || (this.txtID = 1e-7 * ++l._keymapCount, l._keymap[h] = this.txtID), this
                    }, l.clear = function() {
                        l._keymap = {}, l._keymapCount = 1
                    }, l._keymap = {}, l._keymapCount = 1, l
                }()
            }, C
        }(),
        dt = function() {
            function s(t) {
                this._index = 0, this._size = 14, this._italic = -2, s._cache2 = s._cache2 || [], this.setFont(t || "14px Arial")
            }
            c(s, "t_tl.webgl.text.FontInContext");
            var t = s.prototype;
            return t.setFont = function(t) {
                var e = s._cache2[t];
                if (e) this._words = e[0], this._size = e[1];
                else {
                    this._words = t.split(" ");
                    for (var i = 0, r = this._words.length; i < r; i++)
                        if (0 < this._words[i].indexOf("px")) {
                            this._index = i;
                            break
                        }
                    this._size = parseInt(this._words[this._index]), s._cache2[t] = [this._words, this._size]
                }
                this._text = null, this._italic = -2
            }, t.getItalic = function() {
                return -2 === this._italic && (this._italic = this.hasType("italic")), this._italic
            }, t.hasType = function(t) {
                for (var e = 0, i = this._words.length; e < i; e++)
                    if (this._words[e] === t) return e;
                return -1
            }, t.removeType = function(t) {
                for (var e = 0, i = this._words.length; e < i; e++)
                    if (this._words[e] === t) {
                        this._words.splice(e, 1), this._index > e && this._index--;
                        break
                    }
                this._text = null, this._italic = -2
            }, t.copyTo = function(t) {
                return t._text = this._text, t._size = this._size, t._index = this._index, t._words = this._words.slice(), t._italic = -2, t
            }, t.toString = function() {
                return this._text ? this._text : this._text = this._words.join(" ")
            }, l(0, t, "size", function() {
                return this._size
            }, function(t) {
                this._size = t, this._words[this._index] = t + "px", this._text = null
            }), s.create = function(t) {
                var e = s._cache[t];
                return e || (e = s._cache[t] = new s(t))
            }, s.EMPTY = new s, s._cache = {}, s._cache2 = null, s
        }(),
        mt = function() {
            function t() {}
            return c(t, "t_tl.webgl.utils.CONST3D2D"), t.defaultMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], t.defaultMinusYMatrix4 = [1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], t.uniformMatrix3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], t._TMPARRAY = [], t._OFFSETX = 0, t._OFFSETY = 0, n(t, ["BYTES_PE", function() {
                return this.BYTES_PE = Float32Array.BYTES_PER_ELEMENT
            }, "BYTES_PIDX", function() {
                return this.BYTES_PIDX = Uint16Array.BYTES_PER_ELEMENT
            }]), t
        }(),
        pt = function() {
            function d() {}
            return c(d, "t_tl.webgl.utils.GlUtils"), d.make2DProjection = function(t, e, i) {
                return [2 / t, 0, 0, 0, 0, -2 / e, 0, 0, 0, 0, 2 / i, 0, -1, 1, 0, 1]
            }, d.fillIBQuadrangle = function(t, e) {
                if (65535 / 4 < e) throw Error("IBQuadrangle count:" + e + " must<:" + Math.floor(65535 / 4));
                e = Math.floor(e), t._resizeBuffer(6 * (e + 1) * 2, !1), t.byteLength = t.bufferLength;
                for (var i = t.getUint16Array(), r = 0, s = 0; s < e; s++) i[r++] = 4 * s, i[r++] = 4 * s + 2, i[r++] = 4 * s + 1, i[r++] = 4 * s, i[r++] = 4 * s + 3, i[r++] = 4 * s + 2;
                return t.setNeedUpload(), !0
            }, d.expandIBQuadrangle = function(t, e) {
                t.bufferLength >= 6 * e * 2 || d.fillIBQuadrangle(t, e)
            }, d.mathCeilPowerOfTwo = function(t) {
                return t--, t |= t >> 1, t |= t >> 2, t |= t >> 4, t |= t >> 8, t |= t >> 16, ++t
            }, d.fillQuadrangleImgVb = function(t, e, i, r, s, a, n, h) {
                var l = 16 + (t._byteLength >> 2);
                t.byteLength = l << 2;
                var o = t.getFloat32Array();
                o[(l -= 16) + 2] = s[0], o[l + 3] = s[1], o[l + 6] = s[2], o[l + 7] = s[3], o[l + 10] = s[4], o[l + 11] = s[5], o[l + 14] = s[6], o[l + 15] = s[7];
                var u = a.a,
                    _ = a.b,
                    c = a.c,
                    f = a.d;
                if (1 !== u || 0 !== _ || 0 !== c || 1 !== f) {
                    a.bTransform = !0;
                    var d = a.tx + n,
                        m = a.ty + h;
                    o[l] = (r[0] + e) * u + (r[1] + i) * c + d, o[l + 1] = (r[0] + e) * _ + (r[1] + i) * f + m, o[l + 4] = (r[2] + e) * u + (r[3] + i) * c + d, o[l + 5] = (r[2] + e) * _ + (r[3] + i) * f + m, o[l + 8] = (r[4] + e) * u + (r[5] + i) * c + d, o[l + 9] = (r[4] + e) * _ + (r[5] + i) * f + m, o[l + 12] = (r[6] + e) * u + (r[7] + i) * c + d, o[l + 13] = (r[6] + e) * _ + (r[7] + i) * f + m
                } else a.bTransform = !1, e += a.tx + n, i += a.ty + h, o[l] = e + r[0], o[l + 1] = i + r[1], o[l + 4] = e + r[2], o[l + 5] = i + r[3], o[l + 8] = e + r[4], o[l + 9] = i + r[5], o[l + 12] = e + r[6], o[l + 13] = i + r[7];
                return t._upload = !0
            }, d.fillTranglesVB = function(t, e, i, r, s, a, n) {
                var h = (t._byteLength >> 2) + r.length;
                t.byteLength = h << 2;
                var l = t.getFloat32Array();
                h -= r.length;
                for (var o = r.length, u = s.a, _ = s.b, c = s.c, f = s.d, d = 0; d < o; d += 4)
                    if (l[h + d + 2] = r[d + 2], l[h + d + 3] = r[d + 3], 1 !== u || 0 !== _ || 0 !== c || 1 !== f) {
                        s.bTransform = !0;
                        var m = s.tx + a,
                            p = s.ty + n;
                        l[h + d] = (r[d] + e) * u + (r[d + 1] + i) * c + m, l[h + d + 1] = (r[d] + e) * _ + (r[d + 1] + i) * f + p
                    } else s.bTransform = !1, e += s.tx + a, i += s.ty + n, l[h + d] = e + r[d], l[h + d + 1] = i + r[d + 1];
                return t._upload = !0
            }, d.copyPreImgVb = function(t, e, i) {
                var r = t._byteLength >> 2;
                t.byteLength = r + 16 << 2;
                for (var s = t.getFloat32Array(), a = 0, n = r - 16; a < 4; a++) s[r] = s[n] + e, ++n, s[++r] = s[n] + i, ++n, s[++r] = s[n], ++n, s[++r] = s[n], ++r, ++n;
                t._upload = !0
            }, d.fillRectImgVb = function(t, e, i, r, s, a, n, h, l, o, u, _, c) {
                void 0 === c && (c = !1);
                var f, d, m, p, g, v, x, b, y, T, A, E, S, w, R, I, M = 1,
                    C = h.a,
                    L = h.b,
                    P = h.c,
                    D = h.d,
                    F = e && e.width < 99999999;
                if (1 !== C || 0 !== L || 0 !== P || 1 !== D ? (h.bTransform = !0, 0 === L && 0 === P && (M = 23, y = s + i, T = a + r, f = C * i + (A = h.tx + l), m = C * y + A, d = D * r + (E = h.ty + o), p = D * T + E)) : (M = 23, h.bTransform = !1, m = (f = i + h.tx + l) + s, p = (d = r + h.ty + o) + a), F && (g = e.x, v = e.y, x = e.width + g, b = e.height + v), 1 !== M) {
                    if (Math.min(f, m) >= x) return !1;
                    if (Math.min(d, p) >= b) return !1;
                    if (Math.max(m, f) <= g) return !1;
                    if (Math.max(p, d) <= v) return !1
                }
                var B = t._byteLength >> 2;
                t.byteLength = B + 16 << 2;
                var N = t.getFloat32Array();
                switch (N[B + 2] = n[0], N[B + 3] = n[1], N[B + 6] = n[2], N[B + 7] = n[3], N[B + 10] = n[4], N[B + 11] = n[5], N[B + 14] = n[6], N[B + 15] = n[7], M) {
                    case 1:
                        A = h.tx + l, E = h.ty + o;
                        var O = C * i,
                            V = P * r,
                            U = D * r,
                            k = L * i,
                            H = C * (y = s + i),
                            G = P * (T = a + r),
                            W = D * T,
                            z = L * y;
                        c ? (S = O + V + A, R = Math.round(S) - S, w = U + k + E, I = Math.round(w) - w, N[B] = S + R, N[B + 1] = w + I, N[B + 4] = H + V + A + R, N[B + 5] = U + z + E + I, N[B + 8] = H + G + A + R, N[B + 9] = W + z + E + I, N[B + 12] = O + G + A + R, N[B + 13] = W + k + E + I) : (N[B] = O + V + A, N[B + 1] = U + k + E, N[B + 4] = H + V + A, N[B + 5] = U + z + E, N[B + 8] = H + G + A, N[B + 9] = W + z + E, N[B + 12] = O + G + A, N[B + 13] = W + k + E);
                        break;
                    case 23:
                        c ? (S = f + u, R = Math.round(S) - S, w = d, I = Math.round(w) - w, N[B] = S + R, N[B + 1] = w + I, N[B + 4] = m + u + R, N[B + 5] = d + I, N[B + 8] = m + R, N[B + 9] = p + I, N[B + 12] = f + R, N[B + 13] = p + I) : (N[B] = f + u, N[B + 1] = d, N[B + 4] = m + u, N[B + 5] = d, N[B + 8] = m, N[B + 9] = p, N[B + 12] = f, N[B + 13] = p)
                }
                return t._upload = !0
            }, d.fillLineVb = function(t, e, i, r, s, a, n, h) {
                var l = .5 * n,
                    o = d._fillLineArray,
                    u = -(r - a),
                    _ = i - s,
                    c = Math.sqrt(u * u + _ * _);
                u /= c, _ /= c, u *= l, _ *= l, o[0] = i - u, o[1] = r - _, o[4] = i + u, o[5] = r + _, o[8] = s + u, o[9] = a + _, o[12] = s - u, o[13] = a - _, h && h.transformPointArray(o, o);
                var f = 16 + (t._byteLength >> 2);
                return t.byteLength = f << 2, t.insertData(o, f - 16), !0
            }, d._fillLineArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], d
        }(),
        gt = (function() {
            function l() {}
            c(l, "t_tl.webgl.utils.MatirxArray"), l.ArrayMul = function(t, e, i) {
                if (t)
                    if (e)
                        for (var r = NaN, s = NaN, a = NaN, n = NaN, h = 0; h < 4; h++) r = t[h], s = t[h + 4], a = t[h + 8], n = t[h + 12], i[h] = r * e[0] + s * e[1] + a * e[2] + n * e[3], i[h + 4] = r * e[4] + s * e[5] + a * e[6] + n * e[7], i[h + 8] = r * e[8] + s * e[9] + a * e[10] + n * e[11], i[h + 12] = r * e[12] + s * e[13] + a * e[14] + n * e[15];
                    else l.copyArray(t, i);
                else l.copyArray(e, i)
            }, l.copyArray = function(t, e) {
                if (t && e)
                    for (var i = 0; i < t.length; i++) e[i] = t[i]
            }
        }(), function() {
            function e(t, e, i) {
                this._stride = 0, this.vertNum = 0, this.indexNum = 0, this._applied = !1, this._vb = null, this._ib = null, this._vao = null, this._attribInfo = null, this._quadNum = 0, this.canReuse = !1, this._stride = t, this._vb = new Jt(t, 35048), e && this._vb._resizeBuffer(e, !1), this._ib = new $t, i && this._ib._resizeBuffer(i, !1)
            }
            c(e, "t_tl.webgl.utils.Mesh2D");
            var t = e.prototype;
            return t.cloneWithNewVB = function() {
                var t = new e(this._stride, 0, 0);
                return t._ib = this._ib, t._quadNum = this._quadNum, t._attribInfo = this._attribInfo, t
            }, t.cloneWithNewVBIB = function() {
                var t = new e(this._stride, 0, 0);
                return t._attribInfo = this._attribInfo, t
            }, t.getVBW = function() {
                return this._vb.setNeedUpload(), this._vb
            }, t.getVBR = function() {
                return this._vb
            }, t.getIBR = function() {
                return this._ib
            }, t.getIBW = function() {
                return this._ib.setNeedUpload(), this._ib
            }, t.createQuadIB = function(t) {
                this._quadNum = t, this._ib._resizeBuffer(6 * t * 2, !1), this._ib.byteLength = this._ib.bufferLength;
                for (var e = this._ib.getUint16Array(), i = 0, r = 0, s = 0; s < t; s++) e[i++] = r, e[i++] = r + 2, e[i++] = r + 1, e[i++] = r, e[i++] = r + 3, e[i++] = r + 2, r += 4;
                this._ib.setNeedUpload()
            }, t.setAttributes = function(t) {
                if (this._attribInfo = t, this._attribInfo.length % 3 != 0) throw "Mesh2D setAttributes error!"
            }, t.getEleNum = function() {
                return this._ib.getBuffer().byteLength / 2
            }, t.releaseMesh = function() {}, t.destroy = function() {}, t.clearVB = function() {
                this._vb.clear()
            }, e._gvaoid = 0, e
        }()),
        vt = function() {
            function s() {}
            return c(s, "t_tl.webgl.utils.RenderState2D"), s.getMatrArray = function() {
                return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
            }, s.mat2MatArray = function(t, e) {
                var i = t,
                    r = e;
                return r[0] = i.a, r[1] = i.b, r[2] = s.EMPTYMAT4_ARRAY[2], r[3] = s.EMPTYMAT4_ARRAY[3], r[4] = i.c, r[5] = i.d, r[6] = s.EMPTYMAT4_ARRAY[6], r[7] = s.EMPTYMAT4_ARRAY[7], r[8] = s.EMPTYMAT4_ARRAY[8], r[9] = s.EMPTYMAT4_ARRAY[9], r[10] = s.EMPTYMAT4_ARRAY[10], r[11] = s.EMPTYMAT4_ARRAY[11], r[12] = i.tx, r[13] = i.ty, r[14] = s.EMPTYMAT4_ARRAY[14], r[15] = s.EMPTYMAT4_ARRAY[15], e
            }, s.restoreTempArray = function() {
                s.TEMPMAT4_ARRAY[0] = 1, s.TEMPMAT4_ARRAY[1] = 0, s.TEMPMAT4_ARRAY[4] = 0, s.TEMPMAT4_ARRAY[5] = 1, s.TEMPMAT4_ARRAY[12] = 0, s.TEMPMAT4_ARRAY[13] = 0
            }, s.clear = function() {
                s.worldScissorTest = !1, s.worldShaderDefines = null, s.worldFilters = null, s.worldAlpha = 1, s.worldClipRect.x = s.worldClipRect.y = 0, s.worldClipRect.width = s.width, s.worldClipRect.height = s.height, s.curRenderTarget = null
            }, s._MAXSIZE = 99999999, s.EMPTYMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], s.worldMatrix4 = s.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], s.worldAlpha = 1, s.worldScissorTest = !1, s.worldFilters = null, s.worldShaderDefines = null, s.curRenderTarget = null, s.width = 0, s.height = 0, n(s, ["worldMatrix", function() {
                return this.worldMatrix = new S
            }, "worldClipRect", function() {
                return this.worldClipRect = new R(0, 0, 99999999, 99999999)
            }]), s
        }(),
        xt = function() {
            var v, i;

            function x(t, e, i, r, s) {
                var a = this;

                function n(t) {
                    var e = [],
                        i = new v(e);
                    return a._compileToTree(i, t.split("\n"), 0, e, s), i
                }
                var h = f.now();
                this._VS = n(e), this._PS = n(i), this._nameMap = r, 2 < f.now() - h && console.log("ShaderCompile use time:" + (f.now() - h) + "  size:" + e.length + "/" + i.length)
            }
            c(x, "t_tl.webgl.utils.ShaderCompile");
            var t = x.prototype;
            return t._compileToTree = function(t, e, i, r, s) {
                var a, n, h, l, o, u, _, c = 0,
                    f = 0,
                    d = 0,
                    m = 0;
                for (f = i; f < e.length; f++)
                    if (!((h = e[f]).length < 1) && 0 !== (c = h.indexOf("//"))) {
                        if (0 <= c && (h = h.substr(0, c)), a = _ || new v(r), _ = null, a.text = h, a.noCompile = !0, 0 <= (c = h.indexOf("#"))) {
                            for (l = "#", m = c + 1, d = h.length; m < d; m++) {
                                var p = h.charAt(m);
                                if (" " === p || "\t" === p || "?" === p) break;
                                l += p
                            }
                            switch (a.name = l) {
                                case "#ifdef":
                                case "#ifndef":
                                    if (a.src = h, a.noCompile = null != h.match(/[!&|()=<>]/), a.noCompile ? console.log("function():Boolean{return " + h.substr(c + a.name.length) + "}") : (u = h.replace(/^\s*/, "").split(/\s+/), a.setCondition(u[1], "#ifdef" === l ? 1 : 2), a.text = "//" + a.text), a.setParent(t), t = a, s)
                                        for (u = h.substr(m).split(x._splitToWordExps3), m = 0; m < u.length; m++)(h = u[m]).length && (s[h] = !0);
                                    continue;
                                case "#if":
                                    if (a.src = h, a.noCompile = !0, a.setParent(t), t = a, s)
                                        for (u = h.substr(m).split(x._splitToWordExps3), m = 0; m < u.length; m++)(h = u[m]).length && "defined" != h && (s[h] = !0);
                                    continue;
                                case "#else":
                                    a.src = h, n = (t = t.parent).childs[t.childs.length - 1], a.noCompile = n.noCompile, a.noCompile || (a.condition = n.condition, a.conditionType = 1 == n.conditionType ? 2 : 1, a.text = "//" + a.text + " " + n.text + " " + a.conditionType), a.setParent(t), t = a;
                                    continue;
                                case "#endif":
                                    n = (t = t.parent).childs[t.childs.length - 1], a.noCompile = n.noCompile, a.noCompile || (a.text = "//" + a.text), a.setParent(t);
                                    continue;
                                case "#include":
                                    u = x.splitToWords(h, null);
                                    var g = x.includes[u[1]];
                                    if (!g) throw "ShaderCompile error no this include file:" + u[1];
                                    if ((c = u[0].indexOf("?")) < 0) {
                                        a.setParent(t), h = g.getWith("with" == u[2] ? u[3] : null), this._compileToTree(a, h.split("\n"), 0, r, s), a.text = "";
                                        continue
                                    }
                                    a.setCondition(u[0].substr(c + 1), 1), a.text = g.getWith("with" == u[2] ? u[3] : null);
                                    break;
                                case "#import":
                                    o = (u = x.splitToWords(h, null))[1], r.push({
                                        node: a,
                                        file: x.includes[o],
                                        ofs: a.text.length
                                    });
                                    continue
                            }
                        } else {
                            if ((n = t.childs[t.childs.length - 1]) && !n.name) {
                                0 < r.length && x.splitToWords(h, n), _ = a, n.text += "\n" + h;
                                continue
                            }
                            0 < r.length && x.splitToWords(h, a)
                        }
                        a.setParent(t)
                    }
            }, t.createShader = function(t, e, i) {
                var r = {},
                    s = "";
                if (t)
                    for (var a in t) s += "#define " + a + "\n", r[a] = !0;
                var n = this._VS.toscript(r, []),
                    h = this._PS.toscript(r, []);
                return (i || Qt.create)(s + n.join("\n"), s + h.join("\n"), e, this._nameMap)
            }, x._parseOne = function(t, e, i, r, s, a) {
                var n = {
                    type: x.shaderParamsMap[i[r + 1]],
                    name: i[r + 2],
                    size: isNaN(parseInt(i[r + 3])) ? 1 : parseInt(i[r + 3])
                };
                return a && ("attribute" == s ? t.push(n) : e.push(n)), ":" == i[r + 3] && (n.type = i[r + 4], r += 2), r += 2
            }, x.addInclude = function(t, e) {
                if (!e || 0 === e.length) throw new Error("add shader include file err:" + t);
                if (x.includes[t]) throw new Error("add shader include file err, has add:" + t);
                x.includes[t] = new i(e)
            }, x.preGetParams = function(t, e) {
                var i = [t, e],
                    r = {},
                    s = [],
                    a = [],
                    n = {},
                    h = [];
                r.attributes = s, r.uniforms = a, r.defines = n;
                for (var l = 0, o = 0, u = 0; u < 2; u++) {
                    i[u] = i[u].replace(x._removeAnnotation, "");
                    var _, c = i[u].match(x._reg);
                    for (l = 0, o = c.length; l < o; l++) {
                        var f = c[l];
                        if ("attribute" == f || "uniform" == f) l = x._parseOne(s, a, c, l, f, !0);
                        else {
                            if ("#define" == f) {
                                h[f = c[++l]] = 1;
                                continue
                            }
                            if ("#ifdef" == f) {
                                n[_ = c[++l]] = n[_] || [];
                                for (l++; l < o; l++)
                                    if ("attribute" == (f = c[l]) || "uniform" == f) l = x._parseOne(s, a, c, l, f, h[_]);
                                    else if ("#else" == f)
                                    for (l++; l < o; l++)
                                        if ("attribute" == (f = c[l]) || "uniform" == f) l = x._parseOne(s, a, c, l, f, !h[_]);
                                        else if ("#endif" == f) break
                            }
                        }
                    }
                }
                return r
            }, x.splitToWords = function(t, e) {
                for (var i, r, s = [], a = -1, n = 0, h = t.length; n < h; n++)
                    if (i = t.charAt(n), 0 <= " \t=+-*/&%!<>()'\",;".indexOf(i)) {
                        if (0 <= a && 1 < n - a && (r = t.substr(a, n - a), s.push(r)), '"' == i || "'" == i) {
                            var l = t.indexOf(i, n + 1);
                            if (l < 0) throw "Sharder err:" + t;
                            s.push(t.substr(n + 1, l - n - 1)), n = l, a = -1;
                            continue
                        }
                        "(" == i && e && 0 < s.length && (r = s[s.length - 1] + ";", "vec4;main;".indexOf(r) < 0 && (e.useFuns += r)), a = -1
                    } else a < 0 && (a = n);
                return a < h && 1 < h - a && (r = t.substr(a, h - a), s.push(r)), s
            }, x.IFDEF_NO = 0, x.IFDEF_YES = 1, x.IFDEF_ELSE = 2, x.IFDEF_PARENT = 3, x._removeAnnotation = new RegExp("(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)", "g"), x._reg = new RegExp("(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])", "g"), x._splitToWordExps = new RegExp("[(\".*\")]+|[('.*')]+|([ \\t=\\+\\-*/&%!<>!%(),;])", "g"), x.includes = {}, n(x, ["shaderParamsMap", function() {
                return this.shaderParamsMap = {
                    float: 5126,
                    int: 5124,
                    bool: 35670,
                    vec2: 35664,
                    vec3: 35665,
                    vec4: 35666,
                    ivec2: 35667,
                    ivec3: 35668,
                    ivec4: 35669,
                    bvec2: 35671,
                    bvec3: 35672,
                    bvec4: 35673,
                    mat2: 35674,
                    mat3: 35675,
                    mat4: 35676,
                    sampler2D: 35678,
                    samplerCube: 35680
                }
            }, "_splitToWordExps3", function() {
                return this._splitToWordExps3 = new RegExp("[ \\t=\\+\\-*/&%!<>!%(),;\\|]", "g")
            }]), x.__init$ = function() {
                v = function() {
                    function i(t) {
                        this.childs = [], this.text = "", this.parent = null, this.name = null, this.noCompile = !1, this.includefiles = null, this.condition = null, this.conditionType = 0, this.useFuns = "", this.z = 0, this.src = null, this.includefiles = t
                    }
                    c(i, "");
                    var t = i.prototype;
                    return t.setParent = function(t) {
                        t.childs.push(this), this.z = t.z + 1, this.parent = t
                    }, t.setCondition = function(t, e) {
                        t && (this.conditionType = e, t = t.replace(/(\s*$)/g, ""), this.condition = function() {
                            return this[t]
                        }, this.condition.__condition = t)
                    }, t.toscript = function(t, e) {
                        return this._toscript(t, e, ++i.__id)
                    }, t._toscript = function(r, s, a) {
                        if (this.childs.length < 1 && !this.text) return s;
                        s.length;
                        if (this.condition) {
                            var t = !!this.condition.call(r);
                            if (2 === this.conditionType && (t = !t), !t) return s
                        }
                        if (this.text && s.push(this.text), 0 < this.childs.length && this.childs.forEach(function(t, e, i) {
                                t._toscript(r, s, a)
                            }), 0 < this.includefiles.length && 0 < this.useFuns.length)
                            for (var e, i = 0, n = this.includefiles.length; i < n; i++) this.includefiles[i].curUseID != a && 0 < (e = this.includefiles[i].file.getFunsScript(this.useFuns)).length && (this.includefiles[i].curUseID = a, s[0] = e + s[0]);
                        return s
                    }, i.__id = 1, i
                }(), i = function() {
                    function t(t) {
                        this.script = null, this.codes = {}, this.funs = {}, this.curUseID = -1, this.funnames = "", this.script = t;
                        for (var e = 0, i = 0, r = 0; !((e = t.indexOf("#begin", e)) < 0);) {
                            for (r = e + 5; !((r = t.indexOf("#end", r)) < 0) && "i" === t.charAt(r + 4);) r += 5;
                            if (r < 0) throw "add include err,no #end:" + t;
                            i = t.indexOf("\n", e);
                            var s = x.splitToWords(t.substr(e, i - e), null);
                            "code" == s[1] ? this.codes[s[2]] = t.substr(i + 1, r - i - 1) : "function" == s[1] && (i = t.indexOf("function", e), i += "function".length, this.funs[s[3]] = t.substr(i + 1, r - i - 1), this.funnames += s[3] + ";"), e = r + 1
                        }
                    }
                    c(t, "");
                    var e = t.prototype;
                    return e.getWith = function(t) {
                        var e = t ? this.codes[t] : this.script;
                        if (!e) throw "get with error:" + t;
                        return e
                    }, e.getFunsScript = function(t) {
                        var e = "";
                        for (var i in this.funs) 0 <= t.indexOf(i + ";") && (e += this.funs[i]);
                        return e
                    }, t
                }()
            }, x
        }(),
        bt = function() {
            function n() {}
            return c(n, "t_tl.webgl.WebGL"), n._uint8ArraySlice = function() {
                for (var t = this.length, e = new Uint8Array(this.length), i = 0; i < t; i++) e[i] = this[i];
                return e
            }, n._float32ArraySlice = function() {
                for (var t = this.length, e = new Float32Array(this.length), i = 0; i < t; i++) e[i] = this[i];
                return e
            }, n._uint16ArraySlice = function(t) {
                var e, i = arguments,
                    r = 0,
                    s = 0;
                if (0 === i.length)
                    for (r = this.length, e = new Uint16Array(r), s = 0; s < r; s++) e[s] = this[s];
                else if (2 === i.length) {
                    var a = i[0],
                        n = i[1];
                    if (a < n)
                        for (r = n - a, e = new Uint16Array(r), s = a; s < n; s++) e[s - a] = this[s];
                    else e = new Uint16Array(0)
                }
                return e
            }, n.expandContext = function() {
                var t = r.prototype,
                    e = CanvasRenderingContext2D.prototype;
                e.fillTrangles = t.fillTrangles, Zt.__int__(null), e.setIBVB = function(t, e, i, r, s, a, n, h, l, o) {
                    void 0 === l && (l = 0), void 0 === o && (o = 0), null === i && (this._ib = this._ib || $t.QuadrangleIB, i = this._ib, pt.expandIBQuadrangle(i, r._byteLength / 64 + 8)), this._setIBVB(t, e, i, r, s, a, n, h, l, o)
                }, e.fillTrangles = function(t, e, i, r, s) {
                    this._curMat = this._curMat || S.create(), this._vb = this._vb || Jt.create(), this._ib || (this._ib = $t.create(), pt.fillIBQuadrangle(this._ib, n / 4));
                    var a = this._vb,
                        n = r.length >> 4;
                    pt.fillTranglesVB(a, e, i, r, s || this._curMat, 0, 0), pt.expandIBQuadrangle(this._ib, a._byteLength / 64 + 8);
                    var h = new Et(1, 0);
                    h.textureHost = t;
                    var l = new jt("attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }", "precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}");
                    a._vertType = 3, this._setIBVB(e, i, this._ib, a, 6 * n, s, l, h, 0, 0)
                }
            }, n.enable = function() {
                if (f.__init__(), g.isConchApp && !g.isConchWebGL) return y.skinAniSprite = function() {
                    return new tt
                }, n.expandContext(), !1;
                if (y.getWebGLContext = function(t) {
                        for (var e, i = ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl"], r = 0; r < i.length; r++) {
                            try {
                                e = t.getContext(i[r], {
                                    stencil: A.isStencil,
                                    alpha: A.isAlpha,
                                    antialias: A.isAntialias,
                                    premultipliedAlpha: A.premultipliedAlpha,
                                    preserveDrawingBuffer: A.preserveDrawingBuffer
                                })
                            } catch (t) {}
                            if (e) return e
                        }
                        return null
                    }, null == (n.mainContext = y.getWebGLContext(g._mainCanvas))) return !1;
                if (g.isWebGL) return !0;
                m.create = function(t, e) {
                    return new te(t, e)
                }, p.create = function(t, e, i, r, s, a, n) {
                    return new Kt(t, e, i, r, s, a, n)
                }, g.WebGL = n, g.isWebGL = !0, ft.__init__(), y.createRenderSprite = function(t, e) {
                    return new St(t, e)
                }, y.createWebGLContext2D = function(t) {
                    return new At(t)
                }, y.changeWebGLSize = function(t, e) {
                    t_tl.webgl.WebGL.onStageResize(t, e)
                }, y.createGraphics = function() {
                    return new Tt
                };
                var t = y.createFilterAction;
                return y.createFilterAction = t || function(t) {
                    return new wt
                }, y.clear = function(t) {
                    vt.worldScissorTest && t_tl.webgl.WebGL.mainContext.disable(3089);
                    var e = g.context.ctx,
                        i = 0 == e._submits._length || A.preserveDrawingBuffer ? d.create(t)._color : M._wgColor;
                    i && e.clearBG(i[0], i[1], i[2], i[3]), vt.clear()
                }, y.addToAtlas = function(t, e) {
                    void 0 === e && (e = !1);
                    var i = t.bitmap;
                    g.optimizeTextureMemory(t.url, t) ? T.__typeof(i, "t_tl.webgl.resource.IMergeAtlasBitmap") && i.allowMerageInAtlas && i.on("recovered", t, t.addTextureToAtlas) : i.enableMerageInAtlas = !1
                }, y.isAtlas = function(t) {
                    return t instanceof t_tl.webgl.atlas.AtlasWebGLCanvas
                }, k._enable(), y.beginFlush = function() {
                    for (var t = k.instance, e = t.getAtlaserCount(), i = 0; i < e; i++) {
                        var r = t.getAtlaserByIndex(i).texture;
                        r._flashCacheImageNeedFlush && y.flashFlushImage(r)
                    }
                }, y.drawToCanvas = function(t, e, i, r, s, a) {
                    (i <= 0 || r <= 0) && console.log("[error] canvasWidth and canvasHeight should greater than zero"), s -= t.x, a -= t.y, i |= 1, r |= 1, s |= 1, a |= 1;
                    var n = Nt.create(i, r, 6408, 5121, 0, !1);
                    n.start(), n.clear(0, 0, 0, 0), g.context.clear(), v.renders[e]._fun(t, g.context, s, vt.height - r + a), g.context.flush(), n.end();
                    var h = n.getData(0, 0, i, r);
                    if (n.recycle(), h.byteLength == i * r * 4) {
                        var l = new zt;
                        l._canvas = f.createElement("canvas"), l.size(i, r);
                        var o = l._canvas.getContext("2d");
                        f.canvas.size(i, r);
                        var u = f.context,
                            _ = u.createImageData(i, r);
                        return _.data.set(new Uint8ClampedArray(h.buffer)), l._imgData = _, u.putImageData(_, 0, 0), o.save(), o.translate(0, r), o.scale(1, -1), o.drawImage(f.canvas.source, 0, 0), o.restore(), l
                    }
                    console.log("drawToCanvas error: w:" + i + ",h:" + r + ",datalen:" + h.byteLength)
                }, y.createFilterAction = function(t) {
                    var e;
                    switch (t) {
                        case 32:
                            e = new wt
                    }
                    return e
                }, y.addTextureToAtlas = function(t) {
                    t._uvID++, k._atlasRestore++, t.bitmap.enableMerageInAtlas && k.instance.addToAtlas(t)
                }, y.getTexturePixels = function(t, e, i, r, s) {
                    g.context.ctx.clear();
                    var a = new I;
                    a.graphics.drawTexture(t, -e, -i);
                    var n = Nt.create(r, s);
                    n.start(), n.clear(0, 0, 0, 0), a.render(g.context, 0, 0), g.context.ctx.flush(), n.end();
                    for (var h = n.getData(0, 0, r, s), l = [], o = 0, u = s - 1; 0 <= u; u--)
                        for (var _ = 0; _ < r; _++) o = 4 * (u * r + _), l.push(h[o]), l.push(h[o + 1]), l.push(h[o + 2]), l.push(h[o + 3]);
                    return l
                }, y.skinAniSprite = function() {
                    return new tt
                }, o.create = function(t, e) {
                    var i = new zt;
                    return i._imgData = e, i.flipY = !1, i
                }, E._filterStart = function(t, e, i, r, s) {
                    var a = t.getValue("bounds"),
                        n = Nt.create(a.width, a.height);
                    if (n.start(), n.clear(0, 0, 0, 0), t.addValue("src", n), t.addValue("ScissorTest", vt.worldScissorTest), vt.worldScissorTest) {
                        var h = new R;
                        h.copyFrom(i.ctx._clipRect), t.addValue("clipRect", h), vt.worldScissorTest = !1, t_tl.webgl.WebGL.mainContext.disable(3089)
                    }
                }, E._filterEnd = function(t, e, i, r, s) {
                    var a = t.getValue("bounds");
                    t.getValue("src").end();
                    var n = Nt.create(a.width, a.height);
                    n.start(), n.clear(0, 0, 0, 0), t.addValue("out", n), e._set$P("_filterCache", n), e._set$P("_isHaveGlowFilter", t.getValue("_isHaveGlowFilter"))
                }, E._EndTarget = function(t, e) {
                    if (t.getValue("src").recycle(), t.getValue("out").end(), t.getValue("ScissorTest")) {
                        vt.worldScissorTest = !0, t_tl.webgl.WebGL.mainContext.enable(3089), e.ctx.save();
                        var i = t.getValue("clipRect");
                        e.ctx.clipRect(i.x, i.y, i.width, i.height)
                    }
                }, E._useSrc = function(t) {
                    var e = t.getValue("out");
                    e.end(), (e = t.getValue("src")).start(), e.clear(0, 0, 0, 0)
                }, E._endSrc = function(t) {
                    t.getValue("src").end()
                }, E._useOut = function(t) {
                    var e = t.getValue("src");
                    e.end(), (e = t.getValue("out")).start(), e.clear(0, 0, 0, 0)
                }, E._endOut = function(t) {
                    t.getValue("out").end()
                }, E._recycleScope = function(t) {
                    t.recycle()
                }, E._filter = function(t, e, i, r) {
                    var s = this._next;
                    if (s) {
                        var a, n, h = t.filters,
                            l = h.length;
                        if (1 == l && 32 == h[0].type) return e.ctx.save(), e.ctx.setFilters([h[0]]), s._fun.call(s, t, e, i, r), void e.ctx.restore();
                        var o = ht.create(),
                            u = w.TEMP,
                            _ = e.ctx._getTransformMatrix(),
                            c = S.create();
                        _.copyTo(c);
                        var f = 0,
                            d = 0,
                            m = !1,
                            p = t._$P._filterCache ? t._$P._filterCache : null;
                        if (!p || t._repaint) {
                            m = t._isHaveGlowFilter(), o.addValue("_isHaveGlowFilter", m), m && (f = 50, d = 25), (n = new R).copyFrom(t.getSelfBounds()), n.x += t.x, n.y += t.y, n.x -= t.pivotX + 4, n.y -= t.pivotY + 4;
                            var g = n.x,
                                v = n.y;
                            if (n.width += f + 8, n.height += f + 8, u.x = n.x * c.a + n.y * c.c, u.y = n.y * c.d + n.x * c.b, n.x = u.x, n.y = u.y, u.x = n.width * c.a + n.height * c.c, u.y = n.height * c.d + n.width * c.b, n.width = u.x, n.height = u.y, n.width <= 0 || n.height <= 0) return;
                            p && p.recycle(), o.addValue("bounds", n);
                            var x = nt.create([o, t, e, 0, 0], E._filterStart);
                            e.addRenderObject(x), e.ctx._renderKey = 0, e.ctx._shader2D.glTexture = null;
                            var b = t.x - g + d,
                                y = t.y - v + d;
                            s._fun.call(s, t, e, b, y), x = nt.create([o, t, e, 0, 0], E._filterEnd), e.addRenderObject(x);
                            for (var T = 0; T < l; T++) {
                                0 != T && (x = nt.create([o], E._useSrc), e.addRenderObject(x), a = Et.create(1, 0), S.TEMP.identity(), e.ctx.drawTarget(o, 0, 0, n.width, n.height, S.TEMP, "out", a, null, G.TOINT.overlay), x = nt.create([o], E._useOut), e.addRenderObject(x)), h[T].action.apply3d(o, t, e, 0, 0)
                            }
                            x = nt.create([o, e], E._EndTarget), e.addRenderObject(x)
                        } else {
                            if ((m = !!t._$P._isHaveGlowFilter && t._$P._isHaveGlowFilter) && (f = 50, d = 25), (n = t.getBounds()).width <= 0 || n.height <= 0) return;
                            n.width += f, n.height += f, u.x = n.x * c.a + n.y * c.c, u.y = n.y * c.d + n.x * c.b, n.x = u.x, n.y = u.y, u.x = n.width * c.a + n.height * c.c, u.y = n.height * c.d + n.width * c.b, n.width = u.x, n.height = u.y, o.addValue("out", p)
                        }
                        i = i - d - t.x, r = r - d - t.y, u.setTo(i, r), c.transformPoint(u), i = u.x + n.x, r = u.y + n.y, a = Et.create(1, 0), S.TEMP.identity(), e.ctx.drawTarget(o, i, r, n.width, n.height, S.TEMP, "out", a, null, G.TOINT.overlay), x = nt.create([o], E._recycleScope), e.addRenderObject(x), c.destroy()
                    }
                }, Float32Array.prototype.slice || (Float32Array.prototype.slice = n._float32ArraySlice), Uint16Array.prototype.slice || (Uint16Array.prototype.slice = n._uint16ArraySlice), Uint8Array.prototype.slice || (Uint8Array.prototype.slice = n._uint8ArraySlice), !0
            }, n.onStageResize = function(t, e) {
                null != n.mainContext && (n.mainContext.viewport(0, 0, t, e), vt.width = t, vt.height = e)
            }, n.onInvalidGLRes = function() {
                k.instance.freeAll(), b.releaseContentManagers(!0), n.doNodeRepaint(T.stage), n.mainContext.viewport(0, 0, vt.width, vt.height), T.stage.event("devicelost")
            }, n.doNodeRepaint = function(t) {
                0 == t.numChildren && t.repaint();
                for (var e = 0; e < t.numChildren; e++) n.doNodeRepaint(t.getChildAt(e))
            }, n.init = function(t, e, i) {
                n.mainCanvas = t, o._createContext = function(t) {
                    return new At(t)
                }, zt._createContext = function(t) {
                    return new At(t)
                };
                var r = t_tl.webgl.WebGL.mainContext;
                if (null != r.getShaderPrecisionFormat) {
                    var s = r.getShaderPrecisionFormat(35633, 36338),
                        a = r.getShaderPrecisionFormat(35632, 36338);
                    n.shaderHighPrecision = !(!s.precision || !a.precision)
                } else n.shaderHighPrecision = !1;
                if (n.compressAstc = r.getExtension("WEBGL_compressed_texture_astc"), n.compressAtc = r.getExtension("WEBGL_compressed_texture_atc"), n.compressEtc = r.getExtension("WEBGL_compressed_texture_etc"), n.compressEtc1 = r.getExtension("WEBGL_compressed_texture_etc1"), n.compressPvrtc = r.getExtension("WEBGL_compressed_texture_pvrtc"), n.compressS3tc = r.getExtension("WEBGL_compressed_texture_s3tc"), n.compressS3tc_srgb = r.getExtension("WEBGL_compressed_texture_s3tc_srgb"), r.deleteTexture1 = r.deleteTexture, r.deleteTexture = function(t) {
                        t == yt.curBindTexValue && (yt.curBindTexValue = null), r.deleteTexture1(t)
                    }, n.onStageResize(e, i), null == n.mainContext) throw new Error("webGL getContext err!");
                P.__init__(), k.__init__(), It.__init__(), at.__init__(), At.__init__(), Et.__init__(), $.__init__(), Zt.__int__(r), G._init_(r), g.isConchApp && conch.setOnInvalidGLRes(n.onInvalidGLRes)
            }, n.compressAstc = null, n.compressAtc = null, n.compressEtc = null, n.compressEtc1 = null, n.compressPvrtc = null, n.compressS3tc = null, n.compressS3tc_srgb = null, n.mainCanvas = null, n.mainContext = null, n.antialias = !0, n.shaderHighPrecision = !1, n._bg_null = [0, 0, 0, 0], n
        }(),
        yt = function() {
            function r() {}
            return c(r, "t_tl.webgl.WebGLContext"), r.UseProgram = function(t) {
                return r._useProgram !== t && (bt.mainContext.useProgram(t), r._useProgram = t, !0)
            }, r.setDepthTest = function(t, e) {
                e !== r._depthTest && ((r._depthTest = e) ? t.enable(2929) : t.disable(2929))
            }, r.setDepthMask = function(t, e) {
                e !== r._depthMask && (r._depthMask = e, t.depthMask(e))
            }, r.setDepthFunc = function(t, e) {
                e !== r._depthFunc && (r._depthFunc = e, t.depthFunc(e))
            }, r.setBlend = function(t, e) {
                e !== r._blend && ((r._blend = e) ? t.enable(3042) : t.disable(3042))
            }, r.setBlendFunc = function(t, e, i) {
                (e !== r._sFactor || i !== r._dFactor) && (r._sFactor = e, r._dFactor = i, t.blendFunc(e, i))
            }, r.setCullFace = function(t, e) {
                e !== r._cullFace && ((r._cullFace = e) ? t.enable(2884) : t.disable(2884))
            }, r.setFrontFace = function(t, e) {
                e !== r._frontFace && (r._frontFace = e, t.frontFace(e))
            }, r.bindTexture = function(t, e, i) {
                t.bindTexture(e, i), r.curBindTexTarget = e, r.curBindTexValue = i
            }, r.DEPTH_BUFFER_BIT = 256, r.STENCIL_BUFFER_BIT = 1024, r.COLOR_BUFFER_BIT = 16384, r.POINTS = 0, r.LINES = 1, r.LINE_LOOP = 2, r.LINE_STRIP = 3, r.TRIANGLES = 4, r.TRIANGLE_STRIP = 5, r.TRIANGLE_FAN = 6, r.ZERO = 0, r.ONE = 1, r.SRC_COLOR = 768, r.ONE_MINUS_SRC_COLOR = 769, r.SRC_ALPHA = 770, r.ONE_MINUS_SRC_ALPHA = 771, r.DST_ALPHA = 772, r.ONE_MINUS_DST_ALPHA = 773, r.DST_COLOR = 774, r.ONE_MINUS_DST_COLOR = 775, r.SRC_ALPHA_SATURATE = 776, r.FUNC_ADD = 32774, r.BLEND_EQUATION = 32777, r.BLEND_EQUATION_RGB = 32777, r.BLEND_EQUATION_ALPHA = 34877, r.FUNC_SUBTRACT = 32778, r.FUNC_REVERSE_SUBTRACT = 32779, r.BLEND_DST_RGB = 32968, r.BLEND_SRC_RGB = 32969, r.BLEND_DST_ALPHA = 32970, r.BLEND_SRC_ALPHA = 32971, r.CONSTANT_COLOR = 32769, r.ONE_MINUS_CONSTANT_COLOR = 32770, r.CONSTANT_ALPHA = 32771, r.ONE_MINUS_CONSTANT_ALPHA = 32772, r.BLEND_COLOR = 32773, r.ARRAY_BUFFER = 34962, r.ELEMENT_ARRAY_BUFFER = 34963, r.ARRAY_BUFFER_BINDING = 34964, r.ELEMENT_ARRAY_BUFFER_BINDING = 34965, r.STREAM_DRAW = 35040, r.STATIC_DRAW = 35044, r.DYNAMIC_DRAW = 35048, r.BUFFER_SIZE = 34660, r.BUFFER_USAGE = 34661, r.CURRENT_VERTEX_ATTRIB = 34342, r.FRONT = 1028, r.BACK = 1029, r.CULL_FACE = 2884, r.FRONT_AND_BACK = 1032, r.BLEND = 3042, r.DITHER = 3024, r.STENCIL_TEST = 2960, r.DEPTH_TEST = 2929, r.SCISSOR_TEST = 3089, r.POLYGON_OFFSET_FILL = 32823, r.SAMPLE_ALPHA_TO_COVERAGE = 32926, r.SAMPLE_COVERAGE = 32928, r.NO_ERROR = 0, r.INVALID_ENUM = 1280, r.INVALID_VALUE = 1281, r.INVALID_OPERATION = 1282, r.OUT_OF_MEMORY = 1285, r.CW = 2304, r.CCW = 2305, r.LINE_WIDTH = 2849, r.ALIASED_POINT_SIZE_RANGE = 33901, r.ALIASED_LINE_WIDTH_RANGE = 33902, r.CULL_FACE_MODE = 2885, r.FRONT_FACE = 2886, r.DEPTH_RANGE = 2928, r.DEPTH_WRITEMASK = 2930, r.DEPTH_CLEAR_VALUE = 2931, r.DEPTH_FUNC = 2932, r.STENCIL_CLEAR_VALUE = 2961, r.STENCIL_FUNC = 2962, r.STENCIL_FAIL = 2964, r.STENCIL_PASS_DEPTH_FAIL = 2965, r.STENCIL_PASS_DEPTH_PASS = 2966, r.STENCIL_REF = 2967, r.STENCIL_VALUE_MASK = 2963, r.STENCIL_WRITEMASK = 2968, r.STENCIL_BACK_FUNC = 34816, r.STENCIL_BACK_FAIL = 34817, r.STENCIL_BACK_PASS_DEPTH_FAIL = 34818, r.STENCIL_BACK_PASS_DEPTH_PASS = 34819, r.STENCIL_BACK_REF = 36003, r.STENCIL_BACK_VALUE_MASK = 36004, r.STENCIL_BACK_WRITEMASK = 36005, r.VIEWPORT = 2978, r.SCISSOR_BOX = 3088, r.COLOR_CLEAR_VALUE = 3106, r.COLOR_WRITEMASK = 3107, r.UNPACK_ALIGNMENT = 3317, r.PACK_ALIGNMENT = 3333, r.MAX_TEXTURE_SIZE = 3379, r.MAX_VIEWPORT_DIMS = 3386, r.SUBPIXEL_BITS = 3408, r.RED_BITS = 3410, r.GREEN_BITS = 3411, r.BLUE_BITS = 3412, r.ALPHA_BITS = 3413, r.DEPTH_BITS = 3414, r.STENCIL_BITS = 3415, r.POLYGON_OFFSET_UNITS = 10752, r.POLYGON_OFFSET_FACTOR = 32824, r.TEXTURE_BINDING_2D = 32873, r.SAMPLE_BUFFERS = 32936, r.SAMPLES = 32937, r.SAMPLE_COVERAGE_VALUE = 32938, r.SAMPLE_COVERAGE_INVERT = 32939, r.NUM_COMPRESSED_TEXTURE_FORMATS = 34466, r.COMPRESSED_TEXTURE_FORMATS = 34467, r.DONT_CARE = 4352, r.FASTEST = 4353, r.NICEST = 4354, r.GENERATE_MIPMAP_HINT = 33170, r.BYTE = 5120, r.UNSIGNED_BYTE = 5121, r.SHORT = 5122, r.UNSIGNED_SHORT = 5123, r.INT = 5124, r.UNSIGNED_INT = 5125, r.FLOAT = 5126, r.DEPTH_COMPONENT = 6402, r.ALPHA = 6406, r.RGB = 6407, r.RGBA = 6408, r.LUMINANCE = 6409, r.LUMINANCE_ALPHA = 6410, r.UNSIGNED_SHORT_4_4_4_4 = 32819, r.UNSIGNED_SHORT_5_5_5_1 = 32820, r.UNSIGNED_SHORT_5_6_5 = 33635, r.FRAGMENT_SHADER = 35632, r.VERTEX_SHADER = 35633, r.MAX_VERTEX_ATTRIBS = 34921, r.MAX_VERTEX_UNIFORM_VECTORS = 36347, r.MAX_VARYING_VECTORS = 36348, r.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661, r.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660, r.MAX_TEXTURE_IMAGE_UNITS = 34930, r.MAX_FRAGMENT_UNIFORM_VECTORS = 36349, r.SHADER_TYPE = 35663, r.DELETE_STATUS = 35712, r.LINK_STATUS = 35714, r.VALIDATE_STATUS = 35715, r.ATTACHED_SHADERS = 35717, r.ACTIVE_UNIFORMS = 35718, r.ACTIVE_ATTRIBUTES = 35721, r.SHADING_LANGUAGE_VERSION = 35724, r.CURRENT_PROGRAM = 35725, r.NEVER = 512, r.LESS = 513, r.EQUAL = 514, r.LEQUAL = 515, r.GREATER = 516, r.NOTEQUAL = 517, r.GEQUAL = 518, r.ALWAYS = 519, r.KEEP = 7680, r.REPLACE = 7681, r.INCR = 7682, r.DECR = 7683, r.INVERT = 5386, r.INCR_WRAP = 34055, r.DECR_WRAP = 34056, r.VENDOR = 7936, r.RENDERER = 7937, r.VERSION = 7938, r.NEAREST = 9728, r.LINEAR = 9729, r.NEAREST_MIPMAP_NEAREST = 9984, r.LINEAR_MIPMAP_NEAREST = 9985, r.NEAREST_MIPMAP_LINEAR = 9986, r.LINEAR_MIPMAP_LINEAR = 9987, r.TEXTURE_MAG_FILTER = 10240, r.TEXTURE_MIN_FILTER = 10241, r.TEXTURE_WRAP_S = 10242, r.TEXTURE_WRAP_T = 10243, r.TEXTURE_2D = 3553, r.TEXTURE = 5890, r.TEXTURE_CUBE_MAP = 34067, r.TEXTURE_BINDING_CUBE_MAP = 34068, r.TEXTURE_CUBE_MAP_POSITIVE_X = 34069, r.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070, r.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071, r.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072, r.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073, r.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074, r.MAX_CUBE_MAP_TEXTURE_SIZE = 34076, r.TEXTURE0 = 33984, r.TEXTURE1 = 33985, r.TEXTURE2 = 33986, r.TEXTURE3 = 33987, r.TEXTURE4 = 33988, r.TEXTURE5 = 33989, r.TEXTURE6 = 33990, r.TEXTURE7 = 33991, r.TEXTURE8 = 33992, r.TEXTURE9 = 33993, r.TEXTURE10 = 33994, r.TEXTURE11 = 33995, r.TEXTURE12 = 33996, r.TEXTURE13 = 33997, r.TEXTURE14 = 33998, r.TEXTURE15 = 33999, r.TEXTURE16 = 34e3, r.TEXTURE17 = 34001, r.TEXTURE18 = 34002, r.TEXTURE19 = 34003, r.TEXTURE20 = 34004, r.TEXTURE21 = 34005, r.TEXTURE22 = 34006, r.TEXTURE23 = 34007, r.TEXTURE24 = 34008, r.TEXTURE25 = 34009, r.TEXTURE26 = 34010, r.TEXTURE27 = 34011, r.TEXTURE28 = 34012, r.TEXTURE29 = 34013, r.TEXTURE30 = 34014, r.TEXTURE31 = 34015, r.ACTIVE_TEXTURE = 34016, r.REPEAT = 10497, r.CLAMP_TO_EDGE = 33071, r.MIRRORED_REPEAT = 33648, r.FLOAT_VEC2 = 35664, r.FLOAT_VEC3 = 35665, r.FLOAT_VEC4 = 35666, r.INT_VEC2 = 35667, r.INT_VEC3 = 35668, r.INT_VEC4 = 35669, r.BOOL = 35670, r.BOOL_VEC2 = 35671, r.BOOL_VEC3 = 35672, r.BOOL_VEC4 = 35673, r.FLOAT_MAT2 = 35674, r.FLOAT_MAT3 = 35675, r.FLOAT_MAT4 = 35676, r.SAMPLER_2D = 35678, r.SAMPLER_CUBE = 35680, r.VERTEX_ATTRIB_ARRAY_ENABLED = 34338, r.VERTEX_ATTRIB_ARRAY_SIZE = 34339, r.VERTEX_ATTRIB_ARRAY_STRIDE = 34340, r.VERTEX_ATTRIB_ARRAY_TYPE = 34341, r.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922, r.VERTEX_ATTRIB_ARRAY_POINTER = 34373, r.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975, r.COMPILE_STATUS = 35713, r.LOW_FLOAT = 36336, r.MEDIUM_FLOAT = 36337, r.HIGH_FLOAT = 36338, r.LOW_INT = 36339, r.MEDIUM_INT = 36340, r.HIGH_INT = 36341, r.FRAMEBUFFER = 36160, r.RENDERBUFFER = 36161, r.RGBA4 = 32854, r.RGB5_A1 = 32855, r.RGB565 = 36194, r.DEPTH_COMPONENT16 = 33189, r.STENCIL_INDEX = 6401, r.STENCIL_INDEX8 = 36168, r.DEPTH_STENCIL = 34041, r.RENDERBUFFER_WIDTH = 36162, r.RENDERBUFFER_HEIGHT = 36163, r.RENDERBUFFER_INTERNAL_FORMAT = 36164, r.RENDERBUFFER_RED_SIZE = 36176, r.RENDERBUFFER_GREEN_SIZE = 36177, r.RENDERBUFFER_BLUE_SIZE = 36178, r.RENDERBUFFER_ALPHA_SIZE = 36179, r.RENDERBUFFER_DEPTH_SIZE = 36180, r.RENDERBUFFER_STENCIL_SIZE = 36181, r.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048, r.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049, r.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050, r.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051, r.COLOR_ATTACHMENT0 = 36064, r.DEPTH_ATTACHMENT = 36096, r.STENCIL_ATTACHMENT = 36128, r.DEPTH_STENCIL_ATTACHMENT = 33306, r.NONE = 0, r.FRAMEBUFFER_COMPLETE = 36053, r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054, r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055, r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057, r.FRAMEBUFFER_UNSUPPORTED = 36061, r.FRAMEBUFFER_BINDING = 36006, r.RENDERBUFFER_BINDING = 36007, r.MAX_RENDERBUFFER_SIZE = 34024, r.INVALID_FRAMEBUFFER_OPERATION = 1286, r.UNPACK_FLIP_Y_WEBGL = 37440, r.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441, r.CONTEXT_LOST_WEBGL = 37442, r.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443, r.BROWSER_DEFAULT_WEBGL = 37444, r._useProgram = null, r._depthTest = !0, r._depthMask = !0, r._blend = !1, r._cullFace = !1, r.curBindTexTarget = null, r.curBindTexValue = null, n(r, ["_depthFunc", function() {
                return this._depthFunc = 513
            }, "_sFactor", function() {
                return this._sFactor = 1
            }, "_dFactor", function() {
                return this._dFactor = 0
            }, "_frontFace", function() {
                return this._frontFace = 2305
            }]), r
        }(),
        Tt = function(t) {
            function e() {
                e.__super.call(this)
            }
            c(e, "t_tl.webgl.display.GraphicsGL", s);
            var i = e.prototype;
            return i.setShader = function(t) {
                this._saveToCmd(g.context._setShader, [t])
            }, i.setIBVB = function(t, e, i, r, s, a) {
                this._saveToCmd(g.context._setIBVB, [t, e, i, r, s, a])
            }, i.drawParticle = function(t, e, i) {
                var r = y.createParticleTemplate2D(i);
                r.x = t, r.y = e, this._saveToCmd(g.context._drawParticle, [r])
            }, e
        }(),
        At = function(t) {
            var i;

            function U(t) {
                this._x = 0, this._y = 0, this._id = ++U._COUNT, this._path = null, this._drawCount = 1, this._maxNumEle = 0, this._clear = !1, this._isMain = !1, this._atlasResourceChange = 0, this._submits = null, this._curSubmit = null, this._ib = null, this._vb = null, this._nBlendType = 0, this._saveMark = null, this._shader2D = null, this.meshlist = [], this.mId = -1, this.mHaveKey = !1, this.mHaveLineKey = !1, this.mX = 0, this.mY = 0, U.__super.call(this), this._width = 99999999, this._height = 99999999, this._clipRect = U.MAXCLIPRECT, this.mOutPoint, this._canvas = t, U._contextcount++, g.isFlash ? (this._ib = $t.create(35044), pt.fillIBQuadrangle(this._ib, 16)) : this._ib = $t.QuadrangleIB, this.clear()
            }
            c(U, "t_tl.webgl.canvas.WebGLContext2D", r);
            var e = U.prototype;
            return e.setIsMainContext = function() {
                this._isMain = !0
            }, e.clearBG = function(t, e, i, r) {
                var s = bt.mainContext;
                s.clearColor(t, e, i, r), s.clear(16384)
            }, e._getSubmits = function() {
                return this._submits
            }, e._releaseMem = function() {
                if (this._submits) {
                    this._curMat.destroy(), this._curMat = null, this._shader2D.destroy(), this._shader2D = null;
                    for (var t = 0, e = this._submits._length; t < e; t++) this._submits[t].releaseRender();
                    this._submits.length = 0, this._submits._length = 0, this._submits = null, this._curSubmit = null, this._path && this._path.recover(), this._path = null, this._other && (this._other.font = null), this._save = null, this._vb && (this._vb.releaseResource(), this._vb.destroy(), this._vb.destory(), this._vb = null)
                }
            }, e.destroy = function() {
                --U._contextcount, this.sprite = null, this._releaseMem(), this._targets && this._targets.destroy(), this._targets = null, this._canvas = null, this._ib && this._ib != $t.QuadrangleIB && this._ib.releaseResource()
            }, e.clear = function() {
                this._submits || (this._other = i.DEFAULT, this._curMat = S.create(), this._vb = Jt.create(-1), this._submits = [], this._save = [Q.Create(this)], this._save.length = 10, this._shader2D = new $, this._triangleMesh = Ft.getAMesh()), this._vb.clear(), this._targets && (this._targets.repaint = !0), this._other = i.DEFAULT, this._clear = !0, this._repaint = !1, this._drawCount = 1, this._renderKey = 0, this._other.lineWidth = this._shader2D.ALPHA = 1, this._nBlendType = 0, this._clipRect = U.MAXCLIPRECT, this._curSubmit = at.RENDERBASE, this._shader2D.glTexture = null, this._shader2D.fillStyle = this._shader2D.strokeStyle = W.DEFAULT;
                for (var t = 0, e = this._submits._length; t < e; t++) this._submits[t].releaseRender();
                this._submits._length = 0, this._curMat.identity(), this._other.clear(), this._saveMark = this._save[0], this._save._length = 1
            }, e.size = function(t, e) {
                if (this._width != t || this._height != e)
                    if (0 == t || 0 == e) {
                        0 != this._vb._byteLength && (this._width = t, this._height = e, this._vb.clear(), this._vb.upload());
                        for (var i = 0, r = this._submits._length; i < r; i++) this._submits[i].releaseRender();
                        this._submits.length = 0, this._submits._length = 0, this._curSubmit = null, this._path && this._path.recover(), this._path = null, this.sprite = null, this._targets && this._targets.destroy(), this._targets = null
                    } else this._width = t, this._height = e, this._targets && this._targets.size(t, e), this._canvas.memorySize -= this._canvas.memorySize;
                0 === t && 0 === e && this._releaseMem()
            }, e._getTransformMatrix = function() {
                return this._curMat
            }, e.translate = function(t, e) {
                0 === t && 0 === e || (q.save(this), this._curMat.bTransform && (Z.save(this), this._curMat.transformPointN(w.TEMP.setTo(t, e)), t = w.TEMP.x, e = w.TEMP.y), this._x += t, this._y += e)
            }, e.save = function() {
                this._save[this._save._length++] = Q.Create(this)
            }, e.restore = function() {
                var t = this._save._length;
                if (!(t < 1))
                    for (var e = t - 1; 0 <= e; e--) {
                        var i = this._save[e];
                        if (i.restore(this), i.isSaveMark()) return void(this._save._length = e)
                    }
            }, e._fillText = function(t, e, i, r, s, a, n, h, l, o) {
                void 0 === o && (o = 0);
                var u = this._shader2D,
                    _ = this._curSubmit.shaderValue,
                    c = s ? dt.create(s) : this._other.font;
                if (k.enabled) u.ALPHA !== _.ALPHA && (u.glTexture = null), ft.drawText(this, t, e, this._curMat, c, l || this._other.textAlign, a, n, h, i, r, o);
                else {
                    this._shader2D.defines.getValue();
                    var f = a ? d.create(a)._color : u.colorAdd;
                    u.ALPHA === _.ALPHA && f === u.colorAdd && _.colorAdd === u.colorAdd || (u.glTexture = null, u.colorAdd = f), ft.drawText(this, t, e, this._curMat, c, l || this._other.textAlign, a, n, h, i, r, o)
                }
            }, e.fillWords = function(t, e, i, r, s, a) {
                this._fillText(null, t, e, i, r, s, null, -1, null, a)
            }, e.fillBorderWords = function(t, e, i, r, s, a, n) {
                this._fillBorderText(null, t, e, i, r, s, a, n, null)
            }, e.fillText = function(t, e, i, r, s, a) {
                this._fillText(t, null, e, i, r, s, null, -1, a)
            }, e.strokeText = function(t, e, i, r, s, a, n) {
                this._fillText(t, null, e, i, r, null, s, a || 1, n)
            }, e.fillBorderText = function(t, e, i, r, s, a, n, h) {
                this._fillBorderText(t, null, e, i, r, s, a, n, h)
            }, e._fillBorderText = function(t, e, i, r, s, a, n, h, l) {
                if (!k.enabled) return this._fillText(t, e, i, r, s, null, n, h || 1, l), void this._fillText(t, e, i, r, s, a, null, -1, l);
                var o = this._shader2D,
                    u = this._curSubmit.shaderValue;
                o.ALPHA !== u.ALPHA && (o.glTexture = null);
                var _ = s ? (U._fontTemp.setFont(s), U._fontTemp) : this._other.font;
                ft.drawText(this, t, e, this._curMat, _, l || this._other.textAlign, a, n, h || 1, i, r, 0)
            }, e.fillRect = function(t, e, i, r, s) {
                var a = this._vb;
                if (pt.fillRectImgVb(a, this._clipRect, t, e, i, r, F.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
                    this._renderKey = 0;
                    var n = this._shader2D.fillStyle;
                    s && (this._shader2D.fillStyle = W.create(s));
                    var h = this._shader2D,
                        l = this._curSubmit.shaderValue;
                    if (h.fillStyle !== l.fillStyle || h.ALPHA !== l.ALPHA) {
                        h.glTexture = null;
                        var o = this._curSubmit = at.createSubmit(this, this._ib, a, (a._byteLength - 64) / 32 * 3, Et.create(2, 0));
                        o.shaderValue.color = h.fillStyle._color._color, o.shaderValue.ALPHA = h.ALPHA, this._submits[this._submits._length++] = o
                    }
                    this._curSubmit._numEle += 6, this._shader2D.fillStyle = n
                }
            }, e.fillTexture = function(t, e, i, r, s, a, n, h) {
                if (t.loaded && t.bitmap && t.source) {
                    var l = this._vb,
                        o = t.bitmap.width,
                        u = t.bitmap.height,
                        _ = t.uv,
                        c = n.x % t.width,
                        f = n.y % t.height;
                    if (o != h.w || u != h.h) {
                        if (!h.w && !h.h) switch (h.oy = h.ox = 0, a) {
                            case "repeat":
                                h.width = r, h.height = s;
                                break;
                            case "repeat-x":
                                h.width = r, f < 0 ? t.height + f > s ? h.height = s : h.height = t.height + f : (h.oy = f, t.height + f > s ? h.height = s - f : h.height = t.height);
                                break;
                            case "repeat-y":
                                c < 0 ? t.width + c > r ? h.width = r : h.width = t.width + c : (h.ox = c, t.width + c > r ? h.width = r - c : h.width = t.width), h.height = s;
                                break;
                            default:
                                h.width = r, h.height = s
                        }
                        h.w = o, h.h = u, h.uv = [0, 0, h.width / o, 0, h.width / o, h.height / u, 0, h.height / u]
                    }
                    if (e += h.ox, i += h.oy, c -= h.ox, f -= h.oy, pt.fillRectImgVb(l, this._clipRect, e, i, h.width, h.height, h.uv, this._curMat, this._x, this._y, 0, 0)) {
                        this._renderKey = 0;
                        var d = Dt.create(this, this._ib, l, (l._byteLength - 64) / 32 * 3, Et.create(256, 0)),
                            m = (this._submits[this._submits._length++] = d).shaderValue;
                        m.textureHost = t;
                        var p = _[0] * o,
                            g = _[1] * u,
                            v = (_[2] - _[0]) * o,
                            x = (_[5] - _[3]) * u,
                            b = -c / o,
                            y = -f / u;
                        m.u_TexRange[0] = p / o, m.u_TexRange[1] = v / o, m.u_TexRange[2] = g / u, m.u_TexRange[3] = x / u, m.u_offset[0] = b, m.u_offset[1] = y, k.enabled && !this._isMain && d.addTexture(t, (l._byteLength >> 2) - 16), (this._curSubmit = d)._renderType = 10017, d._numEle += 6
                    }
                } else this.sprite && T.timer.callLater(this, this._repaintSprite)
            }, e.setShader = function(t) {
                Y.save(this, 1048576, this._shader2D, !0), this._shader2D.shader = t
            }, e.setFilters = function(t) {
                Y.save(this, 2097152, this._shader2D, !0), this._shader2D.filters = t, this._curSubmit = at.RENDERBASE, this._renderKey = 0, this._drawCount++
            }, e.drawTexture = function(t, e, i, r, s, a, n) {
                this._drawTextureM(t, e, i, r, s, a, n, null, 1)
            }, e.addTextureVb = function(t, e, i) {
                var r = this._curSubmit._vb || this._vb,
                    s = r._byteLength >> 2;
                r.byteLength = s + 16 << 2;
                for (var a = r.getFloat32Array(), n = 0; n < 16; n += 4) a[s++] = t[n] + e, a[s++] = t[n + 1] + i, a[s++] = t[n + 2], a[s++] = t[n + 3];
                this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle), r._upload = !0
            }, e.willDrawTexture = function(t, e) {
                if (!(t.loaded && t.bitmap && t.source)) return this.sprite && T.timer.callLater(this, this._repaintSprite), 0;
                var i = t.bitmap,
                    r = i.id + this._shader2D.ALPHA * e + 10016;
                if (r == this._renderKey) return r;
                var s = this._shader2D,
                    a = s.ALPHA,
                    n = this._curSubmit.shaderValue;
                s.ALPHA *= e, this._renderKey = r, this._drawCount++, s.glTexture = i;
                var h = this._vb,
                    l = null,
                    o = h._byteLength / 32 * 3;
                return l = Dt.create(this, this._ib, h, o, Et.create(1, 0)), (this._submits[this._submits._length++] = l).shaderValue.textureHost = t, l._renderType = 10016, l._preIsSameTextureShader = 10016 === this._curSubmit._renderType && s.ALPHA === n.ALPHA, this._curSubmit = l, s.ALPHA = a, r
            }, e.drawTextures = function(t, e, i, r) {
                if (t.loaded && t.bitmap && t.source) {
                    var s = this._clipRect;
                    if (this._clipRect = U.MAXCLIPRECT, this._drawTextureM(t, e[0], e[1], t.width, t.height, i, r, null, 1)) {
                        if (this._clipRect = s, C.drawCall++, !(e.length < 4)) {
                            for (var a = this._curSubmit._vb || this._vb, n = this._curMat.a, h = this._curMat.d, l = 2, o = e.length; l < o; l += 2) pt.copyPreImgVb(a, (e[l] - e[l - 2]) * n, (e[l + 1] - e[l - 1]) * h), this._curSubmit._numEle += 6;
                            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle)
                        }
                    } else alert("drawTextures err")
                } else this.sprite && T.timer.callLater(this, this._repaintSprite)
            }, e._drawTextureM = function(t, e, i, r, s, a, n, h, l) {
                if (!t.loaded || !t.source) return this.sprite && T.timer.callLater(this, this._repaintSprite), !1;
                var o = this._curSubmit._vb || this._vb,
                    u = t.bitmap;
                e += a, i += n, this._drawCount++;
                var _ = u.id + this._shader2D.ALPHA * l + 10016;
                if (_ != this._renderKey) {
                    this._renderKey = _;
                    var c = this._curSubmit.shaderValue,
                        f = this._shader2D,
                        d = f.ALPHA;
                    f.ALPHA *= l, f.glTexture = u;
                    var m = this._vb,
                        p = null,
                        g = m._byteLength / 32 * 3;
                    p = Dt.create(this, this._ib, m, g, Et.create(1, 0)), (this._submits[this._submits._length++] = p).shaderValue.textureHost = t, p._renderType = 10016, p._preIsSameTextureShader = 10016 === this._curSubmit._renderType && f.ALPHA === c.ALPHA, this._curSubmit = p, o = this._curSubmit._vb || this._vb, f.ALPHA = d
                }
                return !!pt.fillRectImgVb(o, this._clipRect, e, i, r || t.width, s || t.height, t.uv, h || this._curMat, this._x, this._y, 0, 0) && (k.enabled && !this._isMain && this._curSubmit.addTexture(t, (o._byteLength >> 2) - 16), this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle), !0)
            }, e._repaintSprite = function() {
                this.sprite && this.sprite.repaint()
            }, e._drawText = function(t, e, i, r, s, a, n, h, l, o) {
                var u = t.bitmap;
                this._drawCount++;
                var _ = u.id + this._shader2D.ALPHA + 10016;
                if (_ != this._renderKey) {
                    this._renderKey = _;
                    var c = this._curSubmit.shaderValue,
                        f = this._shader2D;
                    f.glTexture = u;
                    var d = this._vb,
                        m = null,
                        p = d._byteLength / 32 * 3;
                    (m = k.enabled ? Dt.create(this, this._ib, d, p, Et.create(1, 0)) : Dt.create(this, this._ib, d, p, qt.create()))._preIsSameTextureShader = 10016 === this._curSubmit._renderType && f.ALPHA === c.ALPHA, (this._submits[this._submits._length++] = m).shaderValue.textureHost = t, m._renderType = 10016, this._curSubmit = m
                }
                t.active();
                var g = this._curSubmit._vb || this._vb;
                pt.fillRectImgVb(g, this._clipRect, e + n, i + h, r || t.width, s || t.height, t.uv, a || this._curMat, this._x, this._y, l, o, !0) && (k.enabled && !this._isMain && this._curSubmit.addTexture(t, (g._byteLength >> 2) - 16), this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle))
            }, e.drawTextureWithTransform = function(t, e, i, r, s, a, n, h, l) {
                if (a) {
                    var o = this._curMat,
                        u = this._x,
                        _ = this._y;
                    (0 !== n || 0 !== h) && (this._x = n * o.a + h * o.c, this._y = h * o.d + n * o.b), a && o.bTransform ? (S.mul(a, o, U._tmpMatrix), (a = U._tmpMatrix)._checkTransform()) : (this._x += o.tx, this._y += o.ty), this._drawTextureM(t, e, i, r, s, 0, 0, a, l), this._x = u, this._y = _
                } else this._drawTextureM(t, e, i, r, s, n, h, null, l)
            }, e.fillQuadrangle = function(t, e, i, r, s) {
                var a = this._curSubmit,
                    n = this._vb,
                    h = this._shader2D,
                    l = a.shaderValue;
                if (this._renderKey = 0, t.bitmap) {
                    var o = t.bitmap;
                    h.glTexture == o && h.ALPHA === l.ALPHA || (h.glTexture = o, (a = this._curSubmit = at.createSubmit(this, this._ib, n, n._byteLength / 32 * 3, Et.create(1, 0))).shaderValue.glTexture = o, this._submits[this._submits._length++] = a), pt.fillQuadrangleImgVb(n, e, i, r, t.uv, s || this._curMat, this._x, this._y)
                } else a.shaderValue.fillStyle && a.shaderValue.fillStyle.equal(t) && h.ALPHA === l.ALPHA || (h.glTexture = null, (a = this._curSubmit = at.createSubmit(this, this._ib, n, n._byteLength / 32 * 3, Et.create(2, 0))).shaderValue.defines.add(2), a.shaderValue.fillStyle = W.create(t), this._submits[this._submits._length++] = a), pt.fillQuadrangleImgVb(n, e, i, r, F.DEF_UV, s || this._curMat, this._x, this._y);
                a._numEle += 6
            }, e.drawTexture2 = function(t, e, i, r, s, a, n, h) {
                if (0 != a) {
                    var l = this._curMat;
                    if (this._x = t * l.a + e * l.c, this._y = e * l.d + t * l.b, s && (l.bTransform || s.bTransform ? (S.mul(s, l, U._tmpMatrix), s = U._tmpMatrix) : (this._x += s.tx + l.tx, this._y += s.ty + l.ty, s = S.EMPTY)), 1 !== a || n) {
                        var o = this._shader2D.ALPHA,
                            u = this._nBlendType;
                        this._shader2D.ALPHA = a, n && (this._nBlendType = G.TOINT(n)), this._drawTextureM(h[0], h[1] - i, h[2] - r, h[3], h[4], 0, 0, s, 1), this._shader2D.ALPHA = o, this._nBlendType = u
                    } else this._drawTextureM(h[0], h[1] - i, h[2] - r, h[3], h[4], 0, 0, s, 1);
                    this._x = this._y = 0
                }
            }, e.drawCanvas = function(t, e, i, r, s) {
                var a = t.context;
                if (this._renderKey = 0, a._targets) this._submits[this._submits._length++] = Pt.create(a, 0, null), this._curSubmit = at.RENDERBASE, a._targets.drawTo(this, e, i, r, s);
                else {
                    var n = this._submits[this._submits._length++] = Pt.create(a, this._shader2D.ALPHA, this._shader2D.filters),
                        h = r / t.width,
                        l = s / t.height,
                        o = n._matrix;
                    this._curMat.copyTo(o), 1 != h && 1 != l && o.scale(h, l);
                    var u = o.tx,
                        _ = o.ty;
                    o.tx = o.ty = 0, o.transformPoint(w.TEMP.setTo(e, i)), o.translate(w.TEMP.x + u, w.TEMP.y + _), this._curSubmit = at.RENDERBASE
                }
                A.showCanvasMark && (this.save(), this.lineWidth = 4, this.strokeStyle = a._targets ? "yellow" : "green", this.strokeRect(e - 1, i - 1, r + 2, s + 2, 1), this.strokeRect(e, i, r, s, 1), this.restore())
            }, e.drawTarget = function(t, e, i, r, s, a, n, h, l, o) {
                void 0 === o && (o = -1);
                var u = this._vb;
                if (pt.fillRectImgVb(u, this._clipRect, e, i, r, s, l || F.DEF_UV, a || this._curMat, this._x, this._y, 0, 0)) {
                    this._renderKey = 0, this._shader2D.glTexture = null;
                    this._curSubmit.shaderValue;
                    var _ = this._curSubmit = _t.create(this, this._ib, u, (u._byteLength - 64) / 32 * 3, h, n);
                    _.blendType = -1 == o ? this._nBlendType : o, _.scope = t, this._submits[this._submits._length++] = _, this._curSubmit._numEle += 6
                }
            }, e.mixRGBandAlpha = function(t) {
                return this._mixRGBandAlpha(t, this._shader2D.ALPHA)
            }, e._mixRGBandAlpha = function(t, e) {
                var i = (4278190080 & t) >>> 24;
                return 0 != i ? i *= e : i = 255 * e, 16777215 & t | i << 24
            }, e.drawTriangles = function(t, e, i, r, s, a, n, h, l, o) {
                if (!t.loaded || !t.source) return this.sprite && T.timer.callLater(this, this._repaintSprite), !1;
                this._drawCount++;
                t.bitmap;
                var u = this._mixRGBandAlpha(4294967295, h),
                    _ = (r.length, a.length);
                this._renderKey = -1;
                var c = this._curSubmit = Dt.create(this, this._triangleMesh.getIBR(), this._triangleMesh.getVBR(), this._triangleMesh.indexNum, Et.create(1, 0));
                return c.shaderValue.textureHost = t, c._renderType = 10016, this._submits[this._submits._length++] = c, n ? (U._tmpMatrix.a = n.a, U._tmpMatrix.b = n.b, U._tmpMatrix.c = n.c, U._tmpMatrix.d = n.d, U._tmpMatrix.tx = n.tx + e, U._tmpMatrix.ty = n.ty + i, S.mul(U._tmpMatrix, this._curMat, U._tmpMatrix)) : (U._tmpMatrix.a = this._curMat.a, U._tmpMatrix.b = this._curMat.b, U._tmpMatrix.c = this._curMat.c, U._tmpMatrix.d = this._curMat.d, U._tmpMatrix.tx = this._curMat.tx + e, U._tmpMatrix.ty = this._curMat.ty + i), this._triangleMesh.addData(r, s, a, U._tmpMatrix, u, this), this._curSubmit._numEle += _, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle), !0
            }, e.transform = function(t, e, i, r, s, a) {
                Z.save(this), S.mul(S.TEMP.setTo(t, e, i, r, s, a), this._curMat, this._curMat), this._curMat._checkTransform()
            }, e.setTransformByMatrix = function(t) {
                t.copyTo(this._curMat)
            }, e.transformByMatrix = function(t) {
                Z.save(this), S.mul(t, this._curMat, this._curMat), this._curMat._checkTransform()
            }, e.rotate = function(t) {
                Z.save(this), this._curMat.rotateEx(t)
            }, e.scale = function(t, e) {
                Z.save(this), this._curMat.scaleEx(t, e)
            }, e.clipRect = function(t, e, i, r) {
                if (0 != this._curMat.b || 0 != this._curMat.c) {
                    this._renderKey = 0;
                    var s = ut.create(4);
                    this.addRenderObject(s);
                    var a = this._vb,
                        n = a._byteLength >> 2;
                    if (pt.fillRectImgVb(a, null, t, e, i, r, F.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
                        this._shader2D.glTexture = null;
                        var h = this._curSubmit = at.createSubmit(this, this._ib, a, (a._byteLength - 64) / 32 * 3, Et.create(2, 0));
                        h.shaderValue.ALPHA = 1, this._submits[this._submits._length++] = h, this._curSubmit._numEle += 6
                    } else alert("clipRect calc stencil rect error");
                    var l = ut.create(5);
                    this.addRenderObject(l);
                    var o = a.getFloat32Array(),
                        u = Math.min(Math.min(Math.min(o[n + 0], o[n + 4]), o[n + 8]), o[n + 12]),
                        _ = Math.max(Math.max(Math.max(o[n + 0], o[n + 4]), o[n + 8]), o[n + 12]),
                        c = Math.min(Math.min(Math.min(o[n + 1], o[n + 5]), o[n + 9]), o[n + 13]),
                        f = Math.max(Math.max(Math.max(o[n + 1], o[n + 5]), o[n + 9]), o[n + 13]);
                    K.save(this, l, t, e, i, r, u, c, _ - u, f - c), this._curSubmit = at.RENDERBASE
                } else {
                    i *= this._curMat.a, r *= this._curMat.d;
                    var d = w.TEMP;
                    this._curMat.transformPoint(d.setTo(t, e)), i < 0 && (d.x = d.x + i, i = -i), r < 0 && (d.y = d.y + r, r = -r), this._renderKey = 0;
                    var m = this._curSubmit = ot.create(this);
                    (this._submits[this._submits._length++] = m).submitIndex = this._submits._length, m.submitLength = 9999999, X.save(this, m);
                    var p = this._clipRect,
                        g = p.x,
                        v = p.y,
                        x = d.x + i,
                        b = d.y + r;
                    g < d.x && (p.x = d.x), v < d.y && (p.y = d.y), p.width = Math.min(x, g + p.width) - p.x, p.height = Math.min(b, v + p.height) - p.y, this._shader2D.glTexture = null, m.clipRect.copyFrom(p), this._curSubmit = at.RENDERBASE
                }
            }, e.setIBVB = function(t, e, i, r, s, a, n, h, l, o, u) {
                if (void 0 === l && (l = 0), void 0 === o && (o = 0), void 0 === u && (u = 0), null === i) {
                    if (g.isFlash) {
                        var _ = r;
                        _._selfIB || (_._selfIB = $t.create(35044)), _._selfIB.clear(), i = _._selfIB
                    } else i = this._ib;
                    pt.expandIBQuadrangle(i, r._byteLength / (4 * r.vertexStride * 4))
                }
                if (!h || !n) throw Error("setIBVB must input:shader shaderValues");
                var c = lt.create(this, r, i, s, n, h, l, o, u);
                a || (a = S.EMPTY), a.translate(t, e), S.mul(a, this._curMat, c._mat), a.translate(-t, -e), this._submits[this._submits._length++] = c, this._curSubmit = at.RENDERBASE, this._renderKey = 0
            }, e.addRenderObject = function(t) {
                this._submits[this._submits._length++] = t
            }, e.fillTrangles = function(t, e, i, r, s) {
                var a = this._curSubmit,
                    n = this._vb,
                    h = this._shader2D,
                    l = a.shaderValue,
                    o = r.length >> 4,
                    u = t.bitmap;
                this._renderKey = 0, h.glTexture == u && h.ALPHA === l.ALPHA || ((a = this._curSubmit = at.createSubmit(this, this._ib, n, n._byteLength / 32 * 3, Et.create(1, 0))).shaderValue.textureHost = t, this._submits[this._submits._length++] = a), pt.fillTranglesVB(n, e, i, r, s || this._curMat, this._x, this._y), a._numEle += 6 * o
            }, e.submitElement = function(t, e) {
                var i = this._submits;
                for (e < 0 && (e = i._length); t < e;) t += i[t].renderSubmit()
            }, e.finish = function() {
                bt.mainContext.finish()
            }, e.flush = function() {
                var t = Math.max(this._vb._byteLength / 64, this._maxNumEle / 6) + 8;
                if (t > this._ib.bufferLength / 12 && pt.expandIBQuadrangle(this._ib, t), !this._isMain && k.enabled && k._atlasRestore > this._atlasResourceChange) {
                    this._atlasResourceChange = k._atlasRestore;
                    for (var e = this._submits, i = 0, r = e._length; i < r; i++) {
                        var s = e[i];
                        10016 === s.getRenderType() && s.checkTexture()
                    }
                }
                this.submitElement(0, this._submits._length), this._path && this._path.reset(), et.instance && et.getInstance().reset();
                var a;
                for (i = 0, a = this.meshlist.length; i < a; i++) {
                    var n = this.meshlist[i];
                    n.canReuse ? n.releaseMesh() : n.destroy()
                }
                return this.meshlist.length = 0, this._curSubmit = at.RENDERBASE, this._renderKey = 0, this._triangleMesh = Ft.getAMesh(), this.meshlist.push(this._triangleMesh), this._submits._length
            }, e.setPathId = function(t) {
                if (this.mId = t, -1 != this.mId) {
                    this.mHaveKey = !1;
                    var e = N.getInstance();
                    e.shapeDic[this.mId] && (this.mHaveKey = !0), this.mHaveLineKey = !1, e.shapeLineDic[this.mId] && (this.mHaveLineKey = !0)
                }
            }, e.movePath = function(t, e) {
                var i = t,
                    r = e;
                t = this._curMat.a * i + this._curMat.c * r + this._curMat.tx, e = this._curMat.b * i + this._curMat.d * r + this._curMat.ty, this.mX += t, this.mY += e
            }, e.beginPath = function() {
                var t = this._getPath();
                t.tempArray.length = 0, t.closePath = !1, this.mX = 0, this.mY = 0
            }, e.closePath = function() {
                this._path.closePath = !0
            }, e.fill = function(t) {
                void 0 === t && (t = !1);
                var e = this._getPath();
                this.drawPoly(0, 0, e.tempArray, this.fillStyle._color.numColor, 0, 0, t)
            }, e.stroke = function() {
                var t = this._getPath();
                if (0 < this.lineWidth) {
                    if (-1 == this.mId) t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor);
                    else if (this.mHaveLineKey) {
                        var e = N.getInstance().shapeLineDic[this.mId];
                        e.rebuild(t.tempArray), t.setGeomtry(e)
                    } else N.getInstance().addLine(this.mId, t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor));
                    t.update();
                    var i = [this.mX, this.mY],
                        r = at.createShape(this, t.ib, t.vb, t.count, t.offset, Et.create(4, 0));
                    r.shaderValue.ALPHA = this._shader2D.ALPHA, r.shaderValue.u_pos = i, r.shaderValue.u_mmat2 = vt.TEMPMAT4_ARRAY, this._submits[this._submits._length++] = r, this._renderKey = -1
                }
            }, e.line = function(t, e, i, r, s, a) {
                var n = this._curSubmit,
                    h = this._vb;
                if (pt.fillLineVb(h, this._clipRect, t, e, i, r, s, a)) {
                    this._renderKey = 0;
                    var l = this._shader2D,
                        o = n.shaderValue;
                    l.strokeStyle === o.strokeStyle && l.ALPHA === o.ALPHA || (l.glTexture = null, (n = this._curSubmit = at.createSubmit(this, this._ib, h, (h._byteLength - 64) / 32 * 3, Et.create(2, 0))).shaderValue.strokeStyle = l.strokeStyle, n.shaderValue.mainID = 2, n.shaderValue.ALPHA = l.ALPHA, this._submits[this._submits._length++] = n), n._numEle += 6
                }
            }, e.moveTo = function(t, e, i) {
                void 0 === i && (i = !0);
                var r = this._getPath();
                if (i) {
                    var s = t,
                        a = e;
                    t = this._curMat.a * s + this._curMat.c * a, e = this._curMat.b * s + this._curMat.d * a
                }
                r.addPoint(t, e)
            }, e.lineTo = function(t, e, i) {
                void 0 === i && (i = !0);
                var r = this._getPath();
                if (i) {
                    var s = t,
                        a = e;
                    t = this._curMat.a * s + this._curMat.c * a, e = this._curMat.b * s + this._curMat.d * a
                }
                r.addPoint(t, e)
            }, e.drawCurves = function(t, e, i) {
                this.setPathId(-1), this.beginPath(), this.strokeStyle = i[3], this.lineWidth = i[4];
                var r = i[2];
                t += i[0], e += i[1], this.movePath(t, e), this.moveTo(r[0], r[1]);
                for (var s = 2, a = r.length; s < a;) this.quadraticCurveTo(r[s++], r[s++], r[s++], r[s++]);
                this.stroke()
            }, e.arcTo = function(t, e, i, r, s) {
                if (-1 == this.mId || !this.mHaveKey) {
                    var a = 0,
                        n = 0,
                        h = 0,
                        l = this._getPath();
                    this._curMat.copyTo(U._tmpMatrix), U._tmpMatrix.tx = U._tmpMatrix.ty = 0, U._tempPoint.setTo(l.getEndPointX(), l.getEndPointY()), U._tmpMatrix.invertTransformPoint(U._tempPoint);
                    var o = U._tempPoint.x - t,
                        u = U._tempPoint.y - e,
                        _ = Math.sqrt(o * o + u * u);
                    if (!(_ <= 1e-6)) {
                        var c = o / _,
                            f = u / _,
                            d = i - t,
                            m = r - e,
                            p = d * d + m * m,
                            g = Math.sqrt(p);
                        if (!(g <= 1e-6)) {
                            var v = d / g,
                                x = m / g,
                                b = c + v,
                                y = f + x,
                                T = Math.sqrt(b * b + y * y);
                            if (!(T <= 1e-6)) {
                                var A = b / T,
                                    E = y / T,
                                    S = Math.acos(A * c + E * f),
                                    w = Math.PI / 2 - S,
                                    R = (_ = s / Math.tan(w)) * c + t,
                                    I = _ * f + e,
                                    M = Math.sqrt(_ * _ + s * s),
                                    C = t + A * M,
                                    L = e + E * M,
                                    P = 0,
                                    D = 0;
                                if (0 <= c * x - f * v) {
                                    var F = 2 * w / U.SEGNUM;
                                    P = Math.sin(F), D = Math.cos(F)
                                } else F = 2 * -w / U.SEGNUM, P = Math.sin(F), D = Math.cos(F);
                                n = this._curMat.a * R + this._curMat.c * I, h = this._curMat.b * R + this._curMat.d * I, n == this._path.getEndPointX() && h == this._path.getEndPointY() || l.addPoint(n, h);
                                var B = R - C,
                                    N = I - L;
                                for (a = 0; a < U.SEGNUM; a++) {
                                    var O = B * D + N * P,
                                        V = -B * P + N * D;
                                    n = O + C, h = V + L, t = this._curMat.a * n + this._curMat.c * h, h = e = this._curMat.b * n + this._curMat.d * h, (n = t) == this._path.getEndPointX() && h == this._path.getEndPointY() || l.addPoint(n, h), B = O, N = V
                                }
                            }
                        }
                    }
                }
            }, e.arc = function(t, e, i, r, s, a, n) {
                if (void 0 === a && (a = !1), void 0 === n && (n = !0), -1 != this.mId) {
                    var h = N.getInstance().shapeDic[this.mId];
                    if (h && this.mHaveKey && !h.needUpdate(this._curMat)) return;
                    e = t = 0
                }
                var l, o = 0,
                    u = 0,
                    _ = 0,
                    c = 0,
                    f = 0,
                    d = 0,
                    m = 0;
                if (u = s - r, a)
                    if (Math.abs(u) >= 2 * Math.PI) u = 2 * -Math.PI;
                    else
                        for (; 0 < u;) u -= 2 * Math.PI;
                else if (Math.abs(u) >= 2 * Math.PI) u = 2 * Math.PI;
                else
                    for (; u < 0;) u += 2 * Math.PI;
                l = u / (m = i < 101 ? Math.max(10, u * i / 5) : i < 201 ? Math.max(10, u * i / 20) : Math.max(10, u * i / 40)) / 2, _ = Math.abs(4 / 3 * (1 - Math.cos(l)) / Math.sin(l)), a && (_ = -_);
                var p = this._getPath(),
                    g = NaN,
                    v = NaN;
                for (d = 0; d <= m; d++) o = r + u * (d / m), c = t + Math.cos(o) * i, f = e + Math.sin(o) * i, n && (g = c, v = f, c = this._curMat.a * g + this._curMat.c * v, f = this._curMat.b * g + this._curMat.d * v), c == this._path.getEndPointX() && f == this._path.getEndPointY() || p.addPoint(c, f);
                c = t + Math.cos(s) * i, f = e + Math.sin(s) * i, n && (g = c, v = f, c = this._curMat.a * g + this._curMat.c * v, f = this._curMat.b * g + this._curMat.d * v), c == this._path.getEndPointX() && f == this._path.getEndPointY() || p.addPoint(c, f)
            }, e.quadraticCurveTo = function(t, e, i, r) {
                var s = _.I,
                    a = i,
                    n = r;
                i = this._curMat.a * a + this._curMat.c * n, r = this._curMat.b * a + this._curMat.d * n, a = t, n = e, t = this._curMat.a * a + this._curMat.c * n, e = this._curMat.b * a + this._curMat.d * n;
                for (var h = s.getBezierPoints([this._path.getEndPointX(), this._path.getEndPointY(), t, e, i, r], 30, 2), l = 0, o = h.length / 2; l < o; l++) this.lineTo(h[2 * l], h[2 * l + 1], !1);
                this.lineTo(i, r, !1)
            }, e.rect = function(t, e, i, r) {
                this._other = this._other.make(), this._other.path || (this._other.path = new z), this._other.path.rect(t, e, i, r)
            }, e.strokeRect = function(t, e, i, r, s) {
                var a = .5 * s;
                this.line(t - a, e, t + i + a, e, s, this._curMat), this.line(t + i, e, t + i, e + r, s, this._curMat), this.line(t, e, t, e + r, s, this._curMat), this.line(t - a, e + r, t + i + a, e + r, s, this._curMat)
            }, e.clip = function() {}, e.drawPoly = function(t, e, i, r, s, a, n) {
                void 0 === n && (n = !1), this._renderKey = 0, this._shader2D.glTexture = null;
                var h = this._getPath();
                if (-1 == this.mId) h.polygon(t, e, i, r, s || 1, a);
                else if (this.mHaveKey) {
                    var l = N.getInstance().shapeDic[this.mId];
                    l.setMatrix(this._curMat), l.rebuild(h.tempArray), h.setGeomtry(l)
                } else {
                    var o = h.polygon(t, e, i, r, s || 1, a);
                    N.getInstance().addShape(this.mId, o), o.setMatrix(this._curMat)
                }
                h.update();
                var u, _ = [this.mX, this.mY];
                if ((u = at.createShape(this, h.ib, h.vb, h.count, h.offset, Et.create(4, 0))).shaderValue.ALPHA = this._shader2D.ALPHA, u.shaderValue.u_pos = _, u.shaderValue.u_mmat2 = vt.EMPTYMAT4_ARRAY, this._submits[this._submits._length++] = u, 0 < s) {
                    if (this.mHaveLineKey) {
                        var c = N.getInstance().shapeLineDic[this.mId];
                        c.rebuild(h.tempArray), h.setGeomtry(c)
                    } else N.getInstance().addShape(this.mId, h.drawLine(t, e, i, s, a));
                    h.update(), (u = at.createShape(this, h.ib, h.vb, h.count, h.offset, Et.create(4, 0))).shaderValue.ALPHA = this._shader2D.ALPHA, u.shaderValue.u_mmat2 = vt.EMPTYMAT4_ARRAY, this._submits[this._submits._length++] = u
                }
            }, e.drawParticle = function(t, e, i) {
                i.x = t, i.y = e, this._submits[this._submits._length++] = i
            }, e._getPath = function() {
                return this._path || (this._path = new z)
            }, l(0, e, "globalCompositeOperation", function() {
                return G.NAMES[this._nBlendType]
            }, function(t) {
                var e = G.TOINT[t];
                null == e || this._nBlendType === e || (Y.save(this, 65536, this, !0), this._curSubmit = at.RENDERBASE, this._renderKey = 0, this._nBlendType = e)
            }), l(0, e, "strokeStyle", function() {
                return this._shader2D.strokeStyle
            }, function(t) {
                this._shader2D.strokeStyle.equal(t) || (Y.save(this, 512, this._shader2D, !1), this._shader2D.strokeStyle = W.create(t))
            }), l(0, e, "globalAlpha", function() {
                return this._shader2D.ALPHA
            }, function(t) {
                (t = Math.floor(1e3 * t) / 1e3) != this._shader2D.ALPHA && (Y.save(this, 1, this._shader2D, !0), this._shader2D.ALPHA = t)
            }), l(0, e, "asBitmap", null, function(t) {
                if (t) {
                    if (this._targets || (this._targets = new j), this._targets.repaint = !0, !this._width || !this._height) throw Error("asBitmap no size!");
                    this._targets.setSP(this.sprite), this._targets.size(this._width, this._height)
                } else this._targets = null
            }), l(0, e, "fillStyle", function() {
                return this._shader2D.fillStyle
            }, function(t) {
                this._shader2D.fillStyle.equal(t) || (Y.save(this, 2, this._shader2D, !1), this._shader2D.fillStyle = W.create(t))
            }), l(0, e, "textAlign", function() {
                return this._other.textAlign
            }, function(t) {
                this._other.textAlign === t || (this._other = this._other.make(), Y.save(this, 32768, this._other, !1), this._other.textAlign = t)
            }), l(0, e, "lineWidth", function() {
                return this._other.lineWidth
            }, function(t) {
                this._other.lineWidth === t || (this._other = this._other.make(), Y.save(this, 256, this._other, !1), this._other.lineWidth = t)
            }), l(0, e, "textBaseline", function() {
                return this._other.textBaseline
            }, function(t) {
                this._other.textBaseline === t || (this._other = this._other.make(), Y.save(this, 16384, this._other, !1), this._other.textBaseline = t)
            }), l(0, e, "font", null, function(t) {
                t != this._other.font.toString() && (this._other = this._other.make(), Y.save(this, 8, this._other, !1), this._other.font === dt.EMPTY ? this._other.font = new dt(t) : this._other.font.setFont(t))
            }), U.__init__ = function() {
                i.DEFAULT = new i
            }, U._tempPoint = new w, U._SUBMITVBSIZE = 32e3, U._MAXSIZE = 99999999, U._RECTVBSIZE = 16, U.MAXCLIPRECT = new R(0, 0, 99999999, 99999999), U._COUNT = 0, U._tmpMatrix = new S, U.SEGNUM = 32, U._contextcount = 0, n(U, ["_fontTemp", function() {
                return this._fontTemp = new dt
            }, "_drawStyleTemp", function() {
                return this._drawStyleTemp = new W(null)
            }]), U.__init$ = function() {
                i = function() {
                    function t() {
                        this.lineWidth = 1, this.path = null, this.textAlign = null, this.textBaseline = null, this.font = dt.EMPTY
                    }
                    c(t, "");
                    var e = t.prototype;
                    return e.clear = function() {
                        this.lineWidth = 1, this.path && this.path.clear(), this.textAlign = this.textBaseline = null, this.font = dt.EMPTY
                    }, e.make = function() {
                        return this === t.DEFAULT ? new t : this
                    }, t.DEFAULT = null, t
                }()
            }, U
        }(),
        Et = function(t) {
            function r(t, e) {
                this.size = [0, 0], this.alpha = 1, this.ALPHA = 1, this.subID = 0, this._cacheID = 0, r.__super.call(this), this.defines = new It, this.position = r._POSITION, this.mainID = t, this.subID = e, this.textureHost = null, this.texture = null, this.fillStyle = null, this.color = null, this.strokeStyle = null, this.colorAdd = null, this.glTexture = null, this.u_mmat2 = null, this._cacheID = t | e, this._inClassCache = r._cache[this._cacheID], 0 < t && !this._inClassCache && (this._inClassCache = r._cache[this._cacheID] = [], this._inClassCache._length = 0), this.clear()
            }
            c(r, "t_tl.webgl.shader.d2.value.Value2D", V);
            var e = r.prototype;
            return e.setValue = function(t) {}, e.refresh = function() {
                var t = this.size;
                return t[0] = vt.width, t[1] = vt.height, this.alpha = this.ALPHA * vt.worldAlpha, this.mmat = vt.worldMatrix4, this
            }, e._ShaderWithCompile = function() {
                return Qt.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, jt.create)
            }, e._withWorldShaderDefines = function() {
                var t = vt.worldShaderDefines,
                    e = Qt.sharders[this.mainID | this.defines._value | t.getValue()];
                if (!e) {
                    var i, r = {};
                    for (i in this.defines.toNameDic()) r[i] = "";
                    for (i in t.toNameDic()) r[i] = "";
                    e = Qt.withCompile2D(0, this.mainID, r, this.mainID | this.defines._value | t.getValue(), jt.create)
                }
                var s = vt.worldFilters;
                if (!s) return e;
                for (var a, n = s.length, h = 0; h < n; h++)(a = s[h]) && a.action.setValue(this);
                return e
            }, e.upload = function() {
                var t = vt;
                this.alpha = this.ALPHA * t.worldAlpha, vt.worldMatrix4 !== vt.TEMPMAT4_ARRAY && this.defines.add(128), bt.shaderHighPrecision && this.defines.add(1024);
                var e, i = t.worldShaderDefines ? this._withWorldShaderDefines() : Qt.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile();
                this.size[0] = t.width, this.size[1] = t.height, this.mmat = t.worldMatrix4, Bt.activeShader !== i ? i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width, i._shaderValueHeight = t.height) : e = i._params2dQuick2 || i._make2dQuick2() : i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width, i._shaderValueHeight = t.height) : e = i._params2dQuick1 || i._make2dQuick1(), i.upload(this, e)
            }, e.setFilters = function(t) {
                if (this.filters = t)
                    for (var e, i = t.length, r = 0; r < i; r++)(e = t[r]) && (this.defines.add(e.type), e.action.setValue(this))
            }, e.clear = function() {
                this.defines.setValue(this.subID)
            }, e.release = function() {
                (this._inClassCache[this._inClassCache._length++] = this).fillStyle = null, this.strokeStyle = null, this.clear()
            }, r._initone = function(t, e) {
                r._typeClass[t] = e, r._cache[t] = [], r._cache[t]._length = 0
            }, r.__init__ = function() {
                r._POSITION = [2, 5126, !1, 4 * mt.BYTES_PE, 0], r._TEXCOORD = [2, 5126, !1, 4 * mt.BYTES_PE, 2 * mt.BYTES_PE], r._initone(2, Ut), r._initone(4, Gt), r._initone(256, kt), r._initone(512, Vt), r._initone(1, Ht), r._initone(65, qt), r._initone(9, Ht)
            }, r.create = function(t, e) {
                var i = r._cache[t | e];
                return i._length ? i[--i._length] : new r._typeClass[t | e](e)
            }, r._POSITION = null, r._TEXCOORD = null, r._cache = [], r._typeClass = [], r.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], r
        }(),
        St = function(t) {
            function p(t, e) {
                p.__super.call(this, t, e)
            }
            c(p, "t_tl.webgl.utils.RenderSprite3D", v);
            var e = p.prototype;
            return e.onCreate = function(t) {
                switch (t) {
                    case 8:
                        return void(this._fun = this._blend);
                    case 4:
                        return void(this._fun = this._transform)
                }
            }, e._mask = function(t, e, i, r) {
                var s, a, n = this._next,
                    h = t.mask;
                if (h) {
                    e.ctx.save();
                    var l = e.ctx.globalCompositeOperation,
                        o = new R;
                    if (o.copyFrom(h.getBounds()), o.width = Math.round(o.width), o.height = Math.round(o.height), o.x = Math.round(o.x), o.y = Math.round(o.y), 0 < o.width && 0 < o.height) {
                        var u = t._style._tf,
                            _ = ht.create();
                        _.addValue("bounds", o), s = nt.create([_, e], t_tl.webgl.utils.RenderSprite3D.tmpTarget), e.addRenderObject(s), h.render(e, -o.x, -o.y), s = nt.create([_], t_tl.webgl.utils.RenderSprite3D.endTmpTarget), e.addRenderObject(s), e.ctx.save(), e.clipRect(i - u.translateX + o.x, r - u.translateY + o.y, o.width, o.height), n._fun.call(n, t, e, i, r), e.ctx.restore(), a = ut.create(6), l = e.ctx.globalCompositeOperation, a.blendMode = "mask", e.addRenderObject(a), S.TEMP.identity();
                        var c = Et.create(1, 0),
                            f = F.INV_UV,
                            d = o.width,
                            m = o.height;
                        (o.width < 32 || o.height < 32) && ((f = p.tempUV)[0] = 0, f[1] = 0, f[2] = 32 <= o.width ? 1 : o.width / 32, f[3] = 0, f[4] = 32 <= o.width ? 1 : o.width / 32, f[5] = 32 <= o.height ? 1 : o.height / 32, f[6] = 0, f[7] = 32 <= o.height ? 1 : o.height / 32, o.width = 32 <= o.width ? o.width : 32, o.height = 32 <= o.height ? o.height : 32, f[1] *= -1, f[3] *= -1, f[5] *= -1, f[7] *= -1, f[1] += 1, f[3] += 1, f[5] += 1, f[7] += 1), e.ctx.drawTarget(_, i + o.x - u.translateX, r + o.y - u.translateY, d, m, S.TEMP, "tmpTarget", c, f, 6), s = nt.create([_], t_tl.webgl.utils.RenderSprite3D.recycleTarget), e.addRenderObject(s), (a = ut.create(6)).blendMode = l, e.addRenderObject(a)
                    }
                    e.ctx.restore()
                } else n._fun.call(n, t, e, i, r)
            }, e._blend = function(t, e, i, r) {
                var s = t._style,
                    a = this._next;
                s.blendMode ? (e.ctx.save(), e.ctx.globalCompositeOperation = s.blendMode, a._fun.call(a, t, e, i, r), e.ctx.restore()) : a._fun.call(a, t, e, i, r)
            }, e._transform = function(t, e, i, r) {
                var s = t.transform,
                    a = this._next;
                if (s && a != v.NORENDER) {
                    var n = e.ctx;
                    t._style;
                    s.tx = i, s.ty = r;
                    var h = n._getTransformMatrix(),
                        l = h.clone();
                    S.mul(s, h, h), h._checkTransform(), s.tx = s.ty = 0, a._fun.call(a, t, e, 0, 0), l.copyTo(h), l.destroy()
                } else a._fun.call(a, t, e, i, r)
            }, p.tmpTarget = function(t, e) {
                var i = t.getValue("bounds"),
                    r = Nt.create(i.width, i.height);
                r.start(), r.clear(0, 0, 0, 0), t.addValue("tmpTarget", r)
            }, p.endTmpTarget = function(t) {
                t.getValue("tmpTarget").end()
            }, p.recycleTarget = function(t) {
                t.getValue("tmpTarget").recycle(), t.recycle()
            }, n(p, ["tempUV", function() {
                return this.tempUV = new Array(8)
            }]), p
        }(),
        wt = function(t) {
            function e() {
                this.data = null, e.__super.call(this)
            }
            c(e, "t_tl.filters.webgl.ColorFilterActionGL", O);
            var i = e.prototype;
            return T.imps(i, {
                "t_tl.filters.IFilterActionGL": !0
            }), i.setValue = function(t) {
                t.colorMat = this.data._mat, t.colorAlpha = this.data._alpha
            }, i.apply3d = function(t, e, i, r, s) {
                var a = t.getValue("bounds"),
                    n = Et.create(1, 0);
                n.setFilters([this.data]);
                var h = S.TEMP;
                h.identity(), i.ctx.drawTarget(t, 0, 0, a.width, a.height, h, "src", n)
            }, e
        }(),
        Rt = function(t) {
            function a(t, e, i, r, s) {
                this._atlasCanvas = null, this._inAtlasTextureKey = null, this._inAtlasTextureBitmapValue = null, this._inAtlasTextureOriUVValue = null, this._InAtlasWebGLImagesKey = null, this._InAtlasWebGLImagesOffsetValue = null, a.__super.call(this, t, e, s), this._inAtlasTextureKey = [], this._inAtlasTextureBitmapValue = [], this._inAtlasTextureOriUVValue = [], this._InAtlasWebGLImagesKey = {}, this._InAtlasWebGLImagesOffsetValue = [], this._atlasCanvas = new Wt, (this._atlasCanvas._atlaser = this)._atlasCanvas.width = i, this._atlasCanvas.height = r, this._atlasCanvas.activeResource(), this._atlasCanvas.lock = !0
            }
            c(a, "t_tl.webgl.atlas.Atlaser", U);
            var e = a.prototype;
            return e.computeUVinAtlasTexture = function(t, e, i, r) {
                var s = k.atlasTextureWidth,
                    a = k.atlasTextureHeight,
                    n = i / s,
                    h = r / a,
                    l = (i + t.bitmap.width) / s,
                    o = (r + t.bitmap.height) / a,
                    u = t.bitmap.width / s,
                    _ = t.bitmap.height / a;
                t.uv = [n + e[0] * u, h + e[1] * _, l - (1 - e[2]) * u, h + e[3] * _, l - (1 - e[4]) * u, o - (1 - e[5]) * _, n + e[6] * u, o - (1 - e[7]) * _]
            }, e.findBitmapIsExist = function(t) {
                if (t instanceof t_tl.webgl.resource.WebGLImage) {
                    var e = t,
                        i = e.url,
                        r = this._InAtlasWebGLImagesKey[i || e.id];
                    if (r) return r.offsetInfoID
                }
                return -1
            }, e.addToAtlasTexture = function(t, e, i) {
                if (t instanceof t_tl.webgl.resource.WebGLImage) {
                    var r = t,
                        s = r.url;
                    this._InAtlasWebGLImagesKey[s || r.id] = {
                        bitmap: t,
                        offsetInfoID: this._InAtlasWebGLImagesOffsetValue.length
                    }, this._InAtlasWebGLImagesOffsetValue.push([e, i])
                }
                this._atlasCanvas.texSubImage2D(e, i, t.atlasSource), t.clearAtlasSource()
            }, e.addToAtlas = function(t, e, i) {
                t._atlasID = this._inAtlasTextureKey.length;
                var r = t.uv.slice(),
                    s = t.bitmap;
                this._inAtlasTextureKey.push(t), this._inAtlasTextureOriUVValue.push(r), this._inAtlasTextureBitmapValue.push(s), this.computeUVinAtlasTexture(t, r, e, i), t.bitmap = this._atlasCanvas
            }, e.clear = function() {
                for (var t = 0, e = this._inAtlasTextureKey.length; t < e; t++) this._inAtlasTextureKey[t].bitmap = this._inAtlasTextureBitmapValue[t], this._inAtlasTextureKey[t].uv = this._inAtlasTextureOriUVValue[t], this._inAtlasTextureKey[t]._atlasID = -1, this._inAtlasTextureKey[t].bitmap.lock = !1, this._inAtlasTextureKey[t].bitmap.releaseResource();
                this._inAtlasTextureKey.length = 0, this._inAtlasTextureBitmapValue.length = 0, this._inAtlasTextureOriUVValue.length = 0, this._InAtlasWebGLImagesKey = null, this._InAtlasWebGLImagesOffsetValue.length = 0
            }, e.dispose = function() {
                this.clear(), this._atlasCanvas.destroy()
            }, l(0, e, "InAtlasWebGLImagesOffsetValue", function() {
                return this._InAtlasWebGLImagesOffsetValue
            }), l(0, e, "texture", function() {
                return this._atlasCanvas
            }), l(0, e, "inAtlasWebGLImagesKey", function() {
                return this._InAtlasWebGLImagesKey
            }), a
        }(),
        It = function(t) {
            function i() {
                i.__super.call(this, i.__name2int, i.__int2name, i.__int2nameMap)
            }
            return c(i, "t_tl.webgl.shader.d2.ShaderDefines2D", J), i.__init__ = function() {
                i.reg("TEXTURE2D", 1), i.reg("COLOR2D", 2), i.reg("PRIMITIVE", 4), i.reg("GLOW_FILTER", 8), i.reg("BLUR_FILTER", 16), i.reg("COLOR_FILTER", 32), i.reg("COLOR_ADD", 64), i.reg("WORLDMAT", 128), i.reg("FILLTEXTURE", 256), i.reg("FSHIGHPRECISION", 1024)
            }, i.reg = function(t, e) {
                J._reg(t, e, i.__name2int, i.__int2name)
            }, i.toText = function(t, e, i) {
                return J._toText(t, e, i)
            }, i.toInt = function(t) {
                return J._toInt(t, i.__name2int)
            }, i.TEXTURE2D = 1, i.COLOR2D = 2, i.PRIMITIVE = 4, i.FILTERGLOW = 8, i.FILTERBLUR = 16, i.FILTERCOLOR = 32, i.COLORADD = 64, i.WORLDMAT = 128, i.FILLTEXTURE = 256, i.SKINMESH = 512, i.SHADERDEFINE_FSHIGHPRECISION = 1024, i.__name2int = {}, i.__int2name = [], i.__int2nameMap = [], i
        }(),
        Mt = (function(t) {
            function h(t, e, i, r, s, a, n) {
                h.__super.call(this, t, e, i, r, 40, s, a, n)
            }
            c(h, "t_tl.webgl.shapes.Ellipse", it)
        }(), function(t) {
            function a(t, e, i, r, s) {
                this._points = [], this.rebuild(i), a.__super.call(this, t, e, 0, 0, 0, s, r, s, 0)
            }
            c(a, "t_tl.webgl.shapes.Line", it);
            var e = a.prototype;
            return e.rebuild = function(t) {
                var e = t.length;
                e != this._points.length && (this.mUint16Array = new Uint16Array(6 * (e / 2 - 1)), this.mFloat32Array = new Float32Array(5 * e)), this._points.length = 0;
                for (var i = NaN, r = NaN, s = -1, a = -1, n = t.length / 2, h = 0; h < n; h++) i = t[2 * h], r = t[2 * h + 1], (.01 < Math.abs(s - i) || .01 < Math.abs(a - r)) && this._points.push(i, r), s = i, a = r
            }, e.getData = function(t, e, i) {
                var r = [],
                    s = [];
                0 < this.borderWidth && this.createLine2(this._points, r, this.borderWidth, i, s, this._points.length / 2), this.mUint16Array.set(r, 0), this.mFloat32Array.set(s, 0), t.append(this.mUint16Array), e.append(this.mFloat32Array)
            }, a
        }()),
        Ct = function(t) {
            function _(t, e, i, r, s) {
                this._points = [];
                for (var a = NaN, n = NaN, h = -1, l = -1, o = i.length / 2 - 1, u = 0; u < o; u++) a = i[2 * u], n = i[2 * u + 1], (.01 < Math.abs(h - a) || .01 < Math.abs(l - n)) && this._points.push(a, n), h = a, l = n;
                a = i[2 * o], n = i[2 * o + 1], h = this._points[0], l = this._points[1], (.01 < Math.abs(h - a) || .01 < Math.abs(l - n)) && this._points.push(a, n), _.__super.call(this, t, e, 0, 0, this._points.length / 2, 0, r, s)
            }
            c(_, "t_tl.webgl.shapes.LoopLine", it);
            var e = _.prototype;
            return e.getData = function(t, e, i) {
                if (0 < this.borderWidth) {
                    for (var r = this.color, s = (r >> 16 & 255) / 255, a = (r >> 8 & 255) / 255, n = (255 & r) / 255, h = [], l = 0, o = 0, u = [], _ = Math.floor(this._points.length / 2), c = 0; c < _; c++) l = this._points[2 * c], o = this._points[2 * c + 1], h.push(this.x + l, this.y + o, s, a, n);
                    this.createLoopLine(h, u, this.borderWidth, i + h.length / 5), t.append(new Uint16Array(u)), e.append(new Float32Array(h))
                }
            }, e.createLoopLine = function(t, e, i, r, s, a) {
                t.length;
                var n = t.concat(),
                    h = s || t,
                    l = this.borderColor,
                    o = (l >> 16 & 255) / 255,
                    u = (l >> 8 & 255) / 255,
                    _ = (255 & l) / 255,
                    c = [n[0], n[1]],
                    f = [n[n.length - 5], n[n.length - 4]],
                    d = f[0] + .5 * (c[0] - f[0]),
                    m = f[1] + .5 * (c[1] - f[1]);
                n.unshift(d, m, 0, 0, 0), n.push(d, m, 0, 0, 0);
                var p, g, v, x, b, y, T, A, E, S, w, R, I, M, C, L, P, D, F, B, N = n.length / 5,
                    O = r,
                    V = i / 2;
                v = n[0], x = n[1], S = v - (b = n[5]), E = (E = -(x - (y = n[6]))) / (B = Math.sqrt(E * E + S * S)) * V, S = S / B * V, h.push(v - E, x - S, o, u, _, v + E, x + S, o, u, _);
                for (var U = 1; U < N - 1; U++) v = n[5 * (U - 1)], x = n[5 * (U - 1) + 1], b = n[5 * U], y = n[5 * U + 1], T = n[5 * (U + 1)], A = n[5 * (U + 1) + 1], S = v - b, R = b - T, C = (-(E = (E = -(x - y)) / (B = Math.sqrt(E * E + S * S)) * V) + v) * (-(S = S / B * V) + y) - (-E + b) * (-S + x), D = (-(w = (w = -(y - A)) / (B = Math.sqrt(w * w + R * R)) * V) + T) * (-(R = R / B * V) + y) - (-w + b) * (-R + A), F = (I = -S + x - (-S + y)) * (P = -w + b - (-w + T)) - (L = -R + A - (-R + y)) * (M = -E + b - (-E + v)), Math.abs(F) < .1 ? (F += 10.1, h.push(b - E, y - S, o, u, _, b + E, y + S, o, u, _)) : (((p = (M * D - P * C) / F) - b) * (p - b) + ((g = (L * C - I * D) / F) - y) + (g - y), h.push(p, g, o, u, _, b - (p - b), y - (g - y), o, u, _));
                a && (e = a);
                var k = this.edges + 1;
                for (U = 1; U < k; U++) e.push(O + 2 * (U - 1), O + 2 * (U - 1) + 1, O + 2 * U + 1, O + 2 * U + 1, O + 2 * U, O + 2 * (U - 1));
                return e.push(O + 2 * (U - 1), O + 2 * (U - 1) + 1, O + 1, O + 1, O, O + 2 * (U - 1)), h
            }, _
        }(),
        Lt = function(t) {
            function n(t, e, i, r, s, a) {
                this._points = null, this._start = -1, this._repaint = !1, this.earcutTriangles = null, this._mat = S.create(), this._points = i.slice(0, i.length), n.__super.call(this, t, e, 0, 0, this._points.length / 2, r, s, a)
            }
            c(n, "t_tl.webgl.shapes.Polygon", it);
            var e = n.prototype;
            return e.rebuild = function(t) {
                this._repaint || (this._points.length = 0, this._points = this._points.concat(t))
            }, e.setMatrix = function(t) {
                t.copyTo(this._mat)
            }, e.needUpdate = function(t) {
                return this._repaint = this._mat.a == t.a && this._mat.b == t.b && this._mat.c == t.c && this._mat.d == t.d && this._mat.tx == t.tx && this._mat.ty == t.ty, !this._repaint
            }, e.getData = function(t, e, i) {
                var r, s = 0,
                    a = this._points,
                    n = 0;
                if (this.mUint16Array && this.mFloat32Array && this._repaint) {
                    if (this._start != i) {
                        for (this._start = i, r = [], n = this.earcutTriangles.length, s = 0; s < n; s++) r.push(this.earcutTriangles[s] + i);
                        this.mUint16Array = new Uint16Array(r)
                    }
                } else {
                    this._start = i, r = [];
                    var h = [],
                        l = [],
                        o = this.color,
                        u = (o >> 16 & 255) / 255,
                        _ = (o >> 8 & 255) / 255,
                        c = (255 & o) / 255;
                    for (n = Math.floor(a.length / 2), s = 0; s < n; s++) h.push(this.x + a[2 * s], this.y + a[2 * s + 1], u, _, c), l.push(this.x + a[2 * s], this.y + a[2 * s + 1]);
                    for (this.earcutTriangles = rt.earcut(l, null, 2), n = this.earcutTriangles.length, s = 0; s < n; s++) r.push(this.earcutTriangles[s] + i);
                    this.mUint16Array = new Uint16Array(r), this.mFloat32Array = new Float32Array(h)
                }
                t.append(this.mUint16Array), e.append(this.mFloat32Array)
            }, n
        }(),
        Pt = function(t) {
            function a() {
                this._matrix = new S, this._matrix4 = mt.defaultMatrix4.concat(), a.__super.call(this, 1e4), this.shaderValue = new Et(0, 0)
            }
            c(a, "t_tl.webgl.submit.SubmitCanvas", at);
            var e = a.prototype;
            return e.renderSubmit = function() {
                if (this._ctx_src._targets) return this._ctx_src._targets.flush(this._ctx_src), 1;
                var t = vt.worldAlpha,
                    e = vt.worldMatrix4,
                    i = vt.worldMatrix,
                    r = vt.worldFilters,
                    s = vt.worldShaderDefines,
                    a = this.shaderValue,
                    n = this._matrix,
                    h = this._matrix4,
                    l = S.TEMP;
                return S.mul(n, i, l), h[0] = l.a, h[1] = l.b, h[4] = l.c, h[5] = l.d, h[12] = l.tx, h[13] = l.ty, vt.worldMatrix = l.clone(), vt.worldMatrix4 = h, vt.worldAlpha = vt.worldAlpha * a.alpha, a.filters && a.filters.length && (vt.worldFilters = a.filters, vt.worldShaderDefines = a.defines), this._ctx_src.flush(), vt.worldAlpha = t, vt.worldMatrix4 = e, vt.worldMatrix.destroy(), vt.worldMatrix = i, vt.worldFilters = r, vt.worldShaderDefines = s, 1
            }, e.releaseRender = function() {
                var t = a._cache;
                this._ctx_src = null, t[t._length++] = this
            }, e.getRenderType = function() {
                return 10003
            }, a.create = function(t, e, i) {
                var r = a._cache._length ? a._cache[--a._cache._length] : new a;
                r._ctx_src = t;
                var s = r.shaderValue;
                return s.alpha = e, s.defines.setValue(0), i && i.length && s.setFilters(i), r
            }, a._cache = ((a._cache = [])._length = 0, a._cache), a
        }(),
        Dt = function(t) {
            function o(t) {
                this._preIsSameTextureShader = !1, this._isSameTexture = !0, this._texs = new Array, this._texsID = new Array, this._vbPos = new Array, void 0 === t && (t = 1e4), o.__super.call(this, t)
            }
            c(o, "t_tl.webgl.submit.SubmitTexture", at);
            var e = o.prototype;
            return e.releaseRender = function() {
                var t = o._cache;
                (t[t._length++] = this).shaderValue.release(), this._preIsSameTextureShader = !1, this._vb = null, this._texs.length = 0, this._vbPos.length = 0, this._isSameTexture = !0
            }, e.addTexture = function(t, e) {
                this._texsID[this._texs.length] = t._uvID, this._texs.push(t), this._vbPos.push(e)
            }, e.checkTexture = function() {
                if (this._texs.length < 1) this._isSameTexture = !0;
                else {
                    var t = this.shaderValue.textureHost.bitmap;
                    if (null !== t)
                        for (var e = this._vb.getFloat32Array(), i = 0, r = this._texs.length; i < r; i++) {
                            var s = this._texs[i];
                            s.active();
                            var a = s.uv;
                            if (this._texsID[i] !== s._uvID) {
                                this._texsID[i] = s._uvID;
                                var n = this._vbPos[i];
                                e[n + 2] = a[0], e[n + 3] = a[1], e[n + 6] = a[2], e[n + 7] = a[3], e[n + 10] = a[4], e[n + 11] = a[5], e[n + 14] = a[6], e[n + 15] = a[7], this._vb.setNeedUpload()
                            }
                            s.bitmap !== t && (this._isSameTexture = !1)
                        }
                }
            }, e.renderSubmit = function() {
                if (0 === this._numEle) return o._shaderSet = !1, 1;
                var t = this.shaderValue.textureHost;
                if (t) {
                    var e = t.source;
                    if (!t.bitmap || !e) return o._shaderSet = !1, 1;
                    this.shaderValue.texture = e
                }
                this._vb.bind_upload(this._ib);
                var i = bt.mainContext;
                if (G.activeBlendFunction !== this._blendFn && (i.enable(3042), this._blendFn(i), G.activeBlendFunction = this._blendFn), C.drawCall++, C.trianglesFaces += this._numEle / 3, this._preIsSameTextureShader && Bt.activeShader && o._shaderSet ? Bt.activeShader.uploadTexture2D(this.shaderValue.texture) : this.shaderValue.upload(), o._shaderSet = !0, 1 < this._texs.length && !this._isSameTexture)
                    for (var r = t.bitmap, s = 0, a = Bt.activeShader, n = 0, h = this._texs.length; n < h; n++) {
                        var l = this._texs[n];
                        l.bitmap === r && n + 1 !== h || (a.uploadTexture2D(l.source), i.drawElements(4, 6 * (n - s + 1), 5123, this._startIdx + 6 * s * mt.BYTES_PIDX), r = l.bitmap, s = n)
                    } else i.drawElements(4, this._numEle, 5123, this._startIdx);
                return 1
            }, o.create = function(t, e, i, r, s) {
                var a = o._cache._length ? o._cache[--o._cache._length] : new o;
                null == i && ((i = a._selfVb || (a._selfVb = Jt.create(-1))).clear(), r = 0), a._ib = e, a._vb = i, a._startIdx = r * mt.BYTES_PIDX, a._numEle = 0;
                var n = t._nBlendType;
                a._blendFn = t._targets ? G.targetFns[n] : G.fns[n], a.shaderValue = s, a.shaderValue.setValue(t._shader2D);
                var h = t._shader2D.filters;
                return h && a.shaderValue.setFilters(h), a
            }, o._cache = ((o._cache = [])._length = 0, o._cache), o._shaderSet = !0, o
        }(),
        Ft = function(t) {
            function g() {
                g.__super.call(this, t_tl.webgl.utils.MeshTexture.const_stride, 0, 0), this.canReuse = !0, this.setAttributes(t_tl.webgl.utils.MeshTexture._fixattriInfo)
            }
            c(g, "t_tl.webgl.utils.MeshTexture", gt);
            var e = g.prototype;
            return e.addData = function(t, e, i, r, s, a) {
                for (var n = t.length / 2, h = this._vb.needSize(n * g.const_stride) >> 2, l = this._vb.getFloat32Array(), o = 0, u = 0; u < n; u++) {
                    var _ = t[o],
                        c = t[o + 1],
                        f = _ * r.a + c * r.c + r.tx,
                        d = _ * r.b + c * r.d + r.ty;
                    l[h++] = f, l[h++] = d, l[h++] = e[o], l[h++] = e[o + 1], o += 2
                }
                this._vb.setNeedUpload();
                var m = this.vertNum;
                if (0 < m) {
                    (n = i.length) > g.tmpIdx.length && (g.tmpIdx = new Uint16Array(n));
                    for (var p = 0; p < n; p++) g.tmpIdx[p] = i[p] + m;
                    this._ib.appendU16Array(g.tmpIdx, i.length)
                } else this._ib.append(i);
                this._ib.setNeedUpload(), this.vertNum += n, this.indexNum += i.length
            }, e.releaseMesh = function() {
                this._vb._byteLength = 0, this._ib._byteLength = 0, this.vertNum = 0, this.indexNum = 0, t_tl.webgl.utils.MeshTexture._POOL.push(this)
            }, e.destroy = function() {
                this._ib.destroy(), this._vb.destroy()
            }, g.getAMesh = function() {
                return t_tl.webgl.utils.MeshTexture._POOL.length ? t_tl.webgl.utils.MeshTexture._POOL.pop() : new g
            }, g.const_stride = 16, g._POOL = [], n(g, ["_fixattriInfo", function() {
                return this._fixattriInfo = [5126, 2, 0, 5126, 2, 8]
            }, "tmpIdx", function() {
                return this.tmpIdx = new Uint16Array(4)
            }]), g
        }(),
        Bt = function(t) {
            function e() {
                e.__super.call(this), this.lock = !0
            }
            return c(e, "t_tl.webgl.shader.BaseShader", x), e.activeShader = null, e.bindShader = null, e
        }(),
        Nt = function(e) {
            function u(t, e, i, r, s, a, n, h, l) {
                this._type = 0, this._svWidth = NaN, this._svHeight = NaN, this._preRenderTarget = null, this._alreadyResolved = !1, this._looked = !1, this._surfaceFormat = 0, this._surfaceType = 0, this._depthStencilFormat = 0, this._mipMap = !1, this._repeat = !1, this._minFifter = 0, this._magFifter = 0, this._destroy = !1, void 0 === i && (i = 6408), void 0 === r && (r = 5121), void 0 === s && (s = 34041), void 0 === a && (a = !1), void 0 === n && (n = !1), void 0 === h && (h = -1), void 0 === l && (l = -1), this._type = 1, this._w = t, this._h = e, this._surfaceFormat = i, this._surfaceType = r, this._depthStencilFormat = s, g.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189), this._mipMap = a, this._repeat = n, this._minFifter = h, this._magFifter = l, this._createWebGLRenderTarget(), this.bitmap.lock = !0, u.__super.call(this, this.bitmap, F.INV_UV)
            }
            c(u, "t_tl.webgl.resource.RenderTarget2D", e);
            var t = u.prototype;
            return T.imps(t, {
                "t_tl.resource.IDispose": !0
            }), t.getType = function() {
                return this._type
            }, t.getTexture = function() {
                return this
            }, t.size = function(t, e) {
                this._w == t && this._h == e || (this._w = t, this._h = e, this.release(), 0 != this._w && 0 != this._h && this._createWebGLRenderTarget())
            }, t.release = function() {
                this.destroy()
            }, t.recycle = function() {
                u.POOL.push(this)
            }, t.start = function() {
                var t = bt.mainContext;
                return this._preRenderTarget = vt.curRenderTarget, vt.curRenderTarget = this, t.bindFramebuffer(36160, this.bitmap.frameBuffer), this._alreadyResolved = !1, 1 == this._type && (t.viewport(0, 0, this._w, this._h), this._svWidth = vt.width, this._svHeight = vt.height, vt.width = this._w, vt.height = this._h, Bt.activeShader = null), this
            }, t.clear = function(t, e, i, r) {
                void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === r && (r = 1);
                var s = bt.mainContext;
                s.clearColor(t, e, i, r);
                var a = 16384;
                switch (this._depthStencilFormat) {
                    case 33189:
                        a |= 256;
                        break;
                    case 36168:
                        a |= 1024;
                        break;
                    case 34041:
                        a |= 256, a |= 1024
                }
                s.clear(a)
            }, t.end = function() {
                var t = bt.mainContext;
                t.bindFramebuffer(36160, this._preRenderTarget ? this._preRenderTarget.bitmap.frameBuffer : null), this._alreadyResolved = !0, vt.curRenderTarget = this._preRenderTarget, 1 == this._type ? (t.viewport(0, 0, this._svWidth, this._svHeight), vt.width = this._svWidth, vt.height = this._svHeight, Bt.activeShader = null) : t.viewport(0, 0, T.stage.width, T.stage.height)
            }, t.getData = function(t, e, i, r) {
                var s = bt.mainContext;
                if (s.bindFramebuffer(36160, this.bitmap.frameBuffer), !(36053 === s.checkFramebufferStatus(36160))) return s.bindFramebuffer(36160, null), null;
                var a = new Uint8Array(this._w * this._h * 4);
                return s.readPixels(t, e, i, r, this._surfaceFormat, this._surfaceType, a), s.bindFramebuffer(36160, null), a
            }, t.destroy = function(t) {
                void 0 === t && (t = !1), this._destroy || (this._loaded = !1, this.bitmap.offAll(), this.bitmap.disposeResource(), this.bitmap.dispose(), this.offAll(), this.bitmap = null, this._alreadyResolved = !1, this._destroy = !0, e.prototype.destroy.call(this))
            }, t.dispose = function() {}, t._createWebGLRenderTarget = function() {
                this.bitmap = new Xt(this.width, this.height, this._surfaceFormat, this._surfaceType, this._depthStencilFormat, this._mipMap, this._repeat, this._minFifter, this._magFifter), this.bitmap.activeResource(), this._alreadyResolved = !0, this._destroy = !1, this._loaded = !0, this.bitmap.on("recovered", this, function(t) {
                    this.event("recovered")
                })
            }, l(0, t, "surfaceFormat", function() {
                return this._surfaceFormat
            }), l(0, t, "magFifter", function() {
                return this._magFifter
            }), l(0, t, "surfaceType", function() {
                return this._surfaceType
            }), l(0, t, "mipMap", function() {
                return this._mipMap
            }), l(0, t, "depthStencilFormat", function() {
                return this._depthStencilFormat
            }), l(0, t, "minFifter", function() {
                return this._minFifter
            }), l(0, t, "source", function() {
                return this._alreadyResolved ? T.superGet(F, this, "source") : null
            }), u.create = function(t, e, i, r, s, a, n, h, l) {
                void 0 === i && (i = 6408), void 0 === r && (r = 5121), void 0 === s && (s = 34041), void 0 === a && (a = !1), void 0 === n && (n = !1), void 0 === h && (h = -1), void 0 === l && (l = -1);
                var o = u.POOL.pop();
                return o || (o = new u(t, e)), o.bitmap && o._w == t && o._h == e && o._surfaceFormat == i && o._surfaceType == r && o._depthStencilFormat == s && o._mipMap == a && o._repeat == n && o._minFifter == h && o._magFifter == l || (o._w = t, o._h = e, o._surfaceFormat = i, o._surfaceType = r, o._depthStencilFormat = s, g.isConchWebGL && 34041 === o._depthStencilFormat && (o._depthStencilFormat = 33189), o._mipMap = a, o._repeat = n, o._minFifter = h, o._magFifter = l, o.release(), o._createWebGLRenderTarget()), o
            }, u.TYPE2D = 1, u.TYPE3D = 2, u.POOL = [], u
        }(F),
        Ot = function(t) {
            function e() {
                this._glBuffer = null, this._buffer = null, this._bufferType = 0, this._bufferUsage = 0, this._byteLength = 0, e.__super.call(this), e._gl = bt.mainContext
            }
            c(e, "t_tl.webgl.utils.Buffer", x);
            var i = e.prototype;
            return i._bind = function() {
                this.activeResource(), e._bindActive[this._bufferType] !== this._glBuffer && (34962 === this._bufferType && (e._bindVertexBuffer = this._glBuffer), e._gl.bindBuffer(this._bufferType, e._bindActive[this._bufferType] = this._glBuffer), Bt.activeShader = null)
            }, i.recreateResource = function() {
                this._glBuffer || (this._glBuffer = e._gl.createBuffer()), this.completeCreate()
            }, i.disposeResource = function() {
                this._glBuffer && (bt.mainContext.deleteBuffer(this._glBuffer), this._glBuffer = null), this.memorySize = 0
            }, l(0, i, "bufferUsage", function() {
                return this._bufferUsage
            }), e._gl = null, e._bindActive = {}, e._bindVertexBuffer = null, e._enableAtributes = [], e
        }(),
        Vt = function(t) {
            function i(t) {
                this.texcoord = null, this.offsetX = 300, this.offsetY = 0, i.__super.call(this, 512, 0);
                var e = 8 * mt.BYTES_PE;
                this.position = [2, 5126, !1, e, 0], this.texcoord = [2, 5126, !1, e, 2 * mt.BYTES_PE], this.color = [4, 5126, !1, e, 4 * mt.BYTES_PE]
            }
            return c(i, "t_tl.webgl.shader.d2.skinAnishader.SkinSV", Et), i
        }(),
        Ut = function(t) {
            function e(t) {
                e.__super.call(this, 2, 0), this.color = []
            }
            return c(e, "t_tl.webgl.shader.d2.value.Color2dSV", Et), e.prototype.setValue = function(t) {
                t.fillStyle && (this.color = t.fillStyle._color._color), t.strokeStyle && (this.color = t.strokeStyle._color._color)
            }, e
        }(),
        kt = function(t) {
            function e(t) {
                this.u_colorMatrix = null, this.strength = 0, this.colorMat = null, this.colorAlpha = null, this.u_TexRange = [0, 1, 0, 1], this.u_offset = [0, 0], this.texcoord = Et._TEXCOORD, e.__super.call(this, 256, 0)
            }
            c(e, "t_tl.webgl.shader.d2.value.FillTextureSV", Et);
            var i = e.prototype;
            return i.setValue = function(t) {
                this.ALPHA = t.ALPHA, t.filters && this.setFilters(t.filters)
            }, i.clear = function() {
                this.texture = null, this.shader = null, this.defines.setValue(0)
            }, e
        }(),
        Ht = function(t) {
            function e(t) {
                this.u_colorMatrix = null, this.strength = 0, this.blurInfo = null, this.colorMat = null, this.colorAlpha = null, this.texcoord = Et._TEXCOORD, void 0 === t && (t = 0), e.__super.call(this, 1, t)
            }
            c(e, "t_tl.webgl.shader.d2.value.TextureSV", Et);
            var i = e.prototype;
            return i.setValue = function(t) {
                this.ALPHA = t.ALPHA, t.filters && this.setFilters(t.filters)
            }, i.clear = function() {
                this.texture = null, this.shader = null, this.defines.setValue(0)
            }, e
        }(),
        Gt = function(t) {
            function e(t) {
                this.a_color = null, this.u_pos = [0, 0], e.__super.call(this, 4, 0), this.position = [2, 5126, !1, 5 * mt.BYTES_PE, 0], this.a_color = [3, 5126, !1, 5 * mt.BYTES_PE, 2 * mt.BYTES_PE]
            }
            return c(e, "t_tl.webgl.shader.d2.value.PrimitiveSV", Et), e
        }(),
        Wt = function(t) {
            function e() {
                this._atlaser = null, this._flashCacheImage = null, this._flashCacheImageNeedFlush = !1, e.__super.call(this)
            }
            c(e, "t_tl.webgl.atlas.AtlasWebGLCanvas", t);
            var i = e.prototype;
            return i.recreateResource = function() {
                var t = bt.mainContext,
                    e = this._source = t.createTexture(),
                    i = yt.curBindTexTarget,
                    r = yt.curBindTexValue;
                yt.bindTexture(t, 3553, e), t.texImage2D(3553, 0, 6408, this._w, this._h, 0, 6408, 5121, null), t.texParameteri(3553, 10241, 9729), t.texParameteri(3553, 10240, 9729), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071), i && r && yt.bindTexture(t, i, r), this.memorySize = this._w * this._h * 4, this.completeCreate()
            }, i.disposeResource = function() {
                this._source && (bt.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0)
            }, i.texSubImage2D = function(t, e, i) {
                if (g.isFlash) {
                    this._flashCacheImage || (this._flashCacheImage = m.create(""), this._flashCacheImage._image.createCanvas(this._w, this._h));
                    var r = i.bitmapdata;
                    this._flashCacheImage._image.copyPixels(r, 0, 0, r.width, r.height, t, e), this._flashCacheImageNeedFlush || (this._flashCacheImageNeedFlush = !0)
                } else {
                    var s = bt.mainContext,
                        a = yt.curBindTexTarget,
                        n = yt.curBindTexValue;
                    yt.bindTexture(s, 3553, this._source), g.isConchWebGL ? (i !== ConchTextCanvas && (0 <= t - 1 && s.texSubImage2DEx(!0, 3553, 0, t - 1, e, 6408, 5121, i), t + 1 <= this._w && s.texSubImage2DEx(!0, 3553, 0, t + 1, e, 6408, 5121, i), 0 <= e - 1 && s.texSubImage2DEx(!0, 3553, 0, t, e - 1, 6408, 5121, i), e + 1 <= this._h && s.texSubImage2DEx(!0, 3553, 0, t, e + 1, 6408, 5121, i)), s.texSubImage2DEx(!0, 3553, 0, t, e, 6408, 5121, i)) : (s.pixelStorei(37441, !0), 0 <= t - 1 && s.texSubImage2D(3553, 0, t - 1, e, 6408, 5121, i), t + 1 <= this._w && s.texSubImage2D(3553, 0, t + 1, e, 6408, 5121, i), 0 <= e - 1 && s.texSubImage2D(3553, 0, t, e - 1, 6408, 5121, i), e + 1 <= this._h && s.texSubImage2D(3553, 0, t, e + 1, 6408, 5121, i), s.texSubImage2D(3553, 0, t, e, 6408, 5121, i), s.pixelStorei(37441, !1)), a && n && yt.bindTexture(s, a, n)
                }
            }, i.texSubImage2DPixel = function(t, e, i, r, s) {
                var a = bt.mainContext,
                    n = yt.curBindTexTarget,
                    h = yt.curBindTexValue;
                yt.bindTexture(a, 3553, this._source);
                var l = new Uint8Array(s.data);
                g.isConchWebGL ? a.texSubImage2DEx(!0, 3553, 0, t, e, i, r, 6408, 5121, l) : (a.pixelStorei(37441, !0), a.texSubImage2D(3553, 0, t, e, i, r, 6408, 5121, l), a.pixelStorei(37441, !1)), n && h && yt.bindTexture(a, n, h)
            }, l(0, i, "width", t.prototype._$get_width, function(t) {
                this._w = t
            }), l(0, i, "height", t.prototype._$get_height, function(t) {
                this._h = t
            }), e
        }(i),
        zt = function(t) {
            function s() {
                this.flipY = !0, this.alwaysChange = !1, s.__super.call(this)
            }
            c(s, "t_tl.webgl.resource.WebGLCanvas", i);
            var e = s.prototype;
            return e.getCanvas = function() {
                return this._canvas
            }, e.clear = function() {
                this._ctx && this._ctx.clear()
            }, e.destroy = function() {
                this._ctx && this._ctx.destroy(), this._ctx = null
            }, e._setContext = function(t) {
                this._ctx = t
            }, e.getContext = function(t, e) {
                return this._ctx ? this._ctx : this._ctx = s._createContext(this)
            }, e.size = function(t, e) {
                this._w == t && this._h == e || (this._w = t, this._h = e, this._ctx && this._ctx.size(t, e), this._canvas && (this._canvas.height = e, this._canvas.width = t))
            }, e.activeResource = function(t) {
                void 0 === t && (t = !1), this._source || this.recreateResource()
            }, e.recreateResource = function() {
                this.createWebGlTexture(), this.completeCreate()
            }, e.disposeResource = function() {
                this._source && !this.iscpuSource && (bt.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0)
            }, e.createWebGlTexture = function() {
                var t = bt.mainContext;
                this._canvas;
                var e = this._source = t.createTexture();
                this.iscpuSource = !1;
                var i = yt.curBindTexTarget,
                    r = yt.curBindTexValue;
                yt.bindTexture(t, 3553, e), t.pixelStorei(37440, this.flipY ? 1 : 0), g.isConchWebGL ? t.texImage2DEx(s.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (s.premulAlpha && t.pixelStorei(37441, !0), t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData), s.premulAlpha && t.pixelStorei(37441, !1)), t.texParameteri(3553, 10240, 9729), t.texParameteri(3553, 10241, 9729), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071), t.pixelStorei(37440, 0), this.memorySize = this._w * this._h * 4, i && r && yt.bindTexture(t, i, r)
            }, e.reloadCanvasData = function() {
                var t = bt.mainContext;
                if (!this._source) throw "reloadCanvasData error, gl texture not created!";
                var e = yt.curBindTexTarget,
                    i = yt.curBindTexValue;
                yt.bindTexture(t, 3553, this._source), g.isConchWebGL ? t.texImage2DEx(s.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (s.premulAlpha && t.pixelStorei(37441, !0), t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData), s.premulAlpha && t.pixelStorei(37441, !1)), t.pixelStorei(37440, 0), e && i && yt.bindTexture(t, e, i)
            }, e.texSubImage2D = function(t, e, i) {
                var r = bt.mainContext,
                    s = yt.curBindTexTarget,
                    a = yt.curBindTexValue;
                yt.bindTexture(r, 3553, this._source), g.isConchWebGL ? r.texSubImage2DEx(!0, 3553, 0, e, i, 6408, 5121, t._source) : (r.pixelStorei(37441, !0), r.texSubImage2D(3553, 0, e, i, 6408, 5121, t._source), r.pixelStorei(37441, !1)), s && a && yt.bindTexture(r, s, a)
            }, e.toBase64 = function(t, e, i) {
                var r = null;
                this._canvas && (r = this._canvas.toDataURL(t, e)), i.call(this, r)
            }, l(0, e, "context", function() {
                return this._ctx
            }), l(0, e, "source", function() {
                return this.alwaysChange && this.reloadCanvasData(), this._source
            }), l(0, e, "asBitmap", null, function(t) {
                this._ctx && (this._ctx.asBitmap = t)
            }), s._createContext = null, s.premulAlpha = !1, s
        }(),
        Yt = function(t) {
            function a(t, e) {
                this.CborderSize = 12, a.__super.call(this), this.char = t, this.isSpace = " " === t, this.xs = e.scaleX, this.ys = e.scaleY, this.font = e.font.toString(), this.fontSize = e.font.size, this.fillColor = e.fillColor, this.borderColor = e.borderColor, this.lineWidth = e.lineWidth, this.underLine = e.underLine;
                var i, r = g.isConchApp;
                r ? ((i = ConchTextCanvas)._source = ConchTextCanvas, i._source.canvas = ConchTextCanvas) : i = f.canvas.source, this.canvas = i, this._enableMerageInAtlas = !0, this._ctx = r ? i : this.canvas.getContext("2d", void 0);
                var s = B.measureText(this.char, this.font);
                this.cw = s.width * this.xs, this.ch = (s.height || this.fontSize) * this.ys, this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize), this.texture = new F(this)
            }
            c(a, "t_tl.webgl.resource.WebGLCharImage", i);
            var e = a.prototype;
            return T.imps(e, {
                "t_tl.webgl.resource.IMergeAtlasBitmap": !0
            }), e.active = function() {
                this.texture.active()
            }, e.recreateResource = function() {
                var t = g.isConchApp;
                if (this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize), this.canvas && (this.canvas.height = this._h, this.canvas.width = this._w), t) {
                    var e = this.fontSize;
                    1 == this.xs && 1 == this.ys || (e = parseInt(e * (this.xs > this.ys ? this.xs : this.ys) + ""));
                    var i = "normal 100 " + e + "px Arial";
                    this.borderColor && (i += " 1 " + this.borderColor), this._ctx.font = i, this._ctx.textBaseline = "top", this._ctx.fillStyle = this.fillColor, this._ctx.fillText(this.char, this.CborderSize, this.CborderSize, null, null, null)
                } else {
                    if (this._ctx.save(), this._ctx.clearRect(0, 0, this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize), this._ctx.font = this.font, D.RightToLeft && (this._ctx.textAlign = "end"), this._ctx.textBaseline = "top", this._ctx.translate(this.CborderSize, this.CborderSize), 1 == this.xs && 1 == this.ys || this._ctx.scale(this.xs, this.ys), this.fillColor && this.borderColor ? (this._ctx.strokeStyle = this.borderColor, this._ctx.lineWidth = this.lineWidth, this._ctx.strokeText(this.char, 0, 0, null, null, 0, null), this._ctx.fillStyle = this.fillColor, this._ctx.fillText(this.char, 0, 0, null, null, null)) : -1 === this.lineWidth ? (this._ctx.fillStyle = this.fillColor ? this.fillColor : "white", this._ctx.fillText(this.char, 0, 0, null, null, null)) : (this._ctx.strokeStyle = this.borderColor ? this.borderColor : "white", this._ctx.lineWidth = this.lineWidth, this._ctx.strokeText(this.char, 0, 0, null, null, 0, null)), this.underLine) {
                        this._ctx.lineWidth = 1, this._ctx.strokeStyle = this.fillColor, this._ctx.beginPath(), this._ctx.moveTo(0, this.fontSize + 1);
                        var r = this._ctx.measureText(this.char).width + 1;
                        this._ctx.lineTo(r, this.fontSize + 1), this._ctx.stroke()
                    }
                    this._ctx.restore()
                }
                this.borderSize = this.CborderSize, this.completeCreate()
            }, e.onresize = function(t, e) {
                this._w = t, this._h = e, this._allowMerageInAtlas = !0
            }, e.clearAtlasSource = function() {}, l(0, e, "allowMerageInAtlas", function() {
                return this._allowMerageInAtlas
            }), l(0, e, "atlasSource", function() {
                return this.canvas
            }), l(0, e, "enableMerageInAtlas", function() {
                return this._enableMerageInAtlas
            }, function(t) {
                this._enableMerageInAtlas = t
            }), a.createOneChar = function(t, e) {
                return new a(t, e)
            }, a
        }(),
        Xt = function(t) {
            function o(t, e, i, r, s, a, n, h, l) {
                void 0 === i && (i = 6408), void 0 === r && (r = 5121), void 0 === s && (s = 34041), void 0 === a && (a = !1), void 0 === n && (n = !1), void 0 === h && (h = -1), void 0 === l && (l = 1), o.__super.call(this), this._w = t, this._h = e, this._surfaceFormat = i, this._surfaceType = r, this._depthStencilFormat = s, g.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189), this._mipMap = a, this._repeat = n, this._minFifter = h, this._magFifter = l
            }
            c(o, "t_tl.webgl.resource.WebGLRenderTarget", i);
            var e = o.prototype;
            return e.recreateResource = function() {
                var t = bt.mainContext;
                this._frameBuffer || (this._frameBuffer = t.createFramebuffer()), this._source || (this._source = t.createTexture());
                var e = yt.curBindTexTarget,
                    i = yt.curBindTexValue;
                yt.bindTexture(t, 3553, this._source), t.texImage2D(3553, 0, 6408, this._w, this._h, 0, this._surfaceFormat, this._surfaceType, null);
                var r = this._minFifter,
                    s = this._magFifter,
                    a = this._repeat ? 10497 : 33071,
                    n = u.isPOT(this._w, this._h);
                if (n ? (this._mipMap ? -1 !== r || (r = 9987) : -1 !== r || (r = 9729), -1 !== s || (s = 9729), t.texParameteri(3553, 10241, r), t.texParameteri(3553, 10240, s), t.texParameteri(3553, 10242, a), t.texParameteri(3553, 10243, a), this._mipMap && t.generateMipmap(3553)) : (-1 !== r || (r = 9729), -1 !== s || (s = 9729), t.texParameteri(3553, 10241, r), t.texParameteri(3553, 10240, s), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), t.bindFramebuffer(36160, this._frameBuffer), t.framebufferTexture2D(36160, 36064, 3553, this._source, 0), this._depthStencilFormat) switch (this._depthStencilBuffer || (this._depthStencilBuffer = t.createRenderbuffer()), t.bindRenderbuffer(36161, this._depthStencilBuffer), t.renderbufferStorage(36161, this._depthStencilFormat, this._w, this._h), this._depthStencilFormat) {
                    case 33189:
                        t.framebufferRenderbuffer(36160, 36096, 36161, this._depthStencilBuffer);
                        break;
                    case 36168:
                        t.framebufferRenderbuffer(36160, 36128, 36161, this._depthStencilBuffer);
                        break;
                    case 34041:
                        t.framebufferRenderbuffer(36160, 33306, 36161, this._depthStencilBuffer)
                }
                t.bindFramebuffer(36160, null), e && i && yt.bindTexture(t, e, i), t.bindRenderbuffer(36161, null), n && this._mipMap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4, this.completeCreate()
            }, e.disposeResource = function() {
                this._frameBuffer && (bt.mainContext.deleteTexture(this._source), bt.mainContext.deleteFramebuffer(this._frameBuffer), bt.mainContext.deleteRenderbuffer(this._depthStencilBuffer), this._source = null, this._frameBuffer = null, this._depthStencilBuffer = null, this.memorySize = 0)
            }, l(0, e, "depthStencilBuffer", function() {
                return this._depthStencilBuffer
            }), l(0, e, "frameBuffer", function() {
                return this._frameBuffer
            }), o
        }(),
        Kt = function(t) {
            function h(t, e, i, r, s, a, n) {
                this.offsetX = 0, this.offsetY = 0, h.__super.call(this), this.repeat = !0, this.mipmap = !1, this.minFifter = -1, this.magFifter = -1, this.atlasImage = a, this.canvas = t, this._ctx = t.getContext("2d", void 0), this._w = r, this._h = s, this.offsetX = e, this.offsetY = i, this.src = n, this._enableMerageInAtlas = !0, k.enabled && this._w < k.atlasLimitWidth && this._h < k.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1
            }
            c(h, "t_tl.webgl.resource.WebGLSubImage", i);
            var e = h.prototype;
            return T.imps(e, {
                "t_tl.webgl.resource.IMergeAtlasBitmap": !0
            }), e.size = function(t, e) {
                this._w = t, this._h = e, this._ctx && this._ctx.size(t, e), this.canvas && (this.canvas.height = e, this.canvas.width = t)
            }, e.recreateResource = function() {
                this.size(this._w, this._h), this._ctx.drawImage(this.atlasImage, this.offsetX, this.offsetY, this._w, this._h, 0, 0, this._w, this._h), this._allowMerageInAtlas && this._enableMerageInAtlas ? this.memorySize = 0 : this.createWebGlTexture(), this.completeCreate()
            }, e.createWebGlTexture = function() {
                var t = bt.mainContext;
                if (!this.canvas) throw "create GLTextur err:no data:" + this.canvas;
                var e = this._source = t.createTexture(),
                    i = yt.curBindTexTarget,
                    r = yt.curBindTexValue;
                yt.bindTexture(t, 3553, e), g.isConchWebGL ? t.texImage2DEx(!0, 3553, 0, 6408, 6408, 5121, this.canvas) : (t.pixelStorei(37441, !0), t.texImage2D(3553, 0, 6408, 6408, 5121, this.canvas), t.pixelStorei(37441, !1));
                var s = this.minFifter,
                    a = this.magFifter,
                    n = this.repeat ? 10497 : 33071,
                    h = u.isPOT(this.width, this.height);
                h ? (this.mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10242, n), t.texParameteri(3553, 10243, n), this.mipmap && t.generateMipmap(3553)) : (-1 !== s || (s = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), i && r && yt.bindTexture(t, i, r), this.canvas = null, h && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4
            }, e.disposeResource = function() {
                k.enabled && this._allowMerageInAtlas || !this._source || (bt.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0)
            }, e.clearAtlasSource = function() {}, l(0, e, "allowMerageInAtlas", function() {
                return this._allowMerageInAtlas
            }), l(0, e, "atlasSource", function() {
                return this.canvas
            }), l(0, e, "enableMerageInAtlas", function() {
                return this._allowMerageInAtlas
            }, function(t) {
                this._allowMerageInAtlas = t
            }), h
        }(),
        Qt = function(t) {
            function o(t, e, i, r) {
                if (this._curActTexIndex = 0, this.tag = {}, this._program = null, this._params = null, this._paramsMap = {}, this._offset = 0, o.__super.call(this), !t || !e) throw "Shader Error";
                this._id = ++o._count, this._vs = t, this._ps = e, this._nameMap = r || {}, null != i && (o.sharders[i] = this)
            }
            c(o, "t_tl.webgl.shader.Shader", Bt);
            var e = o.prototype;
            return e.recreateResource = function() {
                this._compile(), this.completeCreate(), this.memorySize = 0
            }, e.disposeResource = function() {
                bt.mainContext.deleteShader(this._vshader), bt.mainContext.deleteShader(this._pshader), bt.mainContext.deleteProgram(this._program), this._vshader = this._pshader = this._program = null, this._params = null, this._paramsMap = {}, this.memorySize = 0, this._curActTexIndex = 0
            }, e._compile = function() {
                if (this._vs && this._ps && !this._params) {
                    this._reCompile = !0, this._params = [];
                    var t = [this._vs, this._ps],
                        e = bt.mainContext;
                    if (this._program = e.createProgram(), this._vshader = o._createShader(e, t[0], 35633), this._pshader = o._createShader(e, t[1], 35632), e.attachShader(this._program, this._vshader), e.attachShader(this._program, this._pshader), e.linkProgram(this._program), !g.isConchApp && !e.getProgramParameter(this._program, 35714)) throw e.getProgramInfoLog(this._program);
                    var i, r, s = 0,
                        a = 0;
                    for (a = g.isConchApp ? e.getProgramParameterEx(this._vs, this._ps, "", 35721) : e.getProgramParameter(this._program, 35721), s = 0; s < a; s++) {
                        var n = null;
                        i = {
                            vartype: "attribute",
                            glfun: null,
                            ivartype: 0,
                            attrib: n = g.isConchApp ? e.getActiveAttribEx(this._vs, this._ps, "", s) : e.getActiveAttrib(this._program, s),
                            location: e.getAttribLocation(this._program, n.name),
                            name: n.name,
                            type: n.type,
                            isArray: !1,
                            isSame: !1,
                            preValue: null,
                            indexOfParams: 0
                        }, this._params.push(i)
                    }
                    var h = 0;
                    for (h = g.isConchApp ? e.getProgramParameterEx(this._vs, this._ps, "", 35718) : e.getProgramParameter(this._program, 35718), s = 0; s < h; s++) {
                        var l = null;
                        l = g.isConchApp ? e.getActiveUniformEx(this._vs, this._ps, "", s) : e.getActiveUniform(this._program, s), 0 < (i = {
                            vartype: "uniform",
                            glfun: null,
                            ivartype: 1,
                            attrib: n,
                            location: e.getUniformLocation(this._program, l.name),
                            name: l.name,
                            type: l.type,
                            isArray: !1,
                            isSame: !1,
                            preValue: null,
                            indexOfParams: 0
                        }).name.indexOf("[0]") && (i.name = i.name.substr(0, i.name.length - 3), i.isArray = !0, i.location = e.getUniformLocation(this._program, i.name)), this._params.push(i)
                    }
                    for (s = 0, r = this._params.length; s < r; s++)
                        if ((i = this._params[s]).indexOfParams = s, i.index = 1, i.value = [i.location, null], i.codename = i.name, i.name = this._nameMap[i.codename] ? this._nameMap[i.codename] : i.codename, (this._paramsMap[i.name] = i)._this = this, i.uploadedValue = [], "attribute" !== i.vartype) switch (i.type) {
                            case 5124:
                                i.fun = i.isArray ? this._uniform1iv : this._uniform1i;
                                break;
                            case 5126:
                                i.fun = i.isArray ? this._uniform1fv : this._uniform1f;
                                break;
                            case 35664:
                                i.fun = i.isArray ? this._uniform_vec2v : this._uniform_vec2;
                                break;
                            case 35665:
                                i.fun = i.isArray ? this._uniform_vec3v : this._uniform_vec3;
                                break;
                            case 35666:
                                i.fun = i.isArray ? this._uniform_vec4v : this._uniform_vec4;
                                break;
                            case 35678:
                                i.fun = this._uniform_sampler2D;
                                break;
                            case 35680:
                                i.fun = this._uniform_samplerCube;
                                break;
                            case 35676:
                                i.glfun = e.uniformMatrix4fv, i.fun = this._uniformMatrix4fv;
                                break;
                            case 35670:
                                i.fun = this._uniform1i;
                                break;
                            case 35674:
                            case 35675:
                            default:
                                throw new Error("compile shader err!")
                        } else i.fun = this._attribute
                }
            }, e.getUniform = function(t) {
                return this._paramsMap[t]
            }, e._attribute = function(t, e) {
                var i = bt.mainContext,
                    r = Ot._enableAtributes,
                    s = t.location;
                return r[s] || i.enableVertexAttribArray(s), i.vertexAttribPointer(s, e[0], e[1], e[2], e[3], e[4] + this._offset), r[s] = Ot._bindVertexBuffer, 1
            }, e._uniform1f = function(t, e) {
                var i = t.uploadedValue;
                return i[0] !== e ? (bt.mainContext.uniform1f(t.location, i[0] = e), 1) : 0
            }, e._uniform1fv = function(t, e) {
                if (e.length < 4) {
                    var i = t.uploadedValue;
                    return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (bt.mainContext.uniform1fv(t.location, e), i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0
                }
                return bt.mainContext.uniform1fv(t.location, e), 1
            }, e._uniform_vec2 = function(t, e) {
                var i = t.uploadedValue;
                return i[0] !== e[0] || i[1] !== e[1] ? (bt.mainContext.uniform2f(t.location, i[0] = e[0], i[1] = e[1]), 1) : 0
            }, e._uniform_vec2v = function(t, e) {
                if (e.length < 2) {
                    var i = t.uploadedValue;
                    return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (bt.mainContext.uniform2fv(t.location, e), i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0
                }
                return bt.mainContext.uniform2fv(t.location, e), 1
            }, e._uniform_vec3 = function(t, e) {
                var i = t.uploadedValue;
                return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (bt.mainContext.uniform3f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]), 1) : 0
            }, e._uniform_vec3v = function(t, e) {
                return bt.mainContext.uniform3fv(t.location, e), 1
            }, e._uniform_vec4 = function(t, e) {
                var i = t.uploadedValue;
                return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (bt.mainContext.uniform4f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]), 1) : 0
            }, e._uniform_vec4v = function(t, e) {
                return bt.mainContext.uniform4fv(t.location, e), 1
            }, e._uniformMatrix2fv = function(t, e) {
                return bt.mainContext.uniformMatrix2fv(t.location, !1, e), 1
            }, e._uniformMatrix3fv = function(t, e) {
                return bt.mainContext.uniformMatrix3fv(t.location, !1, e), 1
            }, e._uniformMatrix4fv = function(t, e) {
                return bt.mainContext.uniformMatrix4fv(t.location, !1, e), 1
            }, e._uniform1i = function(t, e) {
                var i = t.uploadedValue;
                return i[0] !== e ? (bt.mainContext.uniform1i(t.location, i[0] = e), 1) : 0
            }, e._uniform1iv = function(t, e) {
                return bt.mainContext.uniform1iv(t.location, e), 1
            }, e._uniform_ivec2 = function(t, e) {
                var i = t.uploadedValue;
                return i[0] !== e[0] || i[1] !== e[1] ? (bt.mainContext.uniform2i(t.location, i[0] = e[0], i[1] = e[1]), 1) : 0
            }, e._uniform_ivec2v = function(t, e) {
                return bt.mainContext.uniform2iv(t.location, e), 1
            }, e._uniform_vec3i = function(t, e) {
                var i = t.uploadedValue;
                return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (bt.mainContext.uniform3i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]), 1) : 0
            }, e._uniform_vec3vi = function(t, e) {
                return bt.mainContext.uniform3iv(t.location, e), 1
            }, e._uniform_vec4i = function(t, e) {
                var i = t.uploadedValue;
                return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (bt.mainContext.uniform4i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]), 1) : 0
            }, e._uniform_vec4vi = function(t, e) {
                return bt.mainContext.uniform4iv(t.location, e), 1
            }, e._uniform_sampler2D = function(t, e) {
                var i = bt.mainContext,
                    r = t.uploadedValue;
                return null == r[0] ? (r[0] = this._curActTexIndex, i.uniform1i(t.location, this._curActTexIndex), i.activeTexture(o._TEXTURES[this._curActTexIndex]), yt.bindTexture(i, 3553, e), this._curActTexIndex++, 1) : (i.activeTexture(o._TEXTURES[r[0]]), yt.bindTexture(i, 3553, e), 0)
            }, e._uniform_samplerCube = function(t, e) {
                var i = bt.mainContext,
                    r = t.uploadedValue;
                return null == r[0] ? (r[0] = this._curActTexIndex, i.uniform1i(t.location, this._curActTexIndex), i.activeTexture(o._TEXTURES[this._curActTexIndex]), yt.bindTexture(i, 34067, e), this._curActTexIndex++, 1) : (i.activeTexture(o._TEXTURES[r[0]]), yt.bindTexture(i, 34067, e), 0)
            }, e._noSetValue = function(t) {
                console.log("no....:" + t.name)
            }, e.uploadOne = function(t, e) {
                this.activeResource(), yt.UseProgram(this._program);
                var i = this._paramsMap[t];
                i.fun.call(this, i, e)
            }, e.uploadTexture2D = function(t) {
                C.shaderCall++;
                var e = bt.mainContext;
                e.activeTexture(33984), yt.bindTexture(e, 3553, t)
            }, e.upload = function(t, e) {
                Bt.activeShader = Bt.bindShader = this, this._lastUseFrameCount === C.loopCount || this.activeResource(), yt.UseProgram(this._program), this._reCompile ? (e = this._params, this._reCompile = !1) : e = e || this._params;
                bt.mainContext;
                for (var i, r, s = e.length, a = 0, n = 0; n < s; n++) null !== (r = t[(i = e[n]).name]) && (a += i.fun.call(this, i, r));
                C.shaderCall += a
            }, e.uploadArray = function(t, e, i) {
                Bt.activeShader = this, (Bt.bindShader = this).activeResource(), yt.UseProgram(this._program);
                this._params;
                for (var r, s, a = 0, n = e - 2; 0 <= n; n -= 2)(s = this._paramsMap[t[n]]) && null != (r = t[n + 1]) && (i && i[s.name] && i[s.name].bind(), a += s.fun.call(this, s, r));
                C.shaderCall += a
            }, e.getParams = function() {
                return this._params
            }, o.getShader = function(t) {
                return o.sharders[t]
            }, o.create = function(t, e, i, r) {
                return new o(t, e, i, r)
            }, o.withCompile = function(t, e, i, r) {
                if (i && o.sharders[i]) return o.sharders[i];
                var s = o._preCompileShader[2e-4 * t];
                if (!s) throw new Error("withCompile shader err!" + t);
                return s.createShader(e, i, r)
            }, o.withCompile2D = function(t, e, i, r, s) {
                if (r && o.sharders[r]) return o.sharders[r];
                var a = o._preCompileShader[2e-4 * t + e];
                if (!a) throw new Error("withCompile shader err!" + t + " " + e);
                return a.createShader(i, r, s)
            }, o.addInclude = function(t, e) {
                xt.addInclude(t, e)
            }, o.preCompile = function(t, e, i, r) {
                var s = 2e-4 * t;
                o._preCompileShader[s] = new xt(s, e, i, r)
            }, o.preCompile2D = function(t, e, i, r, s) {
                var a = 2e-4 * t + e;
                o._preCompileShader[a] = new xt(a, i, r, s)
            }, o._createShader = function(t, e, i) {
                var r = t.createShader(i);
                return t.shaderSource(r, e), t.compileShader(r), r
            }, o._TEXTURES = [33984, 33985, 33986, 33987, 33988, 33989, 33990, , 33991, 33992], o._count = 0, o._preCompileShader = {}, o.SHADERNAME2ID = 2e-4, o.sharders = ((o.sharders = []).length = 32, o.sharders), n(o, ["nameKey", function() {
                return this.nameKey = new L
            }]), o
        }(),
        Zt = function(t) {
            function e() {
                this._maxsize = 0, this._upload = !0, this._uploadSize = 0, e.__super.call(this), this.lock = !0
            }
            c(e, "t_tl.webgl.utils.Buffer2D", t);
            var i = e.prototype;
            return i.needSize = function(t) {
                var e = this._byteLength;
                if (t) {
                    var i = this._byteLength + t;
                    i <= this._buffer.byteLength || this._resizeBuffer(i << 1, !0), this._byteLength = i
                }
                return e
            }, i._bufferData = function() {
                this._maxsize = Math.max(this._maxsize, this._byteLength), C.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength, this._buffer = this._buffer.slice(0, this._maxsize + 64), this._checkArrayUse()), this._maxsize = this._byteLength), this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength, Ot._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage), this.memorySize = this._uploadSize), Ot._gl.bufferSubData(this._bufferType, 0, this._buffer)
            }, i._bufferSubData = function(t, e, i) {
                if (void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), this._maxsize = Math.max(this._maxsize, this._byteLength), C.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength, this._buffer = this._buffer.slice(0, this._maxsize + 64), this._checkArrayUse()), this._maxsize = this._byteLength), this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength, Ot._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage), this.memorySize = this._uploadSize), e || i) {
                    var r = this._buffer.slice(e, i);
                    Ot._gl.bufferSubData(this._bufferType, t, r)
                } else Ot._gl.bufferSubData(this._bufferType, t, this._buffer)
            }, i._checkArrayUse = function() {}, i._bind_upload = function() {
                return !!this._upload && (this._upload = !1, this._bind(), this._bufferData(), !0)
            }, i._bind_subUpload = function(t, e, i) {
                return void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), !!this._upload && (this._upload = !1, this._bind(), this._bufferSubData(t, e, i), !0)
            }, i._resizeBuffer = function(t, e) {
                if (t < this._buffer.byteLength) return this;
                if (this.memorySize = t, e && this._buffer && 0 < this._buffer.byteLength) {
                    var i = new ArrayBuffer(t);
                    new Uint8Array(i).set(new Uint8Array(this._buffer), 0), this._buffer = i
                } else this._buffer = new ArrayBuffer(t);
                return this._checkArrayUse(), this._upload = !0, this
            }, i.append = function(t) {
                this._upload = !0;
                var e, i;
                e = t.byteLength, t instanceof Uint8Array ? (this._resizeBuffer(this._byteLength + e, !0), i = new Uint8Array(this._buffer, this._byteLength)) : t instanceof Uint16Array ? (this._resizeBuffer(this._byteLength + e, !0), i = new Uint16Array(this._buffer, this._byteLength)) : t instanceof Float32Array && (this._resizeBuffer(this._byteLength + e, !0), i = new Float32Array(this._buffer, this._byteLength)), i.set(t, 0), this._byteLength += e, this._checkArrayUse()
            }, i.appendU16Array = function(t, e) {
                this._resizeBuffer(this._byteLength + 2 * e, !0);
                for (var i = new Uint16Array(this._buffer, this._byteLength, e), r = 0; r < e; r++) i[r] = t[r];
                this._byteLength += 2 * e, this._checkArrayUse()
            }, i.appendEx = function(t, e) {
                this._upload = !0;
                var i;
                i = t.byteLength, this._resizeBuffer(this._byteLength + i, !0), new e(this._buffer, this._byteLength).set(t, 0), this._byteLength += i, this._checkArrayUse()
            }, i.appendEx2 = function(t, e, i, r) {
                void 0 === r && (r = 1), this._upload = !0;
                var s, a;
                s = i * r, this._resizeBuffer(this._byteLength + s, !0), a = new e(this._buffer, this._byteLength);
                var n = 0;
                for (n = 0; n < i; n++) a[n] = t[n];
                this._byteLength += s, this._checkArrayUse()
            }, i.getBuffer = function() {
                return this._buffer
            }, i.setNeedUpload = function() {
                this._upload = !0
            }, i.getNeedUpload = function() {
                return this._upload
            }, i.upload = function() {
                var t = this._bind_upload();
                return Ot._gl.bindBuffer(this._bufferType, null), Ot._bindActive[this._bufferType] = null, Bt.activeShader = null, t
            }, i.subUpload = function(t, e, i) {
                void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0);
                var r = this._bind_subUpload();
                return Ot._gl.bindBuffer(this._bufferType, null), Ot._bindActive[this._bufferType] = null, Bt.activeShader = null, r
            }, i.disposeResource = function() {
                t.prototype.disposeResource.call(this), this._upload = !0, this._uploadSize = 0
            }, i.clear = function() {
                this._byteLength = 0, this._upload = !0
            }, l(0, i, "bufferLength", function() {
                return this._buffer.byteLength
            }), l(0, i, "byteLength", null, function(t) {
                this._byteLength !== t && (t <= this._buffer.byteLength || this._resizeBuffer(2 * t + 256, !0), this._byteLength = t)
            }), e.__int__ = function(t) {
                $t.QuadrangleIB = $t.create(35044), pt.fillIBQuadrangle($t.QuadrangleIB, 16)
            }, e.FLOAT32 = 4, e.SHORT = 2, e
        }(Ot),
        qt = (function(e) {
            function i(t) {
                this.u_blurX = !1, this.u_color = null, this.u_offset = null, this.u_strength = NaN, this.u_texW = 0, this.u_texH = 0, i.__super.call(this, 9)
            }
            c(i, "t_tl.webgl.shader.d2.value.GlowSV", e);
            var t = i.prototype;
            t.setValue = function(t) {
                e.prototype.setValue.call(this, t)
            }, t.clear = function() {
                e.prototype.clear.call(this)
            }
        }(Ht), function(t) {
            function e(t) {
                e.__super.call(this, 64), this.defines.add(64)
            }
            c(e, "t_tl.webgl.shader.d2.value.TextSV", t);
            var i = e.prototype;
            return i.release = function() {
                (e.pool[e._length++] = this).clear()
            }, i.clear = function() {
                t.prototype.clear.call(this)
            }, e.create = function() {
                return e._length ? e.pool[--e._length] : new e(null)
            }, e.pool = [], e._length = 0, e
        }(Ht)),
        jt = function(t) {
            function s(t, e, i, r) {
                this._params2dQuick1 = null, this._params2dQuick2 = null, this._shaderValueWidth = NaN, this._shaderValueHeight = NaN, s.__super.call(this, t, e, i, r)
            }
            c(s, "t_tl.webgl.shader.d2.Shader2X", t);
            var e = s.prototype;
            return e.upload2dQuick1 = function(t) {
                this.upload(t, this._params2dQuick1 || this._make2dQuick1())
            }, e._make2dQuick1 = function() {
                if (!this._params2dQuick1) {
                    this.activeResource(), this._params2dQuick1 = [];
                    for (var t, e = this._params, i = 0, r = e.length; i < r; i++) t = e[i], (g.isFlash || "size" !== t.name && "position" !== t.name && "texcoord" !== t.name) && this._params2dQuick1.push(t)
                }
                return this._params2dQuick1
            }, e.disposeResource = function() {
                t.prototype.disposeResource.call(this), this._params2dQuick1 = null, this._params2dQuick2 = null
            }, e.upload2dQuick2 = function(t) {
                this.upload(t, this._params2dQuick2 || this._make2dQuick2())
            }, e._make2dQuick2 = function() {
                if (!this._params2dQuick2) {
                    this.activeResource(), this._params2dQuick2 = [];
                    for (var t, e = this._params, i = 0, r = e.length; i < r; i++) t = e[i], (g.isFlash || "size" !== t.name) && this._params2dQuick2.push(t)
                }
                return this._params2dQuick2
            }, s.create = function(t, e, i, r) {
                return new s(t, e, i, r)
            }, s
        }(Qt),
        $t = function(t) {
            function e(t) {
                this._uint8Array = null, this._uint16Array = null, void 0 === t && (t = 35044), e.__super.call(this), this._bufferUsage = t, this._bufferType = 34963, g.isFlash || (this._buffer = new ArrayBuffer(8))
            }
            c(e, "t_tl.webgl.utils.IndexBuffer2D", Zt);
            var i = e.prototype;
            return i._checkArrayUse = function() {
                this._uint8Array && (this._uint8Array = new Uint8Array(this._buffer)), this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer))
            }, i.getUint8Array = function() {
                return this._uint8Array || (this._uint8Array = new Uint8Array(this._buffer))
            }, i.getUint16Array = function() {
                return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer))
            }, i.destory = function() {
                this._uint16Array = null, this._uint8Array = null, this._buffer = null
            }, e.QuadrangleIB = null, e.create = function(t) {
                return void 0 === t && (t = 35044), new e(t)
            }, e
        }(),
        Jt = function(i) {
            function r(t, e) {
                this._floatArray32 = null, this._vertexStride = 0, r.__super.call(this), this._vertexStride = t, this._bufferUsage = e, this._bufferType = 34962, g.isFlash || (this._buffer = new ArrayBuffer(8)), this.getFloat32Array()
            }
            c(r, "t_tl.webgl.utils.VertexBuffer2D", i);
            var t = r.prototype;
            return t.getFloat32Array = function() {
                return this._floatArray32 || (this._floatArray32 = new Float32Array(this._buffer))
            }, t.bind = function(t) {
                t && t._bind(), this._bind()
            }, t.insertData = function(t, e) {
                this.getFloat32Array().set(t, e), this._upload = !0
            }, t.bind_upload = function(t) {
                t._bind_upload() || t._bind(), this._bind_upload() || this._bind()
            }, t._checkArrayUse = function() {
                this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer))
            }, t.disposeResource = function() {
                i.prototype.disposeResource.call(this);
                var t = Ot._enableAtributes;
                if (!g.isConchWebGL)
                    for (var e = 0; e < 10; e++) bt.mainContext.disableVertexAttribArray(e), t[e] = null
            }, t.destory = function() {
                this._byteLength = 0, this._upload = !0, this._buffer = null, this._floatArray32 = null
            }, l(0, t, "vertexStride", function() {
                return this._vertexStride
            }), r.create = function(t, e) {
                return void 0 === e && (e = 35048), new r(t, e)
            }, r
        }(Zt),
        te = function(t) {
            function a(t, e, i, r) {
                if (this._format = 0, this._mipmap = !1, this._allowMerageInAtlas = !1, this._enableMerageInAtlas = !1, this.repeat = !1, this._image = null, this.minFifter = 0, void(this.magFifter = 0) === i && (i = 6408), void 0 === r && (r = !0), a.__super.call(this, t, e), this._format = i, this._mipmap = r, this.repeat = !1, this.minFifter = -1, this.magFifter = -1, "string" == typeof t) this._url = t, this._src = t, this._image = new f.window.Image, e && (e.onload && (this.onload = e.onload), e.onerror && (this.onerror = e.onerror), e.onCreate && e.onCreate(this)), this._image.crossOrigin = t && 0 == t.indexOf("data:") ? null : "", t && (this._image.src = t);
                else if (t instanceof ArrayBuffer) {
                    this._src = e, this._url = this._src;
                    var s = new h(t);
                    s.readUTFBytes(4), s.readUTFBytes(2), s.getInt16();
                    s.endian = "bigEndian", this._w = s.getInt16(), this._h = s.getInt16();
                    s.getInt16(), s.getInt16();
                    this._image = new Uint8Array(t, s.pos), this._format = bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL, k.enabled && this._w < k.atlasLimitWidth && this._h < k.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1
                } else this._src = e, this._url = this._src, this._image = t.source || t, this.onresize();
                this._$5__enableMerageInAtlas = !0
            }
            c(a, "t_tl.webgl.resource.WebGLImage", m);
            var e = a.prototype;
            return T.imps(e, {
                "t_tl.webgl.resource.IMergeAtlasBitmap": !0
            }), e._init_ = function(t, e) {}, e._createWebGlTexture = function() {
                if (!this._image) throw "create GLTextur err:no data:" + this._image;
                var t = bt.mainContext,
                    e = this._source = t.createTexture(),
                    i = yt.curBindTexTarget,
                    r = yt.curBindTexValue;
                if (yt.bindTexture(t, 3553, e), g.isConchWebGL) switch (this._format) {
                    case 6408:
                        t.texImage2DEx(!0, 3553, 0, this._format, 6408, 5121, this._image);
                        break;
                    case bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                        t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image)
                } else {
                    switch (t.pixelStorei(37441, !0), this._format) {
                        case 6408:
                            t.texImage2D(3553, 0, this._format, 6408, 5121, this._image);
                            break;
                        case bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                            t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image)
                    }
                    t.pixelStorei(37441, !1)
                }
                var s = this.minFifter,
                    a = this.magFifter,
                    n = this.repeat ? 10497 : 33071,
                    h = u.isPOT(this._w, this._h);
                h ? (this.mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10242, n), t.texParameteri(3553, 10243, n), this.mipmap && t.generateMipmap(3553)) : (-1 !== s || (s = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), i && r && yt.bindTexture(t, i, r), this._image.onload = null, this._image = null, h && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4, this._recreateLock = !1
            }, e.recreateResource = function() {
                var t = this;
                if (null != this._src && "" !== this._src)
                    if (this._needReleaseAgain = !1, this._image) {
                        if (this._recreateLock) return;
                        this._allowMerageInAtlas && this._$5__enableMerageInAtlas ? (this.memorySize = 0, this._recreateLock = !1) : this._createWebGlTexture(), this.completeCreate()
                    } else {
                        this._recreateLock = !0;
                        var e = this;
                        this._image = new f.window.Image, this._image.crossOrigin = 0 == this._src.indexOf("data:") ? null : "", this._image.onload = function() {
                            if (e._needReleaseAgain) return e._needReleaseAgain = !1, e._image.onload = null, void(e._image = null);
                            e._allowMerageInAtlas && e._enableMerageInAtlas ? (t.memorySize = 0, t._recreateLock = !1) : e._createWebGlTexture(), e.completeCreate()
                        }, this._image.src = this._src
                    }
            }, e.disposeResource = function() {
                this._recreateLock && (this._needReleaseAgain = !0), this._source && (bt.mainContext.deleteTexture(this._source), this._source = null, this._image = null, this.memorySize = 0)
            }, e.onresize = function() {
                this._w = this._image.width, this._h = this._image.height, k.enabled && this._w < k.atlasLimitWidth && this._h < k.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1
            }, e.clearAtlasSource = function() {
                this._image = null
            }, l(0, e, "format", function() {
                return this._format
            }), l(0, e, "enableMerageInAtlas", function() {
                return this._$5__enableMerageInAtlas
            }, function(t) {
                this._$5__enableMerageInAtlas = t
            }), l(0, e, "mipmap", function() {
                return this._mipmap
            }), l(0, e, "allowMerageInAtlas", function() {
                return this._allowMerageInAtlas
            }), l(0, e, "atlasSource", function() {
                return this._image
            }), l(0, e, "onload", null, function(t) {
                var e = this;
                this._onload = t, this._image && (this._image.onload = null != this._onload ? function() {
                    e.onresize(), e._onload()
                } : null)
            }), l(0, e, "onerror", null, function(t) {
                var e = this;
                this._onerror = t, this._image && (this._image.onerror = null != this._onerror ? function() {
                    e._onerror()
                } : null)
            }), a
        }();
    T.__init([ft, U, At, xt])
}(window, document, t_t), "function" == typeof define && define.amd && define("t_tl.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
            value: !0
        }), t_t) {
        var r = t_t[i];
        r && r.__isclass && (e[i] = r)
    }
});
! function(t, e, st) {
    st.un, st.uns;
    var i = st.static,
        n = st.class,
        a = st.getset,
        f = st.__newvec,
        h = t_tl.maths.Bezier,
        c = t_tl.utils.Browser,
        wt = t_tl.utils.Byte,
        s = (t_tl.events.Event, t_tl.events.EventDispatcher),
        r = t_tl.display.Graphics,
        l = t_tl.resource.HTMLCanvas,
        o = t_tl.utils.Handler,
        u = t_tl.net.Loader,
        d = t_tl.maths.MathUtil,
        St = t_tl.maths.Matrix,
        _ = (t_tl.display.Node, t_tl.maths.Point, t_tl.maths.Rectangle),
        m = t_tl.renders.Render,
        p = (t_tl.renders.RenderContext, t_tl.resource.Resource),
        y = t_tl.utils.RunDriver,
        rt = t_tl.display.Sprite,
        x = t_tl.utils.Stat,
        Ft = t_tl.resource.Texture,
        g = t_tl.net.URL,
        v = t_tl.utils.Utils,
        S = function() {
            function t() {
                this.nodes = null, this.name = null, this.playTime = NaN, this.bone3DMap = null, this.totalKeyframeDatasLength = 0
            }
            return n(t, "t_tl.ani.AnimationContent"), t
        }(),
        F = function() {
            function t() {
                this.name = null, this.parentIndex = 0, this.parent = null, this.keyframeWidth = 0, this.lerpType = 0, this.interpolationMethod = null, this.childs = null, this.keyFrame = null, this.playTime = NaN, this.extenData = null, this.dataOffset = 0
            }
            return n(t, "t_tl.ani.AnimationNodeContent"), t
        }(),
        D = function() {
            function t() {}
            return n(t, "t_tl.ani.AnimationParser01"), t.parse = function(t, e) {
                var i = e.__getBuffer(),
                    a = 0,
                    s = 0,
                    r = 0,
                    n = 0,
                    h = 0,
                    l = 0,
                    o = 0,
                    u = e.readUTFString();
                t._aniClassName = u;
                var c, d = e.readUTFString().split("\n"),
                    _ = e.getUint8(),
                    p = e.getUint32(),
                    f = e.getUint32();
                0 < p && (c = i.slice(p, f));
                var m = new wt(c);
                for (0 < f && (t._publicExtData = i.slice(f, i.byteLength)), t._useParent = !!e.getUint8(), t._anis.length = _, a = 0; a < _; a++) {
                    var y = t._anis[a] = new S;
                    y.nodes = new Array;
                    var x = y.name = d[e.getUint16()];
                    t._aniMap[x] = a, y.bone3DMap = {}, y.playTime = e.getFloat32();
                    var g = y.nodes.length = e.getUint8();
                    for (s = y.totalKeyframeDatasLength = 0; s < g; s++) {
                        var v = y.nodes[s] = new F;
                        v.childs = [];
                        var D = e.getInt16();
                        0 <= D && (v.name = d[D], y.bone3DMap[v.name] = s), v.keyFrame = new Array, v.parentIndex = e.getInt16(), -1 == v.parentIndex ? v.parent = null : v.parent = y.nodes[v.parentIndex], v.lerpType = e.getUint8();
                        var M = e.getUint32();
                        m.pos = M;
                        var I = v.keyframeWidth = m.getUint16();
                        if (y.totalKeyframeDatasLength += I, 0 === v.lerpType || 1 === v.lerpType)
                            for (v.interpolationMethod = [], v.interpolationMethod.length = I, r = 0; r < I; r++) v.interpolationMethod[r] = R.interpolation[m.getUint8()];
                        null != v.parent && v.parent.childs.push(v);
                        var b = e.getUint16();
                        0 < b && (v.extenData = i.slice(e.pos, e.pos + b), e.pos += b);
                        var N, T = e.getUint16(),
                            A = 0;
                        for (r = 0, n = v.keyFrame.length = T; r < n; r++) {
                            if ((N = v.keyFrame[r] = new k).duration = e.getFloat32(), N.startTime = A, 2 === v.lerpType) {
                                N.interpolationData = [];
                                var C, w = e.getUint8();
                                switch (C = e.getFloat32()) {
                                    case 254:
                                        for (N.interpolationData.length = I, o = 0; o < I; o++) N.interpolationData[o] = 0;
                                        break;
                                    case 255:
                                        for (N.interpolationData.length = I, o = 0; o < I; o++) N.interpolationData[o] = 5;
                                        break;
                                    default:
                                        for (N.interpolationData.push(C), l = 1; l < w; l++) N.interpolationData.push(e.getFloat32())
                                }
                            }
                            for (N.data = new Float32Array(I), h = 0; h < I; h++) N.data[h] = e.getFloat32(), -1e-8 < N.data[h] && N.data[h] < 1e-8 && (N.data[h] = 0);
                            A += N.duration
                        }
                        N.startTime = y.playTime, v.playTime = y.playTime, t._calculateKeyFrame(v, T, I)
                    }
                }
            }, t
        }(),
        M = function() {
            function D() {}
            return n(D, "t_tl.ani.AnimationParser02"), D.READ_DATA = function() {
                D._DATA.offset = D._reader.getUint32(), D._DATA.size = D._reader.getUint32()
            }, D.READ_BLOCK = function() {
                for (var t = D._BLOCK.count = D._reader.getUint16(), e = D._BLOCK.blockStarts = [], i = D._BLOCK.blockLengths = [], a = 0; a < t; a++) e.push(D._reader.getUint32()), i.push(D._reader.getUint32())
            }, D.READ_STRINGS = function() {
                var t = D._reader.getUint32(),
                    e = D._reader.getUint16(),
                    i = D._reader.pos;
                D._reader.pos = t + D._DATA.offset;
                for (var a = 0; a < e; a++) D._strings[a] = D._reader.readUTFString();
                D._reader.pos = i
            }, D.parse = function(t, e) {
                D._templet = t;
                (D._reader = e).__getBuffer();
                D.READ_DATA(), D.READ_BLOCK(), D.READ_STRINGS();
                for (var i = 0, a = D._BLOCK.count; i < a; i++) {
                    var s = e.getUint16(),
                        r = D._strings[s],
                        n = D["READ_" + r];
                    if (null == n) throw new Error("model file err,no this function:" + s + " " + r);
                    n.call()
                }
            }, D.READ_ANIMATIONS = function() {
                var t = D._reader,
                    e = t.__getBuffer(),
                    i = 0,
                    a = 0,
                    s = 0,
                    r = 0,
                    n = t.getUint16(),
                    h = [];
                for (h.length = n, i = 0; i < n; i++) h[i] = R.interpolation[t.getByte()];
                var l = t.getUint8();
                for (D._templet._anis.length = l, i = 0; i < l; i++) {
                    var o = D._templet._anis[i] = {};
                    o.nodes = new Array;
                    var u = o.name = D._strings[t.getUint16()];
                    D._templet._aniMap[u] = i, o.bone3DMap = {}, o.playTime = t.getFloat32();
                    var c = o.nodes.length = t.getInt16();
                    for (a = o.totalKeyframeDatasLength = 0; a < c; a++) {
                        var d = o.nodes[a] = {};
                        d.keyframeWidth = n, d.childs = [];
                        var _ = t.getUint16();
                        0 <= _ && (d.name = D._strings[_], o.bone3DMap[d.name] = a), d.keyFrame = new Array, d.parentIndex = t.getInt16(), -1 == d.parentIndex ? d.parent = null : d.parent = o.nodes[d.parentIndex], o.totalKeyframeDatasLength += n, d.interpolationMethod = h, null != d.parent && d.parent.childs.push(d);
                        var p = t.getUint16(),
                            f = null,
                            m = null;
                        for (s = 0, r = d.keyFrame.length = p; s < r; s++) {
                            (f = d.keyFrame[s] = {}).startTime = t.getFloat32(), m && (m.duration = f.startTime - m.startTime);
                            var y = D._DATA.offset,
                                x = t.getUint32(),
                                g = 4 * n,
                                v = e.slice(y + x, y + x + g);
                            f.data = new Float32Array(v), m = f
                        }
                        f.duration = 0, d.playTime = o.playTime, D._templet._calculateKeyFrame(d, p, n)
                    }
                }
            }, D._templet = null, D._reader = null, D._strings = [], i(D, ["_BLOCK", function() {
                return this._BLOCK = {
                    count: 0
                }
            }, "_DATA", function() {
                return this._DATA = {
                    offset: 0,
                    size: 0
                }
            }]), D
        }(),
        kt = (function() {
            function t() {}
            n(t, "t_tl.ani.AnimationState"), t.stopped = 0, t.paused = 1, t.playing = 2
        }(), function() {
            function s() {
                this.name = null, this.root = null, this.parentBone = null, this.length = 10, this.transform = null, this.inheritScale = !0, this.inheritRotation = !0, this.rotation = NaN, this.resultRotation = NaN, this.d = -1, this._tempMatrix = null, this._sprite = null, this.resultTransform = new zt, this.resultMatrix = new St, this._children = []
            }
            n(s, "t_tl.ani.bone.Bone");
            var t = s.prototype;
            return t.setTempMatrix = function(t) {
                this._tempMatrix = t;
                var e, i = 0;
                for (i = 0, e = this._children.length; i < e; i++) this._children[i].setTempMatrix(this._tempMatrix)
            }, t.update = function(t) {
                var e;
                if (this.rotation = this.transform.skX, t) e = this.resultTransform.getMatrix(), St.mul(e, t, this.resultMatrix), this.resultRotation = this.rotation;
                else if (this.resultRotation = this.rotation + this.parentBone.resultRotation, this.parentBone)
                    if (this.inheritRotation && this.inheritScale) e = this.resultTransform.getMatrix(), St.mul(e, this.parentBone.resultMatrix, this.resultMatrix);
                    else {
                        var i = this.parentBone,
                            a = NaN,
                            s = NaN,
                            r = NaN,
                            n = this.parentBone.resultMatrix;
                        e = this.resultTransform.getMatrix();
                        var h = n.a * e.tx + n.c * e.ty + n.tx,
                            l = n.b * e.tx + n.d * e.ty + n.ty,
                            o = new St;
                        this.inheritRotation ? (a = Math.atan2(i.resultMatrix.b, i.resultMatrix.a), s = Math.cos(a), r = Math.sin(a), o.setTo(s, r, -r, s, 0, 0), St.mul(this._tempMatrix, o, St.TEMP), St.TEMP.copyTo(o), e = this.resultTransform.getMatrix(), St.mul(e, o, this.resultMatrix), this.resultTransform.scX * this.resultTransform.scY < 0 && this.resultMatrix.rotate(.5 * Math.PI)) : (this.inheritScale, e = this.resultTransform.getMatrix(), St.TEMP.identity(), St.TEMP.d = this.d, St.mul(e, St.TEMP, this.resultMatrix)), this.resultMatrix.tx = h, this.resultMatrix.ty = l
                    }
                else(e = this.resultTransform.getMatrix()).copyTo(this.resultMatrix);
                var u, c = 0;
                for (c = 0, u = this._children.length; c < u; c++) this._children[c].update()
            }, t.updateChild = function() {
                var t, e = 0;
                for (e = 0, t = this._children.length; e < t; e++) this._children[e].update()
            }, t.setRotation = function(t) {
                this._sprite && (this._sprite.rotation = 180 * t / Math.PI)
            }, t.updateDraw = function(t, e) {
                s.ShowBones && !s.ShowBones[this.name] || (this._sprite || (this._sprite = new rt, this._sprite.graphics.drawCircle(0, 0, 5, "#ff0000"), this._sprite.graphics.drawLine(0, 0, this.length, 0, "#00ff00"), this._sprite.graphics.fillText(this.name, 0, 0, "20px Arial", "#00ff00", "center"), st.stage.addChild(this._sprite)), this._sprite.x = t + this.resultMatrix.tx, this._sprite.y = e + this.resultMatrix.ty);
                var i, a = 0;
                for (a = 0, i = this._children.length; a < i; a++) this._children[a].updateDraw(t, e)
            }, t.addChild = function(t) {
                this._children.push(t), t.parentBone = this
            }, t.findBone = function(t) {
                if (this.name == t) return this;
                var e, i, a = 0;
                for (a = 0, e = this._children.length; a < e; a++)
                    if (i = this._children[a].findBone(t)) return i;
                return null
            }, t.localToWorld = function(t) {
                var e = t[0],
                    i = t[1];
                t[0] = e * this.resultMatrix.a + i * this.resultMatrix.c + this.resultMatrix.tx, t[1] = e * this.resultMatrix.b + i * this.resultMatrix.d + this.resultMatrix.ty
            }, s.ShowBones = {}, s
        }()),
        Pt = function() {
            function f() {
                this.name = null, this.parent = null, this.attachmentName = null, this.srcDisplayIndex = -1, this.type = "src", this.templet = null, this.currSlotData = null, this.currTexture = null, this.currDisplayData = null, this.displayIndex = -1, this._diyTexture = null, this._parentMatrix = null, this._resultMatrix = null, this._replaceDic = {}, this._curDiyUV = null, this._curDiyVS = null, this._skinSprite = null, this.deformData = null, this._mVerticleArr = null
            }
            n(f, "t_tl.ani.bone.BoneSlot");
            var t = f.prototype;
            return t.showSlotData = function(t, e) {
                void 0 === e && (e = !0), this.currSlotData = t, e && (this.displayIndex = this.srcDisplayIndex), this.currDisplayData = null, this.currTexture = null
            }, t.showDisplayByName = function(t) {
                this.currSlotData && this.showDisplayByIndex(this.currSlotData.getDisplayByName(t))
            }, t.replaceDisplayByName = function(t, e) {
                if (this.currSlotData) {
                    var i;
                    i = this.currSlotData.getDisplayByName(t);
                    var a;
                    a = this.currSlotData.getDisplayByName(e), this.replaceDisplayByIndex(i, a)
                }
            }, t.replaceDisplayByIndex = function(t, e) {
                this.currSlotData && (this._replaceDic[t] = e, this.displayIndex == t && this.showDisplayByIndex(t))
            }, t.showDisplayByIndex = function(t) {
                if (null != this._replaceDic[t] && (t = this._replaceDic[t]), this.currSlotData && -1 < t && t < this.currSlotData.displayArr.length) {
                    if (this.displayIndex = t, this.currDisplayData = this.currSlotData.displayArr[t], this.currDisplayData) {
                        var e = this.currDisplayData.name;
                        this.currTexture = this.templet.getTexture(e), this.currTexture && 0 == this.currDisplayData.type && this.currDisplayData.uvs && (!m.isConchApp || m.isConchApp && "0.9.15" < rt.RUNTIMEVERION) && (this.currTexture = this.currDisplayData.createTexture(this.currTexture))
                    }
                } else this.displayIndex = -1, this.currDisplayData = null, this.currTexture = null
            }, t.replaceSkin = function(t) {
                this._diyTexture = t, this._curDiyUV && (this._curDiyUV.length = 0), this.currDisplayData && this._diyTexture == this.currDisplayData.texture && (this._diyTexture = null)
            }, t.setParentMatrix = function(t) {
                this._parentMatrix = t
            }, t.draw = function(t, e, i, a) {
                if (void 0 === i && (i = !1), void 0 === a && (a = 1), (null != this._diyTexture || null != this.currTexture) && null != this.currDisplayData || this.currDisplayData && 3 == this.currDisplayData.type) {
                    var s, r = this.currTexture;
                    switch (this._diyTexture && (r = this._diyTexture), this.currDisplayData.type) {
                        case 0:
                            if (t) {
                                var n = this.getDisplayMatrix();
                                if (this._parentMatrix) {
                                    var h = !1;
                                    if (n) {
                                        var l;
                                        if (St.mul(n, this._parentMatrix, St.TEMP), i ? (null == this._resultMatrix && (this._resultMatrix = new St), l = this._resultMatrix) : l = new St, !m.isWebGL && this.currDisplayData.uvs || m.isWebGL && this._diyTexture && this.currDisplayData.uvs) {
                                            var o = f._tempMatrix;
                                            o.identity(), this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (o.d = -1), this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4] && this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (h = !0, o.rotate(-Math.PI / 2)), St.mul(o, St.TEMP, l)
                                        } else St.TEMP.copyTo(l);
                                        h ? t.drawTexture(r, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, l) : t.drawTexture(r, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, l)
                                    }
                                }
                            }
                            break;
                        case 1:
                            if (i ? (null == this._skinSprite && (this._skinSprite = f.createSkinMesh()), s = this._skinSprite) : s = f.createSkinMesh(), null == s) return;
                            var u;
                            if (null == this.currDisplayData.bones) {
                                var c, d = this.currDisplayData.weights;
                                this.deformData && (d = this.deformData), this._diyTexture ? (this._curDiyUV || (this._curDiyUV = []), 0 == this._curDiyUV.length && (this._curDiyUV = w.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV), this._curDiyUV = w.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)), c = this._curDiyUV) : c = this.currDisplayData.uvs, this._mVerticleArr = d;
                                this.currDisplayData.triangles.length;
                                u = this.currDisplayData.triangles, s.init2(r, null, u, this._mVerticleArr, c);
                                var _, p = this.getDisplayMatrix();
                                if (this._parentMatrix)
                                    if (p) St.mul(p, this._parentMatrix, St.TEMP), i ? (null == this._resultMatrix && (this._resultMatrix = new St), _ = this._resultMatrix) : _ = new St, St.TEMP.copyTo(_), s.transform = _
                            } else this.skinMesh(e, s, a);
                            t.drawSkin(s);
                            break;
                        case 2:
                            if (i ? (null == this._skinSprite && (this._skinSprite = f.createSkinMesh()), s = this._skinSprite) : s = f.createSkinMesh(), null == s) return;
                            this.skinMesh(e, s, a), t.drawSkin(s)
                    }
                }
            }, t.skinMesh = function(t, e, i) {
                var a, s = this.currTexture,
                    r = this.currDisplayData.bones;
                this._diyTexture ? (s = this._diyTexture, this._curDiyUV || (this._curDiyUV = []), 0 == this._curDiyUV.length && (this._curDiyUV = w.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV), this._curDiyUV = w.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)), a = this._curDiyUV) : a = this.currDisplayData.uvs;
                var n, h, l = this.currDisplayData.weights,
                    o = this.currDisplayData.triangles,
                    u = 0,
                    c = 0,
                    d = 0,
                    _ = NaN,
                    p = NaN,
                    f = 0,
                    m = 0,
                    y = [],
                    x = 0,
                    g = 0;
                if (this.deformData && 0 < this.deformData.length) {
                    var v = 0;
                    for (x = 0, g = r.length; x < g;) {
                        for (d = r[x++] + x, c = u = 0; x < d; x++) h = t[r[x]], _ = l[f] + this.deformData[v++], p = l[f + 1] + this.deformData[v++], m = l[f + 2], u += (_ * h.a + p * h.c + h.tx) * m, c += (_ * h.b + p * h.d + h.ty) * m, f += 3;
                        y.push(u, c)
                    }
                } else
                    for (x = 0, g = r.length; x < g;) {
                        for (d = r[x++] + x, c = u = 0; x < d; x++) h = t[r[x]], _ = l[f], p = l[f + 1], m = l[f + 2], u += (_ * h.a + p * h.c + h.tx) * m, c += (_ * h.b + p * h.d + h.ty) * m, f += 3;
                        y.push(u, c)
                    }
                this._mVerticleArr = y, n = o, e.init2(s, null, n, this._mVerticleArr, a)
            }, t.drawBonePoint = function(t) {
                t && this._parentMatrix && t.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, "#ff0000")
            }, t.getDisplayMatrix = function() {
                return this.currDisplayData ? this.currDisplayData.transform.getMatrix() : null
            }, t.getMatrix = function() {
                return this._resultMatrix
            }, t.copy = function() {
                var t = new f;
                return t.type = "copy", t.name = this.name, t.attachmentName = this.attachmentName, t.srcDisplayIndex = this.srcDisplayIndex, t.parent = this.parent, t.displayIndex = this.displayIndex, t.templet = this.templet, t.currSlotData = this.currSlotData, t.currTexture = this.currTexture, t.currDisplayData = this.currDisplayData, t
            }, f.createSkinMesh = function() {
                return m.isWebGL || m.isConchApp ? y.skinAniSprite() : m.isWebGL ? null : E.useSimpleMeshInCanvas ? new O : new L
            }, i(f, ["_tempMatrix", function() {
                return this._tempMatrix = new St
            }]), f
        }(),
        I = function() {
            function t() {
                this.mesh = null, this.transform = null, this.context = null, this.mode = 0
            }
            n(t, "t_tl.ani.bone.canvasmesh.CanvasMeshRender");
            var e = t.prototype;
            return e.renderToContext = function(t) {
                this.context = t.ctx || t, this.mesh && (0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh))
            }, e._renderNoIndexes = function(t) {
                var e = 0,
                    i = t.vertices.length / 2,
                    a = 0;
                for (e = 0; e < i - 2; e++) a = 2 * e, this._renderDrawTriangle(t, a, a + 2, a + 4)
            }, e._renderWithIndexes = function(t) {
                var e = t.indexes,
                    i = 0,
                    a = e.length;
                for (i = 0; i < a; i += 3) {
                    var s = 2 * e[i],
                        r = 2 * e[i + 1],
                        n = 2 * e[i + 2];
                    this._renderDrawTriangle(t, s, r, n)
                }
            }, e._renderDrawTriangle = function(t, e, i, a) {
                var s = this.context,
                    r = t.uvs,
                    n = t.vertices,
                    h = t.texture,
                    l = h.bitmap,
                    o = l.source,
                    u = h.width,
                    c = h.height,
                    d = l.width,
                    _ = l.height,
                    p = NaN,
                    f = NaN,
                    m = NaN,
                    y = NaN,
                    x = NaN,
                    g = NaN;
                if (t.useUvTransform) {
                    var v = t.uvTransform;
                    p = (r[e] * v.a + r[e + 1] * v.c + v.tx) * d, f = (r[i] * v.a + r[i + 1] * v.c + v.tx) * d, m = (r[a] * v.a + r[a + 1] * v.c + v.tx) * d, y = (r[e] * v.b + r[e + 1] * v.d + v.ty) * _, x = (r[i] * v.b + r[i + 1] * v.d + v.ty) * _, g = (r[a] * v.b + r[a + 1] * v.d + v.ty) * _
                } else p = r[e] * d, f = r[i] * d, m = r[a] * d, y = r[e + 1] * _, x = r[i + 1] * _, g = r[a + 1] * _;
                var D = n[e],
                    M = n[i],
                    I = n[a],
                    b = n[e + 1],
                    N = n[i + 1],
                    T = n[a + 1];
                if (0 < t.canvasPadding) {
                    var A = t.canvasPadding,
                        C = t.canvasPadding,
                        w = (D + M + I) / 3,
                        S = (b + N + T) / 3,
                        F = D - w,
                        k = b - S,
                        P = Math.sqrt(F * F + k * k);
                    D = w + F / P * (P + A), b = S + k / P * (P + C), k = N - S, M = w + (F = M - w) / (P = Math.sqrt(F * F + k * k)) * (P + A), N = S + k / P * (P + C), k = T - S, I = w + (F = I - w) / (P = Math.sqrt(F * F + k * k)) * (P + A), T = S + k / P * (P + C)
                }
                if (s.save(), this.transform) {
                    var B = this.transform;
                    s.transform(B.a, B.b, B.c, B.d, B.tx, B.ty)
                }
                s.beginPath(), s.moveTo(D, b), s.lineTo(M, N), s.lineTo(I, T), s.closePath(), s.clip();
                var U = 1 / (p * x + y * m + f * g - x * m - y * f - p * g),
                    L = D * x + y * I + M * g - x * I - y * M - D * g,
                    R = p * M + D * m + f * I - M * m - D * f - p * I,
                    O = p * x * I + y * M * m + D * f * g - D * x * m - y * f * I - p * M * g,
                    E = b * x + y * T + N * g - x * T - y * N - b * g,
                    K = p * N + b * m + f * T - N * m - b * f - p * T,
                    Y = p * x * T + y * N * m + b * f * g - b * x * m - y * f * T - p * N * g;
                s.transform(L * U, E * U, R * U, K * U, O * U, Y * U), s.drawImage(o, h.uv[0] * d, h.uv[1] * _, u, c, h.uv[0] * d, h.uv[1] * _, u, c), s.restore()
            }, t
        }(),
        b = function() {
            function t() {
                this.texture = null, this.uvs = [0, 0, 1, 0, 1, 1, 0, 1], this.vertices = [0, 0, 100, 0, 100, 100, 0, 100], this.indexes = [0, 1, 3, 3, 1, 2], this.uvTransform = null, this.useUvTransform = !1, this.canvasPadding = 1
            }
            return n(t, "t_tl.ani.bone.canvasmesh.MeshData"), t.prototype.getBounds = function() {
                return _._getWrapRec(this.vertices)
            }, t
        }(),
        Bt = function() {
            function t() {
                this.skinName = null, this.deformSlotDataList = []
            }
            return n(t, "t_tl.ani.bone.DeformAniData"), t
        }(),
        Ut = function() {
            function t() {
                this.deformSlotDisplayList = []
            }
            return n(t, "t_tl.ani.bone.DeformSlotData"), t
        }(),
        Lt = function() {
            function t() {
                this.boneSlot = null, this.slotIndex = -1, this.attachment = null, this.deformData = null, this.frameIndex = 0, this.timeList = [], this.vectices = [], this.tweenKeyList = []
            }
            n(t, "t_tl.ani.bone.DeformSlotDisplayData");
            var e = t.prototype;
            return e.binarySearch1 = function(t, e) {
                var i = 0,
                    a = t.length - 2;
                if (0 == a) return 1;
                for (var s = a >>> 1;;) {
                    if (t[Math.floor(s + 1)] <= e ? i = s + 1 : a = s, i == a) return i + 1;
                    s = i + a >>> 1
                }
                return 0
            }, e.apply = function(t, e, i) {
                if (void 0 === i && (i = 1), t += .05, !(this.timeList.length <= 0)) {
                    var a = 0;
                    if (!(t < this.timeList[0])) {
                        var s = this.vectices[0].length,
                            r = [],
                            n = this.binarySearch1(this.timeList, t);
                        if (this.frameIndex = n, t >= this.timeList[this.timeList.length - 1]) {
                            var h = this.vectices[this.vectices.length - 1];
                            if (i < 1)
                                for (a = 0; a < s; a++) r[a] += (h[a] - r[a]) * i;
                            else
                                for (a = 0; a < s; a++) r[a] = h[a];
                            this.deformData = r
                        } else {
                            this.tweenKeyList[this.frameIndex];
                            var l = this.vectices[this.frameIndex - 1],
                                o = this.vectices[this.frameIndex],
                                u = this.timeList[this.frameIndex - 1],
                                c = this.timeList[this.frameIndex];
                            i = this.tweenKeyList[n - 1] ? (t - u) / (c - u) : 0;
                            var d = NaN;
                            for (a = 0; a < s; a++) d = l[a], r[a] = d + (o[a] - d) * i;
                            this.deformData = r
                        }
                    }
                }
            }, t
        }(),
        Rt = function() {
            function t() {
                this.time = NaN, this.drawOrder = []
            }
            return n(t, "t_tl.ani.bone.DrawOrderData"), t
        }(),
        Ot = function() {
            function t() {
                this.name = null, this.intValue = 0, this.floatValue = NaN, this.stringValue = null, this.time = NaN
            }
            return n(t, "t_tl.ani.bone.EventData"), t
        }(),
        N = function() {
            function at(t, e) {
                this._targetBone = null, this._bones = null, this._data = null, this.name = null, this.mix = NaN, this.bendDirection = NaN, this.isSpine = !0, this._sp = null, this.isDebug = !1, this._data = t, this._targetBone = e[t.targetBoneIndex], this.isSpine = t.isSpine, null == this._bones && (this._bones = []);
                for (var i = this._bones.length = 0, a = t.boneIndexs.length; i < a; i++) this._bones.push(e[t.boneIndexs[i]]);
                this.name = t.name, this.mix = t.mix, this.bendDirection = t.bendDirection
            }
            n(at, "t_tl.ani.bone.IkConstraint");
            var t = at.prototype;
            return t.apply = function() {
                switch (this._bones.length) {
                    case 1:
                        this._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix);
                        break;
                    case 2:
                        this.isSpine ? this._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix) : this._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix)
                }
            }, t._applyIk1 = function(t, e, i, a) {
                var s = t.parentBone,
                    r = 1 / (s.resultMatrix.a * s.resultMatrix.d - s.resultMatrix.b * s.resultMatrix.c),
                    n = e - s.resultMatrix.tx,
                    h = i - s.resultMatrix.ty,
                    l = (n * s.resultMatrix.d - h * s.resultMatrix.c) * r - t.transform.x,
                    o = (h * s.resultMatrix.a - n * s.resultMatrix.b) * r - t.transform.y,
                    u = Math.atan2(o, l) * at.radDeg - 0 - t.transform.skX;
                t.transform.scX < 0 && (u += 180), 180 < u ? u -= 360 : u < -180 && (u += 360), t.transform.skX = t.transform.skY = t.transform.skX + u * a, t.update()
            }, t.updatePos = function(t, e) {
                this._sp && this._sp.pos(t, e)
            }, t._applyIk2 = function(t, e, i, a, s, r) {
                if (0 != r) {
                    var n = t.resultTransform.x,
                        h = t.resultTransform.y,
                        l = t.transform.scX,
                        o = t.transform.scY,
                        u = e.transform.scX,
                        c = 0,
                        d = 0,
                        _ = 0;
                    l < 0 ? (l = -l, c = 180, _ = -1) : (c = 0, _ = 1), o < 0 && (o = -o, _ = -_), u < 0 ? (u = -u, d = 180) : d = 0;
                    var p = e.resultTransform.x,
                        f = NaN,
                        m = NaN,
                        y = NaN,
                        x = t.resultMatrix.a,
                        g = t.resultMatrix.c,
                        v = t.resultMatrix.b,
                        D = t.resultMatrix.d,
                        M = Math.abs(l - o) <= 1e-4;
                    M ? (m = x * p + g * (f = e.resultTransform.y) + t.resultMatrix.tx, y = v * p + D * f + t.resultMatrix.ty) : (f = 0, m = x * p + t.resultMatrix.tx, y = v * p + t.resultMatrix.ty), this.isDebug && (this._sp || (this._sp = new rt, st.stage.addChild(this._sp)), this._sp.graphics.clear(), this._sp.graphics.drawCircle(i, a, 15, "#ffff00"), this._sp.graphics.drawCircle(m, y, 15, "#ff00ff")), t.setRotation(Math.atan2(y - t.resultMatrix.ty, m - t.resultMatrix.tx));
                    var I = t.parentBone;
                    x = I.resultMatrix.a, g = I.resultMatrix.c, v = I.resultMatrix.b;
                    var b = 1 / (x * (D = I.resultMatrix.d) - g * v),
                        N = i - I.resultMatrix.tx,
                        T = a - I.resultMatrix.ty,
                        A = (N * D - T * g) * b - n,
                        C = (T * x - N * v) * b - h,
                        w = ((N = m - I.resultMatrix.tx) * D - (T = y - I.resultMatrix.ty) * g) * b - n,
                        S = (T * x - N * v) * b - h,
                        F = Math.sqrt(w * w + S * S),
                        k = e.length * u,
                        P = NaN,
                        B = NaN;
                    if (M) {
                        var U = (A * A + C * C - F * F - (k *= l) * k) / (2 * F * k);
                        U < -1 ? U = -1 : 1 < U && (U = 1), B = Math.acos(U) * s, x = F + k * U, g = k * Math.sin(B), P = Math.atan2(C * x - A * g, A * x + C * g)
                    } else {
                        var L = (x = l * k) * x,
                            R = (g = o * k) * g,
                            O = A * A + C * C,
                            E = Math.atan2(C, A),
                            K = -2 * R * F,
                            Y = R - L;
                        if (0 < (D = K * K - 4 * Y * (v = R * F * F + L * O - L * R))) {
                            var V = Math.sqrt(D);
                            K < 0 && (V = -V);
                            var W = (V = -(K + V) / 2) / Y,
                                X = v / V,
                                z = Math.abs(W) < Math.abs(X) ? W : X;
                            z * z <= O && (T = Math.sqrt(O - z * z) * s, P = E - Math.atan2(T, z), B = Math.atan2(T / o, (z - F) / l))
                        }
                        var q = 0,
                            G = Number.MAX_VALUE,
                            H = 0,
                            Q = 0,
                            Z = 0,
                            j = 0,
                            $ = 0,
                            J = 0;
                        j < (D = (N = F + x) * N) && (Z = 0, j = D, $ = N), (D = (N = F - x) * N) < G && (q = Math.PI, G = D, H = N);
                        var tt = Math.acos(-x * F / (L - R));
                        (D = (N = x * Math.cos(tt) + F) * N + (T = g * Math.sin(tt)) * T) < G && (q = tt, G = D, H = N, Q = T), j < D && (Z = tt, j = D, $ = N, J = T), O <= (G + j) / 2 ? (P = E - Math.atan2(Q * s, H), B = q * s) : (P = E - Math.atan2(J * s, $), B = Z * s)
                    }
                    var et = Math.atan2(f, p) * _,
                        it = t.resultTransform.skX;
                    180 < (P = (P - et) * at.radDeg + c - it) ? P -= 360 : P < -180 && (P += 360), t.resultTransform.x = n, t.resultTransform.y = h, t.resultTransform.skX = t.resultTransform.skY = it + P * r, it = e.resultTransform.skX, 180 < (B = ((B + et) * at.radDeg - 0) * _ + d - (it %= 360)) ? B -= 360 : B < -180 && (B += 360), e.resultTransform.x = p, e.resultTransform.y = f, e.resultTransform.skX = e.resultTransform.skY = e.resultTransform.skY + B * r, t.update()
                }
            }, t._applyIk3 = function(t, e, i, a, s, r) {
                if (0 != r) {
                    var n, h, l = e.resultMatrix.a * e.length,
                        o = e.resultMatrix.b * e.length,
                        u = l * l + o * o,
                        c = Math.sqrt(u),
                        d = t.resultMatrix.tx,
                        _ = t.resultMatrix.ty,
                        p = e.resultMatrix.tx,
                        f = e.resultMatrix.ty,
                        m = p - d,
                        y = f - _,
                        x = m * m + y * y,
                        g = Math.sqrt(x),
                        v = (m = i - t.resultMatrix.tx) * m + (y = a - t.resultMatrix.ty) * y,
                        D = Math.sqrt(v);
                    if (c + g <= D || D + c <= g || D + g <= c) {
                        var M = NaN;
                        p = d + (M = c + g <= D ? 1 : -1) * (i - d) * g / D, f = _ + M * (a - _) * g / D
                    } else {
                        var I = (x - u + v) / (2 * v),
                            b = Math.sqrt(x - I * I * v) / D,
                            N = d + m * I,
                            T = _ + y * I,
                            A = -y * b,
                            C = m * b;
                        0 < s ? (p = N - A, f = T - C) : (p = N + A, f = T + C)
                    }
                    n = p, h = f, this.isDebug && (this._sp || (this._sp = new rt, st.stage.addChild(this._sp)), this._sp.graphics.clear(), this._sp.graphics.drawCircle(d, _, 15, "#ff00ff"), this._sp.graphics.drawCircle(i, a, 15, "#ffff00"), this._sp.graphics.drawCircle(n, h, 15, "#ff00ff"));
                    var w, S;
                    w = Math.atan2(h - t.resultMatrix.ty, n - t.resultMatrix.tx), t.setRotation(w), (S = at._tempMatrix).identity(), S.rotate(w), S.scale(t.resultMatrix.getScaleX(), t.resultMatrix.getScaleY()), S.translate(t.resultMatrix.tx, t.resultMatrix.ty), S.copyTo(t.resultMatrix), t.updateChild();
                    var F, k;
                    F = Math.atan2(a - h, i - n), e.setRotation(F), (k = at._tempMatrix).identity(), k.rotate(F), k.scale(e.resultMatrix.getScaleX(), e.resultMatrix.getScaleY()), k.translate(n, h), S.copyTo(e.resultMatrix), e.updateChild()
                }
            }, i(at, ["radDeg", function() {
                return this.radDeg = 180 / Math.PI
            }, "degRad", function() {
                return this.degRad = Math.PI / 180
            }, "_tempMatrix", function() {
                return this._tempMatrix = new St
            }]), at
        }(),
        Et = function() {
            function t() {
                this.name = null, this.targetBoneName = null, this.bendDirection = 1, this.mix = 1, this.isSpine = !0, this.targetBoneIndex = -1, this.boneNames = [], this.boneIndexs = []
            }
            return n(t, "t_tl.ani.bone.IkConstraintData"), t
        }(),
        T = function() {
            function _() {}
            return n(_, "t_tl.ani.bone.MeshTools"), _.findEdge = function(t, e, i) {
                void 0 === e && (e = 0), void 0 === i && (i = !0);
                var a, s = 0,
                    r = 0;
                for (a = t.length, r = -1, s = 0; s < a; s += 2)(r < 0 || i == t[r + e] < t[s + e]) && (r = s);
                return r
            }, _.findBestTriangle = function(t) {
                var e;
                e = _.findEdge(t, 1, !0);
                var i;
                i = _.findEdge(t, 1, !1);
                var a;
                a = _.findEdge(t, 0, !0);
                var s, r;
                return s = _.findEdge(t, 0, !1), (r = _._bestTriangle).length = 0, r.push(a, s), r.indexOf(e) < 0 && r.push(e), r.indexOf(i) < 0 && r.push(i), r
            }, _.solveMesh = function(t, e) {
                var i, a, s, r;
                (e = e || []).length = 0, i = t.uvs, a = t.vertices;
                var n, h, l;
                return n = (r = _.findBestTriangle(i))[0], h = r[1], l = r[2], _._absArr.length = 0, _.isNormalUV(t.texture.uv) && _.adptTexture(t), s = _.solvePoints(t.texture.uv, i[n], i[n + 1], i[h] - i[n], i[h + 1] - i[n + 1], i[l] - i[n], i[l + 1] - i[n + 1], _._absArr), _.transPoints(s, a[n], a[n + 1], a[h] - a[n], a[h + 1] - a[n + 1], a[l] - a[n], a[l + 1] - a[n + 1], e)
            }, _.findWrapRect = function(t) {
                var e;
                e = _.findEdge(t, 1, !0);
                var i;
                i = _.findEdge(t, 1, !1);
                var a;
                a = _.findEdge(t, 0, !0);
                var s;
                s = _.findEdge(t, 0, !1);
                var r;
                r = t[a];
                var n;
                n = t[s];
                var h;
                h = t[e + 1];
                var l;
                return [n, l = t[i + 1], r - n, h - l]
            }, _.adptTexture = function(t) {
                var e, i, a;
                e = _.findWrapRect(t.uvs);
                var s = (i = t.texture).width,
                    r = i.height;
                a = Ft.create(i, e[0] * s, e[1] * r, e[2] * s, e[3] * r), t.texture = a
            }, _.isNormalUV = function(t) {
                return 0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5]
            }, _.solvePoints = function(t, e, i, a, s, r, n, h) {
                h = h || [];
                var l, o, u = 0;
                for (l = t.length, u = 0; u < l; u += 2) o = _.solve2(t[u], t[u + 1], e, i, a, s, r, n), h.push(o[0], o[1]);
                return h
            }, _.transPoints = function(t, e, i, a, s, r, n, h) {
                h = h || [];
                var l, o = 0;
                for (l = t.length, o = 0; o < l; o += 2) _.transPoint(t[o], t[o + 1], e, i, a, s, r, n, h);
                return h
            }, _.transPoint = function(t, e, i, a, s, r, n, h, l) {
                var o, u;
                return o = i + s * t + n * e, u = a + r * t + h * e, (l = l || []).push(o, u), l
            }, _.solve2 = function(t, e, i, a, s, r, n, h, l, o) {
                void 0 === l && (l = !1), o = o || [];
                var u, c;
                if (0 == s) return _.solve2(t, e, i, a, n, h, s, r, !0, o);
                var d;
                return u = ((d = t - i) - (c = (e - a - d * r / s) / (h - n * r / s)) * n) / s, l ? o.push(c, u) : o.push(u, c), o
            }, _.solve = function(t, e, i, a) {
                return _.solve2(t.x, t.y, e.x, e.y, i.x, i.y, a.x, a.y)
            }, _._bestTriangle = [], _._absArr = [], _
        }(),
        A = function() {
            function k(t, e) {
                this.target = null, this.data = null, this.bones = null, this.position = NaN, this.spacing = NaN, this.rotateMix = NaN, this.translateMix = NaN, this._debugKey = !1, this._spaces = null, this._segments = [], this._curves = [], this.data = t, this.position = t.position, this.spacing = t.spacing, this.rotateMix = t.rotateMix, this.translateMix = t.translateMix, this.bones = [];
                for (var i = this.data.bones, a = 0, s = i.length; a < s; a++) this.bones.push(e[i[a]])
            }
            n(k, "t_tl.ani.bone.PathConstraint");
            var t = k.prototype;
            return t.apply = function(t, e) {
                if (this.target) {
                    var i = this.translateMix,
                        a = this.translateMix,
                        s = 0 < a,
                        r = this.data.spacingMode,
                        n = "length" == r,
                        h = this.data.rotateMode,
                        l = "tangent" == h,
                        o = "chainScale" == h,
                        u = [],
                        c = this.bones.length,
                        d = l ? c : c + 1,
                        _ = [];
                    (this._spaces = _)[0] = this.position;
                    var p = this.spacing;
                    if (o || n)
                        for (var f = 0, m = d - 1; f < m;) {
                            var y = this.bones[f],
                                x = y.length,
                                g = x * y.resultMatrix.a,
                                v = x * y.resultMatrix.b;
                            x = Math.sqrt(g * g + v * v), o && (u[f] = x), _[++f] = n ? Math.max(0, x + p) : p
                        } else
                            for (f = 1; f < d; f++) _[f] = p;
                    var D = this.computeWorldPositions(this.target, t, e, d, l, "percent" == this.data.positionMode, "percent" == r);
                    if (this._debugKey) {
                        for (f = 0; f < D.length; f++) e.drawCircle(D[f++], D[f++], 5, "#00ff00");
                        var M = [];
                        for (f = 0; f < D.length; f++) M.push(D[f++], D[f++]);
                        e.drawLines(0, 0, M, "#ff0000")
                    }
                    var I = D[0],
                        b = D[1],
                        N = this.data.offsetRotation,
                        T = "chain" == h && 0 == N,
                        A = NaN;
                    for (f = 0, A = 3; f < c; f++, A += 3) {
                        (y = this.bones[f]).resultMatrix.tx += (I - y.resultMatrix.tx) * i, y.resultMatrix.ty += (b - y.resultMatrix.ty) * i;
                        var C = (g = D[A]) - I,
                            w = (v = D[A + 1]) - b;
                        if (o && 0 != (x = u[f])) {
                            var S = (Math.sqrt(C * C + w * w) / x - 1) * a + 1;
                            y.resultMatrix.a *= S, y.resultMatrix.c *= S
                        }
                        if (I = g, b = v, s) {
                            var F = y.resultMatrix.a,
                                k = y.resultMatrix.c,
                                P = y.resultMatrix.b,
                                B = y.resultMatrix.d,
                                U = NaN,
                                L = NaN,
                                R = NaN;
                            U = l ? D[A - 1] : 0 == _[f + 1] ? D[A + 2] : Math.atan2(w, C), U -= Math.atan2(P, F) - N / 180 * Math.PI, T && (L = Math.cos(U), R = Math.sin(U), I += ((x = y.length) * (L * F - R * P) - C) * a, b += (x * (R * F + L * P) - w) * a), U > Math.PI ? U -= 2 * Math.PI : U < -Math.PI && (U += 2 * Math.PI), U *= a, L = Math.cos(U), R = Math.sin(U), y.resultMatrix.a = L * F - R * P, y.resultMatrix.c = L * k - R * B, y.resultMatrix.b = R * F + L * P, y.resultMatrix.d = R * k + L * B
                        }
                    }
                }
            }, t.computeWorldVertices2 = function(t, e, i, a, s, r) {
                var n, h, l = t.currDisplayData.bones,
                    o = t.currDisplayData.weights,
                    u = t.currDisplayData.triangles,
                    c = 0,
                    d = 0,
                    _ = 0,
                    p = 0,
                    f = 0,
                    m = 0,
                    y = 0,
                    x = 0,
                    g = 0,
                    v = 0,
                    D = 0;
                if (null != l) {
                    for (c = 0; c < i; c += 2) d += (p = l[d]) + 1, _ += p;
                    var M = e;
                    for (f = r, m = 3 * _; f < a; f += 2) {
                        for (x = y = 0, p = l[d++], p += d; d < p; d++, m += 3) {
                            n = M[l[d]].resultMatrix, g = o[m], v = o[m + 1];
                            var I = o[m + 2];
                            y += (g * n.a + v * n.c + n.tx) * I, x += (g * n.b + v * n.d + n.ty) * I
                        }
                        s[f] = y, s[f + 1] = x
                    }
                } else {
                    var b, N;
                    if (u || (u = o), t.deformData && (u = t.deformData), b = t.parent, e)
                        for (D = e.length, c = 0; c < D; c++)
                            if (e[c].name == b) {
                                h = e[c];
                                break
                            }
                    h && (N = h.resultMatrix), N || (N = k._tempMt);
                    var T = N.tx,
                        A = N.ty,
                        C = N.a,
                        w = N.b,
                        S = N.c,
                        F = N.d;
                    for (h && (F *= h.d), d = i, f = r; f < a; d += 2, f += 2) g = u[d], v = u[d + 1], s[f] = g * C + v * w + T, s[f + 1] = -(g * S + v * F + A)
                }
            }, t.computeWorldPositions = function(t, e, i, a, s, r, n) {
                t.currDisplayData.bones, t.currDisplayData.weights, t.currDisplayData.triangles;
                var h = [],
                    l = 0,
                    o = t.currDisplayData.verLen,
                    u = this.position,
                    c = this._spaces,
                    d = [],
                    _ = [],
                    p = o / 6,
                    f = -1,
                    m = NaN,
                    y = 0,
                    x = 0,
                    g = NaN,
                    v = NaN,
                    D = NaN,
                    M = NaN;
                if (p--, o -= 4, this.computeWorldVertices2(t, e, 2, o, h, 0), this._debugKey)
                    for (l = 0; l < h.length;) i.drawCircle(h[l++], h[l++], 10, "#ff0000");
                d = h, this._curves.length = p;
                var I = this._curves,
                    b = d[m = 0],
                    N = d[1],
                    T = 0,
                    A = 0,
                    C = 0,
                    w = 0,
                    S = 0,
                    F = 0,
                    k = NaN,
                    P = NaN,
                    B = NaN,
                    U = NaN,
                    L = NaN,
                    R = NaN,
                    O = NaN,
                    E = NaN,
                    K = 0;
                for (l = 0, K = 2; l < p; l++, K += 6) T = d[K], A = d[K + 1], C = d[K + 2], w = d[K + 3], L = 2 * (k = .1875 * (b - 2 * T + C)) + (B = .09375 * (3 * (T - C) - b + (S = d[K + 4]))), R = 2 * (P = .1875 * (N - 2 * A + w)) + (U = .09375 * (3 * (A - w) - N + (F = d[K + 5]))), O = .75 * (T - b) + k + .16666667 * B, E = .75 * (A - N) + P + .16666667 * U, m += Math.sqrt(O * O + E * E), O += L, E += R, L += B, R += U, m += Math.sqrt(O * O + E * E), O += L, E += R, m += Math.sqrt(O * O + E * E), O += L + B, E += R + U, m += Math.sqrt(O * O + E * E), I[l] = m, b = S, N = F;
                if (r && (u *= m), n)
                    for (l = 0; l < a; l++) c[l] *= m;
                var Y = this._segments,
                    V = 0,
                    W = 0;
                for (W = x = y = l = 0; l < a; l++, y += 3)
                    if ((g = u += v = c[l]) < 0) this.addBeforePosition(g, d, 0, _, y);
                    else if (m < g) this.addAfterPosition(g - m, d, o - 4, _, y);
                else {
                    for (;; x++)
                        if (!((M = I[x]) < g)) {
                            0 == x ? g /= M : g = (g - (D = I[x - 1])) / (M - D);
                            break
                        }
                    if (x != f) {
                        var X = 6 * (f = x);
                        for (b = d[X], N = d[X + 1], T = d[X + 2], A = d[X + 3], C = d[X + 4], w = d[X + 5], L = 2 * (k = .03 * (b - 2 * T + C)) + (B = .006 * (3 * (T - C) - b + (S = d[X + 6]))), R = 2 * (P = .03 * (N - 2 * A + w)) + (U = .006 * (3 * (A - w) - N + (F = d[X + 7]))), O = .3 * (T - b) + k + .16666667 * B, E = .3 * (A - N) + P + .16666667 * U, V = Math.sqrt(O * O + E * E), Y[0] = V, X = 1; X < 8; X++) O += L, E += R, L += B, R += U, V += Math.sqrt(O * O + E * E), Y[X] = V;
                        O += L, E += R, V += Math.sqrt(O * O + E * E), Y[8] = V, O += L + B, E += R + U, V += Math.sqrt(O * O + E * E), Y[9] = V, W = 0
                    }
                    for (g *= V;; W++)
                        if (!((M = Y[W]) < g)) {
                            0 == W ? g /= M : g = W + (g - (D = Y[W - 1])) / (M - D);
                            break
                        }
                    this.addCurvePosition(.1 * g, b, N, T, A, C, w, S, F, _, y, s || 0 < l && 0 == v)
                }
                return _
            }, t.addBeforePosition = function(t, e, i, a, s) {
                var r = e[i],
                    n = e[i + 1],
                    h = e[i + 2] - r,
                    l = e[i + 3] - n,
                    o = Math.atan2(l, h);
                a[s] = r + t * Math.cos(o), a[s + 1] = n + t * Math.sin(o), a[s + 2] = o
            }, t.addAfterPosition = function(t, e, i, a, s) {
                var r = e[i + 2],
                    n = e[i + 3],
                    h = r - e[i],
                    l = n - e[i + 1],
                    o = Math.atan2(l, h);
                a[s] = r + t * Math.cos(o), a[s + 1] = n + t * Math.sin(o), a[s + 2] = o
            }, t.addCurvePosition = function(t, e, i, a, s, r, n, h, l, o, u, c) {
                0 == t && (t = 1e-4);
                var d = t * t,
                    _ = d * t,
                    p = 1 - t,
                    f = p * p,
                    m = f * p,
                    y = p * t,
                    x = 3 * y,
                    g = p * x,
                    v = x * t,
                    D = e * m + a * g + r * v + h * _,
                    M = i * m + s * g + n * v + l * _;
                o[u] = D, o[u + 1] = M, o[u + 2] = c ? Math.atan2(M - (i * f + s * y * 2 + n * d), D - (e * f + a * y * 2 + r * d)) : 0
            }, k.NONE = -1, k.BEFORE = -2, k.AFTER = -3, i(k, ["_tempMt", function() {
                return this._tempMt = new St
            }]), k
        }(),
        Kt = function() {
            function t() {
                this.name = null, this.target = null, this.positionMode = null, this.spacingMode = null, this.rotateMode = null, this.offsetRotation = NaN, this.position = NaN, this.spacing = NaN, this.rotateMix = NaN, this.translateMix = NaN, this.bones = []
            }
            return n(t, "t_tl.ani.bone.PathConstraintData"), t
        }(),
        Yt = function() {
            function t() {
                this.name = null, this.slotArr = []
            }
            return n(t, "t_tl.ani.bone.SkinData"), t
        }(),
        Vt = function() {
            function t() {
                this.name = null, this.attachmentName = null, this.type = 0, this.transform = null, this.width = NaN, this.height = NaN, this.texture = null, this.bones = null, this.uvs = null, this.weights = null, this.triangles = null, this.vertices = null, this.lengths = null, this.verLen = 0
            }
            n(t, "t_tl.ani.bone.SkinSlotDisplayData");
            var e = t.prototype;
            return e.createTexture = function(t) {
                return this.texture || (this.texture = new Ft(t.bitmap, this.uvs), this.uvs[0] > this.uvs[4] && this.uvs[1] > this.uvs[5] ? (this.texture.width = t.height, this.texture.height = t.width, this.texture.offsetX = -t.offsetX, this.texture.offsetY = -t.offsetY, this.texture.sourceWidth = t.sourceHeight, this.texture.sourceHeight = t.sourceWidth) : (this.texture.width = t.width, this.texture.height = t.height, this.texture.offsetX = -t.offsetX, this.texture.offsetY = -t.offsetY, this.texture.sourceWidth = t.sourceWidth, this.texture.sourceHeight = t.sourceHeight), m.isWebGL || this.uvs[1] > this.uvs[5] && (this.texture.offsetY = this.texture.sourceHeight - this.texture.height - this.texture.offsetY)), this.texture
            }, e.destory = function() {
                this.texture && this.texture.destroy()
            }, t
        }(),
        Wt = function() {
            function t() {
                this.name = null, this.displayArr = []
            }
            return n(t, "t_tl.ani.bone.SlotData"), t.prototype.getDisplayByName = function(t) {
                for (var e = 0, i = this.displayArr.length; e < i; e++)
                    if (this.displayArr[e].attachmentName == t) return e;
                return -1
            }, t
        }(),
        C = function() {
            function t(t, e) {
                this._data = null, this._bones = null, this.target = null, this.rotateMix = NaN, this.translateMix = NaN, this.scaleMix = NaN, this.shearMix = NaN, this._temp = f(2, 0), this._data = t, null == this._bones && (this._bones = []), this.target = e[t.targetIndex];
                var i, a = 0;
                for (a = 0, i = t.boneIndexs.length; a < i; a++) this._bones.push(e[t.boneIndexs[a]]);
                this.rotateMix = t.rotateMix, this.translateMix = t.translateMix, this.scaleMix = t.scaleMix, this.shearMix = t.shearMix
            }
            return n(t, "t_tl.ani.bone.TfConstraint"), t.prototype.apply = function() {
                for (var t, e = this.target.resultMatrix.a, i = this.target.resultMatrix.b, a = this.target.resultMatrix.c, s = this.target.resultMatrix.d, r = 0, n = this._bones.length; r < n; r++) {
                    if (t = this._bones[r], 0 < this.rotateMix) {
                        var h = t.resultMatrix.a,
                            l = t.resultMatrix.b,
                            o = t.resultMatrix.c,
                            u = t.resultMatrix.d,
                            c = Math.atan2(a, e) - Math.atan2(o, h) + this._data.offsetRotation * Math.PI / 180;
                        c > Math.PI ? c -= 2 * Math.PI : c < -Math.PI && (c += 2 * Math.PI), c *= this.rotateMix;
                        var d = Math.cos(c),
                            _ = Math.sin(c);
                        t.resultMatrix.a = d * h - _ * o, t.resultMatrix.b = d * l - _ * u, t.resultMatrix.c = _ * h + d * o, t.resultMatrix.d = _ * l + d * u
                    }
                    if (this.translateMix && (this._temp[0] = this._data.offsetX, this._temp[1] = this._data.offsetY, this.target.localToWorld(this._temp), t.resultMatrix.tx += (this._temp[0] - t.resultMatrix.tx) * this.translateMix, t.resultMatrix.ty += (this._temp[1] - t.resultMatrix.ty) * this.translateMix, t.updateChild()), 0 < this.scaleMix) {
                        var p = Math.sqrt(t.resultMatrix.a * t.resultMatrix.a + t.resultMatrix.c * t.resultMatrix.c),
                            f = Math.sqrt(e * e + a * a),
                            m = 1e-5 < p ? (p + (f - p + this._data.offsetScaleX) * this.scaleMix) / p : 0;
                        t.resultMatrix.a *= m, t.resultMatrix.c *= m, p = Math.sqrt(t.resultMatrix.b * t.resultMatrix.b + t.resultMatrix.d * t.resultMatrix.d), f = Math.sqrt(i * i + s * s), m = 1e-5 < p ? (p + (f - p + this._data.offsetScaleY) * this.scaleMix) / p : 0, t.resultMatrix.b *= m, t.resultMatrix.d *= m
                    }
                    if (0 < this.shearMix) {
                        l = t.resultMatrix.b, u = t.resultMatrix.d;
                        var y = Math.atan2(u, l);
                        (c = Math.atan2(s, i) - Math.atan2(a, e) - (y - Math.atan2(t.resultMatrix.c, t.resultMatrix.a))) > Math.PI ? c -= 2 * Math.PI : c < -Math.PI && (c += 2 * Math.PI), c = y + (c + this._data.offsetShearY * Math.PI / 180) * this.shearMix, m = Math.sqrt(l * l + u * u), t.resultMatrix.b = Math.cos(c) * m, t.resultMatrix.d = Math.sin(c) * m
                    }
                }
            }, t
        }(),
        Xt = function() {
            function t() {
                this.name = null, this.targetIndex = 0, this.rotateMix = NaN, this.translateMix = NaN, this.scaleMix = NaN, this.shearMix = NaN, this.offsetRotation = NaN, this.offsetX = NaN, this.offsetY = NaN, this.offsetScaleX = NaN, this.offsetScaleY = NaN, this.offsetShearY = NaN, this.boneIndexs = []
            }
            return n(t, "t_tl.ani.bone.TfConstraintData"), t
        }(),
        zt = function() {
            function t() {
                this.skX = 0, this.skY = 0, this.scX = 1, this.scY = 1, this.x = 0, this.y = 0, this.skewX = 0, this.skewY = 0, this.mMatrix = null
            }
            n(t, "t_tl.ani.bone.Transform");
            var e = t.prototype;
            return e.initData = function(t) {
                null != t.x && (this.x = t.x), null != t.y && (this.y = t.y), null != t.skX && (this.skX = t.skX), null != t.skY && (this.skY = t.skY), null != t.scX && (this.scX = t.scX), null != t.scY && (this.scY = t.scY)
            }, e.getMatrix = function() {
                var t;
                return (t = this.mMatrix ? this.mMatrix : this.mMatrix = new St).identity(), t.scale(this.scX, this.scY), (this.skewX || this.skewY) && this.skew(t, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180), t.rotate(this.skX * Math.PI / 180), t.translate(this.x, this.y), t
            }, e.skew = function(t, e, i) {
                var a = Math.sin(i),
                    s = Math.cos(i),
                    r = Math.sin(e),
                    n = Math.cos(e);
                return t.setTo(t.a * n - t.b * a, t.a * r + t.b * s, t.c * n - t.d * a, t.c * r + t.d * s, t.tx * n - t.ty * a, t.tx * r + t.ty * s), t
            }, t
        }(),
        w = function() {
            function t() {}
            return n(t, "t_tl.ani.bone.UVTools"), t.getRelativeUV = function(t, e, i) {
                var a = t[0],
                    s = t[2] - t[0],
                    r = t[1],
                    n = t[5] - t[1];
                i || (i = []), i.length = e.length;
                var h, l = 0;
                h = i.length;
                var o = 1 / s,
                    u = 1 / n;
                for (l = 0; l < h; l += 2) i[l] = (e[l] - a) * o, i[l + 1] = (e[l + 1] - r) * u;
                return i
            }, t.getAbsoluteUV = function(t, e, i) {
                if (0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5]) return i ? (v.copyArray(i, e), i) : e;
                var a = t[0],
                    s = t[2] - t[0],
                    r = t[1],
                    n = t[5] - t[1];
                i || (i = []), i.length = e.length;
                var h, l = 0;
                for (h = i.length, l = 0; l < h; l += 2) i[l] = e[l] * s + a, i[l + 1] = e[l + 1] * n + r;
                return i
            }, t
        }(),
        k = function() {
            function t() {
                this.startTime = NaN, this.duration = NaN, this.interpolationData = null, this.data = null, this.nextData = null
            }
            return n(t, "t_tl.ani.KeyFramesContent"), t
        }(),
        P = function() {
            function u() {}
            return n(u, "t_tl.ani.math.BezierLerp"), u.getBezierRate = function(t, e, i, a, s) {
                var r = u._getBezierParamKey(e, i, a, s),
                    n = 100 * r + t;
                if (u._bezierResultCache[n]) return u._bezierResultCache[n];
                var h, l = u._getBezierPoints(e, i, a, s, r),
                    o = 0;
                for (h = l.length, o = 0; o < h; o += 2)
                    if (t <= l[o]) return u._bezierResultCache[n] = l[o + 1], l[o + 1];
                return u._bezierResultCache[n] = 1
            }, u._getBezierParamKey = function(t, e, i, a) {
                return 100 * (100 * (100 * (100 * t + e) + i) + a)
            }, u._getBezierPoints = function(t, e, i, a, s) {
                return u._bezierPointsCache[s] ? u._bezierPointsCache[s] : (r = [0, 0, t, e, i, a, 1, 1], n = (new h).getBezierPoints(r, 100, 3), u._bezierPointsCache[s] = n);
                var r, n
            }, u._bezierResultCache = {}, u._bezierPointsCache = {}, u
        }(),
        B = function(t) {
            function e() {
                this._destroyed = !1, this._templet = null, this._currentTime = NaN, this._currentFrameTime = NaN, this._playStart = NaN, this._playEnd = NaN, this._playDuration = NaN, this._overallDuration = NaN, this._stopWhenCircleFinish = !1, this._elapsedPlaybackTime = NaN, this._startUpdateLoopCount = NaN, this._currentAnimationClipIndex = 0, this._currentKeyframeIndex = 0, this._paused = !1, this._cacheFrameRate = 0, this._cacheFrameRateInterval = NaN, this._cachePlayRate = NaN, this._fullFrames = null, this.isCache = !0, this.playbackRate = 1, this.returnToZeroStopped = !1, e.__super.call(this), this._destroyed = !1, this._currentAnimationClipIndex = -1, this._currentKeyframeIndex = -1, this._currentTime = 0, this._overallDuration = Number.MAX_VALUE, this._stopWhenCircleFinish = !1, this._elapsedPlaybackTime = 0, this._startUpdateLoopCount = -1, this._cachePlayRate = 1, this.cacheFrameRate = 60, this.returnToZeroStopped = !1
            }
            n(e, "t_tl.ani.AnimationPlayer", s);
            var i = e.prototype;
            return st.imps(i, {
                "t_tl.resource.IDestroy": !0
            }), i._onTempletLoadedComputeFullKeyframeIndices = function(t, e, i) {
                this._templet === i && this._cachePlayRate === t && this._cacheFrameRate === e && this._computeFullKeyframeIndices()
            }, i._computeFullKeyframeIndices = function() {
                for (var t = this._fullFrames = [], e = this._templet, i = this._cacheFrameRateInterval * this._cachePlayRate, a = 0, s = e.getAnimationCount(); a < s; a++) {
                    for (var r = [], n = 0, h = e.getAnimation(a).nodes.length; n < h; n++) {
                        for (var l = e.getAnimation(a).nodes[n], o = Math.floor(l.playTime / i + .01), u = new Uint16Array(o + 1), c = -1, d = 0, _ = l.keyFrame.length; d < _; d++) {
                            var p = l.keyFrame[d],
                                f = p.startTime,
                                m = f + p.duration + i;
                            do {
                                for (var y = Math.floor(f / i + .5), x = c + 1; x < y; x++) u[x] = d;
                                u[c = y] = d, f += i
                            } while (f <= m)
                        }
                        r.push(u)
                    }
                    t.push(r)
                }
            }, i._onAnimationTempletLoaded = function() {
                this.destroyed || this._calculatePlayDuration()
            }, i._calculatePlayDuration = function() {
                if (0 !== this.state) {
                    var t = this._templet.getAniDuration(this._currentAnimationClipIndex);
                    0 === this._playEnd && (this._playEnd = t), this._playEnd > t && (this._playEnd = t), this._playDuration = this._playEnd - this._playStart
                }
            }, i._setPlayParams = function(t, e) {
                this._currentTime = t, this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e + .01), 0), this._currentFrameTime = this._currentKeyframeIndex * e
            }, i._setPlayParamsWhenStop = function(t, e) {
                this._currentTime = t, this._currentKeyframeIndex = Math.max(Math.floor(t / e + .01), 0), this._currentFrameTime = this._currentKeyframeIndex * e, this._currentAnimationClipIndex = -1
            }, i._update = function(t) {
                if (-1 !== this._currentAnimationClipIndex && !this._paused && this._templet && this._templet.loaded) {
                    var e = this._cacheFrameRateInterval * this._cachePlayRate,
                        i = 0;
                    this._startUpdateLoopCount !== x.loopCount && (i = t * this.playbackRate, this._elapsedPlaybackTime += i);
                    var a = this.playDuration;
                    if (0 !== this._overallDuration && this._elapsedPlaybackTime >= this._overallDuration || 0 === this._overallDuration && this._elapsedPlaybackTime >= a) return this._setPlayParamsWhenStop(a, e), void this.event("stopped");
                    if (i += this._currentTime, 0 < a)
                        if (a <= i)
                            do {
                                if (i -= a, this._stopWhenCircleFinish) return this._setPlayParamsWhenStop(a, e), this._stopWhenCircleFinish = !1, void this.event("stopped");
                                i < a && (this._setPlayParams(i, e), this.event("complete"))
                            } while (a <= i);
                        else this._setPlayParams(i, e);
                    else {
                        if (this._stopWhenCircleFinish) return this._setPlayParamsWhenStop(a, e), this._stopWhenCircleFinish = !1, void this.event("stopped");
                        this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0, this.event("complete")
                    }
                }
            }, i._destroy = function() {
                this.offAll(), this._templet = null, this._fullFrames = null, this._destroyed = !0
            }, i.play = function(t, e, i, a, s) {
                if (void 0 === t && (t = 0), void 0 === e && (e = 1), void 0 === i && (i = 2147483647), void 0 === a && (a = 0), void 0 === s && (s = 0), !this._templet) throw new Error("AnimationPlayer:templet must not be null,maybe you need to set url.");
                if (i < 0 || a < 0 || s < 0) throw new Error("AnimationPlayer:overallDuration,playStart and playEnd must large than zero.");
                if (0 !== s && s < a) throw new Error("AnimationPlayer:start must less than end.");
                this._currentTime = 0, this._currentFrameTime = 0, this._elapsedPlaybackTime = 0, this.playbackRate = e, this._overallDuration = i, this._playStart = a, this._playEnd = s, this._paused = !1, this._currentAnimationClipIndex = t, this._currentKeyframeIndex = 0, this._startUpdateLoopCount = x.loopCount, this.event("played"), this._templet.loaded ? this._calculatePlayDuration() : this._templet.once("loaded", this, this._onAnimationTempletLoaded), this._update(0)
            }, i.playByFrame = function(t, e, i, a, s, r) {
                void 0 === t && (t = 0), void 0 === e && (e = 1), void 0 === i && (i = 2147483647), void 0 === a && (a = 0), void 0 === s && (s = 0), void 0 === r && (r = 30);
                var n = 1e3 / r;
                this.play(t, e, i, a * n, s * n)
            }, i.stop = function(t) {
                void 0 === t && (t = !0), t ? (this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0, this._currentAnimationClipIndex = -1, this.event("stopped")) : this._stopWhenCircleFinish = !0
            }, a(0, i, "playEnd", function() {
                return this._playEnd
            }), a(0, i, "templet", function() {
                return this._templet
            }, function(t) {
                0 === !this.state && this.stop(!0), this._templet !== t && ((this._templet = t).loaded ? this._computeFullKeyframeIndices() : t.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, this._cacheFrameRate]))
            }), a(0, i, "playStart", function() {
                return this._playStart
            }), a(0, i, "playDuration", function() {
                return this._playDuration
            }), a(0, i, "state", function() {
                return -1 === this._currentAnimationClipIndex ? 0 : this._paused ? 1 : 2
            }), a(0, i, "currentKeyframeIndex", function() {
                return this._currentKeyframeIndex
            }), a(0, i, "overallDuration", function() {
                return this._overallDuration
            }), a(0, i, "currentFrameTime", function() {
                return this._currentFrameTime
            }), a(0, i, "currentAnimationClipIndex", function() {
                return this._currentAnimationClipIndex
            }), a(0, i, "currentPlayTime", function() {
                return this._currentTime + this._playStart
            }), a(0, i, "cachePlayRate", function() {
                return this._cachePlayRate
            }, function(t) {
                this._cachePlayRate !== t && (this._cachePlayRate = t, this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [t, this._cacheFrameRate])))
            }), a(0, i, "cacheFrameRate", function() {
                return this._cacheFrameRate
            }, function(t) {
                this._cacheFrameRate !== t && (this._cacheFrameRate = t, this._cacheFrameRateInterval = 1e3 / this._cacheFrameRate, this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, t])))
            }), a(0, i, "currentTime", null, function(t) {
                if (-1 !== this._currentAnimationClipIndex && this._templet && this._templet.loaded) {
                    if (t < this._playStart || t > this._playEnd) throw new Error("AnimationPlayer:value must large than playStartTime,small than playEndTime.");
                    this._startUpdateLoopCount = x.loopCount;
                    var e = this._cacheFrameRateInterval * this._cachePlayRate;
                    this._currentTime = t, this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e), 0), this._currentFrameTime = this._currentKeyframeIndex * e
                }
            }), a(0, i, "paused", function() {
                return this._paused
            }, function(t) {
                (this._paused = t) && this.event("paused")
            }), a(0, i, "cacheFrameRateInterval", function() {
                return this._cacheFrameRateInterval
            }), a(0, i, "destroyed", function() {
                return this._destroyed
            }), e
        }(),
        U = function(t) {
            function e() {
                e.__super.call(this), m.isConchNode && (this.drawSkin = function(t) {
                    t.transform || (t.transform = St.EMPTY), this._addCmd([t]), this.setSkinMesh && this.setSkinMesh(t._ps, t.mVBData, t.mEleNum, 0, t.mTexture, t.transform)
                })
            }
            return n(e, "t_tl.ani.GraphicsAni", r), e.prototype.drawSkin = function(t) {
                var e = [t];
                this._saveToCmd(m._context._drawSkin, e)
            }, e.create = function() {
                return e._caches.pop() || new e
            }, e.recycle = function(t) {
                t.clear(), e._caches.push(t)
            }, e._caches = [], e
        }(),
        L = function(t) {
            function a() {
                a.__super.call(this), this.mesh = new b
            }
            n(a, "t_tl.ani.bone.canvasmesh.SkinMeshCanvas", I);
            var e = a.prototype;
            return e.init2 = function(t, e, i, a, s) {
                var r;
                this.transform && (this.transform = null), i ? r = i : (r = []).push(0, 1, 3, 3, 1, 2), this.mesh.texture = t, this.mesh.indexes = r, this.mesh.vertices = a, this.mesh.uvs = s
            }, e.render = function(t, e, i) {
                this.mesh.texture && (this.transform ? (this.transform.translate(e, i), this.renderToContext(t), this.transform.translate(-e, -i)) : (this.transform = a._tempMatrix, this.transform.identity(), this.transform.translate(e, i), this.renderToContext(t), this.transform.translate(-e, -i), this.transform = null))
            }, i(a, ["_tempMatrix", function() {
                return this._tempMatrix = new St
            }]), a
        }(),
        R = function(t) {
            function x() {
                this._aniMap = {}, this.unfixedLastAniIndex = -1, x.__super.call(this), this._anis = new Array
            }
            n(x, "t_tl.ani.AnimationTemplet", p);
            var e = x.prototype;
            return e.parse = function(t) {
                var e = new wt(t);
                this._aniVersion = e.readUTFString(), D.parse(this, e)
            }, e._calculateKeyFrame = function(t, e, i) {
                var a = t.keyFrame;
                a[e] = a[0];
                for (var s = 0; s < e; s++) {
                    var r = a[s];
                    r.nextData = 0 === r.duration ? r.data : a[s + 1].data
                }
                a.length--
            }, e.onAsynLoaded = function(t, e, i) {
                var a = new wt(e);
                switch (this._aniVersion = a.readUTFString(), this._aniVersion) {
                    case "LAYAANIMATION:02":
                        M.parse(this, a);
                        break;
                    default:
                        D.parse(this, a)
                }
                this._endLoaded()
            }, e.disposeResource = function() {
                this._aniVersion = null, this._anis = null, this._aniMap = null, this._publicExtData = null, this.unfixedCurrentFrameIndexes = null, this.unfixedCurrentTimes = null, this.unfixedKeyframes = null, this._aniClassName = null, this._animationDatasCache = null
            }, e.getAnimationCount = function() {
                return this._anis.length
            }, e.getAnimation = function(t) {
                return this._anis[t]
            }, e.getAniDuration = function(t) {
                return this._anis[t].playTime
            }, e.getNodes = function(t) {
                return this._anis[t].nodes
            }, e.getNodeIndexWithName = function(t, e) {
                return this._anis[t].bone3DMap[e]
            }, e.getNodeCount = function(t) {
                return this._anis[t].nodes.length
            }, e.getTotalkeyframesLength = function(t) {
                return this._anis[t].totalKeyframeDatasLength
            }, e.getPublicExtData = function() {
                return this._publicExtData
            }, e.getAnimationDataWithCache = function(t, e, i, a) {
                var s = e[i];
                if (s) {
                    var r = s[t];
                    return r ? r[a] : null
                }
                return null
            }, e.setAnimationDataWithCache = function(t, e, i, a, s) {
                var r = e[i] || (e[i] = {});
                (r[t] || (r[t] = []))[a] = s
            }, e.getOriginalData = function(t, e, i, a, s) {
                for (var r = this._anis[t].nodes, n = 0, h = 0, l = r.length, o = 0; h < l; h++) {
                    var u, c = r[h];
                    u = c.keyFrame[i[h][a]], c.dataOffset = o;
                    var d = s - u.startTime,
                        _ = c.lerpType;
                    if (_) switch (_) {
                        case 0:
                        case 1:
                            for (n = 0; n < c.keyframeWidth;) n += c.interpolationMethod[n](c, n, e, o + n, u.data, d, null, u.duration, u.nextData);
                            break;
                        case 2:
                            var p = u.interpolationData,
                                f = p.length,
                                m = 0;
                            for (n = 0; n < f;) {
                                var y = p[n];
                                switch (y) {
                                    case 6:
                                    case 7:
                                        n += x.interpolation[y](c, m, e, o + m, u.data, d, null, u.duration, u.nextData, p, n + 1);
                                        break;
                                    default:
                                        n += x.interpolation[y](c, m, e, o + m, u.data, d, null, u.duration, u.nextData)
                                }
                                m++
                            }
                    } else
                        for (n = 0; n < c.keyframeWidth;) n += c.interpolationMethod[n](c, n, e, o + n, u.data, d, null, u.duration, u.nextData);
                    o += c.keyframeWidth
                }
            }, e.getNodesCurrentFrameIndex = function(t, e) {
                var i = this._anis[t].nodes;
                t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(i.length), this.unfixedCurrentTimes = new Float32Array(i.length), this.unfixedLastAniIndex = t);
                for (var a = 0, s = i.length; a < s; a++) {
                    var r = i[a];
                    for (e < this.unfixedCurrentTimes[a] && (this.unfixedCurrentFrameIndexes[a] = 0), this.unfixedCurrentTimes[a] = e; this.unfixedCurrentFrameIndexes[a] < r.keyFrame.length && !(r.keyFrame[this.unfixedCurrentFrameIndexes[a]].startTime > this.unfixedCurrentTimes[a]);) this.unfixedCurrentFrameIndexes[a]++;
                    this.unfixedCurrentFrameIndexes[a]--
                }
                return this.unfixedCurrentFrameIndexes
            }, e.getOriginalDataUnfixedRate = function(t, e, i) {
                var a = this._anis[t].nodes;
                t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(a.length), this.unfixedCurrentTimes = new Float32Array(a.length), this.unfixedKeyframes = f(a.length), this.unfixedLastAniIndex = t);
                for (var s = 0, r = 0, n = a.length, h = 0; r < n; r++) {
                    var l = a[r];
                    for (i < this.unfixedCurrentTimes[r] && (this.unfixedCurrentFrameIndexes[r] = 0), this.unfixedCurrentTimes[r] = i; this.unfixedCurrentFrameIndexes[r] < l.keyFrame.length && !(l.keyFrame[this.unfixedCurrentFrameIndexes[r]].startTime > this.unfixedCurrentTimes[r]);) this.unfixedKeyframes[r] = l.keyFrame[this.unfixedCurrentFrameIndexes[r]], this.unfixedCurrentFrameIndexes[r]++;
                    var o = this.unfixedKeyframes[r];
                    l.dataOffset = h;
                    var u = i - o.startTime;
                    if (l.lerpType) switch (l.lerpType) {
                        case 0:
                        case 1:
                            for (s = 0; s < l.keyframeWidth;) s += l.interpolationMethod[s](l, s, e, h + s, o.data, u, null, o.duration, o.nextData);
                            break;
                        case 2:
                            var c = o.interpolationData,
                                d = c.length,
                                _ = 0;
                            for (s = 0; s < d;) {
                                var p = c[s];
                                switch (p) {
                                    case 6:
                                    case 7:
                                        s += x.interpolation[p](l, _, e, h + _, o.data, u, null, o.duration, o.nextData, c, s + 1);
                                        break;
                                    default:
                                        s += x.interpolation[p](l, _, e, h + _, o.data, u, null, o.duration, o.nextData)
                                }
                                _++
                            }
                    } else
                        for (s = 0; s < l.keyframeWidth;) s += l.interpolationMethod[s](l, s, e, h + s, o.data, u, null, o.duration, o.nextData);
                    h += l.keyframeWidth
                }
            }, x._LinearInterpolation_0 = function(t, e, i, a, s, r, n, h, l, o) {
                var u = 0 === h ? 0 : r / h;
                return i[a] = (1 - u) * s[e] + u * l[e], 1
            }, x._QuaternionInterpolation_1 = function(t, e, i, a, s, r, n, h, l, o) {
                var u = 0 === h ? 0 : r / h;
                return d.slerpQuaternionArray(s, e, l, e, u, i, a), 4
            }, x._AngleInterpolation_2 = function(t, e, i, a, s, r, n, h, l, o) {
                return 0
            }, x._RadiansInterpolation_3 = function(t, e, i, a, s, r, n, h, l, o) {
                return 0
            }, x._Matrix4x4Interpolation_4 = function(t, e, i, a, s, r, n, h, l, o) {
                for (var u = 0; u < 16; u++, e++) i[a + u] = s[e] + r * n[e];
                return 16
            }, x._NoInterpolation_5 = function(t, e, i, a, s, r, n, h, l, o) {
                return i[a] = s[e], 1
            }, x._BezierInterpolation_6 = function(t, e, i, a, s, r, n, h, l, o, u) {
                return void 0 === u && (u = 0), i[a] = s[e] + (l[e] - s[e]) * P.getBezierRate(r / h, o[u], o[u + 1], o[u + 2], o[u + 3]), 5
            }, x._BezierInterpolation_7 = function(t, e, i, a, s, r, n, h, l, o, u) {
                return void 0 === u && (u = 0), i[a] = o[u + 4] + o[u + 5] * P.getBezierRate((.001 * r + o[u + 6]) / o[u + 7], o[u], o[u + 1], o[u + 2], o[u + 3]), 9
            }, x.load = function(t) {
                return st.loader.create(t, null, null, x)
            }, x.interpolation = [x._LinearInterpolation_0, x._QuaternionInterpolation_1, x._AngleInterpolation_2, x._RadiansInterpolation_3, x._Matrix4x4Interpolation_4, x._NoInterpolation_5, x._BezierInterpolation_6, x._BezierInterpolation_7], x
        }(),
        O = (function(t) {
            function a() {
                this.isCached = !1, this.canvas = null, this.tex = null, this.rec = null, a.__super.call(this)
            }
            n(a, "t_tl.ani.bone.canvasmesh.CacheAbleSkinMesh", L);
            var e = a.prototype;
            e.getCanvasPic = function() {
                var t, e = new l("2D"),
                    i = e.getContext("2d");
                return this.rec = this.mesh.getBounds(), e.size(this.rec.width, this.rec.height), t = this.transform, this.transform = a.tempMt, this.transform.identity(), this.transform.translate(-this.rec.x, -this.rec.y), this.renderToContext(i), this.transform.translate(+this.rec.x, +this.rec.y), this.transform = t, new Ft(e)
            }, e.render = function(t, e, i) {
                this.mesh.texture && (this.isCached || (this.isCached = !0, this.tex = this.getCanvasPic()), this.transform ? (this.transform.translate(e, i), this._renderTextureToContext(t), this.transform.translate(-e, -i)) : (this.transform = L._tempMatrix, this.transform.identity(), this.transform.translate(e, i), this._renderTextureToContext(t), this.transform.translate(-e, -i), this.transform = null))
            }, e._renderTextureToContext = function(t) {
                var e;
                if (this.context = t.ctx || t, t.save(), e = this.tex, this.transform) {
                    var i = this.transform;
                    t.transform(i.a, i.b, i.c, i.d, i.tx, i.ty)
                }
                this.rec = this.mesh.getBounds(), t.translate(this.rec.x, this.rec.y), t.drawTexture(e, 0, 0, e.width, e.height, 0, 0), t.restore()
            }, i(a, ["tempMt", function() {
                return this.tempMt = new St
            }])
        }(), function(r) {
            function t() {
                this.cacheOK = !1, this.cacheCmdOK = !1, this.transformCmds = [], this.drawCmds = [], t.__super.call(this), this.tempMesh = new b
            }
            n(t, "t_tl.ani.bone.canvasmesh.SimpleSkinMeshCanvas", r);
            var e = t.prototype;
            return e.init2 = function(t, e, i, a, s) {
                r.prototype.init2.call(this, t, e, i, a, s), this.cacheOK = !1, this.cacheCmdOK = !1, this.transformCmds.length = 6, this.drawCmds.length = 9
            }, e.renderToContext = function(t) {
                if (this.context = t.ctx || t, this.mesh) {
                    if (this.mesh.uvs.length <= 8) return void(0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh));
                    this.cacheOK || (this.tempMesh.texture = this.mesh.texture, this.tempMesh.uvs = this.mesh.texture.uv, this.tempMesh.vertices = T.solveMesh(this.mesh, this.tempMesh.vertices), this.cacheOK = !0), 0 == this.mode ? this._renderWithIndexes(this.tempMesh) : this._renderNoIndexes(this.tempMesh)
                }
            }, e._renderWithIndexes = function(t) {
                if (this.cacheCmdOK) this.renderByCache(t);
                else {
                    var e = t.indexes,
                        i = 0,
                        a = e.length;
                    for (1 < a && (a = 1), i = 0; i < a; i += 3) {
                        var s = 2 * e[i],
                            r = 2 * e[i + 1],
                            n = 2 * e[i + 2];
                        this._renderDrawTriangle(t, s, r, n)
                    }
                    this.cacheCmdOK = !0
                }
            }, e._renderDrawTriangle = function(t, e, i, a) {
                var s = this.context,
                    r = t.uvs,
                    n = t.vertices,
                    h = t.texture,
                    l = h.bitmap,
                    o = l.source,
                    u = h.width,
                    c = h.height,
                    d = l.width,
                    _ = l.height,
                    p = NaN,
                    f = NaN,
                    m = NaN,
                    y = NaN,
                    x = NaN,
                    g = NaN;
                if (t.useUvTransform) {
                    var v = t.uvTransform;
                    p = (r[e] * v.a + r[e + 1] * v.c + v.tx) * d, f = (r[i] * v.a + r[i + 1] * v.c + v.tx) * d, m = (r[a] * v.a + r[a + 1] * v.c + v.tx) * d, y = (r[e] * v.b + r[e + 1] * v.d + v.ty) * _, x = (r[i] * v.b + r[i + 1] * v.d + v.ty) * _, g = (r[a] * v.b + r[a + 1] * v.d + v.ty) * _
                } else p = r[e] * d, f = r[i] * d, m = r[a] * d, y = r[e + 1] * _, x = r[i + 1] * _, g = r[a + 1] * _;
                var D = n[e],
                    M = n[i],
                    I = n[a],
                    b = n[e + 1],
                    N = n[i + 1],
                    T = n[a + 1],
                    A = 1 / (p * x + y * m + f * g - x * m - y * f - p * g),
                    C = D * x + y * I + M * g - x * I - y * M - D * g,
                    w = p * M + D * m + f * I - M * m - D * f - p * I,
                    S = p * x * I + y * M * m + D * f * g - D * x * m - y * f * I - p * M * g,
                    F = b * x + y * T + N * g - x * T - y * N - b * g,
                    k = p * N + b * m + f * T - N * m - b * f - p * T,
                    P = p * x * T + y * N * m + b * f * g - b * x * m - y * f * T - p * N * g;
                if (this.transformCmds[0] = C * A, this.transformCmds[1] = F * A, this.transformCmds[2] = w * A, this.transformCmds[3] = k * A, this.transformCmds[4] = S * A, this.transformCmds[5] = P * A, this.drawCmds[0] = o, this.drawCmds[1] = h.uv[0] * d, this.drawCmds[2] = h.uv[1] * _, this.drawCmds[3] = u, this.drawCmds[4] = c, this.drawCmds[5] = h.uv[0] * d, this.drawCmds[6] = h.uv[1] * _, this.drawCmds[7] = u, this.drawCmds[8] = c, s.save(), this.transform) {
                    var B = this.transform;
                    s.transform(B.a, B.b, B.c, B.d, B.tx, B.ty)
                }
                s.transform.apply(s, this.transformCmds), s.drawImage.apply(s, this.drawCmds), s.restore()
            }, e.renderByCache = function(t) {
                var e = this.context;
                if (e.save(), this.transform) {
                    var i = this.transform;
                    e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty)
                }
                e.transform.apply(e, this.transformCmds), e.drawImage.apply(e, this.drawCmds), e.restore()
            }, t
        }(L)),
        E = function(e) {
            function i(t, e) {
                this._templet = null, this._player = null, this._curOriginalData = null, this._boneMatrixArray = [], this._lastTime = 0, this._currAniName = null, this._currAniIndex = -1, this._pause = !0, this._aniClipIndex = -1, this._clipIndex = -1, this._skinIndex = 0, this._skinName = "default", this._aniMode = 0, this._graphicsCache = null, this._boneSlotDic = null, this._bindBoneBoneSlotDic = null, this._boneSlotArray = null, this._index = -1, this._total = -1, this._indexControl = !1, this._aniPath = null, this._texturePath = null, this._complete = null, this._loadAniMode = 0, this._yReverseMatrix = null, this._ikArr = null, this._tfArr = null, this._pathDic = null, this._rootBone = null, this._boneList = null, this._aniSectionDic = null, this._eventIndex = 0, this._drawOrderIndex = 0, this._drawOrder = null, this._lastAniClipIndex = -1, this._lastUpdateAniClipIndex = -1, i.__super.call(this), void 0 === e && (e = 0), t && this.init(t, e)
            }
            n(i, "t_tl.ani.bone.Skeleton", e);
            var t = i.prototype;
            return t.init = function(t, e) {
                void 0 === e && (e = 0);
                var i, a, s, r = 0,
                    n = 0;
                if (1 == e)
                    for (this._graphicsCache = [], r = 0, n = t.getAnimationCount(); r < n; r++) this._graphicsCache.push([]);
                if (this._yReverseMatrix = t.yReverseMatrix, this._aniMode = e, this._templet = t, this._player = new B, this._player.cacheFrameRate = t.rate, this._player.templet = t, this._player.play(), this._parseSrcBoneMatrix(), this._boneList = t.mBoneArr, this._rootBone = t.mRootBone, this._aniSectionDic = t.aniSectionDic, 0 < t.ikArr.length)
                    for (this._ikArr = [], r = 0, n = t.ikArr.length; r < n; r++) this._ikArr.push(new N(t.ikArr[r], this._boneList));
                if (0 < t.pathArr.length)
                    for (null == this._pathDic && (this._pathDic = {}), r = 0, n = t.pathArr.length; r < n; r++) i = t.pathArr[r], a = new A(i, this._boneList), (s = this._boneSlotDic[i.name]) && ((a = new A(i, this._boneList)).target = s), this._pathDic[i.name] = a;
                if (0 < t.tfArr.length)
                    for (this._tfArr = [], r = 0, n = t.tfArr.length; r < n; r++) this._tfArr.push(new C(t.tfArr[r], this._boneList));
                if (0 < t.skinDataArray.length) {
                    var h = this._templet.skinDataArray[this._skinIndex];
                    this._skinName = h.name
                }
                this._player.on("played", this, this._onPlay), this._player.on("stopped", this, this._onStop), this._player.on("paused", this, this._onPause)
            }, t.load = function(t, e, i) {
                void 0 === i && (i = 0), this._aniPath = t, this._complete = e, this._loadAniMode = i, st.loader.load([{
                    url: t,
                    type: "arraybuffer"
                }], o.create(this, this._onLoaded))
            }, t._onLoaded = function() {
                var t, e = u.getRes(this._aniPath);
                null != e && (null == K.TEMPLET_DICTIONARY && (K.TEMPLET_DICTIONARY = {}), (t = K.TEMPLET_DICTIONARY[this._aniPath]) ? t.isParseFail ? this._parseFail() : t.isParserComplete ? this._parseComplete() : (t.on("complete", this, this._parseComplete), t.on("error", this, this._parseFail)) : ((t = new K)._setUrl(this._aniPath), (K.TEMPLET_DICTIONARY[this._aniPath] = t).on("complete", this, this._parseComplete), t.on("error", this, this._parseFail), t.isParserComplete = !1, t.parseData(null, e)))
            }, t._parseComplete = function() {
                var t = K.TEMPLET_DICTIONARY[this._aniPath];
                t && (this.init(t, this._loadAniMode), this.play(0, !0)), this._complete && this._complete.runWith(this)
            }, t._parseFail = function() {
                console.log("[Error]:" + this._aniPath + "解析失败")
            }, t._onPlay = function() {
                this.event("played")
            }, t._onStop = function() {
                var t, e = this._templet.eventAniArr[this._aniClipIndex];
                if (e && this._eventIndex < e.length)
                    for (; this._eventIndex < e.length; this._eventIndex++)(t = e[this._eventIndex]).time >= this._player.playStart && t.time <= this._player.playEnd && this.event("label", t);
                this._eventIndex = 0, this._drawOrder = null, this.event("stopped")
            }, t._onPause = function() {
                this.event("paused")
            }, t._parseSrcBoneMatrix = function() {
                var t = 0,
                    e = 0;
                for (e = this._templet.srcBoneMatrixArr.length, t = 0; t < e; t++) this._boneMatrixArray.push(new St);
                if (0 == this._aniMode) this._boneSlotDic = this._templet.boneSlotDic, this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic, this._boneSlotArray = this._templet.boneSlotArray;
                else {
                    null == this._boneSlotDic && (this._boneSlotDic = {}), null == this._bindBoneBoneSlotDic && (this._bindBoneBoneSlotDic = {}), null == this._boneSlotArray && (this._boneSlotArray = []);
                    var i, a, s = this._templet.boneSlotArray;
                    for (t = 0, e = s.length; t < e; t++) i = s[t], null == (a = this._bindBoneBoneSlotDic[i.parent]) && (this._bindBoneBoneSlotDic[i.parent] = a = []), this._boneSlotDic[i.name] = i = i.copy(), a.push(i), this._boneSlotArray.push(i)
                }
            }, t._emitMissedEvents = function(t, e, i) {
                void 0 === i && (i = 0);
                var a = this._templet.eventAniArr[this._player.currentAnimationClipIndex];
                if (a) {
                    var s, r, n = 0;
                    for (s = a.length, n = i; n < s; n++)(r = a[n]).time >= this._player.playStart && r.time <= this._player.playEnd && this.event("label", r)
                }
            }, t._update = function(t) {
                if (void 0 === t && (t = !0), !(this._pause || t && this._indexControl)) {
                    var e = this.timer.currTimer,
                        i = this._player.currentKeyframeIndex,
                        a = e - this._lastTime;
                    if (t ? this._player._update(a) : i = -1, this._lastTime = e, this._player && (this._index = this._clipIndex = this._player.currentKeyframeIndex, !(this._index < 0 || 0 < a && this._clipIndex == i && this._lastUpdateAniClipIndex == this._aniClipIndex))) {
                        var s;
                        this._lastUpdateAniClipIndex = this._aniClipIndex, i > this._clipIndex && 0 != this._eventIndex && (this._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex), this._eventIndex = 0);
                        var r, n = this._templet.eventAniArr[this._aniClipIndex];
                        if (n && this._eventIndex < n.length && ((s = n[this._eventIndex]).time >= this._player.playStart && s.time <= this._player.playEnd ? this._player.currentPlayTime >= s.time && (this.event("label", s), this._eventIndex++) : this._eventIndex++), 0 == this._aniMode) {
                            if (r = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex)) return void(this.graphics != r && (this.graphics = r));
                            var h = 0,
                                l = 0;
                            for (l = this._clipIndex; !this._templet.getGrahicsDataWithCache(this._aniClipIndex, l - 1) && 0 < l;) l--;
                            if (l < this._clipIndex)
                                for (h = l; h < this._clipIndex; h++) this._createGraphics(h)
                        } else if (1 == this._aniMode) {
                            if (r = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex)) return void(this.graphics != r && (this.graphics = r));
                            for (l = this._clipIndex; !this._getGrahicsDataWithCache(this._aniClipIndex, l - 1) && 0 < l;) l--;
                            if (l < this._clipIndex)
                                for (h = l; h < this._clipIndex; h++) this._createGraphics(h)
                        }
                        this._createGraphics()
                    }
                }
            }, t._createGraphics = function(t) {
                void 0 === t && (t = -1), -1 == t && (t = this._clipIndex);
                var e, i, a = t * this._player.cacheFrameRateInterval,
                    s = this._templet.drawOrderAniArr[this._aniClipIndex];
                if (s && 0 < s.length)
                    for (this._drawOrderIndex = 0, e = s[this._drawOrderIndex]; a >= e.time && (this._drawOrder = e.drawOrder, this._drawOrderIndex++, !(this._drawOrderIndex >= s.length));) e = s[this._drawOrderIndex];
                0 == this._aniMode || 1 == this._aniMode ? this.graphics = U.create() : this.graphics instanceof t_tl.ani.GraphicsAni ? this.graphics.clear() : this.graphics = U.create(), i = this.graphics;
                var r = this._templet.getNodes(this._aniClipIndex);
                this._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, this._player._fullFrames[this._aniClipIndex], t, a);
                var n, h, l, o, u = this._aniSectionDic[this._aniClipIndex],
                    c = 0,
                    d = 0,
                    _ = 0,
                    p = 0,
                    f = 0,
                    m = this._templet.srcBoneMatrixArr.length;
                for (f = u[d = 0]; d < m; d++) o = this._boneList[d], l = this._templet.srcBoneMatrixArr[d], o.resultTransform.scX = l.scX * this._curOriginalData[c++], o.resultTransform.skX = l.skX + this._curOriginalData[c++], o.resultTransform.skY = l.skY + this._curOriginalData[c++], o.resultTransform.scY = l.scY * this._curOriginalData[c++], o.resultTransform.x = l.x + this._curOriginalData[c++], o.resultTransform.y = l.y + this._curOriginalData[c++], 8 === this._templet.tMatrixDataLen && (o.resultTransform.skewX = l.skewX + this._curOriginalData[c++], o.resultTransform.skewY = l.skewY + this._curOriginalData[c++]);
                var y, x = {},
                    g = {};
                for (f += u[1]; d < f; d++) x[(y = r[d]).name] = this._curOriginalData[c++], g[y.name] = this._curOriginalData[c++], this._curOriginalData[c++], this._curOriginalData[c++], this._curOriginalData[c++], this._curOriginalData[c++];
                var v, D, M = {},
                    I = {};
                for (f += u[2]; d < f; d++) M[(y = r[d]).name] = this._curOriginalData[c++], I[y.name] = this._curOriginalData[c++], this._curOriginalData[c++], this._curOriginalData[c++], this._curOriginalData[c++], this._curOriginalData[c++];
                if (this._pathDic)
                    for (f += u[3]; d < f; d++) {
                        if (y = r[d], v = this._pathDic[y.name]) switch (new wt(y.extenData).getByte()) {
                            case 1:
                                v.position = this._curOriginalData[c++];
                                break;
                            case 2:
                                v.spacing = this._curOriginalData[c++];
                                break;
                            case 3:
                                v.rotateMix = this._curOriginalData[c++], v.translateMix = this._curOriginalData[c++]
                        }
                    }
                if (this._yReverseMatrix ? this._rootBone.update(this._yReverseMatrix) : this._rootBone.update(St.TEMP.identity()), this._ikArr)
                    for (d = 0, f = this._ikArr.length; d < f; d++) D = this._ikArr[d], M.hasOwnProperty(D.name) && (D.bendDirection = M[D.name]), I.hasOwnProperty(D.name) && (D.mix = I[D.name]), D.apply();
                if (this._pathDic)
                    for (var b in this._pathDic)(v = this._pathDic[b]).apply(this._boneList, i);
                if (this._tfArr)
                    for (d = 0, p = this._tfArr.length; d < p; d++) this._tfArr[d].apply();
                for (d = 0, p = this._boneList.length; d < p; d++)
                    if (o = this._boneList[d], h = this._bindBoneBoneSlotDic[o.name], o.resultMatrix.copyTo(this._boneMatrixArray[d]), h)
                        for (_ = 0, f = h.length; _ < f; _++)(n = h[_]) && n.setParentMatrix(o.resultMatrix);
                var N, T, A, C, w = {},
                    S = this._templet.deformAniArr;
                if (S && 0 < S.length) {
                    if (this._lastAniClipIndex != this._aniClipIndex)
                        for (this._lastAniClipIndex = this._aniClipIndex, d = 0, f = this._boneSlotArray.length; d < f; d++)(n = this._boneSlotArray[d]).deformData = null;
                    var F, k = S[this._aniClipIndex];
                    for (F in N = k.default, this._setDeform(N, w, this._boneSlotArray, a), k) "default" != F && F != this._skinName && (N = k[F], this._setDeform(N, w, this._boneSlotArray, a));
                    N = k[this._skinName], this._setDeform(N, w, this._boneSlotArray, a)
                }
                if (this._drawOrder)
                    for (d = 0, f = this._drawOrder.length; d < f; d++) T = x[(n = this._boneSlotArray[this._drawOrder[d]]).name], A = g[n.name], isNaN(A) || (i.save(), i.alpha(A)), isNaN(T) || -2 == T || (this._templet.attachmentNames ? n.showDisplayByName(this._templet.attachmentNames[T]) : n.showDisplayByIndex(T)), w[this._drawOrder[d]] ? (C = w[this._drawOrder[d]], n.currDisplayData && C[n.currDisplayData.attachmentName] ? n.deformData = C[n.currDisplayData.attachmentName] : n.deformData = null) : n.deformData = null, isNaN(A) ? n.draw(i, this._boneMatrixArray, 2 == this._aniMode) : n.draw(i, this._boneMatrixArray, 2 == this._aniMode, A), isNaN(A) || i.restore();
                else
                    for (d = 0, f = this._boneSlotArray.length; d < f; d++) T = x[(n = this._boneSlotArray[d]).name], A = g[n.name], isNaN(A) || (i.save(), i.alpha(A)), isNaN(T) || -2 == T || (this._templet.attachmentNames ? n.showDisplayByName(this._templet.attachmentNames[T]) : n.showDisplayByIndex(T)), w[d] ? (C = w[d], n.currDisplayData && C[n.currDisplayData.attachmentName] ? n.deformData = C[n.currDisplayData.attachmentName] : n.deformData = null) : n.deformData = null, isNaN(A) ? n.draw(i, this._boneMatrixArray, 2 == this._aniMode) : n.draw(i, this._boneMatrixArray, 2 == this._aniMode, A), isNaN(A) || i.restore();
                0 == this._aniMode ? this._templet.setGrahicsDataWithCache(this._aniClipIndex, t, i) : 1 == this._aniMode && this._setGrahicsDataWithCache(this._aniClipIndex, t, i)
            }, t._setDeform = function(t, e, i, a) {
                if (t) {
                    var s, r, n, h = 0,
                        l = 0,
                        o = 0;
                    if (t)
                        for (h = 0, l = t.deformSlotDataList.length; h < l; h++)
                            for (s = t.deformSlotDataList[h], o = 0; o < s.deformSlotDisplayList.length; o++) n = i[(r = s.deformSlotDisplayList[o]).slotIndex], r.apply(a, n), e[r.slotIndex] || (e[r.slotIndex] = {}), e[r.slotIndex][r.attachment] = r.deformData
                }
            }, t.getAnimNum = function() {
                return this._templet.getAnimationCount()
            }, t.getAniNameByIndex = function(t) {
                return this._templet.getAniNameByIndex(t)
            }, t.getSlotByName = function(t) {
                return this._boneSlotDic[t]
            }, t.showSkinByName = function(t, e) {
                void 0 === e && (e = !0), this.showSkinByIndex(this._templet.getSkinIndexByName(t), e)
            }, t.showSkinByIndex = function(t, e) {
                void 0 === e && (e = !0);
                for (var i = 0; i < this._boneSlotArray.length; i++) this._boneSlotArray[i].showSlotData(null, e);
                if (this._templet.showSkinByIndex(this._boneSlotDic, t, e)) {
                    var a = this._templet.skinDataArray[t];
                    this._skinIndex = t, this._skinName = a.name
                }
                this._clearCache()
            }, t.showSlotSkinByIndex = function(t, e) {
                if (0 != this._aniMode) {
                    var i = this.getSlotByName(t);
                    i && i.showDisplayByIndex(e), this._clearCache()
                }
            }, t.showSlotSkinByName = function(t, e) {
                if (0 != this._aniMode) {
                    var i = this.getSlotByName(t);
                    i && i.showDisplayByName(e), this._clearCache()
                }
            }, t.replaceSlotSkinName = function(t, e, i) {
                if (0 != this._aniMode) {
                    var a = this.getSlotByName(t);
                    a && a.replaceDisplayByName(e, i), this._clearCache()
                }
            }, t.replaceSlotSkinByIndex = function(t, e, i) {
                if (0 != this._aniMode) {
                    var a = this.getSlotByName(t);
                    a && a.replaceDisplayByIndex(e, i), this._clearCache()
                }
            }, t.setSlotSkin = function(t, e) {
                if (0 != this._aniMode) {
                    var i = this.getSlotByName(t);
                    i && i.replaceSkin(e), this._clearCache()
                }
            }, t._clearCache = function() {
                if (1 == this._aniMode)
                    for (var t = 0, e = this._graphicsCache.length; t < e; t++) {
                        for (var i = 0, a = this._graphicsCache[t].length; i < a; i++) {
                            var s = this._graphicsCache[t][i];
                            s != this.graphics && U.recycle(s)
                        }
                        this._graphicsCache[t].length = 0
                    }
            }, t.play = function(t, e, i, a, s, r) {
                void 0 === i && (i = !0), void 0 === a && (a = 0), void 0 === s && (s = 0), void 0 === r && (r = !0), this._indexControl = !1;
                var n = -1,
                    h = NaN;
                if (h = e ? 2147483647 : 0, "string" == typeof t)
                    for (var l = 0, o = this._templet.getAnimationCount(); l < o; l++) {
                        var u = this._templet.getAnimation(l);
                        if (u && t == u.name) {
                            n = l;
                            break
                        }
                    } else n = t; - 1 < n && n < this.getAnimNum() && (this._aniClipIndex = n, (i || this._pause || this._currAniIndex != n) && (this._currAniIndex = n, this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(n)), this._drawOrder = null, this._eventIndex = 0, this._player.play(n, this._player.playbackRate, h, a, s), r && this._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex), this._pause && (this._pause = !1, this._lastTime = c.now(), this.timer.frameLoop(1, this, this._update, null, !0)), this._update()))
            }, t.stop = function() {
                this._pause || (this._pause = !0, this._player && this._player.stop(!0), this.timer.clear(this, this._update))
            }, t.playbackRate = function(t) {
                this._player && (this._player.playbackRate = t)
            }, t.paused = function() {
                this._pause || (this._pause = !0, this._player && (this._player.paused = !0), this.timer.clear(this, this._update))
            }, t.resume = function() {
                this._indexControl = !1, this._pause && (this._pause = !1, this._player && (this._player.paused = !1), this._lastTime = c.now(), this.timer.frameLoop(1, this, this._update, null, !0))
            }, t._getGrahicsDataWithCache = function(t, e) {
                return this._graphicsCache[t][e]
            }, t._setGrahicsDataWithCache = function(t, e, i) {
                this._graphicsCache[t][e] = i
            }, t.destroy = function(t) {
                void 0 === t && (t = !0), e.prototype.destroy.call(this, t), this._templet = null, this._player && this._player.offAll(), this._player = null, this._curOriginalData = null, this._boneMatrixArray.length = 0, this._lastTime = 0, this.timer.clear(this, this._update)
            }, a(0, t, "url", function() {
                return this._aniPath
            }, function(t) {
                this.load(t)
            }), a(0, t, "index", function() {
                return this._index
            }, function(t) {
                this.player && (this._index = t, this._player.currentTime = 1e3 * this._index / this._player.cacheFrameRate, this._indexControl = !0, this._update(!1))
            }), a(0, t, "total", function() {
                return this._templet && this._player ? this._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1e3 * this._player.cacheFrameRate) : this._total = -1, this._total
            }), a(0, t, "templet", function() {
                return this._templet
            }), a(0, t, "player", function() {
                return this._player
            }), i.useSimpleMeshInCanvas = !1, i
        }(rt),
        K = (function(e) {
            function f(t) {
                this._start = 0, this._Pos = 0, this._data = null, this._curIndex = 0, this._preIndex = 0, this._playIndex = 0, this._playing = !1, this._ended = !0, this._count = 0, this._ids = null, this._loadedImage = {}, this._idOfSprite = null, this._parentMovieClip = null, this._movieClipList = null, this._labels = null, this.basePath = null, this._atlasPath = null, this._url = null, this._isRoot = !1, this._completeHandler = null, this._endFrame = -1, this.interval = 30, this.loop = !1, f.__super.call(this), this._ids = {}, this._idOfSprite = [], this._reset(), this._playing = !1, (this._parentMovieClip = t) ? (this._isRoot = !1, this._movieClipList = t._movieClipList, this._movieClipList.push(this)) : (this._movieClipList = [this], this._isRoot = !0, this._setUpNoticeType(1))
            }
            n(f, "t_tl.ani.swf.MovieClip", e);
            var t = f.prototype;
            t.destroy = function(t) {
                void 0 === t && (t = !0), this._clear(), e.prototype.destroy.call(this, t)
            }, t._setDisplay = function(t) {
                e.prototype._setDisplay.call(this, t), this._isRoot && this._$3__onDisplay(t)
            }, t._$3__onDisplay = function(t) {
                t ? this.timer.loop(this.interval, this, this.updates, null, !0) : this.timer.clear(this, this.updates)
            }, t.updates = function() {
                if (!this._parentMovieClip) {
                    var t, e = 0;
                    for (t = this._movieClipList.length, e = 0; e < t; e++) this._movieClipList[e] && this._movieClipList[e]._update()
                }
            }, t.addLabel = function(t, e) {
                this._labels || (this._labels = {}), this._labels[e] = t
            }, t.removeLabel = function(t) {
                if (t) {
                    if (!this._labels)
                        for (var e in this._labels)
                            if (this._labels[e] === t) {
                                delete this._labels[e];
                                break
                            }
                } else this._labels = null
            }, t._update = function() {
                if (this._data && this._playing) {
                    if (this._playIndex++, this._playIndex >= this._count) {
                        if (!this.loop) return this._playIndex--, void this.stop();
                        this._playIndex = 0
                    }
                    if (this._parse(this._playIndex), this._labels && this._labels[this._playIndex] && this.event("label", this._labels[this._playIndex]), -1 != this._endFrame && this._endFrame == this._playIndex) {
                        if (this._endFrame = -1, null != this._completeHandler) {
                            var t = this._completeHandler;
                            this._completeHandler = null, t.run()
                        }
                        this.stop()
                    }
                }
            }, t.stop = function() {
                this._playing = !1
            }, t.gotoAndStop = function(t) {
                this.index = t, this.stop()
            }, t._clear = function() {
                if (this.stop(), this._idOfSprite.length = 0, !this._parentMovieClip) {
                    this.timer.clear(this, this.updates);
                    var t, e = 0;
                    for (t = this._movieClipList.length, e = 0; e < t; e++) this._movieClipList[e] != this && this._movieClipList[e]._clear();
                    this._movieClipList.length = 0
                }
                var i;
                for (i in this._atlasPath && u.clearRes(this._atlasPath), this._loadedImage) this._loadedImage[i] && (u.clearRes(i), this._loadedImage[i] = !1);
                this.removeChildren(), this.graphics = null, this._parentMovieClip = null
            }, t.play = function(t, e) {
                void 0 === t && (t = 0), void 0 === e && (e = !0), this.loop = e, this._playing = !0, this._data && this._displayFrame(t)
            }, t._displayFrame = function(t) {
                void 0 === t && (t = -1), -1 != t && (this._curIndex > t && this._reset(), this._parse(t))
            }, t._reset = function(t) {
                void 0 === t && (t = !0), t && 1 != this._curIndex && this.removeChildren(), this._preIndex = this._curIndex = -1, this._Pos = this._start
            }, t._parse = function(t) {
                var e, i, a, s = 0,
                    r = 0,
                    n = 0,
                    h = !1,
                    l = this._idOfSprite,
                    o = this._data;
                for (this._ended && this._reset(), o.pos = this._Pos, this._ended = !1, this._playIndex = t, this._curIndex > t && t < this._preIndex && (this._reset(!0), o.pos = this._Pos); this._curIndex <= t && !this._ended;) switch (o.getUint16()) {
                    case 12:
                        if (s = o.getUint16(), r = this._ids[o.getUint16()], this._Pos = o.pos, o.pos = r, 0 == (n = o.getUint8())) {
                            var u = o.getUint16();
                            if (!(i = l[s])) {
                                i = l[s] = new rt;
                                var c = new rt;
                                c.loadImage(this.basePath + u + ".png"), this._loadedImage[this.basePath + u + ".png"] = !0, i.addChild(c), c.size(o.getFloat32(), o.getFloat32());
                                var d = o._getMatrix();
                                c.transform = d
                            }
                            i.alpha = 1
                        } else 1 == n && ((e = l[s]) || (l[s] = e = new f(this), e.interval = this.interval, e._ids = this._ids, e.basePath = this.basePath, e._setData(o, r), e._initState(), e.play(0)), e.alpha = 1);
                        o.pos = this._Pos;
                        break;
                    case 3:
                        var _ = l[o.getUint16()];
                        _ && (this.addChild(_), _.zOrder = o.getUint16(), h = !0);
                        break;
                    case 4:
                        (_ = l[o.getUint16()]) && _.removeSelf();
                        break;
                    case 5:
                        l[o.getUint16()][f._ValueList[o.getUint16()]] = o.getFloat32();
                        break;
                    case 6:
                        l[o.getUint16()].visible = 0 < o.getUint8();
                        break;
                    case 7:
                        var p = (i = l[o.getUint16()]).transform || St.create();
                        p.setTo(o.getFloat32(), o.getFloat32(), o.getFloat32(), o.getFloat32(), o.getFloat32(), o.getFloat32()), i.transform = p;
                        break;
                    case 8:
                        l[o.getUint16()].setPos(o.getFloat32(), o.getFloat32());
                        break;
                    case 9:
                        l[o.getUint16()].setSize(o.getFloat32(), o.getFloat32());
                        break;
                    case 10:
                        l[o.getUint16()].alpha = o.getFloat32();
                        break;
                    case 11:
                        l[o.getUint16()].setScale(o.getFloat32(), o.getFloat32());
                        break;
                    case 98:
                        a = o.getString(), this.event(a), "stop" == a && this.stop();
                        break;
                    case 99:
                        this._curIndex = o.getUint16(), h && this.updateZOrder();
                        break;
                    case 100:
                        this._count = this._curIndex + 1, this._ended = !0, this._playing && (this.event("enterframe"), this.event("end"), this.event("complete")), this._reset(!1)
                }
                this._playing && !this._ended && this.event("enterframe"), this._Pos = o.pos
            }, t._setData = function(t, e) {
                this._data = t, this._start = e + 3
            }, t.load = function(t, e, i) {
                var a;
                void 0 === e && (e = !1), this._url = t = g.formatURL(t), e && (this._atlasPath = i || t.split(".swf")[0] + ".json"), this.stop(), this._clear(), this._movieClipList = [this], a = [{
                    url: t,
                    type: "arraybuffer"
                }], this._atlasPath && a.push({
                    url: this._atlasPath,
                    type: "atlas"
                }), st.loader.load(a, o.create(this, this._onLoaded))
            }, t._onLoaded = function() {
                var t;
                (t = u.getRes(this._url)) ? (this.basePath = this._atlasPath ? u.getAtlas(this._atlasPath).dir : this._url.split(".swf")[0] + "/image/", this._initData(t)) : this.event("error", "file not find")
            }, t._initState = function() {
                this._reset(), this._ended = !1;
                var t = this._playing;
                for (this._playing = !1, this._curIndex = 0; !this._ended;) this._parse(++this._curIndex);
                this._playing = t
            }, t._initData = function(t) {
                this._data = new wt(t);
                var e = 0,
                    i = this._data.getUint16();
                for (e = 0; e < i; e++) this._ids[this._data.getInt16()] = this._data.getInt32();
                this.interval = 1e3 / this._data.getUint16(), this._setData(this._data, this._ids[32767]), this._initState(), this.play(0), this.event("loaded"), this._parentMovieClip || this.timer.loop(this.interval, this, this.updates, null, !0)
            }, t.playTo = function(t, e, i) {
                this._completeHandler = i, this._endFrame = e, this.play(t, !1)
            }, a(0, t, "index", function() {
                return this._playIndex
            }, function(t) {
                this._playIndex = t, this._data && this._displayFrame(this._playIndex), this._labels && this._labels[t] && this.event("label", this._labels[t])
            }), a(0, t, "count", function() {
                return this._count
            }), a(0, t, "playing", function() {
                return this._playing
            }), a(0, t, "url", null, function(t) {
                this.load(t)
            }), f._ValueList = ["x", "y", "width", "height", "scaleX", "scaleY", "rotation", "alpha"]
        }(rt), function(e) {
            function s() {
                this._mainTexture = null, this._textureJson = null, this._graphicsCache = [], this.srcBoneMatrixArr = [], this.ikArr = [], this.tfArr = [], this.pathArr = [], this.boneSlotDic = {}, this.bindBoneBoneSlotDic = {}, this.boneSlotArray = [], this.skinDataArray = [], this.skinDic = {}, this.subTextureDic = {}, this.isParseFail = !1, this.yReverseMatrix = null, this.drawOrderAniArr = [], this.eventAniArr = [], this.attachmentNames = null, this.deformAniArr = [], this._isDestroyed = !1, this._rate = 30, this.isParserComplete = !1, this.aniSectionDic = {}, this._skBufferUrl = null, this._textureDic = {}, this._loadList = null, this._path = null, this.tMatrixDataLen = 0, this.mRootBone = null, s.__super.call(this), this.skinSlotDisplayDataArr = [], this.mBoneArr = []
            }
            n(s, "t_tl.ani.bone.Templet", e);
            var t = s.prototype;
            return t.loadAni = function(t) {
                this._skBufferUrl = t, st.loader.load(t, o.create(this, this.onComplete), null, "arraybuffer")
            }, t.onComplete = function(t) {
                if (this._isDestroyed) this.destroy();
                else {
                    var e = u.getRes(this._skBufferUrl);
                    e ? (this._path = this._skBufferUrl.slice(0, this._skBufferUrl.lastIndexOf("/")) + "/", this.parseData(null, e)) : this.event("error", "load failed:" + this._skBufferUrl)
                }
            }, t.parseData = function(t, e, i) {
                void 0 === i && (i = 30), !this._path && this.url && (this._path = this.url.slice(0, this.url.lastIndexOf("/")) + "/"), this._mainTexture = t, this._mainTexture && m.isWebGL && t.bitmap && (t.bitmap.enableMerageInAtlas = !1), this._rate = i, this.parse(e)
            }, t.buildArmature = function(t) {
                return void 0 === t && (t = 0), new E(this, t)
            }, t.parse = function(t) {
                e.prototype.parse.call(this, t), this._endLoaded(), this._aniVersion != s.LAYA_ANIMATION_VISION && (console.log("[Error] 版本不一致，请使用IDE版本配套的重新导出" + this._aniVersion + "->" + s.LAYA_ANIMATION_VISION), this._loaded = !1), this.loaded ? this._mainTexture ? this._parsePublicExtData() : this._parseTexturePath() : (this.event("error", this), this.isParseFail = !0)
            }, t._parseTexturePath = function() {
                if (this._isDestroyed) this.destroy();
                else {
                    var t = 0;
                    this._loadList = [];
                    var e, i = new wt(this.getPublicExtData()),
                        a = 0,
                        s = 0,
                        r = 0,
                        n = i.getInt32(),
                        h = i.readUTFString(),
                        l = h.split("\n");
                    for (t = 0; t < n; t++) e = this._path + l[2 * t], h = l[2 * t + 1], i.getFloat32(), i.getFloat32(), a = i.getFloat32(), s = i.getFloat32(), r = i.getFloat32(), isNaN(r) ? 0 : r, r = i.getFloat32(), isNaN(r) ? 0 : r, r = i.getFloat32(), isNaN(r) ? a : r, r = i.getFloat32(), isNaN(r) ? s : r, -1 == this._loadList.indexOf(e) && this._loadList.push(e);
                    st.loader.load(this._loadList, o.create(this, this._textureComplete))
                }
            }, t._textureComplete = function() {
                for (var t, e, i = 0, a = this._loadList.length; i < a; i++) e = this._loadList[i], t = this._textureDic[e] = u.getRes(e), m.isWebGL && t && t.bitmap && (t.bitmap.enableMerageInAtlas = !1);
                this._parsePublicExtData()
            }, t._parsePublicExtData = function() {
                var t = 0,
                    e = 0,
                    i = 0,
                    a = 0,
                    s = 0;
                for (t = 0, s = this.getAnimationCount(); t < s; t++) this._graphicsCache.push([]);
                var r;
                r = "Dragon" != this._aniClassName;
                var n, h, l = new wt(this.getPublicExtData()),
                    o = 0,
                    u = 0,
                    c = 0,
                    d = 0,
                    _ = 0,
                    p = 0,
                    f = 0,
                    m = 0,
                    y = 0,
                    x = l.getInt32(),
                    g = l.readUTFString(),
                    v = g.split("\n");
                for (t = 0; t < x; t++) {
                    if (n = this._mainTexture, h = this._path + v[2 * t], g = v[2 * t + 1], null == this._mainTexture && (n = this._textureDic[h]), !n) return this.event("error", this), void(this.isParseFail = !0);
                    o = l.getFloat32(), u = l.getFloat32(), c = l.getFloat32(), d = l.getFloat32(), y = l.getFloat32(), _ = isNaN(y) ? 0 : y, y = l.getFloat32(), p = isNaN(y) ? 0 : y, y = l.getFloat32(), f = isNaN(y) ? c : y, y = l.getFloat32(), m = isNaN(y) ? d : y, this.subTextureDic[g] = Ft.create(n, o, u, c, d, -_, -p, f, m)
                }
                this._mainTexture = n;
                var D, M, I, b, N, T = l.getUint16();
                for (t = 0; t < T; t++)(D = []).push(l.getUint16()), D.push(l.getUint16()), D.push(l.getUint16()), D.push(l.getUint16()), this.aniSectionDic[t] = D;
                var A, C = l.getInt16(),
                    w = {};
                for (t = 0; t < C; t++) M = new kt, 0 == t ? A = M : M.root = A, M.d = r ? -1 : 1, b = l.readUTFString(), N = l.readUTFString(), M.length = l.getFloat32(), 1 == l.getByte() && (M.inheritRotation = !1), 1 == l.getByte() && (M.inheritScale = !1), M.name = b, N && ((I = w[N]) ? I.addChild(M) : this.mRootBone = M), w[b] = M, this.mBoneArr.push(M);
                this.tMatrixDataLen = l.getUint16();
                var S, F, k = l.getUint16(),
                    P = Math.floor(k / this.tMatrixDataLen),
                    B = this.srcBoneMatrixArr;
                for (t = 0; t < P; t++)(S = new zt).scX = l.getFloat32(), S.skX = l.getFloat32(), S.skY = l.getFloat32(), S.scY = l.getFloat32(), S.x = l.getFloat32(), S.y = l.getFloat32(), 8 === this.tMatrixDataLen && (S.skewX = l.getFloat32(), S.skewY = l.getFloat32()), B.push(S), (M = this.mBoneArr[t]).transform = S;
                var U, L = l.getUint16(),
                    R = 0;
                for (t = 0; t < L; t++) {
                    for (F = new Et, R = l.getUint16(), e = 0; e < R; e++) F.boneNames.push(l.readUTFString()), F.boneIndexs.push(l.getInt16());
                    F.name = l.readUTFString(), F.targetBoneName = l.readUTFString(), F.targetBoneIndex = l.getInt16(), F.bendDirection = l.getFloat32(), F.mix = l.getFloat32(), F.isSpine = r, this.ikArr.push(F)
                }
                var O, E = l.getUint16(),
                    K = 0;
                for (t = 0; t < E; t++) {
                    for (U = new Xt, K = l.getUint16(), e = 0; e < K; e++) U.boneIndexs.push(l.getInt16());
                    U.name = l.getUTFString(), U.targetIndex = l.getInt16(), U.rotateMix = l.getFloat32(), U.translateMix = l.getFloat32(), U.scaleMix = l.getFloat32(), U.shearMix = l.getFloat32(), U.offsetRotation = l.getFloat32(), U.offsetX = l.getFloat32(), U.offsetY = l.getFloat32(), U.offsetScaleX = l.getFloat32(), U.offsetScaleY = l.getFloat32(), U.offsetShearY = l.getFloat32(), this.tfArr.push(U)
                }
                var Y = l.getUint16(),
                    V = 0;
                for (t = 0; t < Y; t++) {
                    for ((O = new Kt).name = l.readUTFString(), V = l.getUint16(), e = 0; e < V; e++) O.bones.push(l.getInt16());
                    O.target = l.readUTFString(), O.positionMode = l.readUTFString(), O.spacingMode = l.readUTFString(), O.rotateMode = l.readUTFString(), O.offsetRotation = l.getFloat32(), O.position = l.getFloat32(), O.spacing = l.getFloat32(), O.rotateMix = l.getFloat32(), O.translateMix = l.getFloat32(), this.pathArr.push(O)
                }
                var W, X, z, q, G, H = 0,
                    Q = 0,
                    Z = 0,
                    j = NaN,
                    $ = 0,
                    J = l.getInt16();
                for (t = 0; t < J; t++) {
                    var tt = l.getUint8(),
                        et = {};
                    this.deformAniArr.push(et);
                    for (var it = 0; it < tt; it++)
                        for ((W = new Bt).skinName = l.getUTFString(), et[W.skinName] = W, H = l.getInt16(), e = 0; e < H; e++)
                            for (X = new Ut, W.deformSlotDataList.push(X), Q = l.getInt16(), i = 0; i < Q; i++)
                                for (z = new Lt, X.deformSlotDisplayList.push(z), z.slotIndex = l.getInt16(), z.attachment = l.getUTFString(), Z = l.getInt16(), a = 0; a < Z; a++)
                                    for (1 == l.getByte() ? z.tweenKeyList.push(!0) : z.tweenKeyList.push(!1), j = l.getFloat32(), z.timeList.push(j), q = [], z.vectices.push(q), $ = l.getInt16(), s = 0; s < $; s++) q.push(l.getFloat32())
                }
                var at, st, rt = l.getInt16(),
                    nt = 0,
                    ht = 0;
                for (t = 0; t < rt; t++) {
                    for (nt = l.getInt16(), G = [], e = 0; e < nt; e++) {
                        for ((at = new Rt).time = l.getFloat32(), ht = l.getInt16(), i = 0; i < ht; i++) at.drawOrder.push(l.getInt16());
                        G.push(at)
                    }
                    this.drawOrderAniArr.push(G)
                }
                var lt, ot = l.getInt16(),
                    ut = 0;
                for (t = 0; t < ot; t++) {
                    for (ut = l.getInt16(), st = [], e = 0; e < ut; e++)(lt = new Ot).name = l.getUTFString(), lt.intValue = l.getInt32(), lt.floatValue = l.getFloat32(), lt.stringValue = l.getUTFString(), lt.time = l.getFloat32(), st.push(lt);
                    this.eventAniArr.push(st)
                }
                var ct = l.getInt16();
                if (0 < ct)
                    for (this.attachmentNames = [], t = 0; t < ct; t++) this.attachmentNames.push(l.getUTFString());
                var dt, _t, pt = l.getInt16();
                for (t = 0; t < pt; t++)(dt = new Pt).name = l.readUTFString(), dt.parent = l.readUTFString(), dt.attachmentName = l.readUTFString(), dt.srcDisplayIndex = dt.displayIndex = l.getInt16(), (dt.templet = this).boneSlotDic[dt.name] = dt, null == (_t = this.bindBoneBoneSlotDic[dt.parent]) && (this.bindBoneBoneSlotDic[dt.parent] = _t = []), _t.push(dt), this.boneSlotArray.push(dt);
                var ft, mt, yt, xt = l.readUTFString().split("\n"),
                    gt = 0,
                    vt = l.getUint8(),
                    Dt = 0,
                    Mt = 0,
                    It = 0,
                    bt = 0,
                    Nt = 0,
                    Tt = 0,
                    At = 0;
                for (t = 0; t < vt; t++) {
                    for ((ft = new Yt).name = xt[gt++], Dt = l.getUint8(), e = 0; e < Dt; e++) {
                        for ((mt = new Wt).name = xt[gt++], dt = this.boneSlotDic[mt.name], Mt = l.getUint8(), i = 0; i < Mt; i++) {
                            if (yt = new Vt, this.skinSlotDisplayDataArr.push(yt), yt.name = xt[gt++], yt.attachmentName = xt[gt++], yt.transform = new zt, yt.transform.scX = l.getFloat32(), yt.transform.skX = l.getFloat32(), yt.transform.skY = l.getFloat32(), yt.transform.scY = l.getFloat32(), yt.transform.x = l.getFloat32(), yt.transform.y = l.getFloat32(), mt.displayArr.push(yt), yt.width = l.getFloat32(), yt.height = l.getFloat32(), yt.type = l.getUint8(), yt.verLen = l.getUint16(), 0 < (C = l.getUint16()))
                                for (yt.bones = [], a = 0; a < C; a++) {
                                    var Ct = l.getUint16();
                                    yt.bones.push(Ct)
                                }
                            if (0 < (It = l.getUint16()))
                                for (yt.uvs = [], a = 0; a < It; a++) yt.uvs.push(l.getFloat32());
                            if (0 < (bt = l.getUint16()))
                                for (yt.weights = [], a = 0; a < bt; a++) yt.weights.push(l.getFloat32());
                            if (0 < (Nt = l.getUint16()))
                                for (yt.triangles = [], a = 0; a < Nt; a++) yt.triangles.push(l.getUint16());
                            if (0 < (Tt = l.getUint16()))
                                for (yt.vertices = [], a = 0; a < Tt; a++) yt.vertices.push(l.getFloat32());
                            if (0 < (At = l.getUint16()))
                                for (yt.lengths = [], a = 0; a < At; a++) yt.lengths.push(l.getFloat32())
                        }
                        ft.slotArr.push(mt)
                    }
                    this.skinDic[ft.name] = ft, this.skinDataArray.push(ft)
                }
                1 == l.getUint8() ? (this.yReverseMatrix = new St(1, 0, 0, -1, 0, 0), A && A.setTempMatrix(this.yReverseMatrix)) : A && A.setTempMatrix(new St), this.showSkinByIndex(this.boneSlotDic, 0), this.isParserComplete = !0, this.event("complete", this)
            }, t.getTexture = function(t) {
                var e = this.subTextureDic[t];
                return e || (e = this.subTextureDic[t.substr(0, t.length - 1)]), null == e ? this._mainTexture : e
            }, t.showSkinByIndex = function(t, e, i) {
                if (void 0 === i && (i = !0), e < 0 && e >= this.skinDataArray.length) return !1;
                var a, s, r = 0,
                    n = 0,
                    h = this.skinDataArray[e];
                if (h) {
                    for (r = 0, n = h.slotArr.length; r < n; r++)(s = h.slotArr[r]) && (a = t[s.name]) && (a.showSlotData(s, i), i && "undefined" != a.attachmentName && "null" != a.attachmentName ? a.showDisplayByName(a.attachmentName) : a.showDisplayByIndex(a.displayIndex));
                    return !0
                }
                return !1
            }, t.getSkinIndexByName = function(t) {
                for (var e = 0, i = this.skinDataArray.length; e < i; e++)
                    if (this.skinDataArray[e].name == t) return e;
                return -1
            }, t.getGrahicsDataWithCache = function(t, e) {
                return this._graphicsCache[t][e]
            }, t.setGrahicsDataWithCache = function(t, e, i) {
                this._graphicsCache[t][e] = i
            }, t.destroy = function() {
                var t;
                for (var e in this._isDestroyed = !0, this.subTextureDic)(t = this.subTextureDic[e]) && t.destroy();
                for (e in this._textureDic)(t = this._textureDic[e]) && t.destroy();
                for (var i = 0, a = this.skinSlotDisplayDataArr.length; i < a; i++) this.skinSlotDisplayDataArr[i].destory();
                this.skinSlotDisplayDataArr.length = 0, this.url && delete s.TEMPLET_DICTIONARY[this.url], t_tl.resource.Resource.prototype.destroy.call(this)
            }, t.getAniNameByIndex = function(t) {
                var e = this.getAnimation(t);
                return e ? e.name : null
            }, a(0, t, "rate", function() {
                return this._rate
            }, function(t) {
                this._rate = t
            }), s.LAYA_ANIMATION_VISION = "LAYAANIMATION:1.6.0", s.TEMPLET_DICTIONARY = null, s
        }(R))
}(window, document, t_t), "function" == typeof define && define.amd && define("t_tl.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
            value: !0
        }), t_t) {
        var a = t_t[i];
        a && a.__isclass && (e[i] = a)
    }
});
! function(t, e, a) {
    a.un, a.uns, a.static;
    var n = a.class,
        s = a.getset,
        l = (a.__newvec, t_tl.utils.Browser, t_tl.utils.Color),
        i = t_tl.filters.ColorFilterAction,
        r = t_tl.filters.webgl.ColorFilterActionGL,
        o = t_tl.filters.Filter,
        u = t_tl.filters.webgl.FilterActionGL,
        c = t_tl.maths.Matrix,
        h = (t_tl.maths.Rectangle, t_tl.renders.Render),
        f = (t_tl.renders.RenderContext, t_tl.webgl.resource.RenderTarget2D),
        _ = t_tl.utils.RunDriver,
        d = (t_tl.webgl.shader.d2.ShaderDefines2D, t_tl.display.Sprite, t_tl.resource.Texture, t_tl.webgl.shader.d2.value.Value2D),
        g = function() {
            function t() {
                this.data = null
            }
            n(t, "t_tl.filters.FilterAction");
            var e = t.prototype;
            return a.imps(e, {
                "t_tl.filters.IFilterAction": !0
            }), e.apply = function(t) {
                return null
            }, t
        }(),
        y = function() {
            function t() {}
            return n(t, "t_tl.filters.WebGLFilter"), t.enable = function() {
                t.isInit || (t.isInit = !0, h.isWebGL && (_.createFilterAction = function(t) {
                    var e;
                    switch (t) {
                        case 32:
                            e = new r;
                            break;
                        case 16:
                            e = new p;
                            break;
                        case 8:
                            e = new w
                    }
                    return e
                }))
            }, t.isInit = !1, t.__init$ = function() {
                _.createFilterAction = function(t) {
                    var e;
                    switch (t) {
                        case 16:
                        case 8:
                            e = new g;
                            break;
                        case 32:
                            e = new i
                    }
                    return e
                }
            }, t
        }(),
        p = (function(t) {
            function e(t) {
                this.strength = NaN, this.strength_sig2_2sig2_gauss1 = [], e.__super.call(this), void 0 === t && (t = 4), h.isWebGL && y.enable(), this.strength = t, this._action = _.createFilterAction(16), this._action.data = this
            }
            n(e, "t_tl.filters.BlurFilter", o);
            var i = e.prototype;
            i.callNative = function(t) {
                t.conchModel && t.conchModel.blurFilter && t.conchModel.blurFilter(this.strength)
            }, s(0, i, "action", function() {
                return this._action
            }), s(0, i, "type", function() {
                return 16
            })
        }(), function(t) {
            function r(t, e, i, a) {
                this._color = null, r.__super.call(this), this._elements = new Float32Array(9), void 0 === e && (e = 4), void 0 === i && (i = 6), void 0 === a && (a = 6), h.isWebGL && y.enable(), this._color = new l(t), this.blur = Math.min(e, 20), this.offX = i, this.offY = a, this._action = _.createFilterAction(8), this._action.data = this
            }
            n(r, "t_tl.filters.GlowFilter", o);
            var e = r.prototype;
            e.getColor = function() {
                return this._color._color
            }, e.callNative = function(t) {
                t.conchModel && t.conchModel.glowFilter && t.conchModel.glowFilter(this._color.strColor, this._elements[4], this._elements[5], this._elements[6])
            }, s(0, e, "type", function() {
                return 8
            }), s(0, e, "action", function() {
                return this._action
            }), s(0, e, "offY", function() {
                return this._elements[6]
            }, function(t) {
                this._elements[6] = t
            }), s(0, e, "offX", function() {
                return this._elements[5]
            }, function(t) {
                this._elements[5] = t
            }), s(0, e, "blur", function() {
                return this._elements[4]
            }, function(t) {
                this._elements[4] = t
            })
        }(), function(t) {
            function e() {
                this.data = null, e.__super.call(this)
            }
            n(e, "t_tl.filters.webgl.BlurFilterActionGL", u);
            var i = e.prototype;
            return i.setValueMix = function(t) {
                t.defines.add(this.data.type)
            }, i.apply3d = function(t, e, i, a, r) {
                var n = t.getValue("bounds"),
                    s = d.create(1, 0);
                s.setFilters([this.data]), c.EMPTY.identity(), i.ctx.drawTarget(t, 0, 0, n.width, n.height, c.EMPTY, "src", s), s.setFilters(null)
            }, i.setValue = function(t) {
                t.strength = this.data.strength;
                var e = this.data.strength / 3,
                    i = e * e;
                this.data.strength_sig2_2sig2_gauss1[0] = this.data.strength, this.data.strength_sig2_2sig2_gauss1[1] = i, this.data.strength_sig2_2sig2_gauss1[2] = 2 * i, this.data.strength_sig2_2sig2_gauss1[3] = 1 / (2 * Math.PI * i), t.strength_sig2_2sig2_gauss1 = this.data.strength_sig2_2sig2_gauss1
            }, s(0, i, "typeMix", function() {
                return 16
            }), e
        }()),
        w = function(t) {
            function e() {
                this.data = null, this._initKey = !1, this._textureWidth = 0, this._textureHeight = 0, e.__super.call(this)
            }
            n(e, "t_tl.filters.webgl.GlowFilterActionGL", u);
            var i = e.prototype;
            return a.imps(i, {
                "t_tl.filters.IFilterActionGL": !0
            }), i.setValueMix = function(t) {}, i.apply3d = function(t, e, i, a, r) {
                var n = t.getValue("bounds");
                t.addValue("color", this.data.getColor());
                var s, l = n.width,
                    o = n.height;
                this._textureWidth = l, this._textureHeight = o;
                var u = c.TEMP;
                return u.identity(), (s = d.create(1, 0)).setFilters([this.data]), i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, u, "src", s, null), s = d.create(1, 0), i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, u, "src", s), null
            }, i.setSpriteWH = function(t) {
                this._textureWidth = t.width, this._textureHeight = t.height
            }, i.setValue = function(t) {
                t.u_offsetX = this.data.offX, t.u_offsetY = -this.data.offY, t.u_strength = 1, t.u_blurX = this.data.blur, t.u_blurY = this.data.blur, t.u_textW = this._textureWidth, t.u_textH = this._textureHeight, t.u_color = this.data.getColor()
            }, s(0, i, "typeMix", function() {
                return 8
            }), e.tmpTarget = function(t, e, i, a, r) {
                var n = t.getValue("bounds");
                t.getValue("out").end();
                var s = f.create(n.width, n.height);
                s.start();
                var l = t.getValue("color");
                l && s.clear(l[0], l[1], l[2], 0), t.addValue("tmpTarget", s)
            }, e.startOut = function(t, e, i, a, r) {
                t.getValue("tmpTarget").end();
                var n = t.getValue("out");
                n.start();
                var s = t.getValue("color");
                s && n.clear(s[0], s[1], s[2], 0)
            }, e.recycleTarget = function(t, e, i, a, r) {
                t.getValue("src");
                t.getValue("tmpTarget").recycle()
            }, e
        }();
    a.__init([y])
}(window, document, t_t), "function" == typeof define && define.amd && define("t_tl.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
            value: !0
        }), t_t) {
        var a = t_t[i];
        a && a.__isclass && (e[i] = a)
    }
});
! function(t, e, n) {
    n.un, n.uns;
    var h = n.static,
        l = n.class,
        s = n.getset,
        r = (n.__newvec, t_tl.utils.Browser, t_tl.display.css.CSSStyle),
        _ = t_tl.utils.ClassUtils,
        u = (t_tl.events.Event, t_tl.utils.HTMLChar),
        a = t_tl.net.Loader,
        o = (t_tl.display.Node, t_tl.maths.Rectangle),
        d = t_tl.renders.Render,
        c = (t_tl.renders.RenderContext, t_tl.renders.RenderSprite, t_tl.display.Sprite),
        f = t_tl.utils.Stat,
        b = t_tl.display.Text,
        g = t_tl.resource.Texture,
        y = t_tl.net.URL,
        p = t_tl.utils.Utils,
        m = function() {
            function f() {}
            return l(f, "t_tl.html.utils.HTMLParse"), f.parse = function(t, e, i) {
                e = (e = "<root>" + (e = e.replace(/<br>/g, "<br/>")) + "</root>").replace(f.spacePattern, f.char255);
                var n = p.parseXMLFromString(e);
                f._parseXML(t, n.childNodes[0].childNodes, i)
            }, f._parseXML = function(t, e, i, n) {
                var h = 0,
                    l = 0;
                if (e.join || e.item)
                    for (h = 0, l = e.length; h < l; ++h) f._parseXML(t, e[h], i, n);
                else {
                    var s, r, a;
                    if (3 == e.nodeType) return void(t instanceof t_tl.html.dom.HTMLDivElement ? (null == e.nodeName && (e.nodeName = "#text"), r = e.nodeName.toLowerCase(), 0 < (a = e.textContent.replace(/^\s+|\s+$/g, "")).length && (s = _.getInstance(r)) && (t.addChild(s), s.innerTEXT = a.replace(f.char255AndOneSpacePattern, " "))) : 0 < (a = e.textContent.replace(/^\s+|\s+$/g, "")).length && (t.innerTEXT = a.replace(f.char255AndOneSpacePattern, " ")));
                    if ("#comment" == (r = e.nodeName.toLowerCase())) return;
                    if (s = _.getInstance(r)) {
                        (s = t.addChild(s)).URI = i, s.href = n;
                        var o = e.attributes;
                        if (o && 0 < o.length)
                            for (h = 0, l = o.length; h < l; ++h) {
                                var d = o[h],
                                    u = d.nodeName,
                                    c = d.value;
                                s._setAttributes(u, c)
                            }
                        f._parseXML(s, e.childNodes, i, s.href)
                    } else f._parseXML(t, e.childNodes, i, n)
                }
            }, f.char255 = String.fromCharCode(255), f.spacePattern = /&nbsp;|&#160;/g, f.char255AndOneSpacePattern = new RegExp(String.fromCharCode(255) + "|(\\s+)", "g"), f
        }(),
        w = function() {
            function U() {}
            return l(U, "t_tl.html.utils.Layout"), U.later = function(t) {
                null == U._will && (U._will = [], n.stage.frameLoop(1, null, function() {
                    if (!(U._will.length < 1)) {
                        for (var t = 0; t < U._will.length; t++) t_tl.html.utils.Layout.layout(U._will[t]);
                        U._will.length = 0
                    }
                })), U._will.push(t)
            }, U.layout = function(t) {
                if (!t || !t._style) return null;
                if (0 == (512 & t._style._type)) return null;
                t.getStyle()._type &= -513;
                var e = U._multiLineLayout(t);
                return d.isConchApp && t.layaoutCallNative && t.layaoutCallNative(), e
            }, U._multiLineLayout = function(t) {
                if (b.RightToLeft) return U._multiLineLayout2(t);
                var e = new Array;
                t._addChildsToLayout(e);
                var i, n, h, l, s, r = 0,
                    a = e.length,
                    o = t._getCSSStyle(),
                    d = o.letterSpacing,
                    u = o.leading,
                    c = o.lineHeight,
                    f = o._widthAuto() || !o.wordWrap,
                    _ = f ? 999999 : t.width,
                    g = (t.height, 0),
                    y = o.italic ? o.fontSize / 3 : 0,
                    p = o._getAlign(),
                    m = o._getValign(),
                    w = 0 !== m || 0 !== p || 0 != c,
                    x = 0,
                    v = 0,
                    S = 0,
                    L = 0,
                    T = new Array,
                    C = T[0] = new P,
                    E = !1,
                    M = !1;
                C.h = 0, o.italic && (_ -= o.fontSize / 3);
                var H = 0,
                    I = !0;

                function A() {
                    C.y = v, v += C.h + u, 0 == C.h && (v += c), C.mWidth = H, H = 0, C = new P, T.push(C), C.h = 0, E = !(I = !(x = 0))
                }
                for (r = 0; r < a; r++)
                    if (null != (i = e[r]))
                        if (I = !1, i instanceof t_tl.html.dom.HTMLBrElement) A(), C.y = v;
                        else {
                            if (i._isChar()) {
                                if ((l = i).isWord) E = M || "\n" === l.char, C.wordStartIndex = C.elements.length;
                                else {
                                    if (0 < T.length && _ < x + S && 0 < C.wordStartIndex) {
                                        var N;
                                        N = C.elements.length - C.wordStartIndex + 1, C.elements.length = C.wordStartIndex, r -= N, A();
                                        continue
                                    }
                                    E = !1, H += l.width
                                }
                                S = l.width + d, L = l.height, M = !1, (E = E || _ < x + S) && A(), C.minTextHeight = Math.min(C.minTextHeight, i.height)
                            } else n = i._getCSSStyle(), s = i, h = n.padding, 0 === n._getCssFloat() || (w = !0), E = M || n.lineElement, S = s.width * s._style._tf.scaleX + h[1] + h[3] + d, L = s.height * s._style._tf.scaleY + h[0] + h[2], M = n.lineElement, (E = E || _ < x + S && n.wordWrap) && A();
                            C.elements.push(i), C.h = Math.max(C.h, L), i.x = x, i.y = v, x += S, C.w = x - d, C.y = v, g = Math.max(x + y, g)
                        }
                else I || (x += U.DIV_ELEMENT_PADDING), C.wordStartIndex = C.elements.length;
                if (v = C.y + C.h, w) {
                    var R = 0,
                        W = _;
                    for (f && 0 < t.width && (W = t.width), r = 0, a = T.length; r < a; r++) T[r].updatePos(0, W, r, R, p, m, c), R += Math.max(c, T[r].h + u);
                    v = R
                }
                return f && (t.width = g), v > t.height && (t.height = v), [g, v]
            }, U._multiLineLayout2 = function(t) {
                var e = new Array;
                t._addChildsToLayout(e);
                var i, n, h, l, s, r = 0,
                    a = e.length,
                    o = t._getCSSStyle(),
                    d = o.letterSpacing,
                    u = o.leading,
                    c = o.lineHeight,
                    f = o._widthAuto() || !o.wordWrap,
                    _ = f ? 999999 : t.width,
                    g = (t.height, 0),
                    y = o.italic ? o.fontSize / 3 : 0,
                    p = 2 - o._getAlign(),
                    m = o._getValign(),
                    w = 0 !== m || 0 !== p || 0 != c,
                    x = 0,
                    v = 0,
                    S = 0,
                    L = 0,
                    T = new Array,
                    C = T[0] = new P,
                    E = !1,
                    M = !1;
                C.h = 0, o.italic && (_ -= o.fontSize / 3);
                var H = 0,
                    I = !0;

                function A() {
                    C.y = v, v += C.h + u, 0 == C.h && (v += c), C.mWidth = H, H = 0, C = new P, T.push(C), C.h = 0, E = !(I = !(x = 0))
                }
                for (r = 0; r < a; r++)
                    if (null != (i = e[r]))
                        if (I = !1, i instanceof t_tl.html.dom.HTMLBrElement) A(), C.y = v;
                        else {
                            if (i._isChar()) {
                                if ((l = i).isWord) E = M || "\n" === l.char, C.wordStartIndex = C.elements.length;
                                else {
                                    if (0 < T.length && _ < x + S && 0 < C.wordStartIndex) {
                                        var N;
                                        N = C.elements.length - C.wordStartIndex + 1, C.elements.length = C.wordStartIndex, r -= N, A();
                                        continue
                                    }
                                    E = !1, H += l.width
                                }
                                S = l.width + d, L = l.height, M = !1, (E = E || _ < x + S) && A(), C.minTextHeight = Math.min(C.minTextHeight, i.height)
                            } else n = i._getCSSStyle(), s = i, h = n.padding, 0 === n._getCssFloat() || (w = !0), E = M || n.lineElement, S = s.width * s._style._tf.scaleX + h[1] + h[3] + d, L = s.height * s._style._tf.scaleY + h[0] + h[2], M = n.lineElement, (E = E || _ < x + S && n.wordWrap) && A();
                            C.elements.push(i), C.h = Math.max(C.h, L), i.x = x, i.y = v, x += S, C.w = x - d, C.y = v, g = Math.max(x + y, g)
                        }
                else I || (x += U.DIV_ELEMENT_PADDING), C.wordStartIndex = C.elements.length;
                if (v = C.y + C.h, w) {
                    var R = 0,
                        W = _;
                    for (r = 0, a = T.length; r < a; r++) T[r].updatePos(0, W, r, R, p, m, c), R += Math.max(c, T[r].h + u);
                    v = R
                }
                for (f && (t.width = g), v > t.height && (t.height = v), r = 0, a = T.length; r < a; r++) T[r].revertOrder(_);
                return [g, v]
            }, U._will = null, U.DIV_ELEMENT_PADDING = 0, U
        }(),
        P = function() {
            function t() {
                this.x = 0, this.y = 0, this.w = 0, this.h = 0, this.wordStartIndex = 0, this.minTextHeight = 99999, this.mWidth = 0, this.elements = new Array
            }
            l(t, "t_tl.html.utils.LayoutLine");
            var e = t.prototype;
            return e.updatePos = function(t, e, i, n, h, l, s) {
                var r, a = 0;
                0 < this.elements.length && (a = (r = this.elements[this.elements.length - 1]).x + r.width - this.elements[0].x);
                var o = 0,
                    d = NaN;
                1 === h && (o = (e - a) / 2), 2 === h && (o = e - a), 0 === s || 0 != l || (l = 1);
                for (var u = 0, c = this.elements.length; u < c; u++) {
                    var f = (r = this.elements[u])._getCSSStyle();
                    switch (0 !== o && (r.x += o), f._getValign()) {
                        case 0:
                            r.y = n;
                            break;
                        case 1:
                            var _ = 0;
                            99999 != this.minTextHeight && (_ = this.minTextHeight);
                            var g = (_ + s) / 2;
                            g = Math.max(g, this.h), d = (t_tl.html.dom.HTMLImageElement, n + g - r.height), r.y = d;
                            break;
                        case 2:
                            r.y = n + (s - r.height)
                    }
                }
            }, e.revertOrder = function(t) {
                var e;
                if (0 < this.elements.length) {
                    var i, n = 0;
                    for (i = this.elements.length, n = 0; n < i; n++)(e = this.elements[n]).x = t - e.x - e.width
                }
            }, t
        }(),
        x = function(i) {
            function e() {
                this.URI = null, this._href = null, e.__super.call(this), this._text = e._EMPTYTEXT, this.setStyle(new r(this)), this._getCSSStyle().valign = "middle", this.mouseEnabled = !0
            }
            l(e, "t_tl.html.dom.HTMLElement", i);
            var t = e.prototype;
            return t.layaoutCallNative = function() {
                var t = 0;
                if (this._childs && 0 < (t = this._childs.length))
                    for (var e = 0; e < t; e++) this._childs[e].layaoutCallNative && this._childs[e].layaoutCallNative();
                var i = this._getWords();
                i ? t_tl.html.dom.HTMLElement.fillWords(this, i, 0, 0, this.style.font, this.style.color, this.style.underLine) : this.graphics.clear()
            }, t.appendChild = function(t) {
                return this.addChild(t)
            }, t._getWords2 = function() {
                var t = this._text.text;
                if (!t || 0 === t.length) return null;
                var e, i, n = 0,
                    h = 0;
                if (this._text.drawWords) i = this._text.drawWords;
                else {
                    for (h = (e = t.split(" ")).length - 1, i = [], n = 0; n < h; n++) i.push(e[n], " ");
                    0 <= h && i.push(e[h]), this._text.drawWords = i
                }
                var l, s = this._text.words;
                if (s && s.length === i.length) return s;
                null === s && (this._text.words = s = []), s.length = i.length;
                var r = this.style,
                    a = r.font;
                for (n = 0, h = i.length; n < h; n++) {
                    l = p.measureText(i[n], a);
                    var o = s[n] = new u(i[n], l.width, l.height || r.fontSize, r);
                    if (1 < o.char.length && (o.charNum = o.char), this.href) {
                        var d = new c;
                        this.addChild(d), o.setSprite(d)
                    }
                }
                return s
            }, t._getWords = function() {
                if (!b.CharacterCache) return this._getWords2();
                var t = this._text.text;
                if (!t || 0 === t.length) return null;
                var e, i = this._text.words;
                if (i && i.length === t.length) return i;
                null === i && (this._text.words = i = []), i.length = t.length;
                for (var n = this.style, h = n.font, l = 0, s = t.length; l < s; l++) {
                    e = p.measureText(t.charAt(l), h);
                    var r = i[l] = new u(t.charAt(l), e.width, e.height || n.fontSize, n);
                    if (this.href) {
                        var a = new c;
                        this.addChild(a), r.setSprite(a)
                    }
                }
                return i
            }, t.showLinkSprite = function() {
                var t = this._text.words;
                if (t)
                    for (var e, i, n = [], h = 0; h < t.length; h++) i = t[h], (e = new c).graphics.drawRect(0, 0, i.width, i.height, "#ff0000"), e.width = i.width, e.height = i.height, this.addChild(e), n.push(e)
            }, t._layoutLater = function() {
                var t = this.style;
                512 & t._type || (t.widthed(this) && (0 < this._childs.length || null != this._getWords()) && t.block ? (w.later(this), t._type |= 512) : this.parent && this.parent._layoutLater())
            }, t._setAttributes = function(t, e) {
                switch (t) {
                    case "style":
                        return void this.style.cssText(e);
                    case "class":
                        return void(this.className = e)
                }
                i.prototype._setAttributes.call(this, t, e)
            }, t.updateHref = function() {
                if (null != this._href) {
                    var t = this._getWords();
                    if (t)
                        for (var e, i, n = 0; n < t.length; n++)(i = (e = t[n]).getSprite()) && (i.size(e.width, e.height), i.on("click", this, this.onLinkHandler))
                }
            }, t.onLinkHandler = function(t) {
                switch (t.type) {
                    case "click":
                        for (var e = this; e;) e.event("link", [this.href]), e = e.parent
                }
            }, t.formatURL = function(t) {
                return this.URI ? y.formatURL(t, this.URI ? this.URI.path : null) : t
            }, s(0, t, "href", function() {
                return this._href
            }, function(t) {
                null != (this._href = t) && (this._getCSSStyle().underLine = 1, this.updateHref())
            }), s(0, t, "color", null, function(t) {
                this.style.color = t
            }), s(0, t, "onClick", null, function(t) {
                n._runScript("fn=function(event){" + t + ";}"), this.on("click", this, void 0)
            }), s(0, t, "id", null, function(t) {
                v.document.setElementById(t, this)
            }), s(0, t, "innerTEXT", function() {
                return this._text.text
            }, function(t) {
                this.text = t
            }), s(0, t, "style", function() {
                return this._style
            }), s(0, t, "text", function() {
                return this._text.text
            }, function(t) {
                this._text == e._EMPTYTEXT ? this._text = {
                    text: t,
                    words: null
                } : (this._text.text = t, this._text.words && (this._text.words.length = 0)), d.isConchApp && this.layaoutCallNative(), this._renderType |= 2048, this.repaint(), this.updateHref()
            }), s(0, t, "parent", i.prototype._$get_parent, function(t) {
                if (t instanceof t_tl.html.dom.HTMLElement) {
                    var e = t;
                    this.URI || (this.URI = e.URI), this.style.inherit(e.style)
                }
                n.superSet(c, this, "parent", t)
            }), s(0, t, "className", null, function(t) {
                this.style.attrs(v.document.styleSheets["." + t])
            }), e.fillWords = function(t, e, i, n, h, l, s) {
                t.graphics.clear();
                for (var r = 0, a = e.length; r < a; r++) {
                    var o = e[r];
                    t.graphics.fillText(o.char, o.x + i, o.y + n, h, l, "left", s)
                }
            }, e._EMPTYTEXT = {
                text: null,
                words: null
            }, e
        }(c),
        i = (function(t) {
            function e() {
                e.__super.call(this), this.style.lineElement = !0, this.style.block = !0
            }
            l(e, "t_tl.html.dom.HTMLBrElement", x)
        }(), function(t) {
            function e() {
                this.contextHeight = NaN, this.contextWidth = NaN, e.__super.call(this), this.style.block = !0, this.style.lineElement = !0, this.style.width = 200, this.style.height = 200
            }
            l(e, "t_tl.html.dom.HTMLDivElement", t);
            var i = e.prototype;
            return i.appendHTML = function(t) {
                m.parse(this, t, this.URI), this.layout()
            }, i._addChildsToLayout = function(e) {
                var t = this._getWords();
                if (null == t && 0 == this._childs.length) return !1;
                t && t.forEach(function(t) {
                    e.push(t)
                });
                for (var i = !0, n = 0, h = this._childs.length; n < h; n++) {
                    var l = this._childs[n];
                    i ? i = !1 : e.push(null), l._addToLayout(e)
                }
                return !0
            }, i._addToLayout = function(t) {
                this.layout()
            }, i.layout = function() {
                if (this.style) {
                    this.style._type |= 512;
                    var t = w.layout(this);
                    if (t) {
                        this._$P.mHtmlBounds || this._set$P("mHtmlBounds", new o);
                        var e = this._$P.mHtmlBounds;
                        e.x = e.y = 0, e.width = this.contextWidth = t[0], e.height = this.contextHeight = t[1], this.setBounds(e)
                    }
                }
            }, s(0, i, "height", function() {
                return this._height ? this._height : this.contextHeight
            }, t.prototype._$set_height), s(0, i, "innerHTML", null, function(t) {
                this.destroyChildren(), this.appendHTML(t)
            }), s(0, i, "width", function() {
                return this._width ? this._width : this.contextWidth
            }, function(t) {
                var e = !1;
                e = 0 === t ? t != this._width : t != this.width, n.superSet(x, this, "width", t), e && this.layout()
            }), e
        }(x)),
        v = function(t) {
            function e() {
                this.all = new Array, this.styleSheets = r.styleSheets, e.__super.call(this)
            }
            l(e, "t_tl.html.dom.HTMLDocument", x);
            var i = e.prototype;
            return i.getElementById = function(t) {
                return this.all[t]
            }, i.setElementById = function(t, e) {
                this.all[t] = e
            }, h(e, ["document", function() {
                return this.document = new e
            }]), e
        }();
    (function(t) {
        function e() {
            this._tex = null, this._url = null, this._renderArgs = [], e.__super.call(this), this.style.block = !0
        }
        l(e, "t_tl.html.dom.HTMLImageElement", x);
        var i = e.prototype;
        i._addToLayout = function(t) {
            !this._style.absolute && t.push(this)
        }, i.render = function(t, e, i) {
            !this._tex || !this._tex.loaded || !this._tex.loaded || this._width < 1 || this._height < 1 || (f.spriteCount++, this._renderArgs[0] = this._tex, this._renderArgs[1] = this.x, this._renderArgs[2] = this.y, this._renderArgs[3] = this.width || this._tex.width, this._renderArgs[4] = this.height || this._tex.height, t.ctx.drawTexture2(e, i, this.style.translateX, this.style.translateY, this.transform, this.style.alpha, this.style.blendMode, this._renderArgs))
        }, i.layaoutCallNative = function() {
            var t = 0;
            if (this._childs && 0 < (t = this._childs.length))
                for (var e = 0; e < t; e++) this._childs[e].layaoutCallNative && this._childs[e].layaoutCallNative()
        }, s(0, i, "src", null, function(t) {
            var e = this;
            if (t = this.formatURL(t), this._url != t) {
                this._url = t;
                var i = this._tex = a.getRes(t);
                i || (this._tex = i = new g, i.load(t), a.cacheRes(t, i)), i.loaded ? n() : i.on("loaded", null, n)
            }

            function n() {
                var t = e._style;
                t.widthed(e) || e._tex.width, t.heighted(e) || e._tex.height;
                t.widthed(e) || e._width == e._tex.width || (e.width = e._tex.width, e.parent && e.parent._layoutLater()), t.heighted(e) || e._height == e._tex.height || (e.height = e._tex.height, e.parent && e.parent._layoutLater()), d.isConchApp && (e._renderArgs[0] = e._tex, e._renderArgs[1] = e.x, e._renderArgs[2] = e.y, e._renderArgs[3] = e.width || e._tex.width, e._renderArgs[4] = e.height || e._tex.height, e.graphics.drawTexture(e._tex, 0, 0, e._renderArgs[3], e._renderArgs[4])), e.repaint(), e.parentRepaint()
            }
        })
    })(),
    function(t) {
        function e() {
            this.type = null, e.__super.call(this), this.visible = !1
        }
        l(e, "t_tl.html.dom.HTMLLinkElement", t);
        var i = e.prototype;
        i._onload = function(t) {
            switch (this.type) {
                case "text/css":
                    r.parseCSS(t, this.URI)
            }
        }, s(0, i, "href", t.prototype._$get_href, function(t) {
            var e = this;
            t = this.formatURL(t), this.URI = new y(t);
            var i = new a;
            i.once("complete", null, function(t) {
                e._onload(t)
            }), i.load(t, "text")
        }), e._cuttingStyle = new RegExp("((@keyframes[\\s\\t]+|)(.+))[\\t\\n\\r\\s]*{", "g")
    }(x),
    function(t) {
        function e() {
            e.__super.call(this), this.visible = !1
        }
        l(e, "t_tl.html.dom.HTMLStyleElement", t), s(0, e.prototype, "text", t.prototype._$get_text, function(t) {
            r.parseCSS(t, null)
        })
    }(x),
    function(t) {
        function e() {
            e.__super.call(this), this._getCSSStyle().valign = "middle"
        }
        l(e, "t_tl.html.dom.HTMLIframeElement", t), s(0, e.prototype, "href", t.prototype._$get_href, function(i) {
            var n = this;
            i = this.formatURL(i);
            var t = new a;
            t.once("complete", null, function(t) {
                var e = n.URI;
                n.URI = new y(i), n.innerHTML = t, !e || (n.URI = e)
            }), t.load(i, "text")
        })
    }(i)
}(window, document, t_t), "function" == typeof define && define.amd && define("t_tl.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
            value: !0
        }), t_t) {
        var n = t_t[i];
        n && n.__isclass && (e[i] = n)
    }
});
! function(r, t, n) {
    n.un, n.uns;
    var a = n.static,
        s = n.class,
        o = n.getset,
        l = (n.__newvec, t_tl.webgl.canvas.BlendMode),
        u = (t_tl.events.Event, t_tl.resource.HTMLCanvas),
        h = t_tl.utils.Handler,
        c = t_tl.webgl.utils.IndexBuffer2D,
        d = (t_tl.net.Loader, t_tl.maths.MathUtil),
        m = t_tl.maths.Matrix,
        _ = t_tl.renders.Render,
        i = (t_tl.renders.RenderContext, t_tl.renders.RenderSprite, t_tl.webgl.shader.Shader),
        e = t_tl.display.Sprite,
        f = t_tl.utils.Stat,
        p = t_tl.resource.Texture,
        v = t_tl.utils.Utils,
        x = t_tl.webgl.shader.d2.value.Value2D,
        y = t_tl.webgl.utils.VertexBuffer2D,
        C = t_tl.webgl.WebGL,
        P = (t_tl.webgl.WebGLContext, function() {
            function t() {
                this._frameTime = 0, this._emissionRate = 60, this._emissionTime = 0, this.minEmissionTime = 1 / 60, this._particleTemplate = null
            }
            s(t, "t_tl.particle.emitter.EmitterBase");
            var e = t.prototype;
            return e.start = function(t) {
                void 0 === t && (t = 2147483647), 0 != this._emissionRate && (this._emissionTime = t)
            }, e.stop = function() {
                this._emissionTime = 0
            }, e.clear = function() {
                this._emissionTime = 0
            }, e.emit = function() {}, e.advanceTime = function(t) {
                if (void 0 === t && (t = 1), this._emissionTime -= t, !(this._emissionTime < 0 || (this._frameTime += t, this._frameTime < this.minEmissionTime)))
                    for (; this._frameTime > this.minEmissionTime;) this._frameTime -= this.minEmissionTime, this.emit()
            }, o(0, e, "particleTemplate", null, function(t) {
                this._particleTemplate = t
            }), o(0, e, "emissionRate", function() {
                return this._emissionRate
            }, function(t) {
                t <= 0 || 0 < (this._emissionRate = t) && (this.minEmissionTime = 1 / t)
            }), t
        }()),
        g = function() {
            function u() {
                this.position = null, this.velocity = null, this.startColor = null, this.endColor = null, this.sizeRotation = null, this.radius = null, this.radian = null, this.durationAddScale = NaN, this.time = NaN
            }
            return s(u, "t_tl.particle.ParticleData"), u.Create = function(t, e, i, a) {
                var r = new u;
                r.position = e, d.scaleVector3(i, t.emitterVelocitySensitivity, u._tempVelocity);
                var n = d.lerp(t.minHorizontalVelocity, t.maxHorizontalVelocity, Math.random()),
                    s = Math.random() * Math.PI * 2;
                u._tempVelocity[0] += n * Math.cos(s), u._tempVelocity[2] += n * Math.sin(s), u._tempVelocity[1] += d.lerp(t.minVerticalVelocity, t.maxVerticalVelocity, Math.random()), r.velocity = u._tempVelocity, r.startColor = u._tempStartColor, r.endColor = u._tempEndColor;
                var o = 0;
                if (t.disableColor)
                    for (o = 0; o < 4; o++) r.startColor[o] = 1, r.endColor[o] = 1;
                else if (t.colorComponentInter)
                    for (o = 0; o < 4; o++) r.startColor[o] = d.lerp(t.minStartColor[o], t.maxStartColor[o], Math.random()), r.endColor[o] = d.lerp(t.minEndColor[o], t.maxEndColor[o], Math.random());
                else d.lerpVector4(t.minStartColor, t.maxStartColor, Math.random(), r.startColor), d.lerpVector4(t.minEndColor, t.maxEndColor, Math.random(), r.endColor);
                r.sizeRotation = u._tempSizeRotation;
                var l = Math.random();
                r.sizeRotation[0] = d.lerp(t.minStartSize, t.maxStartSize, l), r.sizeRotation[1] = d.lerp(t.minEndSize, t.maxEndSize, l), r.sizeRotation[2] = d.lerp(t.minRotateSpeed, t.maxRotateSpeed, Math.random()), r.radius = u._tempRadius;
                var h = Math.random();
                r.radius[0] = d.lerp(t.minStartRadius, t.maxStartRadius, h), r.radius[1] = d.lerp(t.minEndRadius, t.maxEndRadius, h), r.radian = u._tempRadian, r.radian[0] = d.lerp(t.minHorizontalStartRadian, t.maxHorizontalStartRadian, Math.random()), r.radian[1] = d.lerp(t.minVerticalStartRadian, t.maxVerticalStartRadian, Math.random());
                var c = t.useEndRadian;
                return r.radian[2] = c ? d.lerp(t.minHorizontalEndRadian, t.maxHorizontalEndRadian, Math.random()) : r.radian[0], r.radian[3] = c ? d.lerp(t.minVerticalEndRadian, t.maxVerticalEndRadian, Math.random()) : r.radian[1], r.durationAddScale = t.ageAddScale * Math.random(), r.time = a, r
            }, a(u, ["_tempVelocity", function() {
                return this._tempVelocity = new Float32Array(3)
            }, "_tempStartColor", function() {
                return this._tempStartColor = new Float32Array(4)
            }, "_tempEndColor", function() {
                return this._tempEndColor = new Float32Array(4)
            }, "_tempSizeRotation", function() {
                return this._tempSizeRotation = new Float32Array(3)
            }, "_tempRadius", function() {
                return this._tempRadius = new Float32Array(2)
            }, "_tempRadian", function() {
                return this._tempRadian = new Float32Array(4)
            }]), u
        }(),
        R = (function() {
            function t(t, e, i) {
                this._templet = null, this._timeBetweenParticles = NaN, this._previousPosition = null, this._timeLeftOver = 0, this._tempVelocity = new Float32Array([0, 0, 0]), this._tempPosition = new Float32Array([0, 0, 0]), this._templet = t, this._timeBetweenParticles = 1 / e, this._previousPosition = i
            }
            s(t, "t_tl.particle.ParticleEmitter"), t.prototype.update = function(t, e) {
                if (0 < (t /= 1e3)) {
                    d.subtractVector3(e, this._previousPosition, this._tempVelocity), d.scaleVector3(this._tempVelocity, 1 / t, this._tempVelocity);
                    for (var i = this._timeLeftOver + t, a = -this._timeLeftOver; i > this._timeBetweenParticles;) a += this._timeBetweenParticles, i -= this._timeBetweenParticles, d.lerpVector3(this._previousPosition, e, a / t, this._tempPosition), this._templet.addParticleArray(this._tempPosition, this._tempVelocity);
                    this._timeLeftOver = i
                }
                this._previousPosition[0] = e[0], this._previousPosition[1] = e[1], this._previousPosition[2] = e[2]
            }
        }(), function() {
            function i() {
                this.textureName = null, this.textureCount = 1, this.maxPartices = 100, this.duration = 1, this.ageAddScale = 0, this.emitterVelocitySensitivity = 1, this.minStartSize = 100, this.maxStartSize = 100, this.minEndSize = 100, this.maxEndSize = 100, this.minHorizontalVelocity = 0, this.maxHorizontalVelocity = 0, this.minVerticalVelocity = 0, this.maxVerticalVelocity = 0, this.endVelocity = 1, this.minRotateSpeed = 0, this.maxRotateSpeed = 0, this.minStartRadius = 0, this.maxStartRadius = 0, this.minEndRadius = 0, this.maxEndRadius = 0, this.minHorizontalStartRadian = 0, this.maxHorizontalStartRadian = 0, this.minVerticalStartRadian = 0, this.maxVerticalStartRadian = 0, this.useEndRadian = !0, this.minHorizontalEndRadian = 0, this.maxHorizontalEndRadian = 0, this.minVerticalEndRadian = 0, this.maxVerticalEndRadian = 0, this.colorComponentInter = !1, this.disableColor = !1, this.blendState = 0, this.emitterType = "null", this.emissionRate = 0, this.sphereEmitterRadius = 1, this.sphereEmitterVelocity = 0, this.sphereEmitterVelocityAddVariance = 0, this.ringEmitterRadius = 30, this.ringEmitterVelocity = 0, this.ringEmitterVelocityAddVariance = 0, this.ringEmitterUp = 2, this.gravity = new Float32Array([0, 0, 0]), this.minStartColor = new Float32Array([1, 1, 1, 1]), this.maxStartColor = new Float32Array([1, 1, 1, 1]), this.minEndColor = new Float32Array([1, 1, 1, 1]), this.maxEndColor = new Float32Array([1, 1, 1, 1]), this.pointEmitterPosition = new Float32Array([0, 0, 0]), this.pointEmitterPositionVariance = new Float32Array([0, 0, 0]), this.pointEmitterVelocity = new Float32Array([0, 0, 0]), this.pointEmitterVelocityAddVariance = new Float32Array([0, 0, 0]), this.boxEmitterCenterPosition = new Float32Array([0, 0, 0]), this.boxEmitterSize = new Float32Array([0, 0, 0]), this.boxEmitterVelocity = new Float32Array([0, 0, 0]), this.boxEmitterVelocityAddVariance = new Float32Array([0, 0, 0]), this.sphereEmitterCenterPosition = new Float32Array([0, 0, 0]), this.ringEmitterCenterPosition = new Float32Array([0, 0, 0]), this.positionVariance = new Float32Array([0, 0, 0])
            }
            return s(i, "t_tl.particle.ParticleSetting"), i.checkSetting = function(t) {
                var e;
                for (e in i._defaultSetting) t.hasOwnProperty(e) || (t[e] = i._defaultSetting[e])
            }, a(i, ["_defaultSetting", function() {
                return this._defaultSetting = new i
            }]), i
        }()),
        S = function() {
            function t() {
                this.settings = null, this.texture = null
            }
            return s(t, "t_tl.particle.ParticleTemplateBase"), t.prototype.addParticleArray = function(t, e) {}, t
        }(),
        E = function() {
            function t() {
                this.u_Duration = NaN, this.u_EndVelocity = NaN, this.u_Gravity = null, this.a_Position = null, this.a_Velocity = null, this.a_StartColor = null, this.a_EndColor = null, this.a_SizeRotation = null, this.a_Radius = null, this.a_Radian = null, this.a_AgeAddScale = NaN, this.gl_Position = null, this.v_Color = null, this.oSize = NaN, this._color = new Float32Array(4), this._position = new Float32Array(3)
            }
            s(t, "t_tl.particle.particleUtils.CanvasShader");
            var e = t.prototype;
            return e.getLen = function(t) {
                return Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2])
            }, e.ComputeParticlePosition = function(t, e, i, a) {
                this._position[0] = t[0], this._position[1] = t[1], this._position[2] = t[2];
                var r, n = this.getLen(e),
                    s = n * a + (n * this.u_EndVelocity - n) * a * a / 2;
                r = this.getLen(e);
                var o = 0;
                for (3, o = 0; o < 3; o++) this._position[o] = this._position[o] + e[o] / r * s * this.u_Duration, this._position[o] += this.u_Gravity[o] * i * a;
                var l = d.lerp(this.a_Radius[0], this.a_Radius[1], a),
                    h = d.lerp(this.a_Radian[0], this.a_Radian[2], a),
                    c = d.lerp(this.a_Radian[1], this.a_Radian[3], a),
                    u = Math.cos(c) * l;
                return this._position[1] += Math.sin(c) * l, this._position[0] += Math.cos(h) * u, this._position[2] += Math.sin(h) * u, new Float32Array([this._position[0], this._position[1], 0, 1])
            }, e.ComputeParticleSize = function(t, e, i) {
                return d.lerp(t, e, i)
            }, e.ComputeParticleRotation = function(t, e) {
                return t * e
            }, e.ComputeParticleColor = function(t, e, i) {
                var a = this._color;
                return d.lerpVector4(t, e, i, a), a[3] = a[3] * i * (1 - i) * (1 - i) * 6.7, a
            }, e.clamp = function(t, e, i) {
                return t < e ? e : i < t ? i : t
            }, e.getData = function(t) {
                t *= 1 + this.a_AgeAddScale;
                var e = this.clamp(t / this.u_Duration, 0, 1);
                this.gl_Position = this.ComputeParticlePosition(this.a_Position, this.a_Velocity, t, e);
                var i = this.ComputeParticleSize(this.a_SizeRotation[0], this.a_SizeRotation[1], e),
                    a = this.ComputeParticleRotation(this.a_SizeRotation[2], t);
                this.v_Color = this.ComputeParticleColor(this.a_StartColor, this.a_EndColor, e);
                var r, n = new m;
                r = i / this.oSize * 2, n.scale(r, r), n.rotate(a), n.setTranslate(this.gl_Position[0], -this.gl_Position[1]);
                var s;
                return s = this.v_Color[3], [this.v_Color, s, n, this.v_Color[0] * s, this.v_Color[1] * s, this.v_Color[2] * s]
            }, t
        }(),
        V = function() {
            function t() {
                this.maxIndex = 0, this.cmds = null, this.id = 0
            }
            return s(t, "t_tl.particle.particleUtils.CMDParticle"), t.prototype.setCmds = function(t) {
                this.cmds = t, this.maxIndex = t.length - 1
            }, t
        }(),
        A = function() {
            function e() {}
            return s(e, "t_tl.particle.particleUtils.PicTool"), e.getCanvasPic = function(t, e) {
                t = t.bitmap;
                var i = new u("2D"),
                    a = i.getContext("2d");
                i.size(t.width, t.height);
                var r = e >> 16 & 255,
                    n = e >> 8 & 255,
                    s = 255 & e;
                if (_.isConchApp && a.setFilter(r / 255, n / 255, s / 255, 0), a.drawImage(t.source, 0, 0), !_.isConchApp) {
                    for (var o = a.getImageData(0, 0, i.width, i.height), l = o.data, h = 0, c = l.length; h < c; h += 4) 0 != l[h + 3] && (l[h] *= r / 255, l[h + 1] *= n / 255, l[h + 2] *= s / 255);
                    a.putImageData(o, 0, 0)
                }
                return i
            }, e.getRGBPic = function(t) {
                return [new p(e.getCanvasPic(t, 16711680)), new p(e.getCanvasPic(t, 65280)), new p(e.getCanvasPic(t, 255))]
            }, e
        }(),
        T = function(t) {
            function e(t) {
                this.setting = null, this._posRange = null, this._canvasTemplate = null, this._emitFun = null, e.__super.call(this), this.template = t
            }
            s(e, "t_tl.particle.emitter.Emitter2D", t);
            var i = e.prototype;
            return i.emit = function() {
                t.prototype.emit.call(this), null != this._emitFun && this._emitFun()
            }, i.getRandom = function(t) {
                return (2 * Math.random() - 1) * t
            }, i.webGLEmit = function() {
                var t = new Float32Array(3);
                t[0] = this.getRandom(this._posRange[0]), t[1] = this.getRandom(this._posRange[1]), t[2] = this.getRandom(this._posRange[2]);
                var e = new Float32Array(3);
                e[0] = 0, e[1] = 0, e[2] = 0, this._particleTemplate.addParticleArray(t, e)
            }, i.canvasEmit = function() {
                var t = new Float32Array(3);
                t[0] = this.getRandom(this._posRange[0]), t[1] = this.getRandom(this._posRange[1]), t[2] = this.getRandom(this._posRange[2]);
                var e = new Float32Array(3);
                e[0] = 0, e[1] = 0, e[2] = 0, this._particleTemplate.addParticleArray(t, e)
            }, o(0, i, "template", function() {
                return this._particleTemplate
            }, function(t) {
                (this._particleTemplate = t) || (this._emitFun = null, this.setting = null, this._posRange = null), this.setting = t.settings, this._posRange = this.setting.positionVariance, this._particleTemplate instanceof t_tl.particle.ParticleTemplate2D ? this._emitFun = this.webGLEmit : this._particleTemplate instanceof t_tl.particle.ParticleTemplateCanvas && (this._canvasTemplate = t, this._emitFun = this.canvasEmit)
            }), e
        }(P),
        w = function(t) {
            function e(t) {
                this._vertices = null, this._vertexBuffer = null, this._indexBuffer = null, this._floatCountPerVertex = 29, this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._currentTime = 0, this._drawCounter = 0, e.__super.call(this), this.settings = t
            }
            s(e, "t_tl.particle.ParticleTemplateWebGL", S);
            var i = e.prototype;
            return i.initialize = function() {
                this._vertices = new Float32Array(this.settings.maxPartices * this._floatCountPerVertex * 4);
                for (var t = 0, e = 0; e < this.settings.maxPartices; e++) {
                    var i = Math.random(),
                        a = this.settings.textureCount ? 1 / this.settings.textureCount : 1,
                        r = NaN;
                    for (r = 0; r < this.settings.textureCount && !(i < r + a); r += a);
                    t = e * this._floatCountPerVertex * 4, this._vertices[t + 0 * this._floatCountPerVertex + 0] = -1, this._vertices[t + 0 * this._floatCountPerVertex + 1] = -1, this._vertices[t + 0 * this._floatCountPerVertex + 2] = 0, this._vertices[t + 0 * this._floatCountPerVertex + 3] = r, this._vertices[t + 1 * this._floatCountPerVertex + 0] = 1, this._vertices[t + 1 * this._floatCountPerVertex + 1] = -1, this._vertices[t + 1 * this._floatCountPerVertex + 2] = 1, this._vertices[t + 1 * this._floatCountPerVertex + 3] = r, this._vertices[t + 2 * this._floatCountPerVertex + 0] = 1, this._vertices[t + 2 * this._floatCountPerVertex + 1] = 1, this._vertices[t + 2 * this._floatCountPerVertex + 2] = 1, this._vertices[t + 2 * this._floatCountPerVertex + 3] = r + a, this._vertices[t + 3 * this._floatCountPerVertex + 0] = -1, this._vertices[t + 3 * this._floatCountPerVertex + 1] = 1, this._vertices[t + 3 * this._floatCountPerVertex + 2] = 0, this._vertices[t + 3 * this._floatCountPerVertex + 3] = r + a
                }
            }, i.loadContent = function() {}, i.update = function(t) {
                this._currentTime += t / 1e3, this.retireActiveParticles(), this.freeRetiredParticles(), this._firstActiveElement == this._firstFreeElement && (this._currentTime = 0), this._firstRetiredElement == this._firstActiveElement && (this._drawCounter = 0)
            }, i.retireActiveParticles = function() {
                for (var t = this.settings.duration; this._firstActiveElement != this._firstNewElement;) {
                    var e = this._firstActiveElement * this._floatCountPerVertex * 4,
                        i = e + 28,
                        a = this._currentTime - this._vertices[i];
                    if ((a *= 1 + this._vertices[e + 27]) + 1e-4 < t) break;
                    this._vertices[i] = this._drawCounter, this._firstActiveElement++, this._firstActiveElement >= this.settings.maxPartices && (this._firstActiveElement = 0)
                }
            }, i.freeRetiredParticles = function() {
                for (; this._firstRetiredElement != this._firstActiveElement;) {
                    if (this._drawCounter - this._vertices[this._firstRetiredElement * this._floatCountPerVertex * 4 + 28] < 3) break;
                    this._firstRetiredElement++, this._firstRetiredElement >= this.settings.maxPartices && (this._firstRetiredElement = 0)
                }
            }, i.addNewParticlesToVertexBuffer = function() {}, i.addParticleArray = function(t, e) {
                var i = this._firstFreeElement + 1;
                if (i >= this.settings.maxPartices && (i = 0), i !== this._firstRetiredElement) {
                    for (var a = g.Create(this.settings, t, e, this._currentTime), r = this._firstFreeElement * this._floatCountPerVertex * 4, n = 0; n < 4; n++) {
                        var s = 0,
                            o = 0;
                        for (s = 0, o = 4; s < 3; s++) this._vertices[r + n * this._floatCountPerVertex + o + s] = a.position[s];
                        for (s = 0, o = 7; s < 3; s++) this._vertices[r + n * this._floatCountPerVertex + o + s] = a.velocity[s];
                        for (s = 0, o = 10; s < 4; s++) this._vertices[r + n * this._floatCountPerVertex + o + s] = a.startColor[s];
                        for (s = 0, o = 14; s < 4; s++) this._vertices[r + n * this._floatCountPerVertex + o + s] = a.endColor[s];
                        for (s = 0, o = 18; s < 3; s++) this._vertices[r + n * this._floatCountPerVertex + o + s] = a.sizeRotation[s];
                        for (s = 0, o = 21; s < 2; s++) this._vertices[r + n * this._floatCountPerVertex + o + s] = a.radius[s];
                        for (s = 0, o = 23; s < 4; s++) this._vertices[r + n * this._floatCountPerVertex + o + s] = a.radian[s];
                        this._vertices[r + n * this._floatCountPerVertex + 27] = a.durationAddScale, this._vertices[r + n * this._floatCountPerVertex + 28] = a.time
                    }
                    this._firstFreeElement = i
                }
            }, e
        }(),
        z = function(t) {
            function e(t) {
                this._ready = !1, this.textureList = [], this.particleList = [], this.pX = 0, this.pY = 0, this.activeParticles = [], this.deadParticles = [], this.iList = [], this._maxNumParticles = 0, this.textureWidth = NaN, this.dTextureWidth = NaN, this.colorChange = !0, this.step = 1 / 60, this.canvasShader = new E, e.__super.call(this), this.settings = t, this._maxNumParticles = t.maxPartices, this.texture = new p, this.texture.on("loaded", this, this._textureLoaded), this.texture.load(t.textureName)
            }
            s(e, "t_tl.particle.ParticleTemplateCanvas", S);
            var i = e.prototype;
            return i._textureLoaded = function(t) {
                this.setTexture(this.texture), this._ready = !0
            }, i.clear = function(t) {
                void 0 === t && (t = !0), this.deadParticles.length = 0, this.activeParticles.length = 0, this.textureList.length = 0
            }, i.setTexture = function(t) {
                this.texture = t, this.textureWidth = t.width, this.dTextureWidth = 1 / this.textureWidth, this.pX = .5 * -t.width, this.pY = .5 * -t.height, this.textureList = e.changeTexture(t, this.textureList), this.particleList.length = 0, this.deadParticles.length = 0, this.activeParticles.length = 0
            }, i._createAParticleData = function(t, e) {
                var i;
                this.canvasShader.u_EndVelocity = this.settings.endVelocity, this.canvasShader.u_Gravity = this.settings.gravity, this.canvasShader.u_Duration = this.settings.duration, i = g.Create(this.settings, t, e, 0), this.canvasShader.a_Position = i.position, this.canvasShader.a_Velocity = i.velocity, this.canvasShader.a_StartColor = i.startColor, this.canvasShader.a_EndColor = i.endColor, this.canvasShader.a_SizeRotation = i.sizeRotation, this.canvasShader.a_Radius = i.radius, this.canvasShader.a_Radian = i.radian, this.canvasShader.a_AgeAddScale = i.durationAddScale, this.canvasShader.oSize = this.textureWidth;
                var a = new V,
                    r = 0,
                    n = this.settings.duration / (1 + i.durationAddScale),
                    s = [];
                for (r = 0; r < n; r += this.step) s.push(this.canvasShader.getData(r));
                return a.id = this.particleList.length, this.particleList.push(a), a.setCmds(s), a
            }, i.addParticleArray = function(t, e) {
                var i;
                this._ready && (this.particleList.length < this._maxNumParticles ? (i = this._createAParticleData(t, e), this.iList[i.id] = 0, this.activeParticles.push(i)) : 0 < this.deadParticles.length && (i = this.deadParticles.pop(), this.iList[i.id] = 0, this.activeParticles.push(i)))
            }, i.advanceTime = function(t) {
                if (void 0 === t && (t = 1), this._ready) {
                    var e, i = this.activeParticles,
                        a = this.deadParticles,
                        r = 0,
                        n = i.length,
                        s = 0,
                        o = this.iList;
                    for (r = n - 1; - 1 < r; r--)(s = o[(e = i[r]).id]) >= e.maxIndex ? (s = 0, i.splice(r, 1), a.push(e)) : s += 1, o[e.id] = s
                }
            }, i.render = function(t, e, i) {
                this._ready && (this.activeParticles.length < 1 || this.textureList.length < 2 || (this.settings.disableColor ? this.noColorRender(t, e, i) : this.canvasRender(t, e, i)))
            }, i.noColorRender = function(t, e, i) {
                var a, r, n, s = this.activeParticles,
                    o = 0,
                    l = s.length,
                    h = NaN,
                    c = this.pX,
                    u = this.pY,
                    d = 2 * -c,
                    m = 2 * -u,
                    _ = 0,
                    f = (this.textureList, this.iList);
                for (t.translate(e, i), n = t.ctx.globalAlpha, o = 0; o < l; o++) _ = f[(a = s[o]).id], (r = a.cmds[_]) && ((h = r[1]) <= .01 || (t.setAlpha(n * h), t.drawTextureWithTransform(this.texture, c, u, d, m, r[2], 1)));
                t.setAlpha(n), t.translate(-e, -i)
            }, i.canvasRender = function(t, e, i) {
                var a, r, n, s, o = this.activeParticles,
                    l = 0,
                    h = o.length,
                    c = this.pX,
                    u = this.pY,
                    d = 2 * -c,
                    m = 2 * -u,
                    _ = 0,
                    f = this.textureList,
                    p = this.iList;
                for (t.translate(e, i), n = t.ctx.globalAlpha, s = t.ctx.globalCompositeOperation, t.blendMode("lighter"), l = 0; l < h; l++) _ = p[(a = o[l]).id], (r = a.cmds[_]) && (r[1] <= .01 || (t.save(), t.transformByMatrix(r[2]), .01 < r[3] && (t.setAlpha(n * r[3]), t.drawTexture(f[0], c, u, d, m)), .01 < r[4] && (t.setAlpha(n * r[4]), t.drawTexture(f[1], c, u, d, m)), .01 < r[5] && (t.setAlpha(n * r[5]), t.drawTexture(f[2], c, u, d, m)), t.restore()));
                t.setAlpha(n), t.translate(-e, -i), t.blendMode(s)
            }, e.changeTexture = function(t, e, i) {
                return e || (e = []), e.length = 0, i && i.disableColor ? e.push(t, t, t) : v.copyArray(e, A.getRGBPic(t)), e
            }, e
        }(),
        b = function(i) {
            function a(t) {
                this._vertexBuffer2D = null, this._indexBuffer2D = null, this.x = 0, this.y = 0, this._blendFn = null, this._startTime = 0, this.sv = new F, a.__super.call(this, t);
                var e = this;
                n.loader.load(this.settings.textureName, h.create(null, function(t) {
                    t.bitmap.enableMerageInAtlas = !1, e.texture = t
                })), this.sv.u_Duration = this.settings.duration, this.sv.u_Gravity = this.settings.gravity, this.sv.u_EndVelocity = this.settings.endVelocity, this._blendFn = l.fns[t.blendState], this.initialize(), this._vertexBuffer = this._vertexBuffer2D = y.create(-1, 35048), this._indexBuffer = this._indexBuffer2D = c.create(35044), this.loadContent()
            }
            s(a, "t_tl.particle.ParticleTemplate2D", i);
            var t = a.prototype;
            return n.imps(t, {
                "t_tl.webgl.submit.ISubmit": !0
            }), t.getRenderType = function() {
                return -111
            }, t.releaseRender = function() {}, t.addParticleArray = function(t, e) {
                t[0] += this.x, t[1] += this.y, i.prototype.addParticleArray.call(this, t, e)
            }, t.loadContent = function() {
                for (var t = new Uint16Array(6 * this.settings.maxPartices), e = 0; e < this.settings.maxPartices; e++) t[6 * e + 0] = 4 * e + 0, t[6 * e + 1] = 4 * e + 1, t[6 * e + 2] = 4 * e + 2, t[6 * e + 3] = 4 * e + 0, t[6 * e + 4] = 4 * e + 2, t[6 * e + 5] = 4 * e + 3;
                this._indexBuffer2D.clear(), this._indexBuffer2D.append(t), this._indexBuffer2D.upload()
            }, t.addNewParticlesToVertexBuffer = function() {
                this._vertexBuffer2D.clear(), this._vertexBuffer2D.append(this._vertices);
                var t = 0;
                this._firstNewElement < this._firstFreeElement ? (t = 4 * this._firstNewElement * this._floatCountPerVertex * 4, this._vertexBuffer2D.subUpload(t, t, t + 4 * (this._firstFreeElement - this._firstNewElement) * this._floatCountPerVertex * 4)) : (t = 4 * this._firstNewElement * this._floatCountPerVertex * 4, this._vertexBuffer2D.subUpload(t, t, t + 4 * (this.settings.maxPartices - this._firstNewElement) * this._floatCountPerVertex * 4), 0 < this._firstFreeElement && (this._vertexBuffer2D.setNeedUpload(), this._vertexBuffer2D.subUpload(0, 0, 4 * this._firstFreeElement * this._floatCountPerVertex * 4))), this._firstNewElement = this._firstFreeElement
            }, t.renderSubmit = function() {
                if (this.texture && this.texture.loaded) {
                    if (this.update(n.timer.delta), this.sv.u_CurrentTime = this._currentTime, this._firstNewElement != this._firstFreeElement && this.addNewParticlesToVertexBuffer(), this.blend(), this._firstActiveElement != this._firstFreeElement) {
                        C.mainContext;
                        this._vertexBuffer2D.bind(this._indexBuffer2D), this.sv.u_texture = this.texture.source, this.sv.upload(), this._firstActiveElement < this._firstFreeElement ? C.mainContext.drawElements(4, 6 * (this._firstFreeElement - this._firstActiveElement), 5123, 6 * this._firstActiveElement * 2) : (C.mainContext.drawElements(4, 6 * (this.settings.maxPartices - this._firstActiveElement), 5123, 6 * this._firstActiveElement * 2), 0 < this._firstFreeElement && C.mainContext.drawElements(4, 6 * this._firstFreeElement, 5123, 0)), f.drawCall++
                    }
                    this._drawCounter++
                }
                return 1
            }, t.blend = function() {
                if (l.activeBlendFunction !== this._blendFn) {
                    var t = C.mainContext;
                    t.enable(3042), this._blendFn(t), l.activeBlendFunction = this._blendFn
                }
            }, t.dispose = function() {
                this._vertexBuffer2D.dispose(), this._indexBuffer2D.dispose()
            }, a.activeBlendType = -1, a
        }(w),
        F = function(t) {
            function e() {
                this.a_CornerTextureCoordinate = [4, 5126, !1, 116, 0], this.a_Position = [3, 5126, !1, 116, 16], this.a_Velocity = [3, 5126, !1, 116, 28], this.a_StartColor = [4, 5126, !1, 116, 40], this.a_EndColor = [4, 5126, !1, 116, 56], this.a_SizeRotation = [3, 5126, !1, 116, 72], this.a_Radius = [2, 5126, !1, 116, 84], this.a_Radian = [4, 5126, !1, 116, 92], this.a_AgeAddScale = [1, 5126, !1, 116, 108], this.a_Time = [1, 5126, !1, 116, 112], this.u_CurrentTime = NaN, this.u_Duration = NaN, this.u_Gravity = null, this.u_EndVelocity = NaN, this.u_texture = null, e.__super.call(this, 0, 0)
            }
            return s(e, "t_tl.particle.shader.value.ParticleShaderValue", x), e.prototype.upload = function() {
                this.refresh(), e.pShader.upload(this)
            }, a(e, ["pShader", function() {
                return this.pShader = new D
            }]), e
        }(),
        D = (function(e) {
            function i(t) {
                this._matrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], this._particleTemplate = null, this._canvasTemplate = null, this._emitter = null, this.autoPlay = !0, i.__super.call(this), t && this.setParticleSetting(t)
            }
            s(i, "t_tl.particle.Particle2D", e);
            var t = i.prototype;
            t.load = function(t) {
                n.loader.load(t, h.create(this, this.setParticleSetting), null, "json")
            }, t.setParticleSetting = function(e) {
                var i = this;
                if (!e) return this.stop();
                if (R.checkSetting(e), r.ConchParticleTemplate2D && !_.isWebGL || (this.customRenderEnable = !0), _.isWebGL) this._particleTemplate = new b(e), this.graphics._saveToCmd(_.context._drawParticle, [this._particleTemplate]);
                else {
                    if (_.isConchApp && r.ConchParticleTemplate2D) {
                        this._particleTemplate = new ConchParticleTemplate2D;
                        var a = this;
                        return n.loader.load(e.textureName, h.create(null, function(t) {
                            a._particleTemplate.texture = t, a._particleTemplate.settings = e, _.isConchNode ? a.graphics.drawParticle(a._particleTemplate) : a.graphics._saveToCmd(_.context._drawParticle, [i._particleTemplate])
                        })), this._emitter = {
                            start: function() {}
                        }, this.play = this._particleTemplate.play.bind(this._particleTemplate), this.stop = this._particleTemplate.stop.bind(this._particleTemplate), void(this.autoPlay && this.play())
                    }
                    this._particleTemplate = this._canvasTemplate = new z(e)
                }
                this._emitter ? this._emitter.template = this._particleTemplate : this._emitter = new T(this._particleTemplate), this.autoPlay && (this.emitter.start(), this.play())
            }, t.play = function() {
                this.timer.frameLoop(1, this, this._loop)
            }, t.stop = function() {
                this.timer.clear(this, this._loop)
            }, t._loop = function() {
                this.advanceTime(1 / 60)
            }, t.advanceTime = function(t) {
                void 0 === t && (t = 1), this._canvasTemplate && this._canvasTemplate.advanceTime(t), this._emitter && this._emitter.advanceTime(t)
            }, t.customRender = function(t, e, i) {
                _.isWebGL && (this._matrix4[0] = t.ctx._curMat.a, this._matrix4[1] = t.ctx._curMat.b, this._matrix4[4] = t.ctx._curMat.c, this._matrix4[5] = t.ctx._curMat.d, this._matrix4[12] = t.ctx._curMat.tx, this._matrix4[13] = t.ctx._curMat.ty, this._particleTemplate.sv.u_mmat = this._matrix4);
                this._canvasTemplate && this._canvasTemplate.render(t, e, i)
            }, t.destroy = function(t) {
                void 0 === t && (t = !0), this._particleTemplate instanceof t_tl.particle.ParticleTemplate2D && this._particleTemplate.dispose(), e.prototype.destroy.call(this, t)
            }, o(0, t, "url", null, function(t) {
                this.load(t)
            }), o(0, t, "emitter", function() {
                return this._emitter
            })
        }(e), function(t) {
            function e() {
                e.__super.call(this, e.vs, e.ps, "ParticleShader")
            }
            return s(e, "t_tl.particle.shader.ParticleShader", i), a(e, ["vs", function() {
                return this.vs = "attribute vec4 a_CornerTextureCoordinate;\nattribute vec3 a_Position;\nattribute vec3 a_Velocity;\nattribute vec4 a_StartColor;\nattribute vec4 a_EndColor;\nattribute vec3 a_SizeRotation;\nattribute vec2 a_Radius;\nattribute vec4 a_Radian;\nattribute float a_AgeAddScale;\nattribute float a_Time;\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n\nuniform float u_CurrentTime;\nuniform float u_Duration;\nuniform float u_EndVelocity;\nuniform vec3 u_Gravity;\n\n#ifdef PARTICLE3D\n uniform mat4 u_WorldMat;\n uniform mat4 u_View;\n uniform mat4 u_Projection;\n uniform vec2 u_ViewportScale;\n#else\n uniform vec2 size;\n uniform mat4 mmat;\n uniform mat4 u_mmat;\n#endif\n\nvec4 ComputeParticlePosition(in vec3 position, in vec3 velocity,in float age,in float normalizedAge)\n{\n\n   float startVelocity = length(velocity);//起始标量速度\n   float endVelocity = startVelocity * u_EndVelocity;//结束标量速度\n\n   float velocityIntegral = startVelocity * normalizedAge +(endVelocity - startVelocity) * normalizedAge *normalizedAge/2.0;//计算当前速度的标量（单位空间），vt=v0*t+(1/2)*a*(t^2)\n   \n   vec3 addPosition = normalize(velocity) * velocityIntegral * u_Duration;//计算受自身速度影响的位置，转换标量到矢量    \n   addPosition += u_Gravity * age * normalizedAge;//计算受重力影响的位置\n   \n   float radius=mix(a_Radius.x, a_Radius.y, normalizedAge); //计算粒子受半径和角度影响（无需计算角度和半径时，可用宏定义优化屏蔽此计算）\n   float radianHorizontal =mix(a_Radian.x,a_Radian.z,normalizedAge);\n   float radianVertical =mix(a_Radian.y,a_Radian.w,normalizedAge);\n   \n   float r =cos(radianVertical)* radius;\n   addPosition.y += sin(radianVertical) * radius;\n\t\n   addPosition.x += cos(radianHorizontal) *r;\n   addPosition.z += sin(radianHorizontal) *r;\n  \n   #ifdef PARTICLE3D\n   position+=addPosition;\n    return  u_Projection*u_View*u_WorldMat*(vec4(position, 1.0));\n   #else\n   addPosition.y=-addPosition.y;//2D粒子位置更新需要取负，2D粒子坐标系Y轴正向朝上\n   position+=addPosition;\n    return  vec4(position,1.0);\n   #endif\n}\n\nfloat ComputeParticleSize(in float startSize,in float endSize, in float normalizedAge)\n{    \n    float size = mix(startSize, endSize, normalizedAge);\n    \n\t#ifdef PARTICLE3D\n    //Project the size into screen coordinates.\n     return size * u_Projection[1][1];\n\t#else\n\t return size;\n\t#endif\n}\n\nmat2 ComputeParticleRotation(in float rot,in float age)\n{    \n    float rotation =rot * age;\n    //计算2x2旋转矩阵.\n    float c = cos(rotation);\n    float s = sin(rotation);\n    return mat2(c, -s, s, c);\n}\n\nvec4 ComputeParticleColor(in vec4 startColor,in vec4 endColor,in float normalizedAge)\n{\n\tvec4 color=mix(startColor,endColor,normalizedAge);\n    //硬编码设置，使粒子淡入很快，淡出很慢,6.7的缩放因子把置归一在0到1之间，可以谷歌x*(1-x)*(1-x)*6.7的制图表\n    color.a *= normalizedAge * (1.0-normalizedAge) * (1.0-normalizedAge) * 6.7;\n   \n    return color;\n}\n\nvoid main()\n{\n   float age = u_CurrentTime - a_Time;\n   age *= 1.0 + a_AgeAddScale;\n   float normalizedAge = clamp(age / u_Duration,0.0,1.0);\n   gl_Position = ComputeParticlePosition(a_Position, a_Velocity, age, normalizedAge);//计算粒子位置\n   float pSize = ComputeParticleSize(a_SizeRotation.x,a_SizeRotation.y, normalizedAge);\n   mat2 rotation = ComputeParticleRotation(a_SizeRotation.z, age);\n\t\n   #ifdef PARTICLE3D\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize * u_ViewportScale;\n   #else\n    mat4 mat=u_mmat*mmat;\n    gl_Position=vec4((mat*gl_Position).xy,0.0,1.0);\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize*vec2(mat[0][0],mat[1][1]);\n    gl_Position=vec4((gl_Position.x/size.x-0.5)*2.0,(0.5-gl_Position.y/size.y)*2.0,0.0,1.0);\n   #endif\n   \n   v_Color = ComputeParticleColor(a_StartColor,a_EndColor, normalizedAge);\n   v_TextureCoordinate =a_CornerTextureCoordinate.zw;\n}\n\n"
            }, "ps", function() {
                return this.ps = "#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\nuniform sampler2D u_texture;\n\nvoid main()\n{\t\n\tgl_FragColor=texture2D(u_texture,v_TextureCoordinate)*v_Color;\n\tgl_FragColor.xyz *= v_Color.w;\n}"
            }]), e
        }())
}(window, document, t_t), "function" == typeof define && define.amd && define("t_tl.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
            value: !0
        }), t_t) {
        var a = t_t[i];
        a && a.__isclass && (e[i] = a)
    }
});
! function(t, i, p) {
    p.un, p.uns;
    var s = p.static,
        n = p.class,
        h = p.getset,
        e = (p.__newvec, t_tl.display.Animation),
        g = (t_tl.utils.Browser, t_tl.utils.ClassUtils),
        o = t_tl.filters.ColorFilter,
        r = t_tl.utils.Ease,
        l = t_tl.events.Event,
        a = (t_tl.events.EventDispatcher, t_tl.display.css.Font),
        c = t_tl.display.FrameAnimation,
        u = t_tl.display.Graphics,
        _ = t_tl.utils.Handler,
        d = t_tl.display.Input,
        f = t_tl.net.Loader,
        m = (t_tl.display.Node, t_tl.maths.Point),
        y = t_tl.maths.Rectangle,
        v = t_tl.renders.Render,
        C = t_tl.display.Sprite,
        b = t_tl.display.Text,
        S = t_tl.resource.Texture,
        w = t_tl.utils.Tween,
        x = t_tl.utils.Utils,
        B = t_tl.utils.WeakObject;
    p.interface("t_tl.ui.IItem"), p.interface("t_tl.ui.IRender"), p.interface("t_tl.ui.ISelect"), p.interface("t_tl.ui.IComponent"), p.interface("t_tl.ui.IBox", "IComponent");
    var k = function() {
            function t() {
                this.enable = !1, this.top = NaN, this.bottom = NaN, this.left = NaN, this.right = NaN, this.centerX = NaN, this.centerY = NaN, this.anchorX = NaN, this.anchorY = NaN
            }
            return n(t, "t_tl.ui.LayoutStyle"), s(t, ["EMPTY", function() {
                return this.EMPTY = new t
            }]), t
        }(),
        I = function() {
            function t() {}
            return n(t, "t_tl.ui.Styles"), t.labelColor = "#000000", t.buttonStateNum = 3, t.scrollBarMinNum = 15, t.scrollBarDelayTime = 500, s(t, ["defaultSizeGrid", function() {
                return this.defaultSizeGrid = [4, 4, 4, 4, 0]
            }, "labelPadding", function() {
                return this.labelPadding = [2, 2, 2, 2]
            }, "inputLabelPadding", function() {
                return this.inputLabelPadding = [1, 1, 1, 3]
            }, "buttonLabelColors", function() {
                return this.buttonLabelColors = ["#32556b", "#32cc6b", "#ff0000", "#C0C0C0"]
            }, "comboBoxItemColors", function() {
                return this.comboBoxItemColors = ["#5e95b6", "#ffffff", "#000000", "#8fa4b1", "#ffffff"]
            }]), t
        }(),
        L = function() {
            function h() {}
            return n(h, "t_tl.ui.UIUtils"), h.fillArray = function(t, i, e) {
                var s = t.concat();
                if (i)
                    for (var h = i.split(","), n = 0, o = Math.min(s.length, h.length); n < o; n++) {
                        var r = h[n];
                        s[n] = "true" == r || "false" != r && r, null != e && (s[n] = e(r))
                    }
                return s
            }, h.toColor = function(t) {
                return x.toHexColor(t)
            }, h.gray = function(t, i) {
                void 0 === i && (i = !0), i ? h.addFilter(t, h.grayFilter) : h.clearFilter(t, o)
            }, h.addFilter = function(t, i) {
                var e = t.filters || [];
                e.push(i), t.filters = e
            }, h.clearFilter = function(t, i) {
                var e = t.filters;
                if (null != e && 0 < e.length) {
                    for (var s = e.length - 1; - 1 < s; s--) {
                        var h = e[s];
                        p.__typeof(h, i) && e.splice(s, 1)
                    }
                    t.filters = e
                }
            }, h._getReplaceStr = function(t) {
                return h.escapeSequence[t]
            }, h.adptString = function(t) {
                return t.replace(/\\(\w)/g, h._getReplaceStr)
            }, h.getBindFun = function(t) {
                var i = h._funMap.get(t);
                if (null == i) {
                    var e = '"' + t + '"',
                        s = "(function(data){if(data==null)return;with(data){try{\nreturn " + (e = e.replace(/^"\${|}"$/g, "").replace(/\${/g, '"+').replace(/}/g, '+"')) + "\n}catch(e){}}})";
                    i = p._runScript(s), h._funMap.set(t, i)
                }
                return i
            }, s(h, ["grayFilter", function() {
                return this.grayFilter = new o([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0])
            }, "escapeSequence", function() {
                return this.escapeSequence = {
                    "\\n": "\n",
                    "\\t": "\t"
                }
            }, "_funMap", function() {
                return this._funMap = new B
            }]), h
        }(),
        M = function() {
            function t() {}
            return n(t, "UIConfig"), t.touchScrollEnable = !0, t.mouseWheelEnable = !0, t.showButtons = !0, t.popupBgColor = "#000000", t.popupBgAlpha = .5, t.closeDialogOnSide = !0, t
        }(),
        z = function(i) {
            function f() {
                this.autoCacheCmd = !0, this._width = 0, this._height = 0, this._source = null, this._sizeGrid = null, this._isChanged = !1, this._offset = null, f.__super.call(this)
            }
            n(f, "t_tl.ui.AutoBitmap", i);
            var t = f.prototype;
            return t.destroy = function() {
                i.prototype.destroy.call(this), this._source = null, this._sizeGrid = null, this._offset = null
            }, t._setChanged = function() {
                this._isChanged || (this._isChanged = !0, p.timer.callLater(this, this.changeSource))
            }, t.changeSource = function() {
                this._isChanged = !1;
                var t = this._source;
                if (t && t.bitmap) {
                    var i = this.width,
                        e = this.height,
                        s = this._sizeGrid,
                        h = t.sourceWidth,
                        n = t.sourceHeight;
                    if (!s || h === i && n === e) this.cleanByTexture(t, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, i, e);
                    else {
                        t.$_GID || (t.$_GID = x.getGID());
                        var o = t.$_GID + "." + i + "." + e + "." + s.join(".");
                        if (x.isOKCmdList(B.I.get(o))) return void(this.cmds = B.I.get(o));
                        this.clear();
                        var r = s[0],
                            l = s[1],
                            a = s[2],
                            c = s[3],
                            u = s[4],
                            _ = !1;
                        if (i == h && (c = l = 0), e == n && (r = a = 0), i < c + l) {
                            var d = i;
                            _ = !0, i = c + l, this.save(), this.clipRect(0, 0, d, e)
                        }
                        c && r && this.drawTexture(f.getTexture(t, 0, 0, c, r), 0, 0, c, r), l && r && this.drawTexture(f.getTexture(t, h - l, 0, l, r), i - l, 0, l, r), c && a && this.drawTexture(f.getTexture(t, 0, n - a, c, a), 0, e - a, c, a), l && a && this.drawTexture(f.getTexture(t, h - l, n - a, l, a), i - l, e - a, l, a), r && this.drawBitmap(u, f.getTexture(t, c, 0, h - c - l, r), c, 0, i - c - l, r), a && this.drawBitmap(u, f.getTexture(t, c, n - a, h - c - l, a), c, e - a, i - c - l, a), c && this.drawBitmap(u, f.getTexture(t, 0, r, c, n - r - a), 0, r, c, e - r - a), l && this.drawBitmap(u, f.getTexture(t, h - l, r, l, n - r - a), i - l, r, l, e - r - a), this.drawBitmap(u, f.getTexture(t, c, r, h - c - l, n - r - a), c, r, i - c - l, e - r - a), _ && this.restore(), this.autoCacheCmd && !v.isConchApp && B.I.set(o, this.cmds)
                    }
                    this._repaint()
                }
            }, t.drawBitmap = function(t, i, e, s, h, n) {
                void 0 === h && (h = 0), void 0 === n && (n = 0), h < .1 || n < .1 || (!t || i.width == h && i.height == n ? this.drawTexture(i, e, s, h, n) : this.fillTexture(i, e, s, h, n))
            }, t.clear = function(t) {
                void 0 === t && (t = !0), i.prototype.clear.call(this, !1)
            }, h(0, t, "sizeGrid", function() {
                return this._sizeGrid
            }, function(t) {
                this._sizeGrid = t, this._setChanged()
            }), h(0, t, "width", function() {
                return this._width ? this._width : this._source ? this._source.sourceWidth : 0
            }, function(t) {
                this._width != t && (this._width = t, this._setChanged())
            }), h(0, t, "height", function() {
                return this._height ? this._height : this._source ? this._source.sourceHeight : 0
            }, function(t) {
                this._height != t && (this._height = t, this._setChanged())
            }), h(0, t, "source", function() {
                return this._source
            }, function(t) {
                t ? (this._source = t, this._setChanged()) : (this._source = null, this.clear())
            }), f.getTexture = function(t, i, e, s, h) {
                s <= 0 && (s = 1), h <= 0 && (h = 1), t.$_GID || (t.$_GID = x.getGID());
                var n = t.$_GID + "." + i + "." + e + "." + s + "." + h,
                    o = B.I.get(n);
                return o && o.source || (o = S.createFromTexture(t, i, e, s, h), B.I.set(n, o)), o
            }, f
        }(u),
        T = (function(t) {
            function i() {
                i.__super.call(this)
            }
            n(i, "t_tl.ui.UIEvent", l), i.SHOW_TIP = "showtip", i.HIDE_TIP = "hidetip"
        }(), function(i) {
            function t() {
                this._comXml = null, this._dataSource = null, this._toolTip = null, this._tag = null, this._disabled = !1, this._gray = !1, this.layoutEnabled = !0, t.__super.call(this), this._layout = k.EMPTY, this.preinitialize(), this.createChildren(), this.initialize()
            }
            n(t, "t_tl.ui.Component", i);
            var e = t.prototype;
            return p.imps(e, {
                "t_tl.ui.IComponent": !0
            }), e.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._dataSource = this._layout = null, this._tag = null, this._toolTip = null
            }, e.preinitialize = function() {}, e.createChildren = function() {}, e.initialize = function() {}, e.callLater = function(t, i) {
                p.timer.callLater(this, t, i)
            }, e.runCallLater = function(t) {
                p.timer.runCallLater(this, t)
            }, e.commitMeasure = function() {}, e.changeSize = function() {
                this.event("resize")
            }, e.getLayout = function() {
                return this._layout === k.EMPTY && (this._layout = new k), this._layout
            }, e._setLayoutEnabled = function(t) {
                this._layout && this._layout.enable != t && (this._layout.enable = t, this.on("added", this, this.onAdded), this.on("removed", this, this.onRemoved), this.parent && this.onAdded())
            }, e.onRemoved = function() {
                this.parent.off("resize", this, this.onCompResize)
            }, e.onAdded = function() {
                this.parent.on("resize", this, this.onCompResize), this.resetLayoutX(), this.resetLayoutY()
            }, e.onCompResize = function() {
                this._layout && this._layout.enable && (this.resetLayoutX(), this.resetLayoutY())
            }, e.resetLayoutX = function() {
                var t = this._layout;
                if (isNaN(t.anchorX) || (this.pivotX = t.anchorX * this.width), this.layoutEnabled) {
                    var i = this.parent;
                    i && (isNaN(t.centerX) ? isNaN(t.left) ? isNaN(t.right) || (this.x = Math.round(i.width - this.displayWidth - t.right + this.pivotX * this.scaleX)) : (this.x = Math.round(t.left + this.pivotX * this.scaleX), isNaN(t.right) || (this.width = (i._width - t.left - t.right) / (this.scaleX || .01))) : this.x = Math.round(.5 * (i.width - this.displayWidth) + t.centerX + this.pivotX * this.scaleX))
                }
            }, e.resetLayoutY = function() {
                var t = this._layout;
                if (isNaN(t.anchorY) || (this.pivotY = t.anchorY * this.height), this.layoutEnabled) {
                    var i = this.parent;
                    i && (isNaN(t.centerY) ? isNaN(t.top) ? isNaN(t.bottom) || (this.y = Math.round(i.height - this.displayHeight - t.bottom + this.pivotY * this.scaleY)) : (this.y = Math.round(t.top + this.pivotY * this.scaleY), isNaN(t.bottom) || (this.height = (i._height - t.top - t.bottom) / (this.scaleY || .01))) : this.y = Math.round(.5 * (i.height - this.displayHeight) + t.centerY + this.pivotY * this.scaleY))
                }
            }, e.onMouseOver = function(t) {
                p.stage.event("showtip", this._toolTip)
            }, e.onMouseOut = function(t) {
                p.stage.event("hidetip", this._toolTip)
            }, h(0, e, "displayWidth", function() {
                return this.width * this.scaleX
            }), h(0, e, "width", function() {
                return this._width ? this._width : this.measureWidth
            }, function(t) {
                this._width != t && (this._width = t, this.conchModel && this.conchModel.size(this._width, this._height), this.callLater(this.changeSize), !this._layout.enable || isNaN(this._layout.centerX) && isNaN(this._layout.right) && isNaN(this._layout.anchorX) || this.resetLayoutX())
            }), h(0, e, "measureWidth", function() {
                var t = 0;
                this.commitMeasure();
                for (var i = this.numChildren - 1; - 1 < i; i--) {
                    var e = this.getChildAt(i);
                    e.visible && (t = Math.max(e.x + e.width * e.scaleX, t))
                }
                return t
            }), h(0, e, "displayHeight", function() {
                return this.height * this.scaleY
            }), h(0, e, "height", function() {
                return this._height ? this._height : this.measureHeight
            }, function(t) {
                this._height != t && (this._height = t, this.conchModel && this.conchModel.size(this._width, this._height), this.callLater(this.changeSize), !this._layout.enable || isNaN(this._layout.centerY) && isNaN(this._layout.bottom) && isNaN(this._layout.anchorY) || this.resetLayoutY())
            }), h(0, e, "dataSource", function() {
                return this._dataSource
            }, function(t) {
                for (var i in this._dataSource = t, this._dataSource) this.hasOwnProperty(i) && "function" != typeof this[i] && (this[i] = this._dataSource[i])
            }), h(0, e, "scaleY", i.prototype._$get_scaleY, function(t) {
                p.superGet(C, this, "scaleY") != t && (p.superSet(C, this, "scaleY", t), this.callLater(this.changeSize), this._layout.enable && this.resetLayoutY())
            }), h(0, e, "measureHeight", function() {
                var t = 0;
                this.commitMeasure();
                for (var i = this.numChildren - 1; - 1 < i; i--) {
                    var e = this.getChildAt(i);
                    e.visible && (t = Math.max(e.y + e.height * e.scaleY, t))
                }
                return t
            }), h(0, e, "scaleX", i.prototype._$get_scaleX, function(t) {
                p.superGet(C, this, "scaleX") != t && (p.superSet(C, this, "scaleX", t), this.callLater(this.changeSize), this._layout.enable && this.resetLayoutX())
            }), h(0, e, "top", function() {
                return this._layout.top
            }, function(t) {
                t != this._layout.top && (this.getLayout().top = t, this._setLayoutEnabled(!0)), this.resetLayoutY()
            }), h(0, e, "bottom", function() {
                return this._layout.bottom
            }, function(t) {
                t != this._layout.bottom && (this.getLayout().bottom = t, this._setLayoutEnabled(!0)), this.resetLayoutY()
            }), h(0, e, "left", function() {
                return this._layout.left
            }, function(t) {
                t != this._layout.left && (this.getLayout().left = t, this._setLayoutEnabled(!0)), this.resetLayoutX()
            }), h(0, e, "right", function() {
                return this._layout.right
            }, function(t) {
                t != this._layout.right && (this.getLayout().right = t, this._setLayoutEnabled(!0)), this.resetLayoutX()
            }), h(0, e, "centerX", function() {
                return this._layout.centerX
            }, function(t) {
                t != this._layout.centerX && (this.getLayout().centerX = t, this._setLayoutEnabled(!0)), this.resetLayoutX()
            }), h(0, e, "centerY", function() {
                return this._layout.centerY
            }, function(t) {
                t != this._layout.centerY && (this.getLayout().centerY = t, this._setLayoutEnabled(!0)), this.resetLayoutY()
            }), h(0, e, "anchorX", function() {
                return this._layout.anchorX
            }, function(t) {
                t != this._layout.anchorX && (this.getLayout().anchorX = t, this._setLayoutEnabled(!0)), this.resetLayoutX()
            }), h(0, e, "anchorY", function() {
                return this._layout.anchorY
            }, function(t) {
                t != this._layout.anchorY && (this.getLayout().anchorY = t, this._setLayoutEnabled(!0)), this.resetLayoutY()
            }), h(0, e, "tag", function() {
                return this._tag
            }, function(t) {
                this._tag = t
            }), h(0, e, "toolTip", function() {
                return this._toolTip
            }, function(t) {
                this._toolTip != t && (null != (this._toolTip = t) ? (this.on("mouseover", this, this.onMouseOver), this.on("mouseout", this, this.onMouseOut)) : (this.off("mouseover", this, this.onMouseOver), this.off("mouseout", this, this.onMouseOut)))
            }), h(0, e, "comXml", function() {
                return this._comXml
            }, function(t) {
                this._comXml = t
            }), h(0, e, "gray", function() {
                return this._gray
            }, function(t) {
                t !== this._gray && (this._gray = t, L.gray(this, t))
            }), h(0, e, "disabled", function() {
                return this._disabled
            }, function(t) {
                t !== this._disabled && (this.gray = this._disabled = t, this.mouseEnabled = !t)
            }), t
        }(C)),
        P = function(t) {
            function i() {
                this.lockLayer = null, this.popupEffect = function(t) {
                    t.scale(1, 1), w.from(t, {
                        x: p.stage.width / 2,
                        y: p.stage.height / 2,
                        scaleX: 0,
                        scaleY: 0
                    }, 300, r.backOut, _.create(this, this.doOpen, [t]))
                }, this.closeEffect = function(t, i) {
                    w.to(t, {
                        x: p.stage.width / 2,
                        y: p.stage.height / 2,
                        scaleX: 0,
                        scaleY: 0
                    }, 300, r.strongOut, _.create(this, this.doClose, [t, i]))
                }, i.__super.call(this), this.maskLayer = new C, this.popupEffectHandler = new _(this, this.popupEffect), this.closeEffectHandler = new _(this, this.closeEffect), this.mouseEnabled = this.maskLayer.mouseEnabled = !0, this.zOrder = 1e3, p.stage.addChild(this), p.stage.on("resize", this, this._onResize), M.closeDialogOnSide && this.maskLayer.on("click", this, this._closeOnSide), this._onResize(null)
            }
            n(i, "t_tl.ui.DialogManager", C);
            var e = i.prototype;
            return e._closeOnSide = function() {
                var t = this.getChildAt(this.numChildren - 1);
                t instanceof t_tl.ui.Dialog && t.close("side")
            }, e.setLockView = function(t) {
                this.lockLayer || (this.lockLayer = new H, this.lockLayer.mouseEnabled = !0, this.lockLayer.size(p.stage.width, p.stage.height)), this.lockLayer.removeChildren(), t && (t.centerX = t.centerY = 0, this.lockLayer.addChild(t))
            }, e._onResize = function(t) {
                var i = this.maskLayer.width = p.stage.width,
                    e = this.maskLayer.height = p.stage.height;
                this.lockLayer && this.lockLayer.size(i, e), this.maskLayer.graphics.clear(), this.maskLayer.graphics.drawRect(0, 0, i, e, M.popupBgColor), this.maskLayer.alpha = M.popupBgAlpha;
                for (var s = this.numChildren - 1; - 1 < s; s--) {
                    var h = this.getChildAt(s);
                    h.popupCenter && this._centerDialog(h)
                }
            }, e._centerDialog = function(t) {
                t.x = Math.round((p.stage.width - t.width >> 1) + t.pivotX), t.y = Math.round((p.stage.height - t.height >> 1) + t.pivotY)
            }, e.open = function(t, i, e) {
                void 0 === i && (i = !1), void 0 === e && (e = !1), i && this._closeAll(), t.popupCenter && this._centerDialog(t), this.addChild(t), (t.isModal || this._$P.hasZorder) && this.timer.callLater(this, this._checkMask), e && null != t.popupEffect ? t.popupEffect.runWith(t) : this.doOpen(t), this.event("open")
            }, e.doOpen = function(t) {
                t.onOpened()
            }, e.lock = function(t) {
                this.lockLayer && (t ? this.addChild(this.lockLayer) : this.lockLayer.removeSelf())
            }, e.close = function(t, i, e) {
                void 0 === e && (e = !1), e && null != t.closeEffect ? t.closeEffect.runWith([t, i]) : this.doClose(t, i), this.event("close")
            }, e.doClose = function(t, i) {
                t.removeSelf(), t.isModal && this._checkMask(), t.closeHandler && t.closeHandler.runWith(i), t.onClosed(i)
            }, e.closeAll = function() {
                this._closeAll(), this.event("close")
            }, e._closeAll = function() {
                for (var t = this.numChildren - 1; - 1 < t; t--) {
                    var i = this.getChildAt(t);
                    i && null != i.close && this.doClose(i)
                }
            }, e.getDialogsByGroup = function(t) {
                for (var i = [], e = this.numChildren - 1; - 1 < e; e--) {
                    var s = this.getChildAt(e);
                    s && s.group === t && i.push(s)
                }
                return i
            }, e.closeByGroup = function(t) {
                for (var i = [], e = this.numChildren - 1; - 1 < e; e--) {
                    var s = this.getChildAt(e);
                    s && s.group === t && (s.close(), i.push(s))
                }
                return i
            }, e._checkMask = function() {
                this.maskLayer.removeSelf();
                for (var t = this.numChildren - 1; - 1 < t; t--) {
                    var i = this.getChildAt(t);
                    if (i && i.isModal) return void this.addChildAt(this.maskLayer, t)
                }
            }, i
        }(),
        H = function(t) {
            function i() {
                i.__super.call(this)
            }
            n(i, "t_tl.ui.Box", t);
            var e = i.prototype;
            return p.imps(e, {
                "t_tl.ui.IBox": !0
            }), h(0, e, "dataSource", t.prototype._$get_dataSource, function(t) {
                for (var i in this._dataSource = t) {
                    var e = this.getChildByName(i);
                    e ? e.dataSource = t[i] : this.hasOwnProperty(i) && "function" != typeof this[i] && (this[i] = t[i])
                }
            }), i
        }(T),
        N = function(i) {
            function e(t, i) {
                this.toggle = !1, this._bitmap = null, this._text = null, this._strokeColors = null, this._state = 0, this._selected = !1, this._skin = null, this._autoSize = !0, this._sources = null, this._clickHandler = null, this._stateChanged = !1, e.__super.call(this), this._labelColors = I.buttonLabelColors, this._stateNum = I.buttonStateNum, void 0 === i && (i = ""), this.skin = t, this.label = i
            }
            n(e, "t_tl.ui.Button", i);
            var t = e.prototype;
            return p.imps(t, {
                "t_tl.ui.ISelect": !0
            }), t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._bitmap && this._bitmap.destroy(), this._text && this._text.destroy(t), this._bitmap = null, this._text = null, this._clickHandler = null, this._labelColors = this._sources = this._strokeColors = null
            }, t.createChildren = function() {
                this.graphics = this._bitmap = new z
            }, t.createText = function() {
                this._text || (this._text = new b, this._text.overflow = b.HIDDEN, this._text.align = "center", this._text.valign = "middle", this._text.width = this._width, this._text.height = this._height)
            }, t.initialize = function() {
                1 !== this._mouseEnableState && (this.mouseEnabled = !0, this._setBit(2, !0)), this._createListener("mouseover", this, this.onMouse, null, !1, !1), this._createListener("mouseout", this, this.onMouse, null, !1, !1), this._createListener("mousedown", this, this.onMouse, null, !1, !1), this._createListener("mouseup", this, this.onMouse, null, !1, !1), this._createListener("click", this, this.onMouse, null, !1, !1)
            }, t.onMouse = function(t) {
                if (!1 !== this.toggle || !this._selected) return "click" === t.type ? (this.toggle && (this.selected = !this._selected), void(this._clickHandler && this._clickHandler.run())) : void(!this._selected && (this.state = e.stateMap[t.type]))
            }, t.changeClips = function() {
                var t = f.getRes(this._skin);
                if (t) {
                    var i = t.sourceWidth,
                        e = t.sourceHeight / this._stateNum;
                    t.$_GID || (t.$_GID = x.getGID());
                    var s = t.$_GID + "-" + this._stateNum,
                        h = B.I.get(s);
                    if (x.isOkTextureList(h) || (h = null), h) this._sources = h;
                    else {
                        if (this._sources = [], 1 === this._stateNum) this._sources.push(t);
                        else
                            for (var n = 0; n < this._stateNum; n++) this._sources.push(S.createFromTexture(t, 0, e * n, i, e));
                        B.I.set(s, this._sources)
                    }
                    this._autoSize ? (this._bitmap.width = this._width || i, this._bitmap.height = this._height || e, this._text && (this._text.width = this._bitmap.width, this._text.height = this._bitmap.height)) : this._text && (this._text.x = i)
                } else console.log("lose skin", this._skin)
            }, t.changeState = function() {
                this._stateChanged = !1, this.runCallLater(this.changeClips);
                var t = this._state < this._stateNum ? this._state : this._stateNum - 1;
                this._sources && (this._bitmap.source = this._sources[t]), this.label && (this._text.color = this._labelColors[t], this._strokeColors && (this._text.strokeColor = this._strokeColors[t]))
            }, t._setStateChanged = function() {
                this._stateChanged || (this._stateChanged = !0, this.callLater(this.changeState))
            }, h(0, t, "labelStrokeColor", function() {
                return this.createText(), this._text.strokeColor
            }, function(t) {
                this.createText(), this._text.strokeColor = t
            }), h(0, t, "measureHeight", function() {
                return this.runCallLater(this.changeClips), this._text ? Math.max(this._bitmap.height, this._text.height) : this._bitmap.height
            }), h(0, t, "skin", function() {
                return this._skin
            }, function(t) {
                this._skin != t && (this._skin = t, this.callLater(this.changeClips), this._setStateChanged())
            }), h(0, t, "state", function() {
                return this._state
            }, function(t) {
                this._state != t && (this._state = t, this._setStateChanged())
            }), h(0, t, "text", function() {
                return this.createText(), this._text
            }), h(0, t, "stateNum", function() {
                return this._stateNum
            }, function(t) {
                "string" == typeof t && (t = parseInt(t)), this._stateNum != t && (this._stateNum = t < 1 ? 1 : 3 < t ? 3 : t, this.callLater(this.changeClips))
            }), h(0, t, "strokeColors", function() {
                return this._strokeColors ? this._strokeColors.join(",") : ""
            }, function(t) {
                this._strokeColors = L.fillArray(I.buttonLabelColors, t, String), this._setStateChanged()
            }), h(0, t, "labelColors", function() {
                return this._labelColors.join(",")
            }, function(t) {
                this._labelColors = L.fillArray(I.buttonLabelColors, t, String), this._setStateChanged()
            }), h(0, t, "measureWidth", function() {
                return this.runCallLater(this.changeClips), this._autoSize ? this._bitmap.width : (this.runCallLater(this.changeState), this._bitmap.width + (this._text ? this._text.width : 0))
            }), h(0, t, "label", function() {
                return this._text ? this._text.text : null
            }, function(t) {
                (this._text || t) && (this.createText(), this._text.text != t && (t && !this._text.parent && this.addChild(this._text), this._text.text = (t + "").replace(/\\n/g, "\n"), this._setStateChanged()))
            }), h(0, t, "selected", function() {
                return this._selected
            }, function(t) {
                this._selected != t && (this._selected = t, this.state = this._selected ? 2 : 0, this.event("change"))
            }), h(0, t, "labelPadding", function() {
                return this.createText(), this._text.padding.join(",")
            }, function(t) {
                this.createText(), this._text.padding = L.fillArray(I.labelPadding, t, Number)
            }), h(0, t, "labelSize", function() {
                return this.createText(), this._text.fontSize
            }, function(t) {
                this.createText(), this._text.fontSize = t
            }), h(0, t, "labelStroke", function() {
                return this.createText(), this._text.stroke
            }, function(t) {
                this.createText(), this._text.stroke = t
            }), h(0, t, "labelBold", function() {
                return this.createText(), this._text.bold
            }, function(t) {
                this.createText(), this._text.bold = t
            }), h(0, t, "labelFont", function() {
                return this.createText(), this._text.font
            }, function(t) {
                this.createText(), this._text.font = t
            }), h(0, t, "labelAlign", function() {
                return this.createText(), this._text.align
            }, function(t) {
                this.createText(), this._text.align = t
            }), h(0, t, "clickHandler", function() {
                return this._clickHandler
            }, function(t) {
                this._clickHandler = t
            }), h(0, t, "sizeGrid", function() {
                return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null
            }, function(t) {
                this._bitmap.sizeGrid = L.fillArray(I.defaultSizeGrid, t, Number)
            }), h(0, t, "width", i.prototype._$get_width, function(t) {
                p.superSet(T, this, "width", t), this._autoSize && (this._bitmap.width = t, this._text && (this._text.width = t))
            }), h(0, t, "height", i.prototype._$get_height, function(t) {
                p.superSet(T, this, "height", t), this._autoSize && (this._bitmap.height = t, this._text && (this._text.height = t))
            }), h(0, t, "dataSource", i.prototype._$get_dataSource, function(t) {
                "number" == typeof(this._dataSource = t) || "string" == typeof t ? this.label = t + "" : p.superSet(T, this, "dataSource", t)
            }), h(0, t, "iconOffset", function() {
                return this._bitmap._offset ? this._bitmap._offset.join(",") : null
            }, function(t) {
                this._bitmap._offset = t ? L.fillArray([1, 1], t, Number) : []
            }), s(e, ["stateMap", function() {
                return this.stateMap = {
                    mouseup: 0,
                    mouseover: 1,
                    mousedown: 2,
                    mouseout: 0
                }
            }]), e
        }(T),
        O = function(i) {
            function s(t, i, e) {
                this._sources = null, this._bitmap = null, this._skin = null, this._clipX = 1, this._clipY = 1, this._clipWidth = 0, this._clipHeight = 0, this._autoPlay = !1, this._interval = 50, this._complete = null, this._isPlaying = !1, this._index = 0, this._clipChanged = !1, this._group = null, this._toIndex = -1, s.__super.call(this), void 0 === i && (i = 1), void 0 === e && (e = 1), this._clipX = i, this._clipY = e, this.skin = t
            }
            n(s, "t_tl.ui.Clip", i);
            var t = s.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, !0), this._bitmap && this._bitmap.destroy(), this._bitmap = null, this._sources = null
            }, t.dispose = function() {
                this.destroy(!0), p.loader.clearRes(this._skin)
            }, t.createChildren = function() {
                this.graphics = this._bitmap = new z
            }, t._onDisplay = function(t) {
                this._isPlaying ? this._displayedInStage ? this.play() : this.stop() : this._autoPlay && this.play()
            }, t.changeClip = function() {
                if (this._clipChanged = !1, this._skin) {
                    var t = f.getRes(this._skin);
                    t ? this.loadComplete(this._skin, t) : p.loader.load(this._skin, _.create(this, this.loadComplete, [this._skin]))
                }
            }, t.loadComplete = function(t, i) {
                if (t === this._skin && i) {
                    var e = this._clipWidth || Math.ceil(i.sourceWidth / this._clipX),
                        s = this._clipHeight || Math.ceil(i.sourceHeight / this._clipY),
                        h = this._skin + e + s,
                        n = B.I.get(h);
                    if (x.isOkTextureList(n) || (n = null), n) this._sources = n;
                    else {
                        this._sources = [];
                        for (var o = 0; o < this._clipY; o++)
                            for (var r = 0; r < this._clipX; r++) this._sources.push(S.createFromTexture(i, e * r, s * o, e, s));
                        B.I.set(h, this._sources)
                    }
                    this.index = this._index, this.event("loaded"), this.onCompResize()
                }
            }, t.play = function(t, i) {
                void 0 === t && (t = 0), void 0 === i && (i = -1), this._isPlaying = !0, this.index = t, this._toIndex = i, this._index++, p.timer.loop(this.interval, this, this._loop), this.on("display", this, this._onDisplay), this.on("undisplay", this, this._onDisplay)
            }, t._loop = function() {
                this._style.visible && this._sources && (this._index++, -1 < this._toIndex && this._index >= this._toIndex ? this.stop() : this._index >= this._sources.length && (this._index = 0), this.index = this._index)
            }, t.stop = function() {
                this._isPlaying = !1, p.timer.clear(this, this._loop), this.event("complete")
            }, t._setClipChanged = function() {
                this._clipChanged || (this._clipChanged = !0, this.callLater(this.changeClip))
            }, h(0, t, "interval", function() {
                return this._interval
            }, function(t) {
                this._interval != t && (this._interval = t, this._isPlaying && this.play())
            }), h(0, t, "skin", function() {
                return this._skin
            }, function(t) {
                this._skin != t && ((this._skin = t) ? this._setClipChanged() : this._bitmap.source = null)
            }), h(0, t, "sources", function() {
                return this._sources
            }, function(t) {
                this._sources = t, this.index = this._index, this.event("loaded")
            }), h(0, t, "clipX", function() {
                return this._clipX
            }, function(t) {
                this._clipX = t || 1, this._setClipChanged()
            }), h(0, t, "clipY", function() {
                return this._clipY
            }, function(t) {
                this._clipY = t || 1, this._setClipChanged()
            }), h(0, t, "total", function() {
                return this.runCallLater(this.changeClip), this._sources ? this._sources.length : 0
            }), h(0, t, "clipWidth", function() {
                return this._clipWidth
            }, function(t) {
                this._clipWidth = t, this._setClipChanged()
            }), h(0, t, "sizeGrid", function() {
                return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null
            }, function(t) {
                this._bitmap.sizeGrid = L.fillArray(I.defaultSizeGrid, t, Number)
            }), h(0, t, "group", function() {
                return this._group
            }, function(t) {
                t && this._skin && f.setGroup(this._skin, t), this._group = t
            }), h(0, t, "clipHeight", function() {
                return this._clipHeight
            }, function(t) {
                this._clipHeight = t, this._setClipChanged()
            }), h(0, t, "width", i.prototype._$get_width, function(t) {
                p.superSet(T, this, "width", t), this._bitmap.width = t
            }), h(0, t, "height", i.prototype._$get_height, function(t) {
                p.superSet(T, this, "height", t), this._bitmap.height = t
            }), h(0, t, "measureWidth", function() {
                return this.runCallLater(this.changeClip), this._bitmap.width
            }), h(0, t, "measureHeight", function() {
                return this.runCallLater(this.changeClip), this._bitmap.height
            }), h(0, t, "index", function() {
                return this._index
            }, function(t) {
                this._index = t, this._bitmap && this._sources && (this._bitmap.source = this._sources[t]), this.event("change")
            }), h(0, t, "autoPlay", function() {
                return this._autoPlay
            }, function(t) {
                this._autoPlay != t && ((this._autoPlay = t) ? this.play() : this.stop())
            }), h(0, t, "isPlaying", function() {
                return this._isPlaying
            }, function(t) {
                this._isPlaying = t
            }), h(0, t, "dataSource", i.prototype._$get_dataSource, function(t) {
                "number" == typeof(this._dataSource = t) && Math.floor(t) == t || "string" == typeof t ? this.index = parseInt(t) : p.superSet(T, this, "dataSource", t)
            }), h(0, t, "bitmap", function() {
                return this._bitmap
            }), s
        }(T),
        A = function(i) {
            function t() {
                this.changeHandler = null, this._gridSize = 11, this._bgColor = "#ffffff", this._borderColor = "#000000", this._inputColor = "#000000", this._inputBgColor = "#efefef", this._colorPanel = null, this._colorTiles = null, this._colorBlock = null, this._colorInput = null, this._colorButton = null, this._colors = [], this._selectedColor = "#000000", this._panelChanged = !1, t.__super.call(this)
            }
            n(t, "t_tl.ui.ColorPicker", i);
            var e = t.prototype;
            return e.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._colorPanel && this._colorPanel.destroy(t), this._colorButton && this._colorButton.destroy(t), this._colorPanel = null, this._colorTiles = null, this._colorBlock = null, this._colorInput = null, this._colorButton = null, this._colors = null, this.changeHandler = null
            }, e.createChildren = function() {
                this.addChild(this._colorButton = new N), this._colorPanel = new H, this._colorPanel.size(230, 166), this._colorPanel.addChild(this._colorTiles = new C), this._colorPanel.addChild(this._colorBlock = new C), this._colorPanel.addChild(this._colorInput = new d)
            }, e.initialize = function() {
                this._colorButton.on("click", this, this.onColorButtonClick), this._colorBlock.pos(5, 5), this._colorInput.pos(60, 5), this._colorInput.size(60, 20), this._colorInput.on("change", this, this.onColorInputChange), this._colorInput.on("keydown", this, this.onColorFieldKeyDown), this._colorTiles.pos(5, 30), this._colorTiles.on("mousemove", this, this.onColorTilesMouseMove), this._colorTiles.on("click", this, this.onColorTilesClick), this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize), this._colorPanel.on("mousedown", this, this.onPanelMouseDown), this.bgColor = this._bgColor
            }, e.onPanelMouseDown = function(t) {
                t.stopPropagation()
            }, e.changePanel = function() {
                this._panelChanged = !1;
                var t = this._colorPanel.graphics;
                t.clear(), t.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor), this.drawBlock(this._selectedColor), this._colorInput.borderColor = this._borderColor, this._colorInput.bgColor = this._inputBgColor, this._colorInput.color = this._inputColor, (t = this._colorTiles.graphics).clear();
                for (var i = [0, 3355443, 6710886, 10066329, 13421772, 16777215, 16711680, 65280, 255, 16776960, 65535, 16711935], e = 0; e < 12; e++)
                    for (var s = 0; s < 20; s++) {
                        var h = 0;
                        h = 0 === s ? i[e] : 1 === s ? 0 : 51 * (((3 * e + s / 6) % 3 << 0) + 3 * (e / 6 << 0)) << 16 | s % 6 * 51 << 8 | (e << 0) % 6 * 51;
                        var n = L.toColor(h);
                        this._colors.push(n);
                        var o = s * this._gridSize,
                            r = e * this._gridSize;
                        t.drawRect(o, r, this._gridSize, this._gridSize, n, "#000000")
                    }
            }, e.onColorButtonClick = function(t) {
                this._colorPanel.parent ? this.close() : this.open()
            }, e.open = function() {
                var t = this.localToGlobal(new m),
                    i = t.x + this._colorPanel.width <= p.stage.width ? t.x : p.stage.width - this._colorPanel.width,
                    e = t.y + this._colorButton.height;
                e = e + this._colorPanel.height <= p.stage.height ? e : t.y - this._colorPanel.height, this._colorPanel.pos(i, e), this._colorPanel.zOrder = 1001, p._currentStage.addChild(this._colorPanel), p.stage.on("mousedown", this, this.removeColorBox)
            }, e.close = function() {
                p.stage.off("mousedown", this, this.removeColorBox), this._colorPanel.removeSelf()
            }, e.removeColorBox = function(t) {
                this.close()
            }, e.onColorFieldKeyDown = function(t) {
                13 == t.keyCode && (this._colorInput.text ? this.selectedColor = this._colorInput.text : this.selectedColor = null, this.close(), t.stopPropagation())
            }, e.onColorInputChange = function(t) {
                this._colorInput.text ? this.drawBlock(this._colorInput.text) : this.drawBlock("#FFFFFF")
            }, e.onColorTilesClick = function(t) {
                this.selectedColor = this.getColorByMouse(), this.close()
            }, e.onColorTilesMouseMove = function(t) {
                this._colorInput.focus = !1;
                var i = this.getColorByMouse();
                this._colorInput.text = i, this.drawBlock(i)
            }, e.getColorByMouse = function() {
                var t = this._colorTiles.getMousePoint(),
                    i = Math.floor(t.x / this._gridSize),
                    e = Math.floor(t.y / this._gridSize);
                return this._colors[20 * e + i]
            }, e.drawBlock = function(t) {
                var i = this._colorBlock.graphics;
                i.clear();
                var e = t || "#ffffff";
                i.drawRect(0, 0, 50, 20, e, this._borderColor), t || i.drawLine(0, 0, 50, 20, "#ff0000")
            }, e.changeColor = function() {
                var t = this.graphics;
                t.clear();
                var i = this._selectedColor || "#000000";
                t.drawRect(0, 0, this._colorButton.width, this._colorButton.height, i)
            }, e._setPanelChanged = function() {
                this._panelChanged || (this._panelChanged = !0, this.callLater(this.changePanel))
            }, h(0, e, "inputBgColor", function() {
                return this._inputBgColor
            }, function(t) {
                this._inputBgColor = t, this._setPanelChanged()
            }), h(0, e, "selectedColor", function() {
                return this._selectedColor
            }, function(t) {
                this._selectedColor != t && (this._selectedColor = this._colorInput.text = t, this.drawBlock(t), this.changeColor(), this.changeHandler && this.changeHandler.runWith(this._selectedColor), this.event("change", l.EMPTY.setTo("change", this, this)))
            }), h(0, e, "skin", function() {
                return this._colorButton.skin
            }, function(t) {
                this._colorButton.skin = t, this.changeColor()
            }), h(0, e, "bgColor", function() {
                return this._bgColor
            }, function(t) {
                this._bgColor = t, this._setPanelChanged()
            }), h(0, e, "borderColor", function() {
                return this._borderColor
            }, function(t) {
                this._borderColor = t, this._setPanelChanged()
            }), h(0, e, "inputColor", function() {
                return this._inputColor
            }, function(t) {
                this._inputColor = t, this._setPanelChanged()
            }), t
        }(T),
        Y = function(i) {
            function e(t, i) {
                this._visibleNum = 6, this._button = null, this._list = null, this._isOpen = !1, this._itemSize = 12, this._labels = [], this._selectedIndex = -1, this._selectHandler = null, this._itemHeight = NaN, this._listHeight = NaN, this._listChanged = !1, this._itemChanged = !1, this._scrollBarSkin = null, this._isCustomList = !1, this.itemRender = null, e.__super.call(this), this._itemColors = I.comboBoxItemColors, this.skin = t, this.labels = i
            }
            n(e, "t_tl.ui.ComboBox", i);
            var t = e.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._button && this._button.destroy(t), this._list && this._list.destroy(t), this._button = null, this._list = null, this._itemColors = null, this._labels = null, this._selectHandler = null
            }, t.createChildren = function() {
                this.addChild(this._button = new N), this._button.text.align = "left", this._button.labelPadding = "0,0,0,5", this._button.on("mousedown", this, this.onButtonMouseDown)
            }, t._createList = function() {
                this._list = new U, this._scrollBarSkin && (this._list.vScrollBarSkin = this._scrollBarSkin), this._setListEvent(this._list)
            }, t._setListEvent = function(t) {
                this._list.selectEnable = !0, this._list.on("mousedown", this, this.onListDown), this._list.mouseHandler = _.create(this, this.onlistItemMouse, null, !1), this._list.scrollBar && this._list.scrollBar.on("mousedown", this, this.onScrollBarDown)
            }, t.onListDown = function(t) {
                t.stopPropagation()
            }, t.onScrollBarDown = function(t) {
                t.stopPropagation()
            }, t.onButtonMouseDown = function(t) {
                this.callLater(this.switchTo, [!this._isOpen])
            }, t.changeList = function() {
                this._listChanged = !1;
                var t = this.width - 2,
                    i = this._itemColors[2];
                this._itemHeight = this._itemSize + 6, this._list.itemRender = this.itemRender || {
                    type: "Box",
                    child: [{
                        type: "Label",
                        props: {
                            name: "label",
                            x: 1,
                            padding: "3,3,3,3",
                            width: t,
                            height: this._itemHeight,
                            fontSize: this._itemSize,
                            color: i
                        }
                    }]
                }, this._list.repeatY = this._visibleNum, this._list.refresh()
            }, t.onlistItemMouse = function(t, i) {
                var e = t.type;
                if ("mouseover" === e || "mouseout" === e) {
                    if (this._isCustomList) return;
                    var s = this._list.getCell(i);
                    if (!s) return;
                    var h = s.getChildByName("label");
                    h && ("mouseover" === e ? (h.bgColor = this._itemColors[0], h.color = this._itemColors[1]) : (h.bgColor = null, h.color = this._itemColors[2]))
                } else "click" === e && (this.selectedIndex = i, this.isOpen = !1)
            }, t.switchTo = function(t) {
                this.isOpen = t
            }, t.changeOpen = function() {
                this.isOpen = !this._isOpen
            }, t.changeItem = function() {
                if (this._itemChanged = !1, this._listHeight = 0 < this._labels.length ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight, !this._isCustomList) {
                    var t = this._list.graphics;
                    t.clear(), t.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3])
                }
                for (var i = this._list.array || [], e = i.length = 0, s = this._labels.length; e < s; e++) i.push({
                    label: this._labels[e]
                });
                this._list.height = this._listHeight, this._list.array = i
            }, t.changeSelected = function() {
                this._button.label = this.selectedLabel
            }, t._onStageMouseWheel = function(t) {
                this._list && !this._list.contains(t.target) && this.removeList(null)
            }, t.removeList = function(t) {
                p.stage.off("mousedown", this, this.removeList), p.stage.off("mousewheel", this, this._onStageMouseWheel), this.isOpen = !1
            }, h(0, t, "selectedIndex", function() {
                return this._selectedIndex
            }, function(t) {
                this._selectedIndex != t && (this._selectedIndex = t, 0 < this._labels.length ? this.changeSelected() : this.callLater(this.changeSelected), this.event("change", [l.EMPTY.setTo("change", this, this)]), this._selectHandler && this._selectHandler.runWith(this._selectedIndex))
            }), h(0, t, "measureHeight", function() {
                return this._button.height
            }), h(0, t, "skin", function() {
                return this._button.skin
            }, function(t) {
                this._button.skin != t && (this._button.skin = t, this._listChanged = !0)
            }), h(0, t, "measureWidth", function() {
                return this._button.width
            }), h(0, t, "width", i.prototype._$get_width, function(t) {
                p.superSet(T, this, "width", t), this._button.width = this._width, this._itemChanged = !0, this._listChanged = !0
            }), h(0, t, "selectedLabel", function() {
                return -1 < this._selectedIndex && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : null
            }, function(t) {
                this.selectedIndex = this._labels.indexOf(t)
            }), h(0, t, "labels", function() {
                return this._labels.join(",")
            }, function(t) {
                0 < this._labels.length && (this.selectedIndex = -1), t ? this._labels = t.split(",") : this._labels.length = 0, this._itemChanged = !0
            }), h(0, t, "height", i.prototype._$get_height, function(t) {
                p.superSet(T, this, "height", t), this._button.height = this._height
            }), h(0, t, "selectHandler", function() {
                return this._selectHandler
            }, function(t) {
                this._selectHandler = t
            }), h(0, t, "visibleNum", function() {
                return this._visibleNum
            }, function(t) {
                this._visibleNum = t, this._listChanged = !0
            }), h(0, t, "labelBold", function() {
                return this._button.text.bold
            }, function(t) {
                this._button.text.bold = t
            }), h(0, t, "itemColors", function() {
                return String(this._itemColors)
            }, function(t) {
                this._itemColors = L.fillArray(this._itemColors, t, String), this._listChanged = !0
            }), h(0, t, "itemSize", function() {
                return this._itemSize
            }, function(t) {
                this._itemSize = t, this._listChanged = !0
            }), h(0, t, "scrollBar", function() {
                return this.list.scrollBar
            }), h(0, t, "isOpen", function() {
                return this._isOpen
            }, function(t) {
                if (this._isOpen != t)
                    if (this._isOpen = t, this._button.selected = this._isOpen, this._isOpen) {
                        this._list || this._createList(), this._listChanged && !this._isCustomList && this.changeList(), this._itemChanged && this.changeItem();
                        var i = this.localToGlobal(m.TEMP.setTo(0, 0)),
                            e = i.y + this._button.height;
                        e = e + this._listHeight <= p.stage.height ? e : i.y - this._listHeight, this._list.pos(i.x, e), this._list.zOrder = 1001, p._currentStage.addChild(this._list), p.stage.once("mousedown", this, this.removeList), p.stage.on("mousewheel", this, this._onStageMouseWheel), this._list.selectedIndex = this._selectedIndex
                    } else this._list && this._list.removeSelf()
            }), h(0, t, "scrollBarSkin", function() {
                return this._scrollBarSkin
            }, function(t) {
                this._scrollBarSkin = t
            }), h(0, t, "sizeGrid", function() {
                return this._button.sizeGrid
            }, function(t) {
                this._button.sizeGrid = t
            }), h(0, t, "button", function() {
                return this._button
            }), h(0, t, "list", function() {
                return this._list || this._createList(), this._list
            }, function(t) {
                t && (t.removeSelf(), this._isCustomList = !0, this._list = t, this._setListEvent(t), this._itemHeight = t.getCell(0).height + t.spaceY)
            }), h(0, t, "dataSource", i.prototype._$get_dataSource, function(t) {
                "number" == typeof(this._dataSource = t) && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : p.superSet(T, this, "dataSource", t)
            }), h(0, t, "labelColors", function() {
                return this._button.labelColors
            }, function(t) {
                this._button.labelColors != t && (this._button.labelColors = t)
            }), h(0, t, "labelPadding", function() {
                return this._button.text.padding.join(",")
            }, function(t) {
                this._button.text.padding = L.fillArray(I.labelPadding, t, Number)
            }), h(0, t, "labelSize", function() {
                return this._button.text.fontSize
            }, function(t) {
                this._button.text.fontSize = t
            }), h(0, t, "labelFont", function() {
                return this._button.text.font
            }, function(t) {
                this._button.text.font = t
            }), h(0, t, "stateNum", function() {
                return this._button.stateNum
            }, function(t) {
                this._button.stateNum = t
            }), e
        }(T),
        X = function(i) {
            function e(t) {
                this.rollRatio = .95, this.changeHandler = null, this.scaleBar = !0, this.autoHide = !1, this.elasticDistance = 0, this.elasticBackTime = 500, this.upButton = null, this.downButton = null, this.slider = null, this._scrollSize = 1, this._skin = null, this._thumbPercent = 1, this._target = null, this._lastPoint = null, this._lastOffset = 0, this._checkElastic = !1, this._isElastic = !1, this._value = NaN, this._hide = !1, this._clickOnly = !0, this._offsets = null, e.__super.call(this), this._showButtons = M.showButtons, this._touchScrollEnable = M.touchScrollEnable, this._mouseWheelEnable = M.mouseWheelEnable, this.skin = t, this.max = 1
            }
            n(e, "t_tl.ui.ScrollBar", i);
            var t = e.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), this.stopScroll(), this.target = null, i.prototype.destroy.call(this, t), this.upButton && this.upButton.destroy(t), this.downButton && this.downButton.destroy(t), this.slider && this.slider.destroy(t), this.upButton = this.downButton = null, this.slider = null, this.changeHandler = null, this._offsets = null
            }, t.createChildren = function() {
                this.addChild(this.slider = new E), this.addChild(this.upButton = new N), this.addChild(this.downButton = new N)
            }, t.initialize = function() {
                this.slider.showLabel = !1, this.slider.on("change", this, this.onSliderChange), this.slider.setSlider(0, 0, 0), this.upButton.on("mousedown", this, this.onButtonMouseDown), this.downButton.on("mousedown", this, this.onButtonMouseDown)
            }, t.onSliderChange = function() {
                this._value != this.slider.value && (this.value = this.slider.value)
            }, t.onButtonMouseDown = function(t) {
                var i = t.currentTarget === this.upButton;
                this.slide(i), p.timer.once(I.scrollBarDelayTime, this, this.startLoop, [i]), p.stage.once("mouseup", this, this.onStageMouseUp)
            }, t.startLoop = function(t) {
                p.timer.frameLoop(1, this, this.slide, [t])
            }, t.slide = function(t) {
                t ? this.value -= this._scrollSize : this.value += this._scrollSize
            }, t.onStageMouseUp = function(t) {
                p.timer.clear(this, this.startLoop), p.timer.clear(this, this.slide)
            }, t.changeScrollBar = function() {
                this.upButton.visible = this._showButtons, this.downButton.visible = this._showButtons, this._showButtons && (this.upButton.skin = this._skin.replace(".png", "$up.png"), this.downButton.skin = this._skin.replace(".png", "$down.png")), this.slider.isVertical ? this.slider.y = this._showButtons ? this.upButton.height : 0 : this.slider.x = this._showButtons ? this.upButton.width : 0, this.resetPositions(), this.repaint()
            }, t.changeSize = function() {
                i.prototype.changeSize.call(this), this.repaint(), this.resetPositions(), this.event("change"), this.changeHandler && this.changeHandler.runWith(this.value)
            }, t.resetPositions = function() {
                this.slider.isVertical ? this.slider.height = this.height - (this._showButtons ? this.upButton.height + this.downButton.height : 0) : this.slider.width = this.width - (this._showButtons ? this.upButton.width + this.downButton.width : 0), this.resetButtonPosition()
            }, t.resetButtonPosition = function() {
                this.slider.isVertical ? this.downButton.y = this.slider.y + this.slider.height : this.downButton.x = this.slider.x + this.slider.width
            }, t.setScroll = function(t, i, e) {
                this.runCallLater(this.changeSize), this.slider.setSlider(t, i, e), this.slider.bar.visible = 0 < i, !this._hide && this.autoHide && (this.visible = !1)
            }, t.onTargetMouseWheel = function(t) {
                this.value -= t.delta * this._scrollSize, this.target = this._target
            }, t.onTargetMouseDown = function(t) {
                this._clickOnly = !0, this._lastOffset = 0, this._checkElastic = !1, this._lastPoint || (this._lastPoint = new m), this._lastPoint.setTo(p.stage.mouseX, p.stage.mouseY), p.timer.clear(this, this.tweenMove), w.clearTween(this), p.stage.once("mouseup", this, this.onStageMouseUp2), p.stage.once("mouseout", this, this.onStageMouseUp2), p.timer.frameLoop(1, this, this.loop)
            }, t.loop = function() {
                var t = p.stage.mouseY,
                    i = p.stage.mouseX;
                if (this._lastOffset = this.isVertical ? t - this._lastPoint.y : i - this._lastPoint.x, this._clickOnly) {
                    if (!(1 < Math.abs(this._lastOffset * (this.isVertical ? p.stage._canvasTransform.getScaleY() : p.stage._canvasTransform.getScaleX())))) return;
                    this._clickOnly = !1, this._offsets || (this._offsets = []), this._offsets.length = 0, this._target.mouseEnabled = !1, !this.hide && this.autoHide && (this.alpha = 1, this.visible = !0), this.event("start")
                }
                this._offsets.push(this._lastOffset), this._lastPoint.x = i, this._lastPoint.y = t, 0 !== this._lastOffset && (this._checkElastic || (0 < this.elasticDistance ? this._checkElastic || 0 == this._lastOffset || (0 < this._lastOffset && this._value <= this.min || this._lastOffset < 0 && this._value >= this.max ? (this._isElastic = !0, this._checkElastic = !0) : this._isElastic = !1) : this._checkElastic = !0), this._isElastic ? this._value <= this.min ? this.value -= this._lastOffset * Math.max(0, 1 - (this.min - this._value) / this.elasticDistance) : this._value >= this.max && (this.value -= this._lastOffset * Math.max(0, 1 - (this._value - this.max) / this.elasticDistance)) : this.value -= this._lastOffset)
            }, t.onStageMouseUp2 = function(t) {
                if (p.stage.off("mouseup", this, this.onStageMouseUp2), p.stage.off("mouseout", this, this.onStageMouseUp2), p.timer.clear(this, this.loop), !(this._clickOnly && this._value >= this.min && this._value <= this.max))
                    if (this._target.mouseEnabled = !0, this._isElastic) this._value < this.min ? w.to(this, {
                        value: this.min
                    }, this.elasticBackTime, r.sineOut, _.create(this, this.elasticOver)) : this._value > this.max && w.to(this, {
                        value: this.max
                    }, this.elasticBackTime, r.sineOut, _.create(this, this.elasticOver));
                    else {
                        if (!this._offsets) return;
                        this._offsets.length < 1 && (this._offsets[0] = this.isVertical ? p.stage.mouseY - this._lastPoint.y : p.stage.mouseX - this._lastPoint.x);
                        for (var i = 0, e = Math.min(this._offsets.length, 3), s = 0; s < e; s++) i += this._offsets[this._offsets.length - 1 - s];
                        if (this._lastOffset = i / e, (i = Math.abs(this._lastOffset)) < 2) return void this.event("end");
                        60 < i && (this._lastOffset = 0 < this._lastOffset ? 60 : -60);
                        var h = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 240)));
                        p.timer.frameLoop(1, this, this.tweenMove, [h])
                    }
            }, t.elasticOver = function() {
                this._isElastic = !1, !this.hide && this.autoHide && w.to(this, {
                    alpha: 0
                }, 500), this.event("end")
            }, t.tweenMove = function(t) {
                this._lastOffset *= this.rollRatio;
                var i = NaN;
                if (0 < t && (0 < this._lastOffset && this.value <= this.min ? (this._isElastic = !0, i = .5 * -(this.min - t - this.value), this._lastOffset > i && (this._lastOffset = i)) : this._lastOffset < 0 && this.value >= this.max && (this._isElastic = !0, i = .5 * -(this.max + t - this.value), this._lastOffset < i && (this._lastOffset = i))), this.value -= this._lastOffset, Math.abs(this._lastOffset) < 1) {
                    if (p.timer.clear(this, this.tweenMove), this._isElastic) return void(this._value < this.min ? w.to(this, {
                        value: this.min
                    }, this.elasticBackTime, r.sineOut, _.create(this, this.elasticOver)) : this._value > this.max ? w.to(this, {
                        value: this.max
                    }, this.elasticBackTime, r.sineOut, _.create(this, this.elasticOver)) : this.elasticOver());
                    this.event("end"), !this.hide && this.autoHide && w.to(this, {
                        alpha: 0
                    }, 500)
                }
            }, t.stopScroll = function() {
                this.onStageMouseUp2(null), p.timer.clear(this, this.tweenMove), w.clearTween(this)
            }, h(0, t, "measureHeight", function() {
                return this.slider.isVertical ? 100 : this.slider.height
            }), h(0, t, "skin", function() {
                return this._skin
            }, function(t) {
                this._skin != t && (this._skin = t, this.slider.skin = this._skin, this.callLater(this.changeScrollBar))
            }), h(0, t, "max", function() {
                return this.slider.max
            }, function(t) {
                this.slider.max = t
            }), h(0, t, "showButtons", function() {
                return this._showButtons
            }, function(t) {
                this._showButtons = t, this.callLater(this.changeScrollBar)
            }), h(0, t, "measureWidth", function() {
                return this.slider.isVertical ? this.slider.width : 100
            }), h(0, t, "min", function() {
                return this.slider.min
            }, function(t) {
                this.slider.min = t
            }), h(0, t, "value", function() {
                return this._value
            }, function(t) {
                t !== this._value && (this._value = t, this._isElastic || (this.slider._value != t && (this.slider._value = t, this.slider.changeValue()), this._value = this.slider._value), this.event("change"), this.changeHandler && this.changeHandler.runWith(this._value))
            }), h(0, t, "isVertical", function() {
                return this.slider.isVertical
            }, function(t) {
                this.slider.isVertical = t
            }), h(0, t, "sizeGrid", function() {
                return this.slider.sizeGrid
            }, function(t) {
                this.slider.sizeGrid = t
            }), h(0, t, "scrollSize", function() {
                return this._scrollSize
            }, function(t) {
                this._scrollSize = t
            }), h(0, t, "dataSource", i.prototype._$get_dataSource, function(t) {
                "number" == typeof(this._dataSource = t) || "string" == typeof t ? this.value = Number(t) : p.superSet(T, this, "dataSource", t)
            }), h(0, t, "thumbPercent", function() {
                return this._thumbPercent
            }, function(t) {
                this.runCallLater(this.changeScrollBar), this.runCallLater(this.changeSize), t = 1 <= t ? .99 : t, this._thumbPercent = t, this.scaleBar && (this.slider.isVertical ? this.slider.bar.height = Math.max(this.slider.height * t, I.scrollBarMinNum) : this.slider.bar.width = Math.max(this.slider.width * t, I.scrollBarMinNum))
            }), h(0, t, "target", function() {
                return this._target
            }, function(t) {
                this._target && (this._target.off("mousewheel", this, this.onTargetMouseWheel), this._target.off("mousedown", this, this.onTargetMouseDown)), (this._target = t) && (this._mouseWheelEnable && this._target.on("mousewheel", this, this.onTargetMouseWheel), this._touchScrollEnable && this._target.on("mousedown", this, this.onTargetMouseDown))
            }), h(0, t, "hide", function() {
                return this._hide
            }, function(t) {
                this._hide = t, this.visible = !t
            }), h(0, t, "touchScrollEnable", function() {
                return this._touchScrollEnable
            }, function(t) {
                this._touchScrollEnable = t, this.target = this._target
            }), h(0, t, "mouseWheelEnable", function() {
                return this._mouseWheelEnable
            }, function(t) {
                this._mouseWheelEnable = t
            }), h(0, t, "tick", function() {
                return this.slider.tick
            }, function(t) {
                this.slider.tick = t
            }), e
        }(T),
        E = function(i) {
            function e(t) {
                this.changeHandler = null, this.isVertical = !0, this.showLabel = !0, this._allowClickBack = !1, this._max = 100, this._min = 0, this._tick = 1, this._value = 0, this._skin = null, this._bg = null, this._progress = null, this._bar = null, this._tx = NaN, this._ty = NaN, this._maxMove = NaN, this._globalSacle = null, e.__super.call(this), this.skin = t
            }
            n(e, "t_tl.ui.Slider", i);
            var t = e.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._bg && this._bg.destroy(t), this._bar && this._bar.destroy(t), this._progress && this._progress.destroy(t), this._bg = null, this._bar = null, this._progress = null, this.changeHandler = null
            }, t.createChildren = function() {
                this.addChild(this._bg = new V), this.addChild(this._bar = new N)
            }, t.initialize = function() {
                this._bar.on("mousedown", this, this.onBarMouseDown), this._bg.sizeGrid = this._bar.sizeGrid = "4,4,4,4,0", this._progress && (this._progress.sizeGrid = this._bar.sizeGrid), this.allowClickBack = !0
            }, t.onBarMouseDown = function(t) {
                this._globalSacle || (this._globalSacle = new m), this._globalSacle.setTo(this.globalScaleX || .01, this.globalScaleY || .01), this._maxMove = this.isVertical ? this.height - this._bar.height : this.width - this._bar.width, this._tx = p.stage.mouseX, this._ty = p.stage.mouseY, p.stage.on("mousemove", this, this.mouseMove), p.stage.once("mouseup", this, this.mouseUp), p.stage.once("mouseout", this, this.mouseUp), this.showValueText()
            }, t.showValueText = function() {
                if (this.showLabel) {
                    var t = t_tl.ui.Slider.label;
                    this.addChild(t), t.textField.changeText(this._value + ""), this.isVertical ? (t.x = this._bar.x + 20, t.y = .5 * (this._bar.height - t.height) + this._bar.y) : (t.y = this._bar.y - 20, t.x = .5 * (this._bar.width - t.width) + this._bar.x)
                }
            }, t.hideValueText = function() {
                t_tl.ui.Slider.label && t_tl.ui.Slider.label.removeSelf()
            }, t.mouseUp = function(t) {
                p.stage.off("mousemove", this, this.mouseMove), p.stage.off("mouseup", this, this.mouseUp), p.stage.off("mouseout", this, this.mouseUp), this.sendChangeEvent("changed"), this.hideValueText()
            }, t.mouseMove = function(t) {
                var i = this._value;
                this.isVertical ? (this._bar.y += (p.stage.mouseY - this._ty) / this._globalSacle.y, this._bar.y > this._maxMove ? this._bar.y = this._maxMove : this._bar.y < 0 && (this._bar.y = 0), this._value = this._bar.y / this._maxMove * (this._max - this._min) + this._min, this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x += (p.stage.mouseX - this._tx) / this._globalSacle.x, this._bar.x > this._maxMove ? this._bar.x = this._maxMove : this._bar.x < 0 && (this._bar.x = 0), this._value = this._bar.x / this._maxMove * (this._max - this._min) + this._min, this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width)), this._tx = p.stage.mouseX, this._ty = p.stage.mouseY;
                var e = Math.pow(10, (this._tick + "").length - 1);
                this._value = Math.round(Math.round(this._value / this._tick) * this._tick * e) / e, this._value != i && this.sendChangeEvent(), this.showValueText()
            }, t.sendChangeEvent = function(t) {
                void 0 === t && (t = "change"), this.event(t), this.changeHandler && this.changeHandler.runWith(this._value)
            }, t.setBarPoint = function() {
                this.isVertical ? this._bar.x = Math.round(.5 * (this._bg.width - this._bar.width)) : this._bar.y = Math.round(.5 * (this._bg.height - this._bar.height))
            }, t.changeSize = function() {
                i.prototype.changeSize.call(this), this.isVertical ? this._bg.height = this.height : this._bg.width = this.width, this.setBarPoint(), this.changeValue()
            }, t.setSlider = function(t, i, e) {
                this._value = -1, this._min = t, this._max = t < i ? i : t, this.value = e < t ? t : i < e ? i : e
            }, t.changeValue = function() {
                var t = Math.pow(10, (this._tick + "").length - 1);
                this._value = Math.round(Math.round(this._value / this._tick) * this._tick * t) / t, this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value;
                var i = this._max - this._min;
                0 === i && (i = 1), this.isVertical ? (this._bar.y = (this._value - this._min) / i * (this.height - this._bar.height), this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x = (this._value - this._min) / i * (this.width - this._bar.width), this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width))
            }, t.onBgMouseDown = function(t) {
                var i = this._bg.getMousePoint();
                this.isVertical ? this.value = i.y / (this.height - this._bar.height) * (this._max - this._min) + this._min : this.value = i.x / (this.width - this._bar.width) * (this._max - this._min) + this._min
            }, h(0, t, "measureHeight", function() {
                return Math.max(this._bg.height, this._bar.height)
            }), h(0, t, "skin", function() {
                return this._skin
            }, function(t) {
                if (this._skin != t) {
                    this._skin = t, this._bg.skin = this._skin, this._bar.skin = this._skin.replace(".png", "$bar.png");
                    var i = this._skin.replace(".png", "$progress.png");
                    f.getRes(i) && (this._progress || (this.addChild(this._progress = new V), this._progress.sizeGrid = this._bar.sizeGrid, this.setChildIndex(this._progress, 1)), this._progress.skin = i), this.setBarPoint(), this.callLater(this.changeValue)
                }
            }), h(0, t, "allowClickBack", function() {
                return this._allowClickBack
            }, function(t) {
                this._allowClickBack != t && ((this._allowClickBack = t) ? this._bg.on("mousedown", this, this.onBgMouseDown) : this._bg.off("mousedown", this, this.onBgMouseDown))
            }), h(0, t, "max", function() {
                return this._max
            }, function(t) {
                this._max != t && (this._max = t, this.callLater(this.changeValue))
            }), h(0, t, "measureWidth", function() {
                return Math.max(this._bg.width, this._bar.width)
            }), h(0, t, "tick", function() {
                return this._tick
            }, function(t) {
                this._tick != t && (this._tick = t, this.callLater(this.changeValue))
            }), h(0, t, "sizeGrid", function() {
                return this._bg.sizeGrid
            }, function(t) {
                this._bg.sizeGrid = t, this._bar.sizeGrid = t, this._progress && (this._progress.sizeGrid = this._bar.sizeGrid)
            }), h(0, t, "min", function() {
                return this._min
            }, function(t) {
                this._min != t && (this._min = t, this.callLater(this.changeValue))
            }), h(0, t, "value", function() {
                return this._value
            }, function(t) {
                if (this._value != t) {
                    var i = this._value;
                    this._value = t, this.changeValue(), this._value != i && this.sendChangeEvent()
                }
            }), h(0, t, "dataSource", i.prototype._$get_dataSource, function(t) {
                "number" == typeof(this._dataSource = t) || "string" == typeof t ? this.value = Number(t) : p.superSet(T, this, "dataSource", t)
            }), h(0, t, "bar", function() {
                return this._bar
            }), s(e, ["label", function() {
                return this.label = new D
            }]), e
        }(T),
        V = function(i) {
            function e(t) {
                this._bitmap = null, this._skin = null, this._group = null, e.__super.call(this), this.skin = t
            }
            n(e, "t_tl.ui.Image", i);
            var t = e.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, !0), this._bitmap && this._bitmap.destroy(), this._bitmap = null
            }, t.dispose = function() {
                this.destroy(!0), p.loader.clearRes(this._skin)
            }, t.createChildren = function() {
                this.graphics = this._bitmap = new z, this._bitmap.autoCacheCmd = !1
            }, t.setSource = function(t, i) {
                t === this._skin && i && (this.source = i, this.onCompResize())
            }, h(0, t, "source", function() {
                return this._bitmap.source
            }, function(t) {
                this._bitmap && (this._bitmap.source = t, this.event("loaded"), this.repaint())
            }), h(0, t, "dataSource", i.prototype._$get_dataSource, function(t) {
                "string" == typeof(this._dataSource = t) ? this.skin = t: p.superSet(T, this, "dataSource", t)
            }), h(0, t, "measureHeight", function() {
                return this._bitmap.height
            }), h(0, t, "skin", function() {
                return this._skin
            }, function(t) {
                if (this._skin != t)
                    if (this._skin = t) {
                        var i = f.getRes(t);
                        i ? (this.source = i, this.onCompResize()) : p.loader.load(this._skin, _.create(this, this.setSource, [this._skin]), null, "image", 1, !0, this._group)
                    } else this.source = null
            }), h(0, t, "group", function() {
                return this._group
            }, function(t) {
                t && this._skin && f.setGroup(this._skin, t), this._group = t
            }), h(0, t, "sizeGrid", function() {
                return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null
            }, function(t) {
                this._bitmap.sizeGrid = L.fillArray(I.defaultSizeGrid, t, Number)
            }), h(0, t, "measureWidth", function() {
                return this._bitmap.width
            }), h(0, t, "width", i.prototype._$get_width, function(t) {
                p.superSet(T, this, "width", t), this._bitmap.width = 0 == t ? 1e-7 : t
            }), h(0, t, "height", i.prototype._$get_height, function(t) {
                p.superSet(T, this, "height", t), this._bitmap.height = 0 == t ? 1e-7 : t
            }), e
        }(T),
        D = function(i) {
            function e(t) {
                this._tf = null, e.__super.call(this), void 0 === t && (t = ""), a.defaultColor = I.labelColor, this.text = t
            }
            n(e, "t_tl.ui.Label", i);
            var t = e.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._tf = null
            }, t.createChildren = function() {
                this.addChild(this._tf = new b)
            }, t.changeText = function(t) {
                this._tf.changeText(t)
            }, h(0, t, "padding", function() {
                return this._tf.padding.join(",")
            }, function(t) {
                this._tf.padding = L.fillArray(I.labelPadding, t, Number)
            }), h(0, t, "bold", function() {
                return this._tf.bold
            }, function(t) {
                this._tf.bold = t
            }), h(0, t, "align", function() {
                return this._tf.align
            }, function(t) {
                this._tf.align = t
            }), h(0, t, "text", function() {
                return this._tf.text
            }, function(t) {
                this._tf.text != t && (t && (t = L.adptString(t + "")), this._tf.text = t, this.event("change"), this._width && this._height || this.onCompResize())
            }), h(0, t, "italic", function() {
                return this._tf.italic
            }, function(t) {
                this._tf.italic = t
            }), h(0, t, "wordWrap", function() {
                return this._tf.wordWrap
            }, function(t) {
                this._tf.wordWrap = t
            }), h(0, t, "font", function() {
                return this._tf.font
            }, function(t) {
                this._tf.font = t
            }), h(0, t, "dataSource", i.prototype._$get_dataSource, function(t) {
                "number" == typeof(this._dataSource = t) || "string" == typeof t ? this.text = t + "" : p.superSet(T, this, "dataSource", t)
            }), h(0, t, "color", function() {
                return this._tf.color
            }, function(t) {
                this._tf.color = t
            }), h(0, t, "valign", function() {
                return this._tf.valign
            }, function(t) {
                this._tf.valign = t
            }), h(0, t, "leading", function() {
                return this._tf.leading
            }, function(t) {
                this._tf.leading = t
            }), h(0, t, "fontSize", function() {
                return this._tf.fontSize
            }, function(t) {
                this._tf.fontSize = t
            }), h(0, t, "bgColor", function() {
                return this._tf.bgColor
            }, function(t) {
                this._tf.bgColor = t
            }), h(0, t, "borderColor", function() {
                return this._tf.borderColor
            }, function(t) {
                this._tf.borderColor = t
            }), h(0, t, "stroke", function() {
                return this._tf.stroke
            }, function(t) {
                this._tf.stroke = t
            }), h(0, t, "strokeColor", function() {
                return this._tf.strokeColor
            }, function(t) {
                this._tf.strokeColor = t
            }), h(0, t, "textField", function() {
                return this._tf
            }), h(0, t, "measureWidth", function() {
                return this._tf.width
            }), h(0, t, "measureHeight", function() {
                return this._tf.height
            }), h(0, t, "width", function() {
                return this._width || this._tf.text ? p.superGet(T, this, "width") : 0
            }, function(t) {
                p.superSet(T, this, "width", t), this._tf.width = t
            }), h(0, t, "height", function() {
                return this._height || this._tf.text ? p.superGet(T, this, "height") : 0
            }, function(t) {
                p.superSet(T, this, "height", t), this._tf.height = t
            }), h(0, t, "overflow", function() {
                return this._tf.overflow
            }, function(t) {
                this._tf.overflow = t
            }), h(0, t, "underline", function() {
                return this._tf.underline
            }, function(t) {
                this._tf.underline = t
            }), h(0, t, "underlineColor", function() {
                return this._tf.underlineColor
            }, function(t) {
                this._tf.underlineColor = t
            }), e
        }(T),
        G = function(i) {
            function e(t) {
                this.changeHandler = null, this._bg = null, this._bar = null, this._skin = null, this._value = .5, e.__super.call(this), this.skin = t
            }
            n(e, "t_tl.ui.ProgressBar", i);
            var t = e.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._bg && this._bg.destroy(t), this._bar && this._bar.destroy(t), this._bg = this._bar = null, this.changeHandler = null
            }, t.createChildren = function() {
                this.addChild(this._bg = new V), this.addChild(this._bar = new V), this._bar._bitmap.autoCacheCmd = !1
            }, t.changeValue = function() {
                if (this.sizeGrid) {
                    var t = this.sizeGrid.split(","),
                        i = Number(t[3]),
                        e = Number(t[1]),
                        s = (this.width - i - e) * this._value;
                    this._bar.width = i + e + s, this._bar.visible = this._bar.width > i + e
                } else this._bar.width = this.width * this._value
            }, h(0, t, "measureHeight", function() {
                return this._bg.height
            }), h(0, t, "skin", function() {
                return this._skin
            }, function(t) {
                this._skin != t && (this._skin = t, this._bg.skin = this._skin, this._bar.skin = this._skin.replace(".png", "$bar.png"), this.callLater(this.changeValue))
            }), h(0, t, "measureWidth", function() {
                return this._bg.width
            }), h(0, t, "height", i.prototype._$get_height, function(t) {
                p.superSet(T, this, "height", t), this._bg.height = this._height, this._bar.height = this._height
            }), h(0, t, "bar", function() {
                return this._bar
            }), h(0, t, "value", function() {
                return this._value
            }, function(t) {
                this._value != t && (t = 1 < t ? 1 : t < 0 ? 0 : t, this._value = t, this.callLater(this.changeValue), this.event("change"), this.changeHandler && this.changeHandler.runWith(t))
            }), h(0, t, "bg", function() {
                return this._bg
            }), h(0, t, "sizeGrid", function() {
                return this._bg.sizeGrid
            }, function(t) {
                this._bg.sizeGrid = this._bar.sizeGrid = t
            }), h(0, t, "width", i.prototype._$get_width, function(t) {
                p.superSet(T, this, "width", t), this._bg.width = this._width, this.callLater(this.changeValue)
            }), h(0, t, "dataSource", i.prototype._$get_dataSource, function(t) {
                "number" == typeof(this._dataSource = t) || "string" == typeof t ? this.value = Number(t) : p.superSet(T, this, "dataSource", t)
            }), e
        }(T),
        R = (function(t) {
            function e() {
                this._tipBox = null, this._tipText = null, this._defaultTipHandler = null, e.__super.call(this), this._tipBox = new T, this._tipBox.addChild(this._tipText = new b), this._tipText.x = this._tipText.y = 5, this._tipText.color = e.tipTextColor, this._defaultTipHandler = this._showDefaultTip, p.stage.on("showtip", this, this._onStageShowTip), p.stage.on("hidetip", this, this._onStageHideTip), this.zOrder = 1100
            }
            n(e, "t_tl.ui.TipManager", T);
            var i = e.prototype;
            i._onStageHideTip = function(t) {
                p.timer.clear(this, this._showTip), this.closeAll(), this.removeSelf()
            }, i._onStageShowTip = function(t) {
                p.timer.once(e.tipDelay, this, this._showTip, [t], !0)
            }, i._showTip = function(t) {
                if ("string" == typeof t) {
                    var i = String(t);
                    Boolean(i) && this._defaultTipHandler(i)
                } else t instanceof t_tl.utils.Handler ? t.run() : "function" == typeof t && t.apply();
                p.stage.on("mousemove", this, this._onStageMouseMove), p.stage.on("mousedown", this, this._onStageMouseDown), this._onStageMouseMove(null)
            }, i._onStageMouseDown = function(t) {
                this.closeAll()
            }, i._onStageMouseMove = function(t) {
                this._showToStage(this, e.offsetX, e.offsetY)
            }, i._showToStage = function(t, i, e) {
                void 0 === i && (i = 0), void 0 === e && (e = 0);
                var s = t.getBounds();
                t.x = p.stage.mouseX + i, t.y = p.stage.mouseY + e, t.x + s.width > p.stage.width && (t.x -= s.width + i), t.y + s.height > p.stage.height && (t.y -= s.height + e)
            }, i.closeAll = function() {
                p.timer.clear(this, this._showTip), p.stage.off("mousemove", this, this._onStageMouseMove), p.stage.off("mousedown", this, this._onStageMouseDown), this.removeChildren()
            }, i.showDislayTip = function(t) {
                this.addChild(t), this._showToStage(this), p._currentStage.addChild(this)
            }, i._showDefaultTip = function(t) {
                this._tipText.text = t;
                var i = this._tipBox.graphics;
                i.clear(), i.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, e.tipBackColor), this.addChild(this._tipBox), this._showToStage(this), p._currentStage.addChild(this)
            }, h(0, i, "defaultTipHandler", function() {
                return this._defaultTipHandler
            }, function(t) {
                this._defaultTipHandler = t
            }), e.offsetX = 10, e.offsetY = 15, e.tipTextColor = "#ffffff", e.tipBackColor = "#111111", e.tipDelay = 200
        }(), function(t) {
            var d;

            function f() {
                this._idMap = null, this._aniList = null, this._watchMap = {}, f.__super.call(this)
            }
            n(f, "t_tl.ui.View", H);
            var i = f.prototype;
            return i.createView = function(t) {
                if (t.animations && !this._idMap && (this._idMap = {}), f.createComp(t, this, this), t.animations) {
                    var i, e, s = [],
                        h = t.animations,
                        n = 0,
                        o = h.length;
                    for (n = 0; n < o; n++) {
                        switch (i = new c, e = h[n], i._setUp(this._idMap, e), (this[e.name] = i)._setControlNode(this), e.action) {
                            case 1:
                                i.play(0, !1);
                                break;
                            case 2:
                                i.play(0, !0)
                        }
                        s.push(i)
                    }
                    this._aniList = s
                }
                0 < this._width && null == t.props.hitTestPrior && !this.mouseThrough && (this.hitTestPrior = !0)
            }, i.onEvent = function(t, i) {}, i.loadUI = function(t) {
                var i = f.uiMap[t];
                i && this.createView(i)
            }, i.destroy = function(t) {
                void 0 === t && (t = !0), this._aniList && (this._aniList.length = 0), this._idMap = null, this._aniList = null, this._watchMap = null, t_tl.ui.Component.prototype.destroy.call(this, t)
            }, i.changeData = function(t) {
                var i = this._watchMap[t];
                if (i) {
                    console.log("change", t);
                    for (var e = 0, s = i.length; e < s; e++) {
                        i[e].exe(this)
                    }
                }
            }, f._regs = function() {
                for (var t in f.uiClassMap) g.regClass(t, f.uiClassMap[t])
            }, f.createComp = function(t, i, e, s) {
                if (!(i = i || f.getCompInstance(t))) return console.warn("can not create:" + t.type), null;
                var h = t.child;
                if (h)
                    for (var n = i instanceof t_tl.ui.List, o = 0, r = h.length; o < r; o++) {
                        var l = h[o];
                        if (!i.hasOwnProperty("itemRender") || "render" != l.props.name && "render" !== l.props.renderType)
                            if ("Graphic" == l.type) g.addGraphicsToSprite(l, i);
                            else if (g.isDrawType(l.type)) g.addGraphicToSprite(l, i, !0);
                        else {
                            if (n) {
                                var a = [],
                                    c = f.createComp(l, null, e, a);
                                a.length && (c._$bindData = a)
                            } else c = f.createComp(l, null, e, s);
                            "Script" == l.type ? "owner" in c ? c.owner = i : "target" in c && (c.target = i) : "mask" == l.props.renderType || "mask" == l.props.name ? i.mask = c : c instanceof t_tl.display.Sprite && i.addChild(c)
                        } else i.itemRender = l
                    }
                var u = t.props;
                for (var _ in u) {
                    var d = u[_];
                    f.eventDic[_] ? d && e && i.on(_, e, e.onEvent, [d]) : f.setCompValue(i, _, d, e, s)
                }
                return p.__typeof(i, "t_tl.ui.IItem") && i.initItems(), t.compId && e && e._idMap && (e._idMap[t.compId] = i), i
            }, f.setCompValue = function(t, i, e, s, h) {
                if ("string" == typeof e && -1 < e.indexOf("${")) {
                    if (f._sheet || (f._sheet = g.getClass("t_tl.data.Table")), !f._sheet) return void console.warn("Can not find class Sheet");
                    if (h) h.push(t, i, e);
                    else if (s) {
                        -1 == e.indexOf("].") && (e = e.replace(".", "[0]."));
                        var n, o, r = new d(t, i, e);
                        r.exe(s);
                        for (var l = e.replace(/\[.*?\]\./g, "."); null != (n = f._parseWatchData.exec(l));) {
                            for (var a = n[1]; null != (o = f._parseKeyWord.exec(a));) {
                                var c = o[0],
                                    u = s._watchMap[c] || (s._watchMap[c] = []);
                                u.push(r), f._sheet.I.notifer.on(c, s, s.changeData, [c])
                            }(u = s._watchMap[a] || (s._watchMap[a] = [])).push(r), f._sheet.I.notifer.on(a, s, s.changeData, [a])
                        }
                    }
                } else if ("var" === i && s) s[e] = t;
                else if ("onClick" == i) {
                    var _ = p._runScript("(function(){" + e + "})");
                    t.on("click", s, _)
                } else t[i] = "true" === e || "false" !== e && e
            }, f.getCompInstance = function(t) {
                var i, e = t.props ? t.props.runtime : null;
                return i = e ? f.viewClassMap[e] || f.uiClassMap[e] || p.__classmap[e] : f.uiClassMap[t.type], t.props && t.props.hasOwnProperty("renderType") && "instance" == t.props.renderType ? i.instance : i ? new i : null
            }, f.regComponent = function(t, i) {
                f.uiClassMap[t] = i, g.regClass(t, i)
            }, f.regViewRuntime = function(t, i) {
                f.viewClassMap[t] = i
            }, f.uiMap = {}, f.viewClassMap = {}, f._sheet = null, s(f, ["uiClassMap", function() {
                return this.uiClassMap = {
                    ViewStack: tt,
                    LinkButton: N,
                    TextArea: at,
                    ColorPicker: A,
                    Box: H,
                    Button: N,
                    CheckBox: W,
                    Clip: O,
                    ComboBox: Y,
                    Component: T,
                    HScrollBar: j,
                    HSlider: Z,
                    Image: V,
                    Label: D,
                    List: U,
                    Panel: K,
                    ProgressBar: G,
                    Radio: J,
                    RadioGroup: rt,
                    ScrollBar: X,
                    Slider: E,
                    Tab: lt,
                    TextInput: et,
                    View: f,
                    VScrollBar: it,
                    VSlider: st,
                    Tree: Q,
                    HBox: nt,
                    VBox: ot,
                    Sprite: C,
                    Animation: e,
                    Text: b,
                    FontClip: F
                }
            }, "eventDic", function() {
                return this.eventDic = {
                    mousedown: !0,
                    mouseup: !0,
                    mousemove: !0,
                    mouseover: !0,
                    mouseout: !0,
                    click: !0,
                    doubleclick: !0,
                    rightmousedown: !0,
                    rightmouseup: !0,
                    rightclick: !0
                }
            }, "_parseWatchData", function() {
                return this._parseWatchData = /\${(.*?)}/g
            }, "_parseKeyWord", function() {
                return this._parseKeyWord = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g
            }]), f.__init$ = function() {
                f._regs(), d = function() {
                    function t(t, i, e) {
                        this.comp = null, this.prop = null, this.value = null, this.comp = t, this.prop = i, this.value = e
                    }
                    return n(t, ""), t.prototype.exe = function(t) {
                        var i = L.getBindFun(this.value);
                        this.comp[this.prop] = i.call(this, t)
                    }, t
                }()
            }, f
        }()),
        W = function(t) {
            function e(t, i) {
                void 0 === i && (i = ""), e.__super.call(this, t, i)
            }
            n(e, "t_tl.ui.CheckBox", t);
            var i = e.prototype;
            return i.preinitialize = function() {
                t_tl.ui.Component.prototype.preinitialize.call(this), this.toggle = !0, this._autoSize = !1
            }, i.initialize = function() {
                t.prototype.initialize.call(this), this.createText(), this._text.align = "left", this._text.valign = "top", this._text.width = 0
            }, h(0, i, "dataSource", t.prototype._$get_dataSource, function(t) {
                "boolean" == typeof(this._dataSource = t) ? this.selected = t: "string" == typeof t ? this.selected = "true" === t : p.superSet(N, this, "dataSource", t)
            }), e
        }(N),
        $ = function(t) {
            function i() {
                this._space = 0, this._align = "none", this._itemChanged = !1, i.__super.call(this)
            }
            n(i, "t_tl.ui.LayoutBox", H);
            var e = i.prototype;
            return e.addChild = function(t) {
                return t.on("resize", this, this.onResize), this._setItemChanged(), t_tl.display.Node.prototype.addChild.call(this, t)
            }, e.onResize = function(t) {
                this._setItemChanged()
            }, e.addChildAt = function(t, i) {
                return t.on("resize", this, this.onResize), this._setItemChanged(), t_tl.display.Node.prototype.addChildAt.call(this, t, i)
            }, e.removeChild = function(t) {
                return t.off("resize", this, this.onResize), this._setItemChanged(), t_tl.display.Node.prototype.removeChild.call(this, t)
            }, e.removeChildAt = function(t) {
                return this.getChildAt(t).off("resize", this, this.onResize), this._setItemChanged(), t_tl.display.Node.prototype.removeChildAt.call(this, t)
            }, e.refresh = function() {
                this._setItemChanged()
            }, e.changeItems = function() {
                this._itemChanged = !1
            }, e.sortItem = function(t) {
                t && t.sort(function(t, i) {
                    return t.y - i.y
                })
            }, e._setItemChanged = function() {
                this._itemChanged || (this._itemChanged = !0, this.callLater(this.changeItems))
            }, h(0, e, "space", function() {
                return this._space
            }, function(t) {
                this._space = t, this._setItemChanged()
            }), h(0, e, "align", function() {
                return this._align
            }, function(t) {
                this._align = t, this._setItemChanged()
            }), i
        }(),
        F = function(i) {
            function e(t, i) {
                this._valueArr = null, this._indexMap = null, this._sheet = null, this._direction = "horizontal", this._spaceX = 0, this._spaceY = 0, this._align = "left", this._wordsW = 0, this._wordsH = 0, e.__super.call(this), t && (this.skin = t), i && (this.sheet = i)
            }
            n(e, "t_tl.ui.FontClip", i);
            var t = e.prototype;
            return t.createChildren = function() {
                this._bitmap = new z, this.on("loaded", this, this._onClipLoaded)
            }, t._onClipLoaded = function() {
                this.callLater(this.changeValue)
            }, t.changeValue = function() {
                var t;
                if (this._sources && (this._valueArr && (this.graphics.clear(!0), t = this._sources[0]))) {
                    var i = "horizontal" === this._direction;
                    i ? (this._wordsW = this._valueArr.length * (t.sourceWidth + this.spaceX), this._wordsH = t.sourceHeight) : (this._wordsW = t.sourceWidth, this._wordsH = (t.sourceHeight + this.spaceY) * this._valueArr.length);
                    var e = 0;
                    if (this._width) switch (this._align) {
                        case "center":
                            e = .5 * (this._width - this._wordsW);
                            break;
                        case "right":
                            e = this._width - this._wordsW;
                            break;
                        default:
                            e = 0
                    }
                    for (var s = 0, h = this._valueArr.length; s < h; s++) {
                        var n = this._indexMap[this._valueArr.charAt(s)];
                        this.sources[n] && (t = this.sources[n], i ? this.graphics.drawTexture(t, e + s * (t.sourceWidth + this.spaceX), 0, t.sourceWidth, t.sourceHeight) : this.graphics.drawTexture(t, 0 + e, s * (t.sourceHeight + this.spaceY), t.sourceWidth, t.sourceHeight))
                    }
                    this._width || (this.resetLayoutX(), this.callLater(this.changeSize)), this._height || (this.resetLayoutY(), this.callLater(this.changeSize))
                }
            }, t.destroy = function(t) {
                void 0 === t && (t = !0), this._valueArr = null, this._indexMap = null, this.graphics.clear(!0), this.removeSelf(), this.off("loaded", this, this._onClipLoaded), i.prototype.destroy.call(this, t)
            }, h(0, t, "sheet", function() {
                return this._sheet
            }, function(t) {
                t += "";
                var i = (this._sheet = t).split(" ");
                this._clipX = String(i[0]).length, this.clipY = i.length, this._indexMap = {};
                for (var e = 0; e < this._clipY; e++)
                    for (var s = i[e].split(""), h = 0, n = s.length; h < n; h++) this._indexMap[s[h]] = e * this._clipX + h
            }), h(0, t, "height", i.prototype._$get_height, function(t) {
                p.superSet(O, this, "height", t), this.callLater(this.changeValue)
            }), h(0, t, "direction", function() {
                return this._direction
            }, function(t) {
                this._direction = t, this.callLater(this.changeValue)
            }), h(0, t, "value", function() {
                return this._valueArr ? this._valueArr : ""
            }, function(t) {
                t += "", this._valueArr = t, this.callLater(this.changeValue)
            }), h(0, t, "width", i.prototype._$get_width, function(t) {
                p.superSet(O, this, "width", t), this.callLater(this.changeValue)
            }), h(0, t, "spaceX", function() {
                return this._spaceX
            }, function(t) {
                this._spaceX = t, "horizontal" === this._direction && this.callLater(this.changeValue)
            }), h(0, t, "spaceY", function() {
                return this._spaceY
            }, function(t) {
                this._spaceY = t, "horizontal" !== this._direction && this.callLater(this.changeValue)
            }), h(0, t, "align", function() {
                return this._align
            }, function(t) {
                this._align = t, this.callLater(this.changeValue)
            }), h(0, t, "measureWidth", function() {
                return this._wordsW
            }), h(0, t, "measureHeight", function() {
                return this._wordsH
            }), e
        }(O),
        U = function(t) {
            function i() {
                this.selectHandler = null, this.renderHandler = null, this.mouseHandler = null, this.selectEnable = !1, this.totalPage = 0, this._content = null, this._scrollBar = null, this._itemRender = null, this._repeatX = 0, this._repeatY = 0, this._repeatX2 = 0, this._repeatY2 = 0, this._spaceX = 0, this._spaceY = 0, this._array = null, this._startIndex = 0, this._selectedIndex = -1, this._page = 0, this._isVertical = !0, this._cellSize = 20, this._cellOffset = 0, this._isMoved = !1, this.cacheContent = !1, this._createdLine = 0, this._cellChanged = !1, i.__super.call(this), this._cells = [], this._offset = new m
            }
            n(i, "t_tl.ui.List", t);
            var e = i.prototype;
            return p.imps(e, {
                "t_tl.ui.IRender": !0,
                "t_tl.ui.IItem": !0
            }), e.destroy = function(t) {
                void 0 === t && (t = !0), this._content && this._content.destroy(t), this._scrollBar && this._scrollBar.destroy(t), t_tl.ui.Component.prototype.destroy.call(this, t), this._content = null, this._scrollBar = null, this._itemRender = null, this._cells = null, this._array = null, this.selectHandler = this.renderHandler = this.mouseHandler = null
            }, e.createChildren = function() {
                this.addChild(this._content = new H)
            }, e.onScrollStart = function() {
                this._$P.cacheAs || (this._$P.cacheAs = p.superGet(H, this, "cacheAs")), p.superSet(H, this, "cacheAs", "none"), this._scrollBar.once("end", this, this.onScrollEnd)
            }, e.onScrollEnd = function() {
                p.superSet(H, this, "cacheAs", this._$P.cacheAs)
            }, e._removePreScrollBar = function() {
                var t = this.removeChildByName("scrollBar");
                t && t.destroy(!0)
            }, e.changeCells = function() {
                if (this._cellChanged = !1, this._itemRender) {
                    this.scrollBar = this.getChildByName("scrollBar");
                    var t = this._getOneCell(),
                        i = t.width + this._spaceX || 1,
                        e = t.height + this._spaceY || 1;
                    0 < this._width && (this._repeatX2 = this._isVertical ? Math.round(this._width / i) : Math.ceil(this._width / i)), 0 < this._height && (this._repeatY2 = this._isVertical ? Math.ceil(this._height / e) : Math.round(this._height / e));
                    var s = this._width ? this._width : i * this.repeatX - this._spaceX,
                        h = this._height ? this._height : e * this.repeatY - this._spaceY;
                    this._cellSize = this._isVertical ? e : i, this._cellOffset = this._isVertical ? e * Math.max(this._repeatY2, this._repeatY) - h - this._spaceY : i * Math.max(this._repeatX2, this._repeatX) - s - this._spaceX, this._isVertical && this._scrollBar ? this._scrollBar.height = h : !this._isVertical && this._scrollBar && (this._scrollBar.width = s), this.setContentSize(s, h);
                    var n = this._isVertical ? this.repeatX : this.repeatY,
                        o = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0);
                    this._createItems(0, n, o), this._createdLine = o, this._array && (this.array = this._array, this.runCallLater(this.renderItems))
                }
            }, e._getOneCell = function() {
                if (0 === this._cells.length) {
                    var t = this.createItem();
                    if (this._offset.setTo(t.x, t.y), this.cacheContent) return t;
                    this._cells.push(t)
                }
                return this._cells[0]
            }, e._createItems = function(t, i, e) {
                var s = this._content,
                    h = this._getOneCell(),
                    n = h.width + this._spaceX,
                    o = h.height + this._spaceY;
                if (this.cacheContent) {
                    var r = new H;
                    r.cacheAsBitmap = !0, r.pos((this._isVertical ? 0 : t) * n, (this._isVertical ? t : 0) * o), this._content.addChild(r), this._content.optimizeScrollRect = !0, s = r
                } else {
                    for (var l = [], a = this._cells.length - 1; - 1 < a; a--) {
                        var c = this._cells[a];
                        c.removeSelf(), l.push(c)
                    }
                    this._cells.length = 0
                }
                for (var u = t; u < e; u++)
                    for (var _ = 0; _ < i; _++)(h = l && l.length ? l.pop() : this.createItem()).x = (this._isVertical ? _ : u) * n - s.x, h.y = (this._isVertical ? u : _) * o - s.y, h.name = "item" + (u * i + _), s.addChild(h), this.addCell(h)
            }, e.createItem = function() {
                var t = [];
                if ("function" == typeof this._itemRender) var i = new this._itemRender;
                else i = R.createComp(this._itemRender, null, null, t);
                if (0 == t.length && i._watchMap) {
                    var e = i._watchMap;
                    for (var s in e)
                        for (var h = e[s], n = 0; n < h.length; n++) {
                            var o = h[n];
                            t.push(o.comp, o.prop, o.value)
                        }
                }
                return t.length && (i._$bindData = t), i
            }, e.addCell = function(t) {
                t.on("click", this, this.onCellMouse), t.on("rightclick", this, this.onCellMouse), t.on("mouseover", this, this.onCellMouse), t.on("mouseout", this, this.onCellMouse), t.on("mousedown", this, this.onCellMouse), t.on("mouseup", this, this.onCellMouse), this._cells.push(t)
            }, e.initItems = function() {
                if (!this._itemRender && null != this.getChildByName("item0")) {
                    this.repeatX = 1;
                    for (var t = 0, i = t = 0; i < 1e4; i++) {
                        var e = this.getChildByName("item" + i);
                        if (!e) break;
                        this.addCell(e), t++
                    }
                    this.repeatY = t
                }
            }, e.setContentSize = function(t, i) {
                this._content.width = t, this._content.height = i, (this._scrollBar || 0 != this._offset.x || 0 != this._offset.y) && (this._content.scrollRect || (this._content.scrollRect = new y), this._content.scrollRect.setTo(-this._offset.x, -this._offset.y, t, i), this._content.scrollRect = this._content.scrollRect), this.event("resize")
            }, e.onCellMouse = function(t) {
                "mousedown" === t.type && (this._isMoved = !1);
                var i = t.currentTarget,
                    e = this._startIndex + this._cells.indexOf(i);
                e < 0 || ("click" === t.type || "rightclick" === t.type ? this.selectEnable && !this._isMoved ? this.selectedIndex = e : this.changeCellState(i, !0, 0) : "mouseover" !== t.type && "mouseout" !== t.type || this._selectedIndex === e || this.changeCellState(i, "mouseover" === t.type, 0), this.mouseHandler && this.mouseHandler.runWith([t, e]))
            }, e.changeCellState = function(t, i, e) {
                var s = t.getChildByName("selectBox");
                s && (this.selectEnable = !0, s.visible = i, s.index = e)
            }, e.changeSize = function() {
                t_tl.ui.Component.prototype.changeSize.call(this), this.setContentSize(this.width, this.height), this._scrollBar && this.callLater(this.onScrollBarChange)
            }, e.onScrollBarChange = function(t) {
                this.runCallLater(this.changeCells);
                var i = this._scrollBar.value,
                    e = this._isVertical ? this.repeatX : this.repeatY,
                    s = this._isVertical ? this.repeatY : this.repeatX,
                    h = Math.floor(i / this._cellSize);
                if (this.cacheContent) o = s + 1, this._createdLine - h < o && (this._createItems(this._createdLine, e, this._createdLine + o), this.renderItems(this._createdLine * e, 0), this._createdLine += o);
                else {
                    var n = h * e,
                        o = 0;
                    if (n > this._startIndex) {
                        o = n - this._startIndex;
                        var r = !0,
                            l = this._startIndex + e * (s + 1);
                        this._isMoved = !0
                    } else n < this._startIndex && (o = this._startIndex - n, r = !1, l = this._startIndex - 1, this._isMoved = !0);
                    for (var a = 0; a < o; a++) {
                        if (r) {
                            var c = this._cells.shift();
                            this._cells[this._cells.length] = c;
                            var u = l + a
                        } else c = this._cells.pop(), this._cells.unshift(c), u = l - a;
                        var _ = Math.floor(u / e) * this._cellSize;
                        this._isVertical ? c.y = _ : c.x = _, this.renderItem(c, u)
                    }
                    this._startIndex = n, this.changeSelectStatus()
                }
                var d = this._content.scrollRect;
                this._isVertical ? (d.y = i - this._offset.y, d.x = -this._offset.x) : (d.y = -this._offset.y, d.x = i - this._offset.x), this._content.scrollRect = d
            }, e.posCell = function(t, i) {
                if (this._scrollBar) {
                    var e = this._isVertical ? this.repeatX : this.repeatY,
                        s = (this._isVertical ? this.repeatY : this.repeatX, Math.floor(i / e) * this._cellSize);
                    this._isVertical ? t.y = s : t.x = s
                }
            }, e.changeSelectStatus = function() {
                for (var t = 0, i = this._cells.length; t < i; t++) this.changeCellState(this._cells[t], this._selectedIndex === this._startIndex + t, 1)
            }, e.renderItems = function(t, i) {
                void 0 === t && (t = 0), void 0 === i && (i = 0);
                for (var e = t, s = i || this._cells.length; e < s; e++) this.renderItem(this._cells[e], this._startIndex + e);
                this.changeSelectStatus()
            }, e.renderItem = function(t, i) {
                this._array && 0 <= i && i < this._array.length ? (t.visible = !0, t._$bindData ? (t._dataSource = this._array[i], this._bindData(t, this._array[i])) : t.dataSource = this._array[i], this.cacheContent || this.posCell(t, i), this.hasListener("render") && this.event("render", [t, i]), this.renderHandler && this.renderHandler.runWith([t, i])) : (t.visible = !1, t.dataSource = null)
            }, e._bindData = function(t, i) {
                for (var e = t._$bindData, s = 0, h = e.length; s < h; s++) {
                    var n = e[s++],
                        o = e[s++],
                        r = e[s],
                        l = L.getBindFun(r);
                    n[o] = l.call(this, i)
                }
            }, e.refresh = function() {
                this.array = this._array
            }, e.getItem = function(t) {
                return -1 < t && t < this._array.length ? this._array[t] : null
            }, e.changeItem = function(t, i) {
                -1 < t && t < this._array.length && (this._array[t] = i, t >= this._startIndex && t < this._startIndex + this._cells.length && this.renderItem(this.getCell(t), t))
            }, e.setItem = function(t, i) {
                this.changeItem(t, i)
            }, e.addItem = function(t) {
                this._array.push(t), this.array = this._array
            }, e.addItemAt = function(t, i) {
                this._array.splice(i, 0, t), this.array = this._array
            }, e.deleteItem = function(t) {
                this._array.splice(t, 1), this.array = this._array
            }, e.getCell = function(t) {
                return this.runCallLater(this.changeCells), -1 < t && this._cells ? this._cells[(t - this._startIndex) % this._cells.length] : null
            }, e.scrollTo = function(t) {
                if (this._scrollBar) {
                    var i = this._isVertical ? this.repeatX : this.repeatY;
                    this._scrollBar.value = Math.floor(t / i) * this._cellSize
                } else this.startIndex = t
            }, e.tweenTo = function(t, i, e) {
                if (void 0 === i && (i = 200), this._scrollBar) {
                    var s = this._isVertical ? this.repeatX : this.repeatY;
                    w.to(this._scrollBar, {
                        value: Math.floor(t / s) * this._cellSize
                    }, i, null, e, 0, !0)
                } else this.startIndex = t, e && e.run()
            }, e._setCellChanged = function() {
                this._cellChanged || (this._cellChanged = !0, this.callLater(this.changeCells))
            }, e.commitMeasure = function() {
                this.runCallLater(this.changeCells)
            }, h(0, e, "cacheAs", t.prototype._$get_cacheAs, function(t) {
                p.superSet(H, this, "cacheAs", t), this._scrollBar && (this._$P.cacheAs = null, "none" !== t ? this._scrollBar.on("start", this, this.onScrollStart) : this._scrollBar.off("start", this, this.onScrollStart))
            }), h(0, e, "content", function() {
                return this._content
            }), h(0, e, "height", t.prototype._$get_height, function(t) {
                t != this._height && (p.superSet(H, this, "height", t), this._setCellChanged())
            }), h(0, e, "itemRender", function() {
                return this._itemRender
            }, function(t) {
                if (this._itemRender != t) {
                    this._itemRender = t;
                    for (var i = this._cells.length - 1; - 1 < i; i--) this._cells[i].destroy();
                    this._cells.length = 0, this._setCellChanged()
                }
            }), h(0, e, "vScrollBarSkin", function() {
                return this._scrollBar ? this._scrollBar.skin : null
            }, function(t) {
                this._removePreScrollBar();
                var i = new it;
                i.name = "scrollBar", i.right = 0, t && " " != t && (i.skin = t), this.scrollBar = i, this.addChild(i), this._setCellChanged()
            }), h(0, e, "page", function() {
                return this._page
            }, function(t) {
                this._page = t, this._array && (this._page = 0 < t ? t : 0, this._page = this._page < this.totalPage ? this._page : this.totalPage - 1, this.startIndex = this._page * this.repeatX * this.repeatY)
            }), h(0, e, "hScrollBarSkin", function() {
                return this._scrollBar ? this._scrollBar.skin : null
            }, function(t) {
                this._removePreScrollBar();
                var i = new j;
                i.name = "scrollBar", i.bottom = 0, t && " " != t && (i.skin = t), this.scrollBar = i, this.addChild(i), this._setCellChanged()
            }), h(0, e, "repeatX", function() {
                return 0 < this._repeatX ? this._repeatX : 0 < this._repeatX2 ? this._repeatX2 : 1
            }, function(t) {
                this._repeatX = t, this._setCellChanged()
            }), h(0, e, "scrollBar", function() {
                return this._scrollBar
            }, function(t) {
                this._scrollBar != t && (this._scrollBar = t) && (this._isVertical = this._scrollBar.isVertical, this.addChild(this._scrollBar), this._scrollBar.on("change", this, this.onScrollBarChange))
            }), h(0, e, "width", t.prototype._$get_width, function(t) {
                t != this._width && (p.superSet(H, this, "width", t), this._setCellChanged())
            }), h(0, e, "repeatY", function() {
                return 0 < this._repeatY ? this._repeatY : 0 < this._repeatY2 ? this._repeatY2 : 1
            }, function(t) {
                this._repeatY = t, this._setCellChanged()
            }), h(0, e, "spaceX", function() {
                return this._spaceX
            }, function(t) {
                this._spaceX = t, this._setCellChanged()
            }), h(0, e, "spaceY", function() {
                return this._spaceY
            }, function(t) {
                this._spaceY = t, this._setCellChanged()
            }), h(0, e, "selectedIndex", function() {
                return this._selectedIndex
            }, function(t) {
                this._selectedIndex != t && (this._selectedIndex = t, this.changeSelectStatus(), this.event("change"), this.selectHandler && this.selectHandler.runWith(t), this.startIndex = this._startIndex)
            }), h(0, e, "selectedItem", function() {
                return -1 != this._selectedIndex ? this._array[this._selectedIndex] : null
            }, function(t) {
                this.selectedIndex = this._array.indexOf(t)
            }), h(0, e, "length", function() {
                return this._array ? this._array.length : 0
            }), h(0, e, "selection", function() {
                return this.getCell(this._selectedIndex)
            }, function(t) {
                this.selectedIndex = this._startIndex + this._cells.indexOf(t)
            }), h(0, e, "startIndex", function() {
                return this._startIndex
            }, function(t) {
                this._startIndex = 0 < t ? t : 0, this.callLater(this.renderItems)
            }), h(0, e, "array", function() {
                return this._array
            }, function(t) {
                this.runCallLater(this.changeCells), this._array = t || [];
                var i = this._array.length;
                if (this.totalPage = Math.ceil(i / (this.repeatX * this.repeatY)), this._selectedIndex = this._selectedIndex < i ? this._selectedIndex : i - 1, this.startIndex = this._startIndex, this._scrollBar) {
                    this._scrollBar.stopScroll();
                    var e = this._isVertical ? this.repeatX : this.repeatY,
                        s = this._isVertical ? this.repeatY : this.repeatX,
                        h = Math.ceil(i / e);
                    1 < (0 < this._cellOffset ? this.totalPage + 1 : this.totalPage) ? (this._scrollBar.scrollSize = this._cellSize, this._scrollBar.thumbPercent = s / h, this._scrollBar.setScroll(0, (h - s) * this._cellSize + this._cellOffset, this._scrollBar.value)) : this._scrollBar.setScroll(0, 0, 0), this._scrollBar.target = this._content
                }
            }), h(0, e, "dataSource", t.prototype._$get_dataSource, function(t) {
                "number" == typeof(this._dataSource = t) && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.array = t : p.superSet(H, this, "dataSource", t)
            }), h(0, e, "cells", function() {
                return this.runCallLater(this.changeCells), this._cells
            }), i
        }(H),
        j = function(t) {
            function i() {
                i.__super.call(this)
            }
            return n(i, "t_tl.ui.HScrollBar", t), i.prototype.initialize = function() {
                t.prototype.initialize.call(this), this.slider.isVertical = !1
            }, i
        }(X),
        K = function(t) {
            function i() {
                this._content = null, this._vScrollBar = null, this._hScrollBar = null, this._scrollChanged = !1, i.__super.call(this), this.width = this.height = 100
            }
            n(i, "t_tl.ui.Panel", t);
            var e = i.prototype;
            return e.destroy = function(t) {
                void 0 === t && (t = !0), t_tl.ui.Component.prototype.destroy.call(this, t), this._content && this._content.destroy(t), this._vScrollBar && this._vScrollBar.destroy(t), this._hScrollBar && this._hScrollBar.destroy(t), this._vScrollBar = null, this._hScrollBar = null, this._content = null
            }, e.destroyChildren = function() {
                this._content.destroyChildren()
            }, e.createChildren = function() {
                t_tl.display.Node.prototype.addChild.call(this, this._content = new H)
            }, e.addChild = function(t) {
                return t.on("resize", this, this.onResize), this._setScrollChanged(), this._content.addChild(t)
            }, e.onResize = function() {
                this._setScrollChanged()
            }, e.addChildAt = function(t, i) {
                return t.on("resize", this, this.onResize), this._setScrollChanged(), this._content.addChildAt(t, i)
            }, e.removeChild = function(t) {
                return t.off("resize", this, this.onResize), this._setScrollChanged(), this._content.removeChild(t)
            }, e.removeChildAt = function(t) {
                return this.getChildAt(t).off("resize", this, this.onResize), this._setScrollChanged(), this._content.removeChildAt(t)
            }, e.removeChildren = function(t, i) {
                void 0 === t && (t = 0), void 0 === i && (i = 2147483647);
                for (var e = this._content.numChildren - 1; - 1 < e; e--) this._content.removeChildAt(e);
                return this._setScrollChanged(), this
            }, e.getChildAt = function(t) {
                return this._content.getChildAt(t)
            }, e.getChildByName = function(t) {
                return this._content.getChildByName(t)
            }, e.getChildIndex = function(t) {
                return this._content.getChildIndex(t)
            }, e.changeScroll = function() {
                this._scrollChanged = !1;
                var t = this.contentWidth || 1,
                    i = this.contentHeight || 1,
                    e = this._vScrollBar,
                    s = this._hScrollBar,
                    h = e && i > this._height,
                    n = s && t > this._width,
                    o = h ? this._width - e.width : this._width,
                    r = n ? this._height - s.height : this._height;
                e && (e.x = this._width - e.width, e.y = 0, e.height = this._height - (n ? s.height : 0), e.scrollSize = Math.max(.033 * this._height, 1), e.thumbPercent = r / i, e.setScroll(0, i - r, e.value)), s && (s.x = 0, s.y = this._height - s.height, s.width = this._width - (h ? e.width : 0), s.scrollSize = Math.max(.033 * this._width, 1), s.thumbPercent = o / t, s.setScroll(0, t - o, s.value))
            }, e.changeSize = function() {
                t_tl.ui.Component.prototype.changeSize.call(this), this.setContentSize(this._width, this._height)
            }, e.setContentSize = function(t, i) {
                var e = this._content;
                e.width = t, e.height = i, e.scrollRect || (e.scrollRect = new y), e.scrollRect.setTo(0, 0, t, i), e.scrollRect = e.scrollRect
            }, e.onScrollBarChange = function(t) {
                var i = this._content.scrollRect;
                if (i) {
                    var e = Math.round(t.value);
                    t.isVertical ? i.y = e : i.x = e, this._content.scrollRect = i
                }
            }, e.scrollTo = function(t, i) {
                void 0 === t && (t = 0), void 0 === i && (i = 0), this.vScrollBar && (this.vScrollBar.value = i), this.hScrollBar && (this.hScrollBar.value = t)
            }, e.refresh = function() {
                this.changeScroll()
            }, e.onScrollStart = function() {
                this._$P.cacheAs || (this._$P.cacheAs = p.superGet(H, this, "cacheAs")), p.superSet(H, this, "cacheAs", "none"), this._hScrollBar && this._hScrollBar.once("end", this, this.onScrollEnd), this._vScrollBar && this._vScrollBar.once("end", this, this.onScrollEnd)
            }, e.onScrollEnd = function() {
                p.superSet(H, this, "cacheAs", this._$P.cacheAs)
            }, e._setScrollChanged = function() {
                this._scrollChanged || (this._scrollChanged = !0, this.callLater(this.changeScroll))
            }, h(0, e, "numChildren", function() {
                return this._content.numChildren
            }), h(0, e, "hScrollBarSkin", function() {
                return this._hScrollBar ? this._hScrollBar.skin : null
            }, function(t) {
                null == this._hScrollBar && (t_tl.display.Node.prototype.addChild.call(this, this._hScrollBar = new j), this._hScrollBar.on("change", this, this.onScrollBarChange, [this._hScrollBar]), this._hScrollBar.target = this._content, this._setScrollChanged()), this._hScrollBar.skin = t
            }), h(0, e, "contentWidth", function() {
                for (var t = 0, i = this._content.numChildren - 1; - 1 < i; i--) {
                    var e = this._content.getChildAt(i);
                    t = Math.max(e.x + e.width * e.scaleX, t)
                }
                return t
            }), h(0, e, "contentHeight", function() {
                for (var t = 0, i = this._content.numChildren - 1; - 1 < i; i--) {
                    var e = this._content.getChildAt(i);
                    t = Math.max(e.y + e.height * e.scaleY, t)
                }
                return t
            }), h(0, e, "width", t.prototype._$get_width, function(t) {
                p.superSet(H, this, "width", t), this._setScrollChanged()
            }), h(0, e, "hScrollBar", function() {
                return this._hScrollBar
            }), h(0, e, "content", function() {
                return this._content
            }), h(0, e, "height", t.prototype._$get_height, function(t) {
                p.superSet(H, this, "height", t), this._setScrollChanged()
            }), h(0, e, "vScrollBarSkin", function() {
                return this._vScrollBar ? this._vScrollBar.skin : null
            }, function(t) {
                null == this._vScrollBar && (t_tl.display.Node.prototype.addChild.call(this, this._vScrollBar = new it), this._vScrollBar.on("change", this, this.onScrollBarChange, [this._vScrollBar]), this._vScrollBar.target = this._content, this._setScrollChanged()), this._vScrollBar.skin = t
            }), h(0, e, "vScrollBar", function() {
                return this._vScrollBar
            }), h(0, e, "cacheAs", t.prototype._$get_cacheAs, function(t) {
                p.superSet(H, this, "cacheAs", t), this._$P.cacheAs = null, "none" !== t ? (this._hScrollBar && this._hScrollBar.on("start", this, this.onScrollStart), this._vScrollBar && this._vScrollBar.on("start", this, this.onScrollStart)) : (this._hScrollBar && this._hScrollBar.off("start", this, this.onScrollStart), this._vScrollBar && this._vScrollBar.off("start", this, this.onScrollStart))
            }), i
        }(H),
        Z = function(t) {
            function i(t) {
                i.__super.call(this, t), this.isVertical = !1
            }
            return n(i, "t_tl.ui.HSlider", E), i
        }(),
        q = function(t) {
            function e(t, i) {
                this.selectHandler = null, this._items = null, this._selectedIndex = -1, this._skin = null, this._direction = "horizontal", this._space = 0, this._labels = null, this._labelColors = null, this._labelFont = null, this._labelStrokeColor = null, this._strokeColors = null, this._labelStroke = NaN, this._labelSize = 0, this._labelBold = !1, this._labelPadding = null, this._labelAlign = null, this._stateNum = 0, this._labelChanged = !1, e.__super.call(this), this.skin = i, this.labels = t
            }
            n(e, "t_tl.ui.UIGroup", t);
            var i = e.prototype;
            return p.imps(i, {
                "t_tl.ui.IItem": !0
            }), i.preinitialize = function() {
                this.mouseEnabled = !0
            }, i.destroy = function(t) {
                void 0 === t && (t = !0), t_tl.ui.Component.prototype.destroy.call(this, t), this._items && (this._items.length = 0), this._items = null, this.selectHandler = null
            }, i.addItem = function(t, i) {
                void 0 === i && (i = !0);
                var e = t,
                    s = this._items.length;
                if (e.name = "item" + s, this.addChild(e), this.initItems(), i && 0 < s) {
                    var h = this._items[s - 1];
                    "horizontal" == this._direction ? e.x = h.x + h.width + this._space : e.y = h.y + h.height + this._space
                } else i && (e.x = 0, e.y = 0);
                return s
            }, i.delItem = function(t, i) {
                void 0 === i && (i = !0);
                var e = this._items.indexOf(t);
                if (-1 != e) {
                    var s = t;
                    this.removeChild(s);
                    for (var h = e + 1, n = this._items.length; h < n; h++) {
                        var o = this._items[h];
                        o.name = "item" + (h - 1), i && ("horizontal" == this._direction ? o.x -= s.width + this._space : o.y -= s.height + this._space)
                    }
                    if (this.initItems(), -1 < this._selectedIndex) {
                        var r;
                        r = this._selectedIndex < this._items.length ? this._selectedIndex : this._selectedIndex - 1, this._selectedIndex = -1, this.selectedIndex = r
                    }
                }
            }, i.initItems = function() {
                this._items || (this._items = []);
                for (var t = this._items.length = 0; t < 1e4; t++) {
                    var i = this.getChildByName("item" + t);
                    if (null == i) break;
                    this._items.push(i), i.selected = t === this._selectedIndex, i.clickHandler = _.create(this, this.itemClick, [t], !1)
                }
            }, i.itemClick = function(t) {
                this.selectedIndex = t
            }, i.setSelect = function(t, i) {
                this._items && -1 < t && t < this._items.length && (this._items[t].selected = i)
            }, i.createItem = function(t, i) {
                return null
            }, i.changeLabels = function() {
                if (this._labelChanged = !1, this._items)
                    for (var t = 0, i = 0, e = this._items.length; i < e; i++) {
                        var s = this._items[i];
                        this._skin && (s.skin = this._skin), this._labelColors && (s.labelColors = this._labelColors), this._labelSize && (s.labelSize = this._labelSize), this._labelStroke && (s.labelStroke = this._labelStroke), this._labelStrokeColor && (s.labelStrokeColor = this._labelStrokeColor), this._strokeColors && (s.strokeColors = this._strokeColors), this._labelBold && (s.labelBold = this._labelBold), this._labelPadding && (s.labelPadding = this._labelPadding), this._labelAlign && (s.labelAlign = this._labelAlign), this._stateNum && (s.stateNum = this._stateNum), this._labelFont && (s.labelFont = this._labelFont), "horizontal" === this._direction ? (s.y = 0, s.x = t, t += s.width + this._space) : (s.x = 0, s.y = t, t += s.height + this._space)
                    }
                this.changeSize()
            }, i.commitMeasure = function() {
                this.runCallLater(this.changeLabels)
            }, i._setLabelChanged = function() {
                this._labelChanged || (this._labelChanged = !0, this.callLater(this.changeLabels))
            }, h(0, i, "labelStrokeColor", function() {
                return this._labelStrokeColor
            }, function(t) {
                this._labelStrokeColor != t && (this._labelStrokeColor = t, this._setLabelChanged())
            }), h(0, i, "skin", function() {
                return this._skin
            }, function(t) {
                this._skin != t && (this._skin = t, this._setLabelChanged())
            }), h(0, i, "selectedIndex", function() {
                return this._selectedIndex
            }, function(t) {
                this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1), this._selectedIndex = t, this.setSelect(t, !0), this.event("change"), this.selectHandler && this.selectHandler.runWith(this._selectedIndex))
            }), h(0, i, "labels", function() {
                return this._labels
            }, function(t) {
                if (this._labels != t) {
                    if (this._labels = t, this.removeChildren(), this._setLabelChanged(), this._labels)
                        for (var i = this._labels.split(","), e = 0, s = i.length; e < s; e++) {
                            var h = this.createItem(this._skin, i[e]);
                            h.name = "item" + e, this.addChild(h)
                        }
                    this.initItems()
                }
            }), h(0, i, "strokeColors", function() {
                return this._strokeColors
            }, function(t) {
                this._strokeColors != t && (this._strokeColors = t, this._setLabelChanged())
            }), h(0, i, "labelColors", function() {
                return this._labelColors
            }, function(t) {
                this._labelColors != t && (this._labelColors = t, this._setLabelChanged())
            }), h(0, i, "labelStroke", function() {
                return this._labelStroke
            }, function(t) {
                this._labelStroke != t && (this._labelStroke = t, this._setLabelChanged())
            }), h(0, i, "labelSize", function() {
                return this._labelSize
            }, function(t) {
                this._labelSize != t && (this._labelSize = t, this._setLabelChanged())
            }), h(0, i, "stateNum", function() {
                return this._stateNum
            }, function(t) {
                this._stateNum != t && (this._stateNum = t, this._setLabelChanged())
            }), h(0, i, "labelBold", function() {
                return this._labelBold
            }, function(t) {
                this._labelBold != t && (this._labelBold = t, this._setLabelChanged())
            }), h(0, i, "labelFont", function() {
                return this._labelFont
            }, function(t) {
                this._labelFont != t && (this._labelFont = t, this._setLabelChanged())
            }), h(0, i, "labelPadding", function() {
                return this._labelPadding
            }, function(t) {
                this._labelPadding != t && (this._labelPadding = t, this._setLabelChanged())
            }), h(0, i, "direction", function() {
                return this._direction
            }, function(t) {
                this._direction = t, this._setLabelChanged()
            }), h(0, i, "space", function() {
                return this._space
            }, function(t) {
                this._space = t, this._setLabelChanged()
            }), h(0, i, "items", function() {
                return this._items
            }), h(0, i, "selection", function() {
                return -1 < this._selectedIndex && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null
            }, function(t) {
                this.selectedIndex = this._items.indexOf(t)
            }), h(0, i, "dataSource", t.prototype._$get_dataSource, function(t) {
                "number" == typeof(this._dataSource = t) && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : p.superSet(H, this, "dataSource", t)
            }), e
        }(H),
        J = function(i) {
            function e(t, i) {
                this._value = null, void 0 === i && (i = ""), e.__super.call(this, t, i)
            }
            n(e, "t_tl.ui.Radio", i);
            var t = e.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._value = null
            }, t.preinitialize = function() {
                t_tl.ui.Component.prototype.preinitialize.call(this), this.toggle = !1, this._autoSize = !1
            }, t.initialize = function() {
                i.prototype.initialize.call(this), this.createText(), this._text.align = "left", this._text.valign = "top", this._text.width = 0, this.on("click", this, this.onClick)
            }, t.onClick = function(t) {
                this.selected = !0
            }, h(0, t, "value", function() {
                return null != this._value ? this._value : this.label
            }, function(t) {
                this._value = t
            }), e
        }(N),
        Q = function(t) {
            function i() {
                this._list = null, this._source = null, this._renderHandler = null, this._spaceLeft = 10, this._spaceBottom = 0, this._keepStatus = !0, i.__super.call(this), this.width = this.height = 200
            }
            n(i, "t_tl.ui.Tree", t);
            var e = i.prototype;
            return p.imps(e, {
                "t_tl.ui.IRender": !0
            }), e.destroy = function(t) {
                void 0 === t && (t = !0), t_tl.ui.Component.prototype.destroy.call(this, t), this._list && this._list.destroy(t), this._list = null, this._source = null, this._renderHandler = null
            }, e.createChildren = function() {
                this.addChild(this._list = new U), this._list.renderHandler = _.create(this, this.renderItem, null, !1), this._list.repeatX = 1, this._list.on("change", this, this.onListChange)
            }, e.onListChange = function(t) {
                this.event("change")
            }, e.getArray = function() {
                var t, i = [];
                for (var e in this._source) t = this._source[e], this.getParentOpenStatus(t) && (t.x = this._spaceLeft * this.getDepth(t), i.push(t));
                return i
            }, e.getDepth = function(t, i) {
                return void 0 === i && (i = 0), null == t.nodeParent ? i : this.getDepth(t.nodeParent, i + 1)
            }, e.getParentOpenStatus = function(t) {
                var i = t.nodeParent;
                return null == i || !!i.isOpen && (null == i.nodeParent || this.getParentOpenStatus(i))
            }, e.renderItem = function(t, i) {
                var e = t.dataSource;
                if (e) {
                    t.left = e.x;
                    var s = t.getChildByName("arrow");
                    s && (e.hasChild ? (s.visible = !0, s.index = e.isOpen ? 1 : 0, s.tag = i, s.off("click", this, this.onArrowClick), s.on("click", this, this.onArrowClick)) : s.visible = !1);
                    var h = t.getChildByName("folder");
                    h && (2 == h.clipY ? h.index = e.isDirectory ? 0 : 1 : h.index = e.isDirectory ? e.isOpen ? 1 : 0 : 2), this._renderHandler && this._renderHandler.runWith([t, i])
                }
            }, e.onArrowClick = function(t) {
                var i = t.currentTarget.tag;
                this._list.array[i].isOpen = !this._list.array[i].isOpen, this.event("open"), this._list.array = this.getArray()
            }, e.setItemState = function(t, i) {
                this._list.array[t] && (this._list.array[t].isOpen = i, this._list.array = this.getArray())
            }, e.fresh = function() {
                this._list.array = this.getArray(), this.repaint()
            }, e.parseXml = function(t, i, e, s) {
                var h, n = t.childNodes,
                    o = n.length;
                if (!s) {
                    h = {};
                    var r, l = t.attributes;
                    for (var a in l) {
                        var c = (r = l[a]).nodeName,
                            u = r.nodeValue;
                        h[c] = "true" == u || "false" != u && u
                    }
                    h.nodeParent = e, 0 < o && (h.isDirectory = !0), h.hasChild = 0 < o, i.push(h)
                }
                for (var _ = 0; _ < o; _++) {
                    var d = n[_];
                    this.parseXml(d, i, h, !1)
                }
            }, e.parseOpenStatus = function(t, i) {
                for (var e = 0, s = i.length; e < s; e++) {
                    var h = i[e];
                    if (h.isDirectory)
                        for (var n = 0, o = t.length; n < o; n++) {
                            var r = t[n];
                            if (r.isDirectory && this.isSameParent(r, h) && h.label == r.label) {
                                h.isOpen = r.isOpen;
                                break
                            }
                        }
                }
            }, e.isSameParent = function(t, i) {
                return null == t.nodeParent && null == i.nodeParent || null != t.nodeParent && null != i.nodeParent && (t.nodeParent.label == i.nodeParent.label && this.isSameParent(t.nodeParent, i.nodeParent))
            }, e.filter = function(t) {
                if (Boolean(t)) {
                    var i = [];
                    this.getFilterSource(this._source, i, t), this._list.array = i
                } else this._list.array = this.getArray()
            }, e.getFilterSource = function(t, i, e) {
                var s;
                for (var h in e = e.toLocaleLowerCase(), t) !(s = t[h]).isDirectory && -1 < String(s.label).toLowerCase().indexOf(e) && (s.x = 0, i.push(s)), s.child && 0 < s.child.length && this.getFilterSource(s.child, i, e)
            }, h(0, e, "spaceBottom", function() {
                return this._list.spaceY
            }, function(t) {
                this._list.spaceY = t
            }), h(0, e, "keepStatus", function() {
                return this._keepStatus
            }, function(t) {
                this._keepStatus = t
            }), h(0, e, "itemRender", function() {
                return this._list.itemRender
            }, function(t) {
                this._list.itemRender = t
            }), h(0, e, "array", function() {
                return this._list.array
            }, function(t) {
                this._keepStatus && this._list.array && t && this.parseOpenStatus(this._list.array, t), this._source = t, this._list.array = this.getArray()
            }), h(0, e, "mouseHandler", function() {
                return this._list.mouseHandler
            }, function(t) {
                this._list.mouseHandler = t
            }), h(0, e, "dataSource", t.prototype._$get_dataSource, function(t) {
                this._dataSource = t, p.superSet(H, this, "dataSource", t)
            }), h(0, e, "source", function() {
                return this._source
            }), h(0, e, "scrollBar", function() {
                return this._list.scrollBar
            }), h(0, e, "list", function() {
                return this._list
            }), h(0, e, "scrollBarSkin", function() {
                return this._list.vScrollBarSkin
            }, function(t) {
                this._list.vScrollBarSkin = t
            }), h(0, e, "renderHandler", function() {
                return this._renderHandler
            }, function(t) {
                this._renderHandler = t
            }), h(0, e, "selectedIndex", function() {
                return this._list.selectedIndex
            }, function(t) {
                this._list.selectedIndex = t
            }), h(0, e, "spaceLeft", function() {
                return this._spaceLeft
            }, function(t) {
                this._spaceLeft = t
            }), h(0, e, "selectedItem", function() {
                return this._list.selectedItem
            }, function(t) {
                this._list.selectedItem = t
            }), h(0, e, "width", t.prototype._$get_width, function(t) {
                p.superSet(H, this, "width", t), this._list.width = t
            }), h(0, e, "height", t.prototype._$get_height, function(t) {
                p.superSet(H, this, "height", t), this._list.height = t
            }), h(0, e, "xml", null, function(t) {
                var i = [];
                this.parseXml(t.childNodes[0], i, null, !0), this.array = i
            }), h(0, e, "selectedPath", function() {
                return this._list.selectedItem ? this._list.selectedItem.path : null
            }), i
        }(H),
        tt = function(t) {
            function i() {
                this._items = null, this._selectedIndex = 0, i.__super.call(this), this._setIndexHandler = _.create(this, this.setIndex, null, !1)
            }
            n(i, "t_tl.ui.ViewStack", t);
            var e = i.prototype;
            return p.imps(e, {
                "t_tl.ui.IItem": !0
            }), e.setItems = function(t) {
                this.removeChildren();
                for (var i = 0, e = 0, s = t.length; e < s; e++) {
                    var h = t[e];
                    h && (h.name = "item" + i, this.addChild(h), i++)
                }
                this.initItems()
            }, e.addItem = function(t) {
                t.name = "item" + this._items.length, this.addChild(t), this.initItems()
            }, e.initItems = function() {
                this._items = [];
                for (var t = 0; t < 1e4; t++) {
                    var i = this.getChildByName("item" + t);
                    if (null == i) break;
                    this._items.push(i), i.visible = t == this._selectedIndex
                }
            }, e.setSelect = function(t, i) {
                this._items && -1 < t && t < this._items.length && (this._items[t].visible = i)
            }, e.setIndex = function(t) {
                this.selectedIndex = t
            }, h(0, e, "dataSource", t.prototype._$get_dataSource, function(t) {
                if ("number" == typeof(this._dataSource = t) && Math.floor(t) == t || "string" == typeof t) this.selectedIndex = parseInt(t);
                else
                    for (var i in this._dataSource) this.hasOwnProperty(i) && (this[i] = this._dataSource[i])
            }), h(0, e, "selectedIndex", function() {
                return this._selectedIndex
            }, function(t) {
                this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1), this._selectedIndex = t, this.setSelect(this._selectedIndex, !0))
            }), h(0, e, "selection", function() {
                return -1 < this._selectedIndex && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null
            }, function(t) {
                this.selectedIndex = this._items.indexOf(t)
            }), h(0, e, "items", function() {
                return this._items
            }), h(0, e, "setIndexHandler", function() {
                return this._setIndexHandler
            }, function(t) {
                this._setIndexHandler = t
            }), i
        }(H),
        it = function(t) {
            function i() {
                i.__super.call(this)
            }
            return n(i, "t_tl.ui.VScrollBar", X), i
        }(),
        et = function(i) {
            function e(t) {
                this._bg = null, this._skin = null, e.__super.call(this), void 0 === t && (t = ""), this.text = t, this.skin = this.skin
            }
            n(e, "t_tl.ui.TextInput", i);
            var t = e.prototype;
            return t.preinitialize = function() {
                this.mouseEnabled = !0
            }, t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._bg && this._bg.destroy(), this._bg = null
            }, t.createChildren = function() {
                this.addChild(this._tf = new d), this._tf.padding = I.inputLabelPadding, this._tf.on("input", this, this._onInput), this._tf.on("enter", this, this._onEnter), this._tf.on("blur", this, this._onBlur), this._tf.on("focus", this, this._onFocus)
            }, t._onFocus = function() {
                this.event("focus", this)
            }, t._onBlur = function() {
                this.event("blur", this)
            }, t._onInput = function() {
                this.event("input", this)
            }, t._onEnter = function() {
                this.event("enter", this)
            }, t.initialize = function() {
                this.width = 128, this.height = 22
            }, t.select = function() {
                this._tf.select()
            }, t.setSelection = function(t, i) {
                this._tf.setSelection(t, i)
            }, h(0, t, "text", i.prototype._$get_text, function(t) {
                this._tf.text != t && (t += "", this._tf.text = t, this.event("change"))
            }), h(0, t, "bg", function() {
                return this._bg
            }, function(t) {
                this.graphics = this._bg = t
            }), h(0, t, "inputElementYAdjuster", function() {
                return this._tf.inputElementYAdjuster
            }, function(t) {
                this._tf.inputElementYAdjuster = t
            }), h(0, t, "multiline", function() {
                return this._tf.multiline
            }, function(t) {
                this._tf.multiline = t
            }), h(0, t, "skin", function() {
                return this._skin
            }, function(t) {
                this._skin != t && (this._skin = t, this._bg || (this.graphics = this._bg = new z), this._bg.source = f.getRes(this._skin), this._width && (this._bg.width = this._width), this._height && (this._bg.height = this._height))
            }), h(0, t, "sizeGrid", function() {
                return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(",") : null
            }, function(t) {
                this._bg || (this.graphics = this._bg = new z), this._bg.sizeGrid = L.fillArray(I.defaultSizeGrid, t, Number)
            }), h(0, t, "inputElementXAdjuster", function() {
                return this._tf.inputElementXAdjuster
            }, function(t) {
                this._tf.inputElementXAdjuster = t
            }), h(0, t, "width", i.prototype._$get_width, function(t) {
                p.superSet(D, this, "width", t), this._bg && (this._bg.width = t)
            }), h(0, t, "height", i.prototype._$get_height, function(t) {
                p.superSet(D, this, "height", t), this._bg && (this._bg.height = t)
            }), h(0, t, "editable", function() {
                return this._tf.editable
            }, function(t) {
                this._tf.editable = t
            }), h(0, t, "restrict", function() {
                return this._tf.restrict
            }, function(t) {
                this._tf.restrict = t
            }), h(0, t, "prompt", function() {
                return this._tf.prompt
            }, function(t) {
                this._tf.prompt = t
            }), h(0, t, "promptColor", function() {
                return this._tf.promptColor
            }, function(t) {
                this._tf.promptColor = t
            }), h(0, t, "maxChars", function() {
                return this._tf.maxChars
            }, function(t) {
                this._tf.maxChars = t
            }), h(0, t, "focus", function() {
                return this._tf.focus
            }, function(t) {
                this._tf.focus = t
            }), h(0, t, "type", function() {
                return this._tf.type
            }, function(t) {
                this._tf.type = t
            }), h(0, t, "asPassword", function() {
                return this._tf.asPassword
            }, function(t) {
                this._tf.asPassword = t
            }), e
        }(D),
        st = function(t) {
            function i() {
                i.__super.call(this)
            }
            return n(i, "t_tl.ui.VSlider", E), i
        }(),
        ht = function(t) {
            function s() {
                this.popupCenter = !0, this.closeHandler = null, this.popupEffect = null, this.closeEffect = null, this.group = null, this.isModal = !1, this._dragArea = null, s.__super.call(this)
            }
            n(s, "t_tl.ui.Dialog", t);
            var i = s.prototype;
            return i.initialize = function() {
                this.popupEffect = s.manager.popupEffectHandler, this.closeEffect = s.manager.closeEffectHandler, this._dealDragArea(), this.on("click", this, this._onClick)
            }, i._dealDragArea = function() {
                var t = this.getChildByName("drag");
                t && (this.dragArea = t.x + "," + t.y + "," + t.width + "," + t.height, t.removeSelf())
            }, i._onClick = function(t) {
                var i = t.target;
                if (i) switch (i.name) {
                    case "close":
                    case "cancel":
                    case "sure":
                    case "no":
                    case "ok":
                    case "yes":
                        this.close(i.name)
                }
            }, i.show = function(t, i) {
                void 0 === t && (t = !1), void 0 === i && (i = !0), this._open(!1, t, i)
            }, i.popup = function(t, i) {
                void 0 === t && (t = !1), void 0 === i && (i = !0), this._open(!0, t, i)
            }, i._open = function(t, i, e) {
                s.manager.lock(!1), this.isModal = t, s.manager.open(this, i, e)
            }, i.onOpened = function() {}, i.close = function(t, i) {
                void 0 === i && (i = !0), s.manager.close(this, t, i)
            }, i.onClosed = function(t) {}, i._onMouseDown = function(t) {
                var i = this.getMousePoint();
                this._dragArea.contains(i.x, i.y) ? this.startDrag() : this.stopDrag()
            }, h(0, i, "dragArea", function() {
                return this._dragArea ? this._dragArea.toString() : null
            }, function(t) {
                if (t) {
                    var i = L.fillArray([0, 0, 0, 0], t, Number);
                    this._dragArea = new y(i[0], i[1], i[2], i[3]), this.on("mousedown", this, this._onMouseDown)
                } else this._dragArea = null, this.off("mousedown", this, this._onMouseDown)
            }), h(0, i, "isPopup", function() {
                return null != this.parent
            }), h(0, i, "zOrder", t.prototype._$get_zOrder, function(t) {
                p.superSet(R, this, "zOrder", t), s.manager._checkMask()
            }), h(1, s, "manager", function() {
                return s._manager = s._manager || new P
            }, function(t) {
                s._manager = t
            }), s.setLockView = function(t) {
                s.manager.setLockView(t)
            }, s.lock = function(t) {
                s.manager.lock(t)
            }, s.closeAll = function() {
                s.manager.closeAll()
            }, s.getDialogsByGroup = function(t) {
                return s.manager.getDialogsByGroup(t)
            }, s.closeByGroup = function(t) {
                return s.manager.closeByGroup(t)
            }, s.CLOSE = "close", s.CANCEL = "cancel", s.SURE = "sure", s.NO = "no", s.OK = "ok", s.YES = "yes", s._manager = null, s
        }(R),
        nt = function(t) {
            function i() {
                i.__super.call(this)
            }
            n(i, "t_tl.ui.HBox", t);
            var e = i.prototype;
            return e.sortItem = function(t) {
                t && t.sort(function(t, i) {
                    return t.x - i.x
                })
            }, e.changeItems = function() {
                this._itemChanged = !1;
                for (var t = [], i = 0, e = 0, s = this.numChildren; e < s; e++) {
                    var h = this.getChildAt(e);
                    h && h.layoutEnabled && (t.push(h), i = this._height ? this._height : Math.max(i, h.height * h.scaleY))
                }
                this.sortItem(t);
                var n = 0;
                for (e = 0, s = t.length; e < s; e++)(h = t[e]).x = n, n += h.width * h.scaleX + this._space, "top" == this._align ? h.y = 0 : "middle" == this._align ? h.y = .5 * (i - h.height * h.scaleY) : "bottom" == this._align && (h.y = i - h.height * h.scaleY);
                this.changeSize()
            }, h(0, e, "height", t.prototype._$get_height, function(t) {
                this._height != t && (p.superSet($, this, "height", t), this.callLater(this.changeItems))
            }), i.NONE = "none", i.TOP = "top", i.MIDDLE = "middle", i.BOTTOM = "bottom", i
        }($),
        ot = function(t) {
            function i() {
                i.__super.call(this)
            }
            n(i, "t_tl.ui.VBox", t);
            var e = i.prototype;
            return e.changeItems = function() {
                this._itemChanged = !1;
                for (var t = [], i = 0, e = 0, s = this.numChildren; e < s; e++) {
                    var h = this.getChildAt(e);
                    h && h.layoutEnabled && (t.push(h), i = this._width ? this._width : Math.max(i, h.width * h.scaleX))
                }
                this.sortItem(t);
                var n = 0;
                for (e = 0, s = t.length; e < s; e++)(h = t[e]).y = n, n += h.height * h.scaleY + this._space, "left" == this._align ? h.x = 0 : "center" == this._align ? h.x = .5 * (i - h.width * h.scaleX) : "right" == this._align && (h.x = i - h.width * h.scaleX);
                this.changeSize()
            }, h(0, e, "width", t.prototype._$get_width, function(t) {
                this._width != t && (p.superSet($, this, "width", t), this.callLater(this.changeItems))
            }), i.NONE = "none", i.LEFT = "left", i.CENTER = "center", i.RIGHT = "right", i
        }($),
        rt = function(t) {
            function i() {
                i.__super.call(this)
            }
            return n(i, "t_tl.ui.RadioGroup", q), i.prototype.createItem = function(t, i) {
                return new J(t, i)
            }, i
        }(),
        lt = function(t) {
            function i() {
                i.__super.call(this)
            }
            return n(i, "t_tl.ui.Tab", q), i.prototype.createItem = function(t, i) {
                return new N(t, i)
            }, i
        }(),
        at = function(i) {
            function e(t) {
                this._vScrollBar = null, this._hScrollBar = null, void 0 === t && (t = ""), e.__super.call(this, t)
            }
            n(e, "t_tl.ui.TextArea", i);
            var t = e.prototype;
            return t.destroy = function(t) {
                void 0 === t && (t = !0), i.prototype.destroy.call(this, t), this._vScrollBar && this._vScrollBar.destroy(), this._hScrollBar && this._hScrollBar.destroy(), this._vScrollBar = null, this._hScrollBar = null
            }, t.initialize = function() {
                this.width = 180, this.height = 150, this._tf.wordWrap = !0, this.multiline = !0
            }, t.onVBarChanged = function(t) {
                this._tf.scrollY != this._vScrollBar.value && (this._tf.scrollY = this._vScrollBar.value)
            }, t.onHBarChanged = function(t) {
                this._tf.scrollX != this._hScrollBar.value && (this._tf.scrollX = this._hScrollBar.value)
            }, t.changeScroll = function() {
                var t = this._vScrollBar && 0 < this._tf.maxScrollY,
                    i = this._hScrollBar && 0 < this._tf.maxScrollX,
                    e = t ? this._width - this._vScrollBar.width : this._width,
                    s = i ? this._height - this._hScrollBar.height : this._height,
                    h = this._tf.padding || I.labelPadding;
                this._tf.width = e, this._tf.height = s, this._vScrollBar && (this._vScrollBar.x = this._width - this._vScrollBar.width - h[2], this._vScrollBar.y = h[1], this._vScrollBar.height = this._height - (i ? this._hScrollBar.height : 0) - h[1] - h[3], this._vScrollBar.scrollSize = 1, this._vScrollBar.thumbPercent = s / Math.max(this._tf.textHeight, s), this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY), this._vScrollBar.visible = t), this._hScrollBar && (this._hScrollBar.x = h[0], this._hScrollBar.y = this._height - this._hScrollBar.height - h[3], this._hScrollBar.width = this._width - (t ? this._vScrollBar.width : 0) - h[0] - h[2], this._hScrollBar.scrollSize = Math.max(.033 * e, 1), this._hScrollBar.thumbPercent = e / Math.max(this._tf.textWidth, e), this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX), this._hScrollBar.visible = i)
            }, t.scrollTo = function(t) {
                this.commitMeasure(), this._tf.scrollY = t
            }, h(0, t, "scrollY", function() {
                return this._tf.scrollY
            }), h(0, t, "width", i.prototype._$get_width, function(t) {
                p.superSet(et, this, "width", t), this.callLater(this.changeScroll)
            }), h(0, t, "hScrollBar", function() {
                return this._hScrollBar
            }), h(0, t, "height", i.prototype._$get_height, function(t) {
                p.superSet(et, this, "height", t), this.callLater(this.changeScroll)
            }), h(0, t, "maxScrollX", function() {
                return this._tf.maxScrollX
            }), h(0, t, "vScrollBarSkin", function() {
                return this._vScrollBar ? this._vScrollBar.skin : null
            }, function(t) {
                null == this._vScrollBar && (this.addChild(this._vScrollBar = new it), this._vScrollBar.on("change", this, this.onVBarChanged), this._vScrollBar.target = this._tf, this.callLater(this.changeScroll)), this._vScrollBar.skin = t
            }), h(0, t, "hScrollBarSkin", function() {
                return this._hScrollBar ? this._hScrollBar.skin : null
            }, function(t) {
                null == this._hScrollBar && (this.addChild(this._hScrollBar = new j), this._hScrollBar.on("change", this, this.onHBarChanged), this._hScrollBar.mouseWheelEnable = !1, this._hScrollBar.target = this._tf, this.callLater(this.changeScroll)), this._hScrollBar.skin = t
            }), h(0, t, "vScrollBar", function() {
                return this._vScrollBar
            }), h(0, t, "maxScrollY", function() {
                return this._tf.maxScrollY
            }), h(0, t, "scrollX", function() {
                return this._tf.scrollX
            }), e
        }(et);
    ! function(t) {
        function i() {
            this._uiView = null, this.isCloseOther = !1, i.__super.call(this)
        }
        n(i, "t_tl.ui.AsynDialog", ht);
        var e = i.prototype;
        e.createView = function(t) {
            this._uiView = t
        }, e._open = function(t, i, e) {
            this.isModal = t, this.isCloseOther = i, ht.manager.lock(!0), this._uiView ? this.onCreated() : this.onOpen()
        }, e.onCreated = function() {
            this.createUI(), this.onOpen()
        }, e.createUI = function() {
            t_tl.ui.View.prototype.createView.call(this, this._uiView), this._uiView = null, this._dealDragArea()
        }, e.onOpen = function() {
            ht.manager.open(this, this.isCloseOther), ht.manager.lock(!1)
        }, e.close = function(t, i) {
            void 0 === i && (i = !0), ht.manager.close(this), this.onClose()
        }, e.onClose = function() {}, e.destroy = function(t) {
            void 0 === t && (t = !0), t_tl.ui.View.prototype.destroy.call(this, t), this._uiView = null, this.onDestroy()
        }, e.onDestroy = function() {}
    }();
    p.__init([R])
}(window, document, t_t), "function" == typeof define && define.amd && define("t_tl.core", ["require", "exports"], function(t, i) {
    "use strict";
    for (var e in Object.defineProperty(i, "__esModule", {
            value: !0
        }), t_t) {
        var s = t_t[e];
        s && s.__isclass && (i[e] = s)
    }
});
! function(c, e, x) {
    x.un, x.uns;
    var u = x.static,
        m = x.class,
        g = x.getset,
        M = x.__newvec,
        i = (t_tl.ani.AnimationContent, t_tl.ani.AnimationPlayer),
        r = (t_tl.ani.AnimationState, t_tl.ani.AnimationTemplet),
        p = t_tl.maths.Arith,
        o = t_tl.webgl.atlas.AtlasResourceManager,
        n = t_tl.webgl.shader.BaseShader,
        C = t_tl.utils.Browser,
        s = t_tl.webgl.utils.Buffer,
        S = t_tl.utils.Byte,
        l = (t_tl.ani.bone.canvasmesh.CacheAbleSkinMesh, t_tl.utils.ClassUtils),
        h = x.Config,
        a = (t_tl.events.Event, t_tl.events.EventDispatcher),
        I = t_tl.utils.Handler,
        Ae = t_tl.net.Loader,
        t = t_tl.net.LoaderManager,
        H = t_tl.maths.MathUtil,
        _ = t_tl.display.Node,
        d = t_tl.renders.Render,
        f = (t_tl.renders.RenderContext, t_tl.renders.RenderSprite, t_tl.webgl.utils.RenderState2D),
        v = t_tl.resource.Resource,
        E = t_tl.utils.RunDriver,
        D = (t_tl.webgl.shader.Shader, t_tl.webgl.utils.ShaderCompile),
        T = t_tl.display.Sprite,
        R = t_tl.utils.Stat,
        A = t_tl.utils.StringKey,
        N = (t_tl.display.css.Style, t_tl.resource.Texture, t_tl.net.URL),
        y = t_tl.utils.Utils,
        w = t_tl.webgl.WebGL,
        O = t_tl.webgl.WebGLContext;
    t_tl.webgl.canvas.WebGLContext2D;
    x.interface("t_tl.d3.core.IClone"), x.interface("t_tl.d3.graphics.IVertex"), x.interface("t_tl.d3.core.render.IUpdate"), x.interface("t_tl.d3.core.scene.ITreeNode"), x.interface("t_tl.d3.core.render.IRenderable");
    var V = function() {
            function P() {}
            return m(P, "t_tl.d3.animation.AnimationClipParser01"), P.READ_DATA = function() {
                P._DATA.offset = P._reader.getUint32(), P._DATA.size = P._reader.getUint32()
            }, P.READ_BLOCK = function() {
                for (var e = P._BLOCK.count = P._reader.getUint16(), t = P._BLOCK.blockStarts = [], n = P._BLOCK.blockLengths = [], i = 0; i < e; i++) t.push(P._reader.getUint32()), n.push(P._reader.getUint32())
            }, P.READ_STRINGS = function() {
                var e = P._reader.getUint32(),
                    t = P._reader.getUint16(),
                    n = P._reader.pos;
                P._reader.pos = e + P._DATA.offset;
                for (var i = 0; i < t; i++) P._strings[i] = P._reader.readUTFString();
                P._reader.pos = n
            }, P.parse = function(e, t) {
                P._animationClip = e;
                (P._reader = t).__getBuffer();
                P.READ_DATA(), P.READ_BLOCK(), P.READ_STRINGS();
                for (var n = 0, i = P._BLOCK.count; n < i; n++) {
                    var r = t.getUint16(),
                        a = P._strings[r],
                        o = P["READ_" + a];
                    if (null == o) throw new Error("model file err,no this function:" + r + " " + a);
                    o.call()
                }
            }, P.READ_ANIMATIONS = function() {
                var e, t = 0,
                    n = 0,
                    i = P._reader,
                    r = i.__getBuffer(),
                    a = [],
                    o = i.getUint8();
                for (a.length = o, t = 0; t < o; t++) a[t] = i.getUint16();
                var s = [],
                    l = i.getUint16();
                for (s.length = l, t = 0; t < l; t++) s[t] = i.getFloat32();
                var h = P._animationClip;
                h.name = P._strings[i.getUint16()];
                var _ = h._duration = i.getFloat32();
                h.islooping = !!i.getByte(), h._frameRate = i.getInt16();
                var u = i.getInt16(),
                    c = h._nodes = new Array;
                c.length = u, (h._publicClipDatas = []).length = u;
                var d = h._nodesMap = {},
                    f = 0,
                    m = 0;
                for (t = 0; t < u; t++) {
                    e = c[t] = new k;
                    var p = i.getUint16(),
                        v = e.path = [];
                    for (v.length = p, n = 0; n < p; n++) v[n] = P._strings[i.getUint16()];
                    var g = v.join("/"),
                        E = d[g];
                    E || (d[g] = E = []), E.push(e);
                    var S = i.getInt16(); - 1 !== S && (e.componentType = P._strings[S]);
                    var D = G._propertyIndexDic[P._strings[i.getUint16()]];
                    if (null == D) throw new Error("AnimationClipParser01:unknown property name.");
                    var T = D < 4,
                        x = !T || T && "" === v[0];
                    (e._cacheProperty = x) ? f++ : m++, e.propertyNameID = D;
                    var M = a[i.getUint8()];
                    e.keyFrameWidth = M / 4;
                    var R = e.keyFrames = [],
                        A = R.length = i.getUint16(),
                        I = null,
                        y = NaN;
                    for (n = 0; n < A; n++) {
                        var C = R[n] = new z;
                        y = C.startTime = s[i.getUint16()];
                        var N = i.pos;
                        C.inTangent = new Float32Array(r.slice(N, N + M)), i.pos += M, N = i.pos, C.outTangent = new Float32Array(r.slice(N, N + M)), i.pos += M, N = i.pos, C.data = new Float32Array(r.slice(N, N + M)), i.pos += M, I && (I.next = C, I.duration = y - I.startTime), I = C
                    }
                    C.next = null, C.duration = _ - y
                }
                var w = h._nodeToCachePropertyMap = new Int32Array(u),
                    O = h._cachePropertyMap = new Int32Array(f),
                    V = h._unCachePropertyMap = new Int32Array(m);
                for (f = m = 0, t = 0; t < u; t++)(e = c[t])._cacheProperty ? (w[t] = f, O[f++] = t) : V[m++] = t
            }, P._animationClip = null, P._reader = null, P._strings = [], u(P, ["_BLOCK", function() {
                return this._BLOCK = {
                    count: 0
                }
            }, "_DATA", function() {
                return this._DATA = {
                    offset: 0,
                    size: 0
                }
            }]), P
        }(),
        P = function() {
            function B() {}
            return m(B, "t_tl.d3.animation.AnimationClipParser02"), B.READ_DATA = function() {
                B._DATA.offset = B._reader.getUint32(), B._DATA.size = B._reader.getUint32()
            }, B.READ_BLOCK = function() {
                for (var e = B._BLOCK.count = B._reader.getUint16(), t = B._BLOCK.blockStarts = [], n = B._BLOCK.blockLengths = [], i = 0; i < e; i++) t.push(B._reader.getUint32()), n.push(B._reader.getUint32())
            }, B.READ_STRINGS = function() {
                var e = B._reader.getUint32(),
                    t = B._reader.getUint16(),
                    n = B._reader.pos;
                B._reader.pos = e + B._DATA.offset;
                for (var i = 0; i < t; i++) B._strings[i] = B._reader.readUTFString();
                B._reader.pos = n
            }, B.parse = function(e, t) {
                B._animationClip = e;
                (B._reader = t).__getBuffer();
                B.READ_DATA(), B.READ_BLOCK(), B.READ_STRINGS();
                for (var n = 0, i = B._BLOCK.count; n < i; n++) {
                    var r = t.getUint16(),
                        a = B._strings[r],
                        o = B["READ_" + a];
                    if (null == o) throw new Error("model file err,no this function:" + r + " " + a);
                    o.call()
                }
            }, B.READ_ANIMATIONS = function() {
                var e, t = 0,
                    n = 0,
                    i = B._reader,
                    r = i.__getBuffer(),
                    a = [],
                    o = i.getUint8();
                for (a.length = o, t = 0; t < o; t++) a[t] = i.getUint16();
                var s = [],
                    l = i.getUint16();
                for (s.length = l, t = 0; t < l; t++) s[t] = i.getFloat32();
                var h = B._animationClip;
                h.name = B._strings[i.getUint16()];
                var _ = h._duration = i.getFloat32();
                h.islooping = !!i.getByte(), h._frameRate = i.getInt16();
                var u = i.getInt16(),
                    c = h._nodes = new Array;
                c.length = u, (h._publicClipDatas = []).length = u;
                var d = h._nodesMap = {},
                    f = 0,
                    m = 0;
                for (t = 0; t < u; t++) {
                    e = c[t] = new k;
                    var p = i.getUint16(),
                        v = e.path = [];
                    for (v.length = p, n = 0; n < p; n++) v[n] = B._strings[i.getUint16()];
                    var g = v.join("/"),
                        E = d[g];
                    E || (d[g] = E = []), E.push(e);
                    var S = i.getInt16(); - 1 !== S && (e.componentType = B._strings[S]);
                    var D = G._propertyIndexDic[B._strings[i.getUint16()]];
                    if (null == D) throw new Error("AnimationClipParser02:unknown property name.");
                    var T = D < 4,
                        x = !T || T && "" === v[0];
                    (e._cacheProperty = x) ? f++ : m++, e.propertyNameID = D;
                    var M = a[i.getUint8()];
                    e.keyFrameWidth = M / 4;
                    var R = e.keyFrames = [],
                        A = R.length = i.getUint16(),
                        I = null,
                        y = NaN;
                    for (n = 0; n < A; n++) {
                        var C = R[n] = new z;
                        y = C.startTime = s[i.getUint16()];
                        var N = i.pos;
                        C.inTangent = new Float32Array(r.slice(N, N + M)), i.pos += M, N = i.pos, C.outTangent = new Float32Array(r.slice(N, N + M)), i.pos += M, N = i.pos, C.data = new Float32Array(r.slice(N, N + M)), i.pos += M, I && (I.next = C, I.duration = y - I.startTime), I = C
                    }
                    C.next = null, C.duration = _ - y
                }
                var w = i.getUint16();
                for (t = 0; t < w; t++) {
                    var O, V = new U;
                    V.time = i.getFloat32(), V.eventName = B._strings[i.getUint16()];
                    var P = i.getUint16();
                    for (0 < P && (V.params = O = []), n = 0; n < P; n++) {
                        switch (i.getByte()) {
                            case 0:
                                O.push(!!i.getByte());
                                break;
                            case 1:
                                O.push(i.getInt32());
                                break;
                            case 2:
                                O.push(i.getFloat32());
                                break;
                            case 3:
                                O.push(B._strings[i.getUint16()]);
                                break;
                            default:
                                throw new Error("unknown type.")
                        }
                    }
                    h.addEvent(V)
                }
                var L = h._nodeToCachePropertyMap = new Int32Array(u),
                    b = h._cachePropertyMap = new Int32Array(f),
                    F = h._unCachePropertyMap = new Int32Array(m);
                for (f = m = 0, t = 0; t < u; t++)(e = c[t])._cacheProperty ? (L[t] = f, b[f++] = t) : F[m++] = t
            }, B._animationClip = null, B._reader = null, B._strings = [], u(B, ["_BLOCK", function() {
                return this._BLOCK = {
                    count: 0
                }
            }, "_DATA", function() {
                return this._DATA = {
                    offset: 0,
                    size: 0
                }
            }]), B
        }(),
        U = function() {
            function e() {
                this.time = NaN, this.eventName = null, this.params = null
            }
            return m(e, "t_tl.d3.animation.AnimationEvent"), e
        }(),
        G = function() {
            function i() {
                this._childs = [], this.transform = new $t(this)
            }
            m(i, "t_tl.d3.animation.AnimationNode");
            var e = i.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.addChild = function(e) {
                e._parent = this, e.transform.setParent(this.transform), this._childs.push(e)
            }, e.removeChild = function(e) {
                var t = this._childs.indexOf(e); - 1 !== t && this._childs.splice(t, 1)
            }, e.getChildByName = function(e) {
                for (var t = 0, n = this._childs.length; t < n; t++) {
                    var i = this._childs[t];
                    if (i.name === e) return i
                }
                return null
            }, e.getChildByIndex = function(e) {
                return this._childs[e]
            }, e.getChildCount = function() {
                return this._childs.length
            }, e.cloneTo = function(e) {
                var t = e;
                t.name = this.name;
                for (var n = 0, i = this._childs.length; n < i; n++) {
                    var r = this._childs[n],
                        a = r.clone();
                    t.addChild(a);
                    var o = r.transform,
                        s = a.transform;
                    s.setLocalPosition(o.getLocalPosition()), s.setLocalRotation(o.getLocalRotation()), s.setLocalScale(o.getLocalScale()), s._localRotationEuler = o._localRotationEuler, s._setWorldMatrixIgnoreUpdate(o.getWorldMatrix())
                }
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, i.__init__ = function() {
                i.registerAnimationNodeProperty("localPosition", i._getLocalPosition, i._setLocalPosition), i.registerAnimationNodeProperty("localRotation", i._getLocalRotation, i._setLocalRotation), i.registerAnimationNodeProperty("localScale", i._getLocalScale, i._setLocalScale), i.registerAnimationNodeProperty("localRotationEuler", i._getLocalRotationEuler, i._setLocalRotationEuler), i.registerAnimationNodeProperty("particleRender.sharedMaterial.tintColor", i._getParticleRenderSharedMaterialTintColor, i._setParticleRenderSharedMaterialTintColor), i.registerAnimationNodeProperty("meshRender.sharedMaterial.tilingOffset", i._getMeshRenderSharedMaterialTilingOffset, i._setMeshRenderSharedMaterialTilingOffset), i.registerAnimationNodeProperty("meshRender.sharedMaterial.albedoColor", i._getMeshRenderSharedMaterialAlbedo, i._setMeshRenderSharedMaterialAlbedo), i.registerAnimationNodeProperty("skinnedMeshRender.sharedMaterial.tilingOffset", i._getSkinnedMeshRenderSharedMaterialTilingOffset, i._setSkinnedMeshRenderSharedMaterialTilingOffset), i.registerAnimationNodeProperty("skinnedMeshRender.sharedMaterial.albedoColor", i._getSkinnedMeshRenderSharedMaterialAlbedo, i._setSkinnedMeshRenderSharedMaterialAlbedo), i.registerAnimationNodeProperty("meshRender.sharedMaterial.albedo", i._getMeshRenderSharedMaterialAlbedo, i._setMeshRenderSharedMaterialAlbedo), i.registerAnimationNodeProperty("skinnedMeshRender.sharedMaterial.albedo", i._getSkinnedMeshRenderSharedMaterialAlbedo, i._setSkinnedMeshRenderSharedMaterialAlbedo), i.registerAnimationNodeProperty("meshRender.sharedMaterial.intensity", i._getMeshRenderSharedMaterialIntensity, i._setMeshRenderSharedMaterialIntensity), i.registerAnimationNodeProperty("meshRender.sharedMaterial.alpha", i._getMeshRenderSharedMaterialAlpha, i._setMeshRenderSharedMaterialAlpha), i.registerAnimationNodeProperty("meshRender.sharedMaterial.alphaColor", i._getMeshRenderSharedMaterialAlphaColor, i._setMeshRenderSharedMaterialAlphaColor), i.registerAnimationNodeProperty("meshRender.sharedMaterial.baseColor", i._getMeshRenderSharedMaterialBaseColor, i._setMeshRenderSharedMaterialBaseColor), i.registerAnimationNodeProperty("meshRender.sharedMaterial.dissolve", i._getMeshRenderSharedMaterialDissolve, i._setMeshRenderSharedMaterialDissolve), i.registerAnimationNodeProperty("meshRender.sharedMaterial.dissolveSpeed", i._getMeshRenderSharedMaterialDissolveSpeed, i._setMeshRenderSharedMaterialDissolveSpeed), i.registerAnimationNodeProperty("meshRender.sharedMaterial.mMultiplier", i._getMeshRenderSharedMaterialMMultiplier, i._setMeshRenderSharedMaterialMMultiplier), i.registerAnimationNodeProperty("meshRender.sharedMaterial.baseScrollSpeedX", i._getMeshRenderSharedMaterialBaseScrollSpeedX, i._setMeshRenderSharedMaterialBaseScrollSpeedX), i.registerAnimationNodeProperty("meshRender.sharedMaterial.baseScrollSpeedY", i._getMeshRenderSharedMaterialBaseScrollSpeedY, i._setMeshRenderSharedMaterialBaseScrollSpeedY), i.registerAnimationNodeProperty("meshRender.sharedMaterial.secondScrollSpeedX", i._getMeshRenderSharedMaterialSecondScrollSpeedX, i._setMeshRenderSharedMaterialSecondScrollSpeedX), i.registerAnimationNodeProperty("meshRender.sharedMaterial.secondScrollSpeedY", i._getMeshRenderSharedMaterialSecondScrollSpeedY, i._setMeshRenderSharedMaterialSecondScrollSpeedY), i.registerAnimationNodeProperty("meshRender.sharedMaterial.detailTilingOffset", i._getMeshRenderSharedMaterialDetailTilingOffset, i._setMeshRenderSharedMaterialDetailTilingOffset), i.registerAnimationNodeProperty("meshRender.sharedMaterial.dissolveTilingOffset", i._getMeshRenderSharedMaterialDissolveTilingOffset, i._setMeshRenderSharedMaterialDissolveTilingOffset), i.registerAnimationNodeProperty("meshRender.sharedMaterial.maskTilingOffset", i._getMeshRenderSharedMaterialMaskTilingOffset, i._setMeshRenderSharedMaterialMaskTilingOffset)
            }, i.registerAnimationNodeProperty = function(e, t, n) {
                if (i._propertyIndexDic[e]) throw new Error("AnimationNode: this propertyName has registered.");
                i._propertyIndexDic[e] = i._propertyIDCounter, i._propertyGetFuncs[i._propertyIDCounter] = t, i._propertySetFuncs[i._propertyIDCounter] = n, i._propertyIDCounter++
            }, i._getLocalPosition = function(e, t) {
                return e ? e.transform.getLocalPosition() : t._transform.localPosition.elements
            }, i._setLocalPosition = function(e, t, n) {
                if (e) e.transform.setLocalPosition(n);
                else {
                    var i = t._transform,
                        r = i.localPosition;
                    r.elements = n, i.localPosition = r
                }
            }, i._getLocalRotation = function(e, t) {
                return e ? e.transform.getLocalRotation() : t._transform.localRotation.elements
            }, i._setLocalRotation = function(e, t, n) {
                if (e) e.transform.setLocalRotation(n);
                else {
                    var i = t._transform,
                        r = i.localRotation;
                    r.elements = n, i.localRotation = r
                }
            }, i._getLocalScale = function(e, t) {
                return e ? e.transform.getLocalScale() : t._transform.localScale.elements
            }, i._setLocalScale = function(e, t, n) {
                if (e) e.transform.setLocalScale(n);
                else {
                    var i = t._transform,
                        r = i.localScale;
                    r.elements = n, i.localScale = r
                }
            }, i._getLocalRotationEuler = function(e, t) {
                return e ? e.transform.getLocalRotationEuler() : t._transform.localRotationEuler.elements
            }, i._setLocalRotationEuler = function(e, t, n) {
                if (e) e.transform.setLocalRotationEuler(n);
                else {
                    var i = t._transform,
                        r = i.localRotationEuler;
                    r.elements = n, i.localRotationEuler = r
                }
            }, i._getMeshRenderSharedMaterialTilingOffset = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.tilingOffset.elements : null
                }
                return t.meshRender.sharedMaterial.tilingOffset.elements
            }, i._setMeshRenderSharedMaterialTilingOffset = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.meshRender.material).tilingOffset).elements = n, i.tilingOffset = r)
                } else(r = (i = t.meshRender.material).tilingOffset).elements = n, i.tilingOffset = r
            }, i._getMeshRenderSharedMaterialAlbedo = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.albedoColor.elements : null
                }
                return t.meshRender.sharedMaterial.albedoColor.elements
            }, i._setMeshRenderSharedMaterialAlbedo = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.meshRender.material).albedoColor).elements = n, i.albedoColor = r)
                } else(r = (i = t.meshRender.material).albedoColor).elements = n, i.albedoColor = r
            }, i._getSkinnedMeshRenderSharedMaterialTilingOffset = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.skinnedMeshRender.sharedMaterial.tilingOffset.elements : null
                }
                return t.skinnedMeshRender.sharedMaterial.tilingOffset.elements
            }, i._setSkinnedMeshRenderSharedMaterialTilingOffset = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.skinnedMeshRender.material).tilingOffset).elements = n, i.tilingOffset = r)
                } else(r = (i = t.skinnedMeshRender.material).tilingOffset).elements = n, i.tilingOffset = r
            }, i._getSkinnedMeshRenderSharedMaterialAlbedo = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.skinnedMeshRender.sharedMaterial.albedoColor.elements : null
                }
                return t.skinnedMeshRender.sharedMaterial.albedoColor.elements
            }, i._setSkinnedMeshRenderSharedMaterialAlbedo = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.skinnedMeshRender.material).albedoColor).elements = n, i.albedoColor = r)
                } else(r = (i = t.skinnedMeshRender.material).albedoColor).elements = n, i.albedoColor = r
            }, i._getParticleRenderSharedMaterialTintColor = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.particleRender.sharedMaterial.tintColor.elements : null
                }
                return t.particleRender.sharedMaterial.tintColor.elements
            }, i._setParticleRenderSharedMaterialTintColor = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.particleRender.material).tintColor).elements = n, i.tintColor = r)
                } else(r = (i = t.particleRender.material).tintColor).elements = n, i.tintColor = r
            }, i._getMeshRenderSharedMaterialAlphaColor = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.alphaColor.elements : null
                }
                return t.meshRender.sharedMaterial.alphaColor.elements
            }, i._setMeshRenderSharedMaterialAlphaColor = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.meshRender.material).alphaColor).elements = n, i.alphaColor = r)
                } else(r = (i = t.meshRender.material).alphaColor).elements = n, i.alphaColor = r
            }, i._getMeshRenderSharedMaterialBaseColor = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.baseColor.elements : null
                }
                return t.meshRender.sharedMaterial.baseColor.elements
            }, i._setMeshRenderSharedMaterialBaseColor = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.meshRender.material).baseColor).elements = n, i.baseColor = r)
                } else(r = (i = t.meshRender.material).baseColor).elements = n, i.baseColor = r
            }, i._getMeshRenderSharedMaterialDissolve = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.dissolve : 0
                }
                return t.meshRender.sharedMaterial.dissolve
            }, i._setMeshRenderSharedMaterialDissolve = function(e, t, n) {
                if (e) {
                    var i = e.transform._entity;
                    i && (i.owner.meshRender.material.dissolve = n[0])
                } else t.meshRender.material.dissolve = n[0]
            }, i._getMeshRenderSharedMaterialDissolveSpeed = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.dissolveSpeed : 0
                }
                return t.meshRender.sharedMaterial.dissolveSpeed
            }, i._setMeshRenderSharedMaterialDissolveSpeed = function(e, t, n) {
                if (e) {
                    var i = e.transform._entity;
                    i && (i.owner.meshRender.material.dissolveSpeed = n[0])
                } else t.meshRender.material.dissolveSpeed = n[0]
            }, i._getMeshRenderSharedMaterialMMultiplier = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.mMultiplier : 0
                }
                return t.meshRender.sharedMaterial.mMultiplier
            }, i._setMeshRenderSharedMaterialMMultiplier = function(e, t, n) {
                if (e) {
                    var i = e.transform._entity;
                    i && (i.owner.meshRender.material.mMultiplier = n[0])
                } else t.meshRender.material.mMultiplier = n[0]
            }, i._getMeshRenderSharedMaterialBaseScrollSpeedX = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.baseScrollSpeedX : 0
                }
                return t.meshRender.sharedMaterial.baseScrollSpeedX
            }, i._setMeshRenderSharedMaterialBaseScrollSpeedX = function(e, t, n) {
                if (e) {
                    var i = e.transform._entity;
                    i && (i.owner.meshRender.material.baseScrollSpeedX = n[0])
                } else t.meshRender.material.baseScrollSpeedX = n[0]
            }, i._getMeshRenderSharedMaterialBaseScrollSpeedY = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.baseScrollSpeedY : 0
                }
                return t.meshRender.sharedMaterial.baseScrollSpeedY
            }, i._setMeshRenderSharedMaterialBaseScrollSpeedY = function(e, t, n) {
                if (e) {
                    var i = e.transform._entity;
                    i && (i.owner.meshRender.material.baseScrollSpeedY = n[0])
                } else t.meshRender.material.baseScrollSpeedY = n[0]
            }, i._getMeshRenderSharedMaterialSecondScrollSpeedX = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.secondScrollSpeedX : 0
                }
                return t.meshRender.sharedMaterial.secondScrollSpeedX
            }, i._setMeshRenderSharedMaterialSecondScrollSpeedX = function(e, t, n) {
                if (e) {
                    var i = e.transform._entity;
                    i && (i.owner.meshRender.material.secondScrollSpeedX = n[0])
                } else t.meshRender.material.secondScrollSpeedX = n[0]
            }, i._getMeshRenderSharedMaterialSecondScrollSpeedY = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.secondScrollSpeedY : 0
                }
                return t.meshRender.sharedMaterial.secondScrollSpeedY
            }, i._setMeshRenderSharedMaterialSecondScrollSpeedY = function(e, t, n) {
                if (e) {
                    var i = e.transform._entity;
                    i && (i.owner.meshRender.material.secondScrollSpeedY = n[0])
                } else t.meshRender.material.secondScrollSpeedY = n[0]
            }, i._getMeshRenderSharedMaterialAlpha = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.alpha : 0
                }
                return t.meshRender.sharedMaterial.alpha
            }, i._setMeshRenderSharedMaterialAlpha = function(e, t, n) {
                if (e) {
                    var i = e.transform._entity;
                    i && (i.owner.meshRender.material.alpha = n[0])
                } else t.meshRender.material.alpha = n[0]
            }, i._getMeshRenderSharedMaterialIntensity = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.intensity : 0
                }
                return t.meshRender.sharedMaterial.intensity
            }, i._setMeshRenderSharedMaterialIntensity = function(e, t, n) {
                if (e) {
                    var i = e.transform._entity;
                    i && (i.owner.meshRender.material.intensity = n[0])
                } else t.meshRender.material.intensity = n[0]
            }, i._getMeshRenderSharedMaterialDetailTilingOffset = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.detailTilingOffset.elements : null
                }
                return t.meshRender.sharedMaterial.detailTilingOffset.elements
            }, i._setMeshRenderSharedMaterialDetailTilingOffset = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.meshRender.material).detailTilingOffset).elements = n, i.detailTilingOffset = r)
                } else(r = (i = t.meshRender.material).detailTilingOffset).elements = n, i.detailTilingOffset = r
            }, i._getMeshRenderSharedMaterialDissolveTilingOffset = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.dissolveTilingOffset.elements : null
                }
                return t.meshRender.sharedMaterial.dissolveTilingOffset.elements
            }, i._setMeshRenderSharedMaterialDissolveTilingOffset = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.meshRender.material).dissolveTilingOffset).elements = n, i.dissolveTilingOffset = r)
                } else(r = (i = t.meshRender.material).dissolveTilingOffset).elements = n, i.dissolveTilingOffset = r
            }, i._getMeshRenderSharedMaterialMaskTilingOffset = function(e, t) {
                if (e) {
                    var n = e.transform._entity;
                    return n ? n.owner.meshRender.sharedMaterial.maskTilingOffset.elements : null
                }
                return t.meshRender.sharedMaterial.maskTilingOffset.elements
            }, i._setMeshRenderSharedMaterialMaskTilingOffset = function(e, t, n) {
                var i, r;
                if (e) {
                    var a = e.transform._entity;
                    a && ((r = (i = a.owner.meshRender.material).maskTilingOffset).elements = n, i.maskTilingOffset = r)
                } else(r = (i = t.meshRender.material).maskTilingOffset).elements = n, i.maskTilingOffset = r
            }, i._propertyIDCounter = 0, i._propertyIndexDic = {}, i._propertySetFuncs = [], i._propertyGetFuncs = [], i
        }(),
        z = function() {
            function e() {
                this.startTime = NaN, this.inTangent = null, this.outTangent = null, this.data = null, this.duration = NaN, this.next = null
            }
            return m(e, "t_tl.d3.animation.Keyframe"), e
        }(),
        k = function() {
            function e() {
                this._cacheProperty = !1, this.path = null, this.componentType = null, this.propertyNameID = 0, this.keyFrameWidth = 0, this.defaultData = null, this.keyFrames = null
            }
            return m(e, "t_tl.d3.animation.KeyframeNode"), e
        }(),
        L = function() {
            function e() {
                this._tempVector30 = new Vt, this._tempVector31 = new Vt, this._tempVector32 = new Vt, this._a = new Vt, this._b = new Vt, this._c = new Vt, this._d = new Vt
            }
            m(e, "t_tl.d3.core.glitter.SplineCurvePositionVelocity");
            var t = e.prototype;
            return t.Init = function(e, t, n, i) {
                e.cloneTo(this._d), t.cloneTo(this._c), Vt.scale(e, 2, this._a), Vt.scale(n, 2, this._tempVector30), Vt.subtract(this._a, this._tempVector30, this._a), Vt.add(this._a, t, this._a), Vt.add(this._a, i, this._a), Vt.scale(n, 3, this._b), Vt.scale(e, 3, this._tempVector30), Vt.subtract(this._b, this._tempVector30, this._b), Vt.subtract(this._b, i, this._b), Vt.scale(t, 2, this._tempVector30), Vt.subtract(this._b, this._tempVector30, this._b)
            }, t.Slerp = function(e, t) {
                Vt.scale(this._a, e * e * e, this._tempVector30), Vt.scale(this._b, e * e, this._tempVector31), Vt.scale(this._c, e, this._tempVector32), Vt.add(this._tempVector30, this._tempVector31, t), Vt.add(t, this._tempVector32, t), Vt.add(t, this._d, t)
            }, e
        }(),
        b = function() {
            function b(e, t, n, i) {
                this._datas = null, this._w = 0, this._h = 0, this._minHeight = NaN, this._maxHeight = NaN, this._datas = [], this._w = e, this._h = t, this._minHeight = n, this._maxHeight = i
            }
            m(b, "t_tl.d3.core.HeightMap");
            var e = b.prototype;
            return e._inBounds = function(e, t) {
                return 0 <= e && e < this._h && 0 <= t && t < this._w
            }, e.getHeight = function(e, t) {
                return this._inBounds(e, t) ? this._datas[e][t] : NaN
            }, g(0, e, "width", function() {
                return this._w
            }), g(0, e, "height", function() {
                return this._h
            }), g(0, e, "maxHeight", function() {
                return this._maxHeight
            }), g(0, e, "minHeight", function() {
                return this._minHeight
            }), b.creatFromMesh = function(e, t, n, i) {
                for (var r = [], a = [], o = e.getSubMeshCount(), s = 0; s < o; s++) {
                    for (var l = e.getSubMesh(s), h = l._getVertexBuffer(), _ = h.getData(), u = [], c = 0; c < _.length; c += h.vertexDeclaration.vertexStride / 4) {
                        var d = new Vt(_[c + 0], _[c + 1], _[c + 2]);
                        u.push(d)
                    }
                    r.push(u);
                    var f = l._getIndexBuffer();
                    a.push(f.getData())
                }
                var m = e.boundingBox,
                    p = m.min.x,
                    v = m.min.z,
                    g = m.max.x,
                    E = m.max.z,
                    S = m.min.y,
                    D = m.max.y,
                    T = g - p,
                    x = E - v,
                    M = i.elements[0] = T / (t - 1),
                    R = i.elements[1] = x / (n - 1),
                    A = new b(t, n, S, D),
                    I = b._tempRay,
                    y = I.direction.elements;
                y[0] = 0, y[1] = -1, y[2] = 0;
                var C = D + .1;
                I.origin.elements[1] = C;
                for (var N = 0; N < n; N++) {
                    var w = v + N * R;
                    A._datas[N] = [];
                    for (var O = 0; O < t; O++) {
                        var V = p + O * M,
                            P = I.origin.elements;
                        P[0] = V, P[2] = w;
                        var L = b._getPosition(I, r, a);
                        A._datas[N][O] = L === Number.MAX_VALUE ? NaN : C - L
                    }
                }
                return A
            }, b.createFromImage = function(e, t, n) {
                for (var i = e.width, r = e.height, a = new b(i, r, t, n), o = (n - t) / 254, s = e.getPixels(), l = 0, h = 0; h < r; h++)
                    for (var _ = a._datas[h] = [], u = 0; u < i; u++) {
                        var c = s[l++],
                            d = s[l++],
                            f = s[l++],
                            m = s[l++];
                        _[u] = 255 == c && 255 == d && 255 == f && 255 == m ? NaN : (c + d + f) / 3 * o + t
                    }
                return a
            }, b._getPosition = function(e, t, n) {
                for (var i = Number.MAX_VALUE, r = 0; r < t.length; r++)
                    for (var a = t[r], o = n[r], s = 0; s < o.length; s += 3) {
                        var l = a[o[s + 0]],
                            h = a[o[s + 1]],
                            _ = a[o[s + 2]],
                            u = Yt.rayIntersectsTriangle(e, l, h, _);
                        !isNaN(u) && u < i && (i = u)
                    }
                return i
            }, u(b, ["_tempRay", function() {
                return this._tempRay = new wt(new Vt, new Vt)
            }]), b
        }(),
        F = function() {
            function r() {
                this._visible = !0, this._nonRigidbodyOffset = 0, this._colliders = []
            }
            m(r, "t_tl.d3.core.Layer");
            var e = r.prototype;
            return e._binarySearchIndex = function() {
                for (var e = 0, t = r._collsionTestList.length - 1, n = 0; e <= t;) {
                    n = Math.floor((e + t) / 2);
                    var i = r._collsionTestList[n];
                    if (i == this._number) return n;
                    i > this._number ? t = n - 1 : e = n + 1
                }
                return e
            }, e._addCollider = function(e) {
                0 === this._colliders.length && r._collsionTestList.splice(this._binarySearchIndex(), 0, this._number), e._isRigidbody ? (this._colliders.unshift(e), this._nonRigidbodyOffset++) : this._colliders.push(e)
            }, e._removeCollider = function(e) {
                var t = this._colliders.indexOf(e);
                t < this._nonRigidbodyOffset && this._nonRigidbodyOffset--, this._colliders.splice(t, 1), 0 === this._colliders.length && r._collsionTestList.splice(r._collsionTestList.indexOf(this._number), 1)
            }, g(0, e, "number", function() {
                return this._number
            }), g(0, e, "visible", function() {
                return this._visible
            }, function(e) {
                this._visible = e, r._visibleLayers = e ? r._visibleLayers | this.mask : r._visibleLayers & ~this.mask
            }), g(0, e, "mask", function() {
                return this._mask
            }), g(1, r, "visibleLayers", function() {
                return r._visibleLayers
            }, function(e) {
                r._visibleLayers = e;
                for (var t = 0, n = r._layerList.length; t < n; t++) {
                    var i = r._layerList[t];
                    i._visible = 0 != (i._mask & r._visibleLayers)
                }
            }), r.__init__ = function() {
                r._layerList.length = 31;
                for (var e = 0; e < 31; e++) {
                    var t = new r;
                    r._layerList[e] = t, 0 === e ? (t.name = "Default Layer", t.visible = !0) : (t.name = "Layer-" + e, t.visible = !1), t._number = e, t._mask = Math.pow(2, e)
                }
                r.currentCreationLayer = r._layerList[0]
            }, r.getLayerByNumber = function(e) {
                if (e < 0 || 30 < e) throw new Error("无法返回指定Layer，该number超出范围！");
                return r._layerList[e]
            }, r.getLayerByName = function(e) {
                for (var t = 0; t < 31; t++)
                    if (r._layerList[t].name === e) return r._layerList[t];
                throw new Error("无法返回指定Layer,该name不存在")
            }, r.isVisible = function(e) {
                return 0 != (e & r._currentCameraCullingMask & r._visibleLayers)
            }, r._layerList = [], r._visibleLayers = 2147483647, r._collsionTestList = [], r._currentCameraCullingMask = 2147483647, r.maxCount = 31, r.currentCreationLayer = null, r
        }(),
        Ie = function() {
            function e(e, t, n) {
                this._time = NaN, this._minCount = 0, this._maxCount = 0, this._time = e, this._minCount = t, this._maxCount = n
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.Burst");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.cloneTo = function(e) {
                var t = e;
                t._time = this._time, t._minCount = this._minCount, t._maxCount = this._maxCount
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, t, "time", function() {
                return this._time
            }), g(0, t, "minCount", function() {
                return this._minCount
            }), g(0, t, "maxCount", function() {
                return this._maxCount
            }), e
        }(),
        ye = function() {
            function e(e) {
                this._color = null, this.enbale = !1, this._color = e
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.ColorOverLifetime");
            var t = e.prototype;
            return t.cloneTo = function(e) {
                var t = e;
                this._color.cloneTo(t._color), t.enbale = this.enbale
            }, t.clone = function() {
                var e;
                switch (this._color.type) {
                    case 0:
                        e = we.createByConstant(this._color.constant.clone());
                        break;
                    case 1:
                        e = we.createByGradient(this._color.gradient.clone());
                        break;
                    case 2:
                        e = we.createByRandomTwoConstant(this._color.constantMin.clone(), this._color.constantMax.clone());
                        break;
                    case 3:
                        e = we.createByRandomTwoGradient(this._color.gradientMin.clone(), this._color.gradientMax.clone())
                }
                var t = new this.constructor(e);
                return t.enbale = this.enbale, t
            }, g(0, t, "color", function() {
                return this._color
            }), e
        }(),
        B = function() {
            function e() {
                this._destroyed = !1, this._emissionRate = 0, this._bursts = null, this.enbale = !1, this._destroyed = !1, this.emissionRate = 10, this._bursts = []
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.Emission");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0,
                "t_tl.resource.IDestroy": !0
            }), t._destroy = function() {
                this._bursts = null, this._destroyed = !0
            }, t.getBurstsCount = function() {
                return this._bursts.length
            }, t.getBurstByIndex = function(e) {
                return this._bursts[e]
            }, t.addBurst = function(e) {
                var t = this._bursts.length;
                if (0 < t)
                    for (var n = 0; n < t; n++) this._bursts[n].time > e.time && this._bursts.splice(n, 0, e);
                this._bursts.push(e)
            }, t.removeBurst = function(e) {
                var t = this._bursts.indexOf(e); - 1 !== t && this._bursts.splice(t, 1)
            }, t.removeBurstByIndex = function(e) {
                this._bursts.splice(e, 1)
            }, t.clearBurst = function() {
                this._bursts.length = 0
            }, t.cloneTo = function(e) {
                var t = e,
                    n = t._bursts;
                n.length = this._bursts.length;
                for (var i = 0, r = this._bursts.length; i < r; i++) {
                    var a = n[i];
                    a ? this._bursts[i].cloneTo(a) : n[i] = this._bursts[i].clone()
                }
                t._emissionRate = this._emissionRate, t.enbale = this.enbale
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, t, "destroyed", function() {
                return this._destroyed
            }), g(0, t, "emissionRate", function() {
                return this._emissionRate
            }, function(e) {
                if (e < 0) throw new Error("ParticleBaseShape:emissionRate value must large or equal than 0.");
                this._emissionRate = e
            }), e
        }(),
        Ce = function() {
            function i() {
                this._type = 0, this._constant = 0, this._overTime = null, this._constantMin = 0, this._constantMax = 0, this._overTimeMin = null, this._overTimeMax = null
            }
            m(i, "t_tl.d3.core.particleShuriKen.module.FrameOverTime");
            var e = i.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.cloneTo = function(e) {
                var t = e;
                t._type = this._type, t._constant = this._constant, this._overTime.cloneTo(t._overTime), t._constantMin = this._constantMin, t._constantMax = this._constantMax, this._overTimeMin.cloneTo(t._overTimeMin), this._overTimeMax.cloneTo(t._overTimeMax)
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, e, "frameOverTimeData", function() {
                return this._overTime
            }), g(0, e, "constant", function() {
                return this._constant
            }), g(0, e, "type", function() {
                return this._type
            }), g(0, e, "frameOverTimeDataMin", function() {
                return this._overTimeMin
            }), g(0, e, "constantMin", function() {
                return this._constantMin
            }), g(0, e, "frameOverTimeDataMax", function() {
                return this._overTimeMax
            }), g(0, e, "constantMax", function() {
                return this._constantMax
            }), i.createByConstant = function(e) {
                var t = new i;
                return t._type = 0, t._constant = e, t
            }, i.createByOverTime = function(e) {
                var t = new i;
                return t._type = 1, t._overTime = e, t
            }, i.createByRandomTwoConstant = function(e, t) {
                var n = new i;
                return n._type = 2, n._constantMin = e, n._constantMax = t, n
            }, i.createByRandomTwoOverTime = function(e, t) {
                var n = new i;
                return n._type = 3, n._overTimeMin = e, n._overTimeMax = t, n
            }, i
        }(),
        Ne = function() {
            function h() {
                this._type = 0, this._separateAxes = !1, this._constant = NaN, this._constantSeparate = null, this._gradient = null, this._gradientX = null, this._gradientY = null, this._gradientZ = null, this._gradientW = null, this._constantMin = NaN, this._constantMax = NaN, this._constantMinSeparate = null, this._constantMaxSeparate = null, this._gradientMin = null, this._gradientMax = null, this._gradientXMin = null, this._gradientXMax = null, this._gradientYMin = null, this._gradientYMax = null, this._gradientZMin = null, this._gradientZMax = null, this._gradientWMin = null, this._gradientWMax = null
            }
            m(h, "t_tl.d3.core.particleShuriKen.module.GradientAngularVelocity");
            var e = h.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.cloneTo = function(e) {
                var t = e;
                t._type = this._type, t._separateAxes = this._separateAxes, t._constant = this._constant, this._constantSeparate.cloneTo(t._constantSeparate), this._gradient.cloneTo(t._gradient), this._gradientX.cloneTo(t._gradientX), this._gradientY.cloneTo(t._gradientY), this._gradientZ.cloneTo(t._gradientZ), t._constantMin = this._constantMin, t._constantMax = this._constantMax, this._constantMinSeparate.cloneTo(t._constantMinSeparate), this._constantMaxSeparate.cloneTo(t._constantMaxSeparate), this._gradientMin.cloneTo(t._gradientMin), this._gradientMax.cloneTo(t._gradientMax), this._gradientXMin.cloneTo(t._gradientXMin), this._gradientXMax.cloneTo(t._gradientXMax), this._gradientYMin.cloneTo(t._gradientYMin), this._gradientYMax.cloneTo(t._gradientYMax), this._gradientZMin.cloneTo(t._gradientZMin), this._gradientZMax.cloneTo(t._gradientZMax)
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, e, "gradientZ", function() {
                return this._gradientZ
            }), g(0, e, "constant", function() {
                return this._constant
            }), g(0, e, "gradient", function() {
                return this._gradient
            }), g(0, e, "separateAxes", function() {
                return this._separateAxes
            }), g(0, e, "type", function() {
                return this._type
            }), g(0, e, "constantSeparate", function() {
                return this._constantSeparate
            }), g(0, e, "gradientX", function() {
                return this._gradientX
            }), g(0, e, "gradientY", function() {
                return this._gradientY
            }), g(0, e, "gradientW", function() {
                return this._gradientW
            }), g(0, e, "gradientMin", function() {
                return this._gradientMin
            }), g(0, e, "constantMin", function() {
                return this._constantMin
            }), g(0, e, "gradientMax", function() {
                return this._gradientMax
            }), g(0, e, "constantMax", function() {
                return this._constantMax
            }), g(0, e, "gradientWMin", function() {
                return this._gradientWMin
            }), g(0, e, "constantMinSeparate", function() {
                return this._constantMinSeparate
            }), g(0, e, "constantMaxSeparate", function() {
                return this._constantMaxSeparate
            }), g(0, e, "gradientXMin", function() {
                return this._gradientXMin
            }), g(0, e, "gradientXMax", function() {
                return this._gradientXMax
            }), g(0, e, "gradientWMax", function() {
                return this._gradientWMax
            }), g(0, e, "gradientYMin", function() {
                return this._gradientYMin
            }), g(0, e, "gradientYMax", function() {
                return this._gradientYMax
            }), g(0, e, "gradientZMin", function() {
                return this._gradientZMin
            }), g(0, e, "gradientZMax", function() {
                return this._gradientZMax
            }), h.createByConstant = function(e) {
                var t = new h;
                return t._type = 0, t._separateAxes = !1, t._constant = e, t
            }, h.createByConstantSeparate = function(e) {
                var t = new h;
                return t._type = 0, t._separateAxes = !0, t._constantSeparate = e, t
            }, h.createByGradient = function(e) {
                var t = new h;
                return t._type = 1, t._separateAxes = !1, t._gradient = e, t
            }, h.createByGradientSeparate = function(e, t, n, i) {
                var r = new h;
                return r._type = 1, r._separateAxes = !0, r._gradientX = e, r._gradientY = t, r._gradientZ = n, r._gradientW = i, r
            }, h.createByRandomTwoConstant = function(e, t) {
                var n = new h;
                return n._type = 2, n._separateAxes = !1, n._constantMin = e, n._constantMax = t, n
            }, h.createByRandomTwoConstantSeparate = function(e, t) {
                var n = new h;
                return n._type = 2, n._separateAxes = !0, n._constantMinSeparate = e, n._constantMaxSeparate = t, n
            }, h.createByRandomTwoGradient = function(e, t) {
                var n = new h;
                return n._type = 3, n._separateAxes = !1, n._gradientMin = e, n._gradientMax = t, n
            }, h.createByRandomTwoGradientSeparate = function(e, t, n, i, r, a, o, s) {
                var l = new h;
                return l._type = 3, l._separateAxes = !0, l._gradientXMin = e, l._gradientXMax = t, l._gradientYMin = n, l._gradientYMax = i, l._gradientZMin = r, l._gradientZMax = a, l._gradientWMin = o, l._gradientWMax = s, l
            }, h
        }(),
        we = function() {
            function i() {
                this._type = 0, this._constant = null, this._constantMin = null, this._constantMax = null, this._gradient = null, this._gradientMin = null, this._gradientMax = null
            }
            m(i, "t_tl.d3.core.particleShuriKen.module.GradientColor");
            var e = i.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.cloneTo = function(e) {
                var t = e;
                t._type = this._type, this._constant.cloneTo(t._constant), this._constantMin.cloneTo(t._constantMin), this._constantMax.cloneTo(t._constantMax), this._gradient.cloneTo(t._gradient), this._gradientMin.cloneTo(t._gradientMin), this._gradientMax.cloneTo(t._gradientMax)
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, e, "gradient", function() {
                return this._gradient
            }), g(0, e, "constant", function() {
                return this._constant
            }), g(0, e, "type", function() {
                return this._type
            }), g(0, e, "gradientMin", function() {
                return this._gradientMin
            }), g(0, e, "constantMin", function() {
                return this._constantMin
            }), g(0, e, "gradientMax", function() {
                return this._gradientMax
            }), g(0, e, "constantMax", function() {
                return this._constantMax
            }), i.createByConstant = function(e) {
                var t = new i;
                return t._type = 0, t._constant = e, t
            }, i.createByGradient = function(e) {
                var t = new i;
                return t._type = 1, t._gradient = e, t
            }, i.createByRandomTwoConstant = function(e, t) {
                var n = new i;
                return n._type = 2, n._constantMin = e, n._constantMax = t, n
            }, i.createByRandomTwoGradient = function(e, t) {
                var n = new i;
                return n._type = 3, n._gradientMin = e, n._gradientMax = t, n
            }, i
        }(),
        W = function() {
            function e() {
                this._alphaCurrentLength = 0, this._rgbCurrentLength = 0, this._alphaElements = null, this._rgbElements = null, this._alphaElements = new Float32Array(8), this._rgbElements = new Float32Array(16)
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.GradientDataColor");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.addAlpha = function(e, t) {
                this._alphaCurrentLength < 8 ? (6 === this._alphaCurrentLength && 1 !== e && (e = 1, console.log("GradientDataColor warning:the forth key is  be force set to 1.")), this._alphaElements[this._alphaCurrentLength++] = e, this._alphaElements[this._alphaCurrentLength++] = t) : console.log("GradientDataColor warning:data count must lessEqual than 4")
            }, t.addRGB = function(e, t) {
                this._rgbCurrentLength < 16 ? (12 === this._rgbCurrentLength && 1 !== e && (e = 1, console.log("GradientDataColor warning:the forth key is  be force set to 1.")), this._rgbElements[this._rgbCurrentLength++] = e, this._rgbElements[this._rgbCurrentLength++] = t.x, this._rgbElements[this._rgbCurrentLength++] = t.y, this._rgbElements[this._rgbCurrentLength++] = t.z) : console.log("GradientDataColor warning:data count must lessEqual than 4")
            }, t.cloneTo = function(e) {
                var t = e,
                    n = 0,
                    i = 0;
                t._alphaCurrentLength = this._alphaCurrentLength;
                var r = t._alphaElements;
                for (r.length = this._alphaElements.length, n = 0, i = this._alphaElements.length; n < i; n++) r[n] = this._alphaElements[n];
                t._rgbCurrentLength = this._rgbCurrentLength;
                var a = t._rgbElements;
                for (a.length = this._rgbElements.length, n = 0, i = this._rgbElements.length; n < i; n++) a[n] = this._rgbElements[n]
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, t, "alphaGradientCount", function() {
                return this._alphaCurrentLength / 2
            }), g(0, t, "rgbGradientCount", function() {
                return this._rgbCurrentLength / 4
            }), e
        }(),
        X = function() {
            function e() {
                this._currentLength = 0, this._elements = null, this._elements = new Float32Array(8)
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.GradientDataInt");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.add = function(e, t) {
                this._currentLength < 8 ? (6 === this._currentLength && 1 !== e && (e = 1, console.log("Warning:the forth key is  be force set to 1.")), this._elements[this._currentLength++] = e, this._elements[this._currentLength++] = t) : console.log("Warning:data count must lessEqual than 4")
            }, t.cloneTo = function(e) {
                var t = e;
                t._currentLength = this._currentLength;
                var n = t._elements;
                n.length = this._elements.length;
                for (var i = 0, r = this._elements.length; i < r; i++) n[i] = this._elements[i]
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, t, "gradientCount", function() {
                return this._currentLength / 2
            }), e
        }(),
        Z = function() {
            function e() {
                this._currentLength = 0, this._elements = null, this._elements = new Float32Array(8)
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.GradientDataNumber");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.add = function(e, t) {
                this._currentLength < 8 ? (6 === this._currentLength && 1 !== e && (e = 1, console.log("GradientDataNumber warning:the forth key is  be force set to 1.")), this._elements[this._currentLength++] = e, this._elements[this._currentLength++] = t) : console.log("GradientDataNumber warning:data count must lessEqual than 4")
            }, t.getKeyByIndex = function(e) {
                return this._elements[2 * e]
            }, t.getValueByIndex = function(e) {
                return this._elements[2 * e + 1]
            }, t.getAverageValue = function() {
                for (var e = 0, t = this._currentLength - 2; e < t; e += 2) {
                    this._elements[e + 1];
                    this._elements[e + 3], this._elements[e + 2] - this._elements[e]
                }
                return 0
            }, t.cloneTo = function(e) {
                var t = e;
                t._currentLength = this._currentLength;
                var n = t._elements;
                n.length = this._elements.length;
                for (var i = 0, r = this._elements.length; i < r; i++) n[i] = this._elements[i]
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, t, "gradientCount", function() {
                return this._currentLength / 2
            }), e
        }(),
        Oe = (function() {
            function e() {
                this._currentLength = 0, this._elements = null, this._elements = new Float32Array(12)
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.GradientDataVector2");
            var t = e.prototype;
            x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.add = function(e, t) {
                this._currentLength < 8 ? (6 === this._currentLength && 1 !== e && (e = 1, console.log("GradientDataVector2 warning:the forth key is  be force set to 1.")), this._elements[this._currentLength++] = e, this._elements[this._currentLength++] = t.x, this._elements[this._currentLength++] = t.y) : console.log("GradientDataVector2 warning:data count must lessEqual than 4")
            }, t.cloneTo = function(e) {
                var t = e;
                t._currentLength = this._currentLength;
                var n = t._elements;
                n.length = this._elements.length;
                for (var i = 0, r = this._elements.length; i < r; i++) n[i] = this._elements[i]
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, t, "gradientCount", function() {
                return this._currentLength / 3
            })
        }(), function() {
            function s() {
                this._type = 0, this._separateAxes = !1, this._gradient = null, this._gradientX = null, this._gradientY = null, this._gradientZ = null, this._constantMin = NaN, this._constantMax = NaN, this._constantMinSeparate = null, this._constantMaxSeparate = null, this._gradientMin = null, this._gradientMax = null, this._gradientXMin = null, this._gradientXMax = null, this._gradientYMin = null, this._gradientYMax = null, this._gradientZMin = null, this._gradientZMax = null
            }
            m(s, "t_tl.d3.core.particleShuriKen.module.GradientSize");
            var e = s.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.getMaxSizeInGradient = function() {
                var e = 0,
                    t = 0,
                    n = -Number.MAX_VALUE;
                switch (this._type) {
                    case 0:
                        if (this._separateAxes) {
                            for (e = 0, t = this._gradientX.gradientCount; e < t; e++) n = Math.max(n, this._gradientX.getValueByIndex(e));
                            for (e = 0, t = this._gradientY.gradientCount; e < t; e++) n = Math.max(n, this._gradientY.getValueByIndex(e))
                        } else
                            for (e = 0, t = this._gradient.gradientCount; e < t; e++) n = Math.max(n, this._gradient.getValueByIndex(e));
                        break;
                    case 1:
                        this._separateAxes ? (n = Math.max(this._constantMinSeparate.x, this._constantMaxSeparate.x), n = Math.max(n, this._constantMinSeparate.y), n = Math.max(n, this._constantMaxSeparate.y)) : n = Math.max(this._constantMin, this._constantMax);
                        break;
                    case 2:
                        if (this._separateAxes) {
                            for (e = 0, t = this._gradientXMin.gradientCount; e < t; e++) n = Math.max(n, this._gradientXMin.getValueByIndex(e));
                            for (e = 0, t = this._gradientXMax.gradientCount; e < t; e++) n = Math.max(n, this._gradientXMax.getValueByIndex(e));
                            for (e = 0, t = this._gradientYMin.gradientCount; e < t; e++) n = Math.max(n, this._gradientYMin.getValueByIndex(e));
                            for (e = 0, t = this._gradientZMax.gradientCount; e < t; e++) n = Math.max(n, this._gradientZMax.getValueByIndex(e))
                        } else {
                            for (e = 0, t = this._gradientMin.gradientCount; e < t; e++) n = Math.max(n, this._gradientMin.getValueByIndex(e));
                            for (e = 0, t = this._gradientMax.gradientCount; e < t; e++) n = Math.max(n, this._gradientMax.getValueByIndex(e))
                        }
                }
                return n
            }, e.cloneTo = function(e) {
                var t = e;
                t._type = this._type, t._separateAxes = this._separateAxes, this._gradient.cloneTo(t._gradient), this._gradientX.cloneTo(t._gradientX), this._gradientY.cloneTo(t._gradientY), this._gradientZ.cloneTo(t._gradientZ), t._constantMin = this._constantMin, t._constantMax = this._constantMax, this._constantMinSeparate.cloneTo(t._constantMinSeparate), this._constantMaxSeparate.cloneTo(t._constantMaxSeparate), this._gradientMin.cloneTo(t._gradientMin), this._gradientMax.cloneTo(t._gradientMax), this._gradientXMin.cloneTo(t._gradientXMin), this._gradientXMax.cloneTo(t._gradientXMax), this._gradientYMin.cloneTo(t._gradientYMin), this._gradientYMax.cloneTo(t._gradientYMax), this._gradientZMin.cloneTo(t._gradientZMin), this._gradientZMax.cloneTo(t._gradientZMax)
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, e, "gradientZ", function() {
                return this._gradientZ
            }), g(0, e, "gradient", function() {
                return this._gradient
            }), g(0, e, "separateAxes", function() {
                return this._separateAxes
            }), g(0, e, "type", function() {
                return this._type
            }), g(0, e, "gradientMin", function() {
                return this._gradientMin
            }), g(0, e, "constantMin", function() {
                return this._constantMin
            }), g(0, e, "gradientX", function() {
                return this._gradientX
            }), g(0, e, "gradientY", function() {
                return this._gradientY
            }), g(0, e, "gradientMax", function() {
                return this._gradientMax
            }), g(0, e, "constantMax", function() {
                return this._constantMax
            }), g(0, e, "constantMinSeparate", function() {
                return this._constantMinSeparate
            }), g(0, e, "constantMaxSeparate", function() {
                return this._constantMaxSeparate
            }), g(0, e, "gradientXMin", function() {
                return this._gradientXMin
            }), g(0, e, "gradientXMax", function() {
                return this._gradientXMax
            }), g(0, e, "gradientYMin", function() {
                return this._gradientYMin
            }), g(0, e, "gradientYMax", function() {
                return this._gradientYMax
            }), g(0, e, "gradientZMin", function() {
                return this._gradientZMin
            }), g(0, e, "gradientZMax", function() {
                return this._gradientZMax
            }), s.createByGradient = function(e) {
                var t = new s;
                return t._type = 0, t._separateAxes = !1, t._gradient = e, t
            }, s.createByGradientSeparate = function(e, t, n) {
                var i = new s;
                return i._type = 0, i._separateAxes = !0, i._gradientX = e, i._gradientY = t, i._gradientZ = n, i
            }, s.createByRandomTwoConstant = function(e, t) {
                var n = new s;
                return n._type = 1, n._separateAxes = !1, n._constantMin = e, n._constantMax = t, n
            }, s.createByRandomTwoConstantSeparate = function(e, t) {
                var n = new s;
                return n._type = 1, n._separateAxes = !0, n._constantMinSeparate = e, n._constantMaxSeparate = t, n
            }, s.createByRandomTwoGradient = function(e, t) {
                var n = new s;
                return n._type = 2, n._separateAxes = !1, n._gradientMin = e, n._gradientMax = t, n
            }, s.createByRandomTwoGradientSeparate = function(e, t, n, i, r, a) {
                var o = new s;
                return o._type = 2, o._separateAxes = !0, o._gradientXMin = e, o._gradientXMax = t, o._gradientYMin = n, o._gradientYMax = i, o._gradientZMin = r, o._gradientZMax = a, o
            }, s
        }()),
        Ve = function() {
            function s() {
                this._type = 0, this._constant = null, this._gradientX = null, this._gradientY = null, this._gradientZ = null, this._constantMin = null, this._constantMax = null, this._gradientXMin = null, this._gradientXMax = null, this._gradientYMin = null, this._gradientYMax = null, this._gradientZMin = null, this._gradientZMax = null
            }
            m(s, "t_tl.d3.core.particleShuriKen.module.GradientVelocity");
            var e = s.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.cloneTo = function(e) {
                var t = e;
                t._type = this._type, this._constant.cloneTo(t._constant), this._gradientX.cloneTo(t._gradientX), this._gradientY.cloneTo(t._gradientY), this._gradientZ.cloneTo(t._gradientZ), this._constantMin.cloneTo(t._constantMin), this._constantMax.cloneTo(t._constantMax), this._gradientXMin.cloneTo(t._gradientXMin), this._gradientXMax.cloneTo(t._gradientXMax), this._gradientYMin.cloneTo(t._gradientYMin), this._gradientYMax.cloneTo(t._gradientYMax), this._gradientZMin.cloneTo(t._gradientZMin), this._gradientZMax.cloneTo(t._gradientZMax)
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, e, "gradientZ", function() {
                return this._gradientZ
            }), g(0, e, "constant", function() {
                return this._constant
            }), g(0, e, "type", function() {
                return this._type
            }), g(0, e, "gradientXMax", function() {
                return this._gradientXMax
            }), g(0, e, "constantMin", function() {
                return this._constantMin
            }), g(0, e, "gradientX", function() {
                return this._gradientX
            }), g(0, e, "gradientY", function() {
                return this._gradientY
            }), g(0, e, "gradientXMin", function() {
                return this._gradientXMin
            }), g(0, e, "constantMax", function() {
                return this._constantMax
            }), g(0, e, "gradientYMin", function() {
                return this._gradientYMin
            }), g(0, e, "gradientYMax", function() {
                return this._gradientYMax
            }), g(0, e, "gradientZMin", function() {
                return this._gradientZMin
            }), g(0, e, "gradientZMax", function() {
                return this._gradientZMax
            }), s.createByConstant = function(e) {
                var t = new s;
                return t._type = 0, t._constant = e, t
            }, s.createByGradient = function(e, t, n) {
                var i = new s;
                return i._type = 1, i._gradientX = e, i._gradientY = t, i._gradientZ = n, i
            }, s.createByRandomTwoConstant = function(e, t) {
                var n = new s;
                return n._type = 2, n._constantMin = e, n._constantMax = t, n
            }, s.createByRandomTwoGradient = function(e, t, n, i, r, a) {
                var o = new s;
                return o._type = 3, o._gradientXMin = e, o._gradientXMax = t, o._gradientYMin = n, o._gradientYMax = i, o._gradientZMin = r, o._gradientZMax = a, o
            }, s
        }(),
        Pe = function() {
            function e(e) {
                this._angularVelocity = null, this.enbale = !1, this._angularVelocity = e
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.RotationOverLifetime");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.cloneTo = function(e) {
                var t = e;
                this._angularVelocity.cloneTo(t._angularVelocity), t.enbale = this.enbale
            }, t.clone = function() {
                var e;
                switch (this._angularVelocity.type) {
                    case 0:
                        e = this._angularVelocity.separateAxes ? Ne.createByConstantSeparate(this._angularVelocity.constantSeparate.clone()) : Ne.createByConstant(this._angularVelocity.constant);
                        break;
                    case 1:
                        e = this._angularVelocity.separateAxes ? Ne.createByGradientSeparate(this._angularVelocity.gradientX.clone(), this._angularVelocity.gradientY.clone(), this._angularVelocity.gradientZ.clone(), this._angularVelocity.gradientW.clone()) : Ne.createByGradient(this._angularVelocity.gradient.clone());
                        break;
                    case 2:
                        e = this._angularVelocity.separateAxes ? Ne.createByRandomTwoConstantSeparate(this._angularVelocity.constantMinSeparate.clone(), this._angularVelocity.constantMaxSeparate.clone()) : Ne.createByRandomTwoConstant(this._angularVelocity.constantMin, this._angularVelocity.constantMax);
                        break;
                    case 3:
                        e = this._angularVelocity.separateAxes ? Ne.createByRandomTwoGradientSeparate(this._angularVelocity.gradientXMin.clone(), this._angularVelocity.gradientYMin.clone(), this._angularVelocity.gradientZMin.clone(), this._angularVelocity.gradientWMin.clone(), this._angularVelocity.gradientXMax.clone(), this._angularVelocity.gradientYMax.clone(), this._angularVelocity.gradientZMax.clone(), this._angularVelocity.gradientWMax.clone()) : Ne.createByRandomTwoGradient(this._angularVelocity.gradientMin.clone(), this._angularVelocity.gradientMax.clone())
                }
                var t = new this.constructor(e);
                return t.enbale = this.enbale, t
            }, g(0, t, "angularVelocity", function() {
                return this._angularVelocity
            }), e
        }(),
        Y = function() {
            function e() {
                this.enable = !1, this.randomDirection = !1
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.shape.BaseShape");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t._getShapeBoundBox = function(e) {
                throw new Error("BaseShape: must override it.")
            }, t._getSpeedBoundBox = function(e) {
                throw new Error("BaseShape: must override it.")
            }, t.generatePositionAndDirection = function(e, t, n, i) {
                throw new Error("BaseShape: must override it.")
            }, t._calculateProceduralBounds = function(e, t, n) {
                this._getShapeBoundBox(e);
                var i = e.min,
                    r = e.max;
                Vt.multiply(i, t, i), Vt.multiply(r, t, r);
                var a = new St(new Vt, new Vt);
                this.randomDirection ? (a.min = new Vt(-1, -1, -1), a.max = new Vt(1, 1, 1)) : this._getSpeedBoundBox(a);
                var o = new St(new Vt, new Vt),
                    s = o.min,
                    l = o.max;
                Vt.scale(a.min, n.y, s), Vt.scale(a.max, n.y, l), Vt.add(e.min, s, s), Vt.add(e.max, l, l), Vt.min(e.min, s, e.min), Vt.max(e.max, s, e.max);
                var h = new St(new Vt, new Vt),
                    _ = h.min,
                    u = h.max;
                Vt.scale(a.min, n.x, _), Vt.scale(a.max, n.x, u), Vt.min(h.min, u, s), Vt.max(h.min, u, l), Vt.min(e.min, s, e.min), Vt.max(e.max, s, e.max)
            }, t.cloneTo = function(e) {
                e.enable = this.enable
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, e
        }(),
        j = function() {
            function a() {}
            return m(a, "t_tl.d3.core.particleShuriKen.module.shape.ShapeUtils"), a._randomPointUnitArcCircle = function(e, t, n) {
                var i = t.elements,
                    r = NaN;
                r = n ? n.getFloat() * e : Math.random() * e, i[0] = Math.cos(r), i[1] = Math.sin(r)
            }, a._randomPointInsideUnitArcCircle = function(e, t, n) {
                var i = t.elements;
                a._randomPointUnitArcCircle(e, t, n);
                var r = NaN;
                r = n ? Math.pow(n.getFloat(), .5) : Math.pow(Math.random(), .5), i[0] = i[0] * r, i[1] = i[1] * r
            }, a._randomPointUnitCircle = function(e, t) {
                var n = e.elements,
                    i = NaN;
                i = t ? t.getFloat() * Math.PI * 2 : Math.random() * Math.PI * 2, n[0] = Math.cos(i), n[1] = Math.sin(i)
            }, a._randomPointInsideUnitCircle = function(e, t) {
                var n = e.elements;
                a._randomPointUnitCircle(e);
                var i = NaN;
                i = t ? Math.pow(t.getFloat(), .5) : Math.pow(Math.random(), .5), n[0] = n[0] * i, n[1] = n[1] * i
            }, a._randomPointUnitSphere = function(e, t) {
                var n = e.elements,
                    i = NaN,
                    r = NaN;
                t ? (i = n[2] = 2 * t.getFloat() - 1, r = t.getFloat() * Math.PI * 2) : (i = n[2] = 2 * Math.random() - 1, r = Math.random() * Math.PI * 2);
                var a = Math.sqrt(1 - i * i);
                n[0] = a * Math.cos(r), n[1] = a * Math.sin(r)
            }, a._randomPointInsideUnitSphere = function(e, t) {
                var n = e.elements;
                a._randomPointUnitSphere(e);
                var i = NaN;
                i = t ? Math.pow(t.getFloat(), 1 / 3) : Math.pow(Math.random(), 1 / 3), n[0] = n[0] * i, n[1] = n[1] * i, n[2] = n[2] * i
            }, a._randomPointInsideHalfUnitBox = function(e, t) {
                var n = e.elements;
                t ? (n[0] = t.getFloat() - .5, n[1] = t.getFloat() - .5, n[2] = t.getFloat() - .5) : (n[0] = Math.random() - .5, n[1] = Math.random() - .5, n[2] = Math.random() - .5)
            }, a
        }(),
        Le = function() {
            function e(e) {
                this._size = null, this.enbale = !1, this._size = e
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.SizeOverLifetime");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.cloneTo = function(e) {
                var t = e;
                this._size.cloneTo(t._size), t.enbale = this.enbale
            }, t.clone = function() {
                var e;
                switch (this._size.type) {
                    case 0:
                        e = this._size.separateAxes ? Oe.createByGradientSeparate(this._size.gradientX.clone(), this._size.gradientY.clone(), this._size.gradientZ.clone()) : Oe.createByGradient(this._size.gradient.clone());
                        break;
                    case 1:
                        e = this._size.separateAxes ? Oe.createByRandomTwoConstantSeparate(this._size.constantMinSeparate.clone(), this._size.constantMaxSeparate.clone()) : Oe.createByRandomTwoConstant(this._size.constantMin, this._size.constantMax);
                        break;
                    case 2:
                        e = this._size.separateAxes ? Oe.createByRandomTwoGradientSeparate(this._size.gradientXMin.clone(), this._size.gradientYMin.clone(), this._size.gradientZMin.clone(), this._size.gradientXMax.clone(), this._size.gradientYMax.clone(), this._size.gradientZMax.clone()) : Oe.createByRandomTwoGradient(this._size.gradientMin.clone(), this._size.gradientMax.clone())
                }
                var t = new this.constructor(e);
                return t.enbale = this.enbale, t
            }, g(0, t, "size", function() {
                return this._size
            }), e
        }(),
        be = function() {
            function i() {
                this._type = 0, this._constant = NaN, this._constantMin = NaN, this._constantMax = NaN
            }
            m(i, "t_tl.d3.core.particleShuriKen.module.StartFrame");
            var e = i.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.cloneTo = function(e) {
                var t = e;
                t._type = this._type, t._constant = this._constant, t._constantMin = this._constantMin, t._constantMax = this._constantMax
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, e, "constant", function() {
                return this._constant
            }), g(0, e, "type", function() {
                return this._type
            }), g(0, e, "constantMin", function() {
                return this._constantMin
            }), g(0, e, "constantMax", function() {
                return this._constantMax
            }), i.createByConstant = function(e) {
                var t = new i;
                return t._type = 0, t._constant = e, t
            }, i.createByRandomTwoConstant = function(e, t) {
                var n = new i;
                return n._type = 1, n._constantMin = e, n._constantMax = t, n
            }, i
        }(),
        Fe = function() {
            function e(e, t) {
                this._frame = null, this._startFrame = null, this.tiles = null, this.type = 0, this.randomRow = !1, this.rowIndex = 0, this.cycles = 0, this.enableUVChannels = 0, this.enable = !1, this.tiles = new Ot(1, 1), this.type = 0, this.randomRow = !0, this.rowIndex = 0, this.cycles = 1, this.enableUVChannels = 1, this._frame = e, this._startFrame = t
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.TextureSheetAnimation");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.cloneTo = function(e) {
                var t = e;
                this.tiles.cloneTo(t.tiles), t.type = this.type, t.randomRow = this.randomRow, this._frame.cloneTo(t._frame), this._startFrame.cloneTo(t._startFrame), t.cycles = this.cycles, t.enableUVChannels = this.enableUVChannels, t.enable = this.enable
            }, t.clone = function() {
                var e, t;
                switch (this._frame.type) {
                    case 0:
                        e = Ce.createByConstant(this._frame.constant);
                        break;
                    case 1:
                        e = Ce.createByOverTime(this._frame.frameOverTimeData.clone());
                        break;
                    case 2:
                        e = Ce.createByRandomTwoConstant(this._frame.constantMin, this._frame.constantMax);
                        break;
                    case 3:
                        e = Ce.createByRandomTwoOverTime(this._frame.frameOverTimeDataMin.clone(), this._frame.frameOverTimeDataMax.clone())
                }
                switch (this._startFrame.type) {
                    case 0:
                        t = be.createByConstant(this._startFrame.constant);
                        break;
                    case 1:
                        t = be.createByRandomTwoConstant(this._startFrame.constantMin, this._startFrame.constantMax)
                }
                var n = new this.constructor(e, t);
                return this.tiles.cloneTo(n.tiles), n.type = this.type, n.randomRow = this.randomRow, n.cycles = this.cycles, n.enableUVChannels = this.enableUVChannels, n.enable = this.enable, n
            }, g(0, t, "frame", function() {
                return this._frame
            }), g(0, t, "startFrame", function() {
                return this._startFrame
            }), e
        }(),
        Be = function() {
            function e(e) {
                this._velocity = null, this.enbale = !1, this.space = 0, this._velocity = e
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.VelocityOverLifetime");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.cloneTo = function(e) {
                var t = e;
                this._velocity.cloneTo(t._velocity), t.enbale = this.enbale, t.space = this.space
            }, t.clone = function() {
                var e;
                switch (this._velocity.type) {
                    case 0:
                        e = Ve.createByConstant(this._velocity.constant.clone());
                        break;
                    case 1:
                        e = Ve.createByGradient(this._velocity.gradientX.clone(), this._velocity.gradientY.clone(), this._velocity.gradientZ.clone());
                        break;
                    case 2:
                        e = Ve.createByRandomTwoConstant(this._velocity.constantMin.clone(), this._velocity.constantMax.clone());
                        break;
                    case 3:
                        e = Ve.createByRandomTwoGradient(this._velocity.gradientXMin.clone(), this._velocity.gradientYMin.clone(), this._velocity.gradientZMin.clone(), this._velocity.gradientXMax.clone(), this._velocity.gradientYMax.clone(), this._velocity.gradientZMax.clone())
                }
                var t = new this.constructor(e);
                return t.enbale = this.enbale, t.space = this.space, t
            }, g(0, t, "velocity", function() {
                return this._velocity
            }), e
        }(),
        K = function() {
            function U() {}
            return m(U, "t_tl.d3.core.particleShuriKen.ShurikenParticleData"), U._getStartLifetimeFromGradient = function(e, t) {
                for (var n = 1, i = e.gradientCount; n < i; n++) {
                    var r = e.getKeyByIndex(n);
                    if (t <= r) {
                        var a = e.getKeyByIndex(n - 1),
                            o = (t - a) / (r - a);
                        return H.lerp(e.getValueByIndex(n - 1), e.getValueByIndex(n), o)
                    }
                }
                throw new Error("ShurikenParticleData: can't get value foam startLifeTimeGradient.")
            }, U._randomInvertRoationArray = function(e, t, n, i, r) {
                var a = NaN;
                i ? (i.seed = r[6], a = i.getFloat(), r[6] = i.seed) : a = Math.random(), a < n ? (t[0] = -e[0], t[1] = -e[1], t[2] = -e[2]) : (t[0] = e[0], t[1] = e[1], t[2] = e[2])
            }, U._randomInvertRoation = function(e, t, n, i) {
                var r = NaN;
                return n ? (n.seed = i[6], r = n.getFloat(), i[6] = n.seed) : r = Math.random(), r < t && (e = -e), e
            }, U.create = function(e, t, n) {
                var i = e.autoRandomSeed,
                    r = e._rand,
                    a = e._randomSeeds;
                switch (e.startColorType) {
                    case 0:
                        var o = e.startColorConstant.elements;
                        U.startColor[0] = o[0], U.startColor[1] = o[1], U.startColor[2] = o[2], U.startColor[3] = o[3];
                        break;
                    case 2:
                        i ? H.lerpVector4(e.startColorConstantMin.elements, e.startColorConstantMax.elements, Math.random(), U.startColor) : (r.seed = a[3], H.lerpVector4(e.startColorConstantMin.elements, e.startColorConstantMax.elements, r.getFloat(), U.startColor), a[3] = r.seed)
                }
                var s = e.colorOverLifetime;
                if (s && s.enbale) {
                    var l = s.color;
                    switch (l.type) {
                        case 0:
                            U.startColor[0] = U.startColor[0] * l.constant.x, U.startColor[1] = U.startColor[1] * l.constant.y, U.startColor[2] = U.startColor[2] * l.constant.z, U.startColor[3] = U.startColor[3] * l.constant.w;
                            break;
                        case 2:
                            var h = NaN;
                            i ? h = Math.random() : (r.seed = a[10], h = r.getFloat(), a[10] = r.seed);
                            var _ = l.constantMin,
                                u = l.constantMax;
                            U.startColor[0] = U.startColor[0] * H.lerp(_.x, u.x, h), U.startColor[1] = U.startColor[1] * H.lerp(_.y, u.y, h), U.startColor[2] = U.startColor[2] * H.lerp(_.z, u.z, h), U.startColor[3] = U.startColor[3] * H.lerp(_.w, u.w, h)
                    }
                }
                var c = U.startSize;
                switch (e.startSizeType) {
                    case 0:
                        if (e.threeDStartSize) {
                            var d = e.startSizeConstantSeparate;
                            c[0] = d.x, c[1] = d.y, c[2] = d.z
                        } else c[0] = c[1] = c[2] = e.startSizeConstant;
                        break;
                    case 2:
                        if (e.threeDStartSize) {
                            var f = e.startSizeConstantMinSeparate,
                                m = e.startSizeConstantMaxSeparate;
                            i ? (c[0] = H.lerp(f.x, m.x, Math.random()), c[1] = H.lerp(f.y, m.y, Math.random()), c[2] = H.lerp(f.z, m.z, Math.random())) : (r.seed = a[4], c[0] = H.lerp(f.x, m.x, r.getFloat()), c[1] = H.lerp(f.y, m.y, r.getFloat()), c[2] = H.lerp(f.z, m.z, r.getFloat()), a[4] = r.seed)
                        } else i ? c[0] = c[1] = c[2] = H.lerp(e.startSizeConstantMin, e.startSizeConstantMax, Math.random()) : (r.seed = a[4], c[0] = c[1] = c[2] = H.lerp(e.startSizeConstantMin, e.startSizeConstantMax, r.getFloat()), a[4] = r.seed)
                }
                var p = e.sizeOverLifetime;
                if (p && p.enbale && 1 === p.size.type) {
                    var v = p.size;
                    if (v.separateAxes) i ? (c[0] = c[0] * H.lerp(v.constantMinSeparate.x, v.constantMaxSeparate.x, Math.random()), c[1] = c[1] * H.lerp(v.constantMinSeparate.y, v.constantMaxSeparate.y, Math.random()), c[2] = c[2] * H.lerp(v.constantMinSeparate.z, v.constantMaxSeparate.z, Math.random())) : (r.seed = a[11], c[0] = c[0] * H.lerp(v.constantMinSeparate.x, v.constantMaxSeparate.x, r.getFloat()), c[1] = c[1] * H.lerp(v.constantMinSeparate.y, v.constantMaxSeparate.y, r.getFloat()), c[2] = c[2] * H.lerp(v.constantMinSeparate.z, v.constantMaxSeparate.z, r.getFloat()), a[11] = r.seed);
                    else {
                        var g = NaN;
                        i ? g = H.lerp(v.constantMin, v.constantMax, Math.random()) : (r.seed = a[11], g = H.lerp(v.constantMin, v.constantMax, r.getFloat()), a[11] = r.seed), c[0] = c[0] * g, c[1] = c[1] * g, c[2] = c[2] * g
                    }
                }
                var E = t.renderMode;
                if (1 !== E) switch (e.startRotationType) {
                    case 0:
                        if (e.threeDStartRotation) {
                            var S = e.startRotationConstantSeparate,
                                D = U._tempVector30.elements;
                            U._randomInvertRoationArray(S.elements, D, e.randomizeRotationDirection, i ? null : r, a), U.startRotation[0] = D[0], U.startRotation[1] = D[1], U.startRotation[2] = 4 !== E ? -D[2] : D[2]
                        } else U.startRotation[0] = U._randomInvertRoation(e.startRotationConstant, e.randomizeRotationDirection, i ? null : r, a);
                        break;
                    case 2:
                        if (e.threeDStartRotation) {
                            var T = e.startRotationConstantMinSeparate,
                                x = e.startRotationConstantMaxSeparate,
                                M = U._tempVector30.elements;
                            i ? (M[0] = H.lerp(T.x, x.x, Math.random()), M[1] = H.lerp(T.y, x.y, Math.random()), M[2] = H.lerp(T.z, x.z, Math.random())) : (r.seed = a[5], M[0] = H.lerp(T.x, x.x, r.getFloat()), M[1] = H.lerp(T.y, x.y, r.getFloat()), M[2] = H.lerp(T.z, x.z, r.getFloat()), a[5] = r.seed), U._randomInvertRoationArray(M, M, e.randomizeRotationDirection, i ? null : r, a), U.startRotation[0] = M[0], U.startRotation[1] = M[1], U.startRotation[2] = 4 !== E ? -M[2] : M[2]
                        } else i ? U.startRotation[0] = U._randomInvertRoation(H.lerp(e.startRotationConstantMin, e.startRotationConstantMax, Math.random()), e.randomizeRotationDirection, i ? null : r, a) : (r.seed = a[5], U.startRotation[0] = U._randomInvertRoation(H.lerp(e.startRotationConstantMin, e.startRotationConstantMax, r.getFloat()), e.randomizeRotationDirection, i ? null : r, a), a[5] = r.seed)
                }
                switch (e.startLifetimeType) {
                    case 0:
                        U.startLifeTime = e.startLifetimeConstant;
                        break;
                    case 1:
                        U.startLifeTime = U._getStartLifetimeFromGradient(e.startLifeTimeGradient, e.emissionTime);
                        break;
                    case 2:
                        i ? U.startLifeTime = H.lerp(e.startLifetimeConstantMin, e.startLifetimeConstantMax, Math.random()) : (r.seed = a[7], U.startLifeTime = H.lerp(e.startLifetimeConstantMin, e.startLifetimeConstantMax, r.getFloat()), a[7] = r.seed);
                        break;
                    case 3:
                        var R = e.emissionTime;
                        i ? U.startLifeTime = H.lerp(U._getStartLifetimeFromGradient(e.startLifeTimeGradientMin, R), U._getStartLifetimeFromGradient(e.startLifeTimeGradientMax, R), Math.random()) : (r.seed = a[7], U.startLifeTime = H.lerp(U._getStartLifetimeFromGradient(e.startLifeTimeGradientMin, R), U._getStartLifetimeFromGradient(e.startLifeTimeGradientMax, R), r.getFloat()), a[7] = r.seed)
                }
                switch (e.startSpeedType) {
                    case 0:
                        U.startSpeed = e.startSpeedConstant;
                        break;
                    case 2:
                        i ? U.startSpeed = H.lerp(e.startSpeedConstantMin, e.startSpeedConstantMax, Math.random()) : (r.seed = a[8], U.startSpeed = H.lerp(e.startSpeedConstantMin, e.startSpeedConstantMax, r.getFloat()), a[8] = r.seed)
                }
                var A = e.textureSheetAnimation;
                if (A && A.enable) {
                    var I = A.tiles,
                        y = I.x,
                        C = I.y,
                        N = 1 / y,
                        w = 1 / C,
                        O = 0,
                        V = A.startFrame;
                    switch (V.type) {
                        case 0:
                            O = V.constant;
                            break;
                        case 1:
                            i ? O = H.lerp(V.constantMin, V.constantMax, Math.random()) : (r.seed = a[14], O = H.lerp(V.constantMin, V.constantMax, r.getFloat()), a[14] = r.seed)
                    }
                    var P = A.frame;
                    switch (P.type) {
                        case 0:
                            O += P.constant;
                            break;
                        case 2:
                            i ? O += H.lerp(P.constantMin, P.constantMax, Math.random()) : (r.seed = a[15], O += H.lerp(P.constantMin, P.constantMax, r.getFloat()), a[15] = r.seed)
                    }
                    var L = 0;
                    switch (A.type) {
                        case 0:
                            L = Math.floor(O / y);
                            break;
                        case 1:
                            A.randomRow ? i ? L = Math.floor(Math.random() * C) : (r.seed = a[13], L = Math.floor(r.getFloat() * C), a[13] = r.seed) : L = A.rowIndex
                    }
                    var b = Math.floor(O % y);
                    (U.startUVInfo = U.startUVInfo)[0] = N, U.startUVInfo[1] = w, U.startUVInfo[2] = b * N, U.startUVInfo[3] = L * w
                } else(U.startUVInfo = U.startUVInfo)[0] = 1, U.startUVInfo[1] = 1, U.startUVInfo[2] = 0, U.startUVInfo[3] = 0;
                switch (e.simulationSpace) {
                    case 0:
                        var F = n.position.elements;
                        U.simulationWorldPostion[0] = F[0], U.simulationWorldPostion[1] = F[1], U.simulationWorldPostion[2] = F[2];
                        var B = n.rotation.elements;
                        U.simulationWorldRotation[0] = B[0], U.simulationWorldRotation[1] = B[1], U.simulationWorldRotation[2] = B[2], U.simulationWorldRotation[3] = B[3];
                        break;
                    case 1:
                        break;
                    default:
                        throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.")
                }
            }, U.startLifeTime = NaN, U.startSpeed = NaN, u(U, ["_tempVector30", function() {
                return this._tempVector30 = new Vt
            }, "_tempQuaternion", function() {
                return this._tempQuaternion = new Ct
            }, "startColor", function() {
                return this.startColor = new Float32Array(4)
            }, "startSize", function() {
                return this.startSize = new Float32Array(3)
            }, "startRotation", function() {
                return this.startRotation = new Float32Array(3)
            }, "startUVInfo", function() {
                return this.startUVInfo = new Float32Array(4)
            }, "simulationWorldPostion", function() {
                return this.simulationWorldPostion = new Float32Array(3)
            }, "simulationWorldRotation", function() {
                return this.simulationWorldRotation = new Float32Array(4)
            }]), U
        }(),
        q = function() {
            function e() {
                this._tempInt0 = 0, this._tempInt1 = 0, this._tempUint0 = 0, this._tempUint1 = 0, this._tempUint2 = 0, this._tempUint3 = 0, this._tempUint4 = 0, this._tempUint5 = 0, this._tempUint6 = 0, this._tempUint7 = 0, this._tempNumver0 = NaN, this._tempNumver1 = NaN, this._tempNumver2 = NaN, this._tempNumver3 = NaN, this._floatSizePerVer = 7, this._defaultBufferSize = 600 * this._floatSizePerVer, this._vb = null, this._posInVBData = 0, this._ib = null, this._posInIBData = 0, this._primitiveType = NaN, this._hasBegun = !1, this._numVertsPerPrimitive = 0, this._camera = null, this._sharderNameID = 0, this._shader = null, this._shaderCompile = null, this._vbData = new Float32Array(this._defaultBufferSize), this._ibData = new Uint16Array(this._defaultBufferSize), this._spriteShaderValue = new Ht, this._vb = Kn.create(e._vertexDeclaration, this._defaultBufferSize / this._floatSizePerVer, 35048), this._ib = jn.create("ushort", this._defaultBufferSize, 35048), this._sharderNameID = Bn.nameKey.getID("LINE"), this._shaderCompile = un._preCompileShader[this._sharderNameID]
            }
            m(e, "t_tl.d3.core.PhasorSpriter3D");
            var t = e.prototype;
            return t.line = function(e, t, n, i) {
                return this._hasBegun && 1 === this._primitiveType || this.drawLinesException(), (this._posInVBData + 2 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 2 > this._ibData.length) && this.flush(), this._tempUint0 = this._posInVBData / this._floatSizePerVer, this.addVertex(e.x, e.y, e.z, t.x, t.y, t.z, t.w), this.addVertex(n.x, n.y, n.z, i.x, i.y, i.z, i.w), this.addIndexes(this._tempUint0, this._tempUint0 + 1), this
            }, t.circle = function(e, t, n, i, r, a) {
                for (this._hasBegun && 1 === this._primitiveType || this.drawLinesException(), this._tempUint0 = 2 * t, (this._posInVBData + this._tempUint0 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 2 * this._tempUint0 > this._ibData.length) && this.flush(), this._tempUint1 = this._posInVBData / this._floatSizePerVer, this._tempNumver0 = 0, this._tempInt0 = 0; this._tempNumver0 < 6.2832; this._tempNumver0 = this._tempNumver0 + 3.1416 / t, this._tempInt0++) this.addVertex(Math.sin(this._tempNumver0) * e, Math.cos(this._tempNumver0) * e, 0, n, i, r, a), 0 === this._tempInt0 ? this.addIndexes(this._tempUint1) : this._tempInt0 === this._tempUint0 - 1 ? (this._tempUint2 = this._tempUint1 + this._tempInt0, this.addIndexes(this._tempUint2, this._tempUint2, this._tempUint1)) : (this._tempUint2 = this._tempUint1 + this._tempInt0, this.addIndexes(this._tempUint2, this._tempUint2));
                return this
            }, t.plane = function(e, t, n, i, r, a, o, s, l) {
                return this._hasBegun && 4 === this._primitiveType || this.drawTrianglesException(), (this._posInVBData + 4 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 6 > this._ibData.length) && this.flush(), this._tempNumver0 = i / 2, this._tempNumver1 = r / 2, this._tempUint0 = this._posInVBData / this._floatSizePerVer, this.addVertex(e - this._tempNumver0, t + this._tempNumver1, n, a, o, s, l), this.addVertex(e + this._tempNumver0, t + this._tempNumver1, n, a, o, s, l), this.addVertex(e - this._tempNumver0, t - this._tempNumver1, n, a, o, s, l), this.addVertex(e + this._tempNumver0, t - this._tempNumver1, n, a, o, s, l), this._tempUint1 = this._tempUint0 + 1, this._tempUint2 = this._tempUint0 + 2, this.addIndexes(this._tempUint0, this._tempUint1, this._tempUint2, this._tempUint2, this._tempUint1, this._tempUint0 + 3), this
            }, t.box = function(e, t, n, i, r, a, o, s, l, h) {
                return this._hasBegun && 4 === this._primitiveType || this.drawTrianglesException(), (this._posInVBData + 8 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 36 > this._ibData.length) && this.flush(), this._tempNumver0 = i / 2, this._tempNumver1 = r / 2, this._tempNumver2 = a / 2, this._tempUint0 = this._posInVBData / this._floatSizePerVer, this.addVertex(e - this._tempNumver0, t + this._tempNumver1, n + this._tempNumver2, o, s, l, h), this.addVertex(e + this._tempNumver0, t + this._tempNumver1, n + this._tempNumver2, o, s, l, h), this.addVertex(e - this._tempNumver0, t - this._tempNumver1, n + this._tempNumver2, o, s, l, h), this.addVertex(e + this._tempNumver0, t - this._tempNumver1, n + this._tempNumver2, o, s, l, h), this.addVertex(e + this._tempNumver0, t + this._tempNumver1, n - this._tempNumver2, o, s, l, h), this.addVertex(e - this._tempNumver0, t + this._tempNumver1, n - this._tempNumver2, o, s, l, h), this.addVertex(e + this._tempNumver0, t - this._tempNumver1, n - this._tempNumver2, o, s, l, h), this.addVertex(e - this._tempNumver0, t - this._tempNumver1, n - this._tempNumver2, o, s, l, h), this._tempUint1 = this._tempUint0 + 1, this._tempUint2 = this._tempUint0 + 2, this._tempUint3 = this._tempUint0 + 3, this._tempUint4 = this._tempUint0 + 4, this._tempUint5 = this._tempUint0 + 5, this._tempUint6 = this._tempUint0 + 6, this._tempUint7 = this._tempUint0 + 7, this.addIndexes(this._tempUint0, this._tempUint1, this._tempUint2, this._tempUint2, this._tempUint1, this._tempUint3, this._tempUint4, this._tempUint5, this._tempUint6, this._tempUint6, this._tempUint5, this._tempUint7, this._tempUint5, this._tempUint0, this._tempUint7, this._tempUint7, this._tempUint0, this._tempUint2, this._tempUint1, this._tempUint4, this._tempUint3, this._tempUint3, this._tempUint4, this._tempUint6, this._tempUint5, this._tempUint4, this._tempUint0, this._tempUint0, this._tempUint4, this._tempUint1, this._tempUint2, this._tempUint3, this._tempUint7, this._tempUint7, this._tempUint3, this._tempUint6), this
            }, t.cone = function(e, t, n, i, r, a, o) {
                for (this._hasBegun && 4 === this._primitiveType || this.drawTrianglesException(), (this._posInVBData + (2 * n + 2) * this._floatSizePerVer > this._vbData.length || this._posInIBData + 6 * n > this._ibData.length) && this.flush(), this._tempUint0 = this._posInVBData, this._tempUint1 = this._posInVBData / this._floatSizePerVer, this._tempNumver0 = 2 * Math.PI / n, this.addVertexIndex(0, t, 0, i, r, a, o, this._tempUint0), this.addVertexIndex(0, 0, 0, i, r, a, o, this._tempUint0 + this._floatSizePerVer), this._tempInt0 = 2, this._tempNumver1 = 0, this._tempInt1 = 0; this._tempInt1 < n; this._tempInt1++) this._tempNumver2 = Math.cos(this._tempNumver1), this._tempNumver3 = Math.sin(this._tempNumver1), this.addVertexIndex(e * this._tempNumver2, 0, e * this._tempNumver3, i, r, a, o, this._tempUint0 + this._tempInt0 * this._floatSizePerVer), this.addIndexes(this._tempUint1, this._tempUint1 + this._tempInt0), this._tempInt1 == n - 1 ? this.addIndexes(this._tempUint1 + 2) : this.addIndexes(this._tempUint1 + this._tempInt0 + 1), this.addVertexIndex(e * this._tempNumver2, 0, e * this._tempNumver3, i, r, a, o, this._tempUint0 + (this._tempInt0 + n) * this._floatSizePerVer), this.addIndexes(this._tempUint1 + 1), this._tempInt1 == n - 1 ? this.addIndexes(this._tempUint1 + n + 2) : this.addIndexes(this._tempUint1 + this._tempInt0 + n + 1), this.addIndexes(this._tempUint1 + this._tempInt0 + n), this._tempInt0++, this._tempNumver1 += this._tempNumver0;
                return this
            }, t.boundingBoxLine = function(e, t, n, i, r, a, o, s, l, h) {
                return this._hasBegun && 1 === this._primitiveType || this.drawLinesException(), (this._posInVBData + 8 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 48 > this._ibData.length) && this.flush(), this._tempUint0 = this._posInVBData / this._floatSizePerVer, this.addVertex(e, r, a, o, s, l, h), this.addVertex(i, r, a, o, s, l, h), this.addVertex(e, t, a, o, s, l, h), this.addVertex(i, t, a, o, s, l, h), this.addVertex(i, r, n, o, s, l, h), this.addVertex(e, r, n, o, s, l, h), this.addVertex(i, t, n, o, s, l, h), this.addVertex(e, t, n, o, s, l, h), this._tempUint1 = this._tempUint0 + 1, this._tempUint2 = this._tempUint0 + 2, this._tempUint3 = this._tempUint0 + 3, this._tempUint4 = this._tempUint0 + 4, this._tempUint5 = this._tempUint0 + 5, this._tempUint6 = this._tempUint0 + 6, this._tempUint7 = this._tempUint0 + 7, this.addIndexes(this._tempUint0, this._tempUint1, this._tempUint1, this._tempUint3, this._tempUint3, this._tempUint2, this._tempUint2, this._tempUint0, this._tempUint4, this._tempUint5, this._tempUint5, this._tempUint7, this._tempUint7, this._tempUint6, this._tempUint6, this._tempUint4, this._tempUint5, this._tempUint0, this._tempUint0, this._tempUint2, this._tempUint2, this._tempUint7, this._tempUint7, this._tempUint5, this._tempUint1, this._tempUint4, this._tempUint4, this._tempUint6, this._tempUint6, this._tempUint3, this._tempUint3, this._tempUint1, this._tempUint5, this._tempUint4, this._tempUint4, this._tempUint1, this._tempUint1, this._tempUint0, this._tempUint0, this._tempUint5, this._tempUint2, this._tempUint3, this._tempUint3, this._tempUint6, this._tempUint6, this._tempUint7, this._tempUint7, this._tempUint2), this
            }, t.addVertex = function(e, t, n, i, r, a, o) {
                return this._hasBegun || this.addVertexIndexException(), this._vbData[this._posInVBData] = e, this._vbData[this._posInVBData + 1] = t, this._vbData[this._posInVBData + 2] = n, this._vbData[this._posInVBData + 3] = i, this._vbData[this._posInVBData + 4] = r, this._vbData[this._posInVBData + 5] = a, this._vbData[this._posInVBData + 6] = o, this._posInVBData += this._floatSizePerVer, this
            }, t.addVertexIndex = function(e, t, n, i, r, a, o, s) {
                return this._hasBegun || this.addVertexIndexException(), this._vbData[s] = e, this._vbData[s + 1] = t, this._vbData[s + 2] = n, this._vbData[s + 3] = i, this._vbData[s + 4] = r, this._vbData[s + 5] = a, this._vbData[s + 6] = o, (s += this._floatSizePerVer) > this._posInVBData && (this._posInVBData = s), this
            }, t.addIndexes = function(e) {
                var t = arguments;
                this._hasBegun || this.addVertexIndexException();
                for (var n = 0; n < t.length; n++) this._ibData[this._posInIBData] = t[n], this._posInIBData++;
                return this
            }, t.begin = function(e, t) {
                return this._hasBegun && this.beginException0(), 1 !== e && 4 !== e && this.beginException1(), this._primitiveType = e, this._camera = t, this._hasBegun = !0, this
            }, t.end = function() {
                return this._hasBegun || this.endException(), this.flush(), this._hasBegun = !1, this
            }, t.flush = function() {
                0 !== this._posInVBData && (this._ib.setData(this._ibData), this._vb.setData(this._vbData), this._vb._bind(), this._ib._bind(), this._shader = this._shaderCompile.withCompile(0, 0, 0), this._shader.bind(), this._shader.uploadAttributes(e._vertexDeclaration.shaderValues.data, null), this._spriteShaderValue.setValue(1, this._camera.projectionViewMatrix.elements), this._shader.uploadSpriteUniforms(this._spriteShaderValue.data), R.drawCall++, w.mainContext.drawElements(this._primitiveType, this._posInIBData, 5123, 0), this._posInIBData = 0, this._posInVBData = 0)
            }, t.addVertexIndexException = function() {
                throw new Error("请先调用begin()函数")
            }, t.beginException0 = function() {
                throw new Error("调用begin()前请确保已成功调用end()！")
            }, t.beginException1 = function() {
                throw new Error("只支持“LINES”和“TRIANGLES”两种基元！")
            }, t.endException = function() {
                throw new Error("调用end()前请确保已成功调用begin()！")
            }, t.drawLinesException = function() {
                throw new Error("您必须确保在此之前已调用begin()且使用“LINES”基元！")
            }, t.drawTrianglesException = function() {
                throw new Error("您必须确保在此之前已调用begin()且使用“TRIANGLES”基元！")
            }, u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(28, [new fe(0, "vector3", 0), new fe(12, "vector4", 1)])
            }]), e
        }(),
        Q = function() {
            function e() {
                this._id = 0, this._type = 0, this._mainSortID = 0, this._render = null, this._sprite3D = null, this._material = null, this._renderObj = null, this._staticBatch = null, this._tempBatchIndexStart = 0, this._tempBatchIndexEnd = 0, this._canDynamicBatch = !1, this._shaderValue = null, this._onPreRenderFunction = null, this._id = ++e._uniqueIDCounter, this._canDynamicBatch = !0, this._shaderValue = new Ht
            }
            m(e, "t_tl.d3.core.render.RenderElement");
            var t = e.prototype;
            return t.getDynamicBatchBakedVertexs = function(e) {
                for (var t = this._renderObj._getVertexBuffer(e), n = t.getData().slice(), i = t.vertexDeclaration, r = i.getVertexElementByUsage(0).offset / 4, a = i.getVertexElementByUsage(3).offset / 4, o = this._sprite3D.transform, s = o.worldMatrix, l = o.rotation, h = i.vertexStride / 4, _ = 0, u = n.length; _ < u; _ += h) {
                    var c = _ + r,
                        d = _ + a;
                    qt.transformVector3ArrayToVector3ArrayCoordinate(n, c, s, n, c), qt.transformVector3ArrayByQuat(n, d, l, n, d)
                }
                return n
            }, t.getBakedIndices = function() {
                return this._renderObj._getIndexBuffer().getData()
            }, t._destroy = function() {
                this._staticBatch && this._staticBatch._manager._garbageCollection(this)
            }, g(0, t, "id", function() {
                return this._id
            }), g(0, t, "renderObj", function() {
                return this._renderObj
            }, function(e) {
                this._renderObj !== e && (this._renderObj = e)
            }), e._uniqueIDCounter = 0, e
        }(),
        $ = function() {
            function t(e) {
                this._id = 0, this._needSort = !1, this._renderElements = null, this._renderableRenderObjects = null, this._dynamicBatchCombineRenderElements = null, this._finalElements = null, this._scene = null, this._id = ++t._uniqueIDCounter, this._needSort = !1, this._scene = e, this._renderElements = [], this._renderableRenderObjects = [], this._dynamicBatchCombineRenderElements = []
            }
            m(t, "t_tl.d3.core.render.RenderQueue");
            var e = t.prototype;
            return e._sortOpaqueFunc = function(e, t) {
                if (e._render && t._render) {
                    var n = e._material.renderQueue - t._material.renderQueue;
                    return 0 === n ? e._render._distanceForSort - t._render._distanceForSort : n
                }
                return 0
            }, e._sortAlphaFunc = function(e, t) {
                if (e._render && t._render) {
                    var n = e._material.renderQueue - t._material.renderQueue;
                    return 0 === n ? t._render._distanceForSort - e._render._distanceForSort : n
                }
                return 0
            }, e._begainRenderElement = function(e, t, n) {
                return !!t._beforeRender(e)
            }, e._sortAlpha = function(e) {
                t._cameraPosition = e, this._finalElements.sort(this._sortAlphaFunc)
            }, e._sortOpaque = function(e) {
                t._cameraPosition = e, this._finalElements.sort(this._sortOpaqueFunc)
            }, e._preRender = function(e) {
                this._finalElements = this._renderElements.concat(this._dynamicBatchCombineRenderElements)
            }, e._render = function(e, t) {
                for (var n, i, r, a, o, s, l = R.loopCount, h = this._scene, _ = e.camera, u = (_.id, !1), c = 0, d = this._finalElements.length; c < d; c++) {
                    var f, m, p, v = this._finalElements[c];
                    if (null != v._onPreRenderFunction && v._onPreRenderFunction.call(v._sprite3D, e), 0 === v._type) {
                        if (e.owner = p = v._sprite3D, e.renderElement = v, p._preRenderUpdateComponents(e), f = v.renderObj, m = v._material, this._begainRenderElement(e, f, m)) {
                            if (n = f._getVertexBuffers(), r = (i = f._getVertexBuffer(0)).vertexDeclaration, u = (a = e._shader = m._getShader(h._shaderDefineValue, r.shaderDefineValue, p._shaderDefineValue)).bind() || l !== a._uploadLoopCount, n) {
                                if (a._uploadVertexBuffer !== n || u) {
                                    for (var g = 0; g < n.length; g++) {
                                        var E = n[g];
                                        a.uploadAttributesX(E.vertexDeclaration.shaderValues.data, E)
                                    }
                                    a._uploadVertexBuffer = n
                                }
                            } else(a._uploadVertexBuffer !== i || u) && (a.uploadAttributes(r.shaderValues.data, null), a._uploadVertexBuffer = i);
                            (a._uploadScene !== h || u) && (a.uploadSceneUniforms(h._shaderValues.data), a._uploadScene = h), (_ !== a._uploadCamera || a._uploadSprite3D !== p || u) && (a.uploadSpriteUniforms(p._shaderValues.data), a._uploadSprite3D = p), (_ !== a._uploadCamera || u) && (a.uploadCameraUniforms(_._shaderValues.data), a._uploadCamera = _), (a._uploadMaterial !== m || u) && (m._upload(), a._uploadMaterial = m), o !== m ? (m._setRenderStateBlendDepth(), m._setRenderStateFrontFace(t, p.transform), o = m, s = p) : s !== p && (m._setRenderStateFrontFace(t, p.transform), s = p), f._render(e), a._uploadLoopCount = l
                        }
                        p._postRenderUpdateComponents(e)
                    } else if (2 === v._type) {
                        v.renderObj;
                        e.owner = p = v._sprite3D, e.renderElement = v, e._batchIndexStart = v._tempBatchIndexStart, e._batchIndexEnd = v._tempBatchIndexEnd, f = v.renderObj, m = v._material, this._begainRenderElement(e, f, m) && (r = (i = f._getVertexBuffer(0)).vertexDeclaration, u = (a = e._shader = m._getShader(h._shaderDefineValue, r.shaderDefineValue, p._shaderDefineValue)).bind() || l !== a._uploadLoopCount, (a._uploadVertexBuffer !== i || u) && (a.uploadAttributes(r.shaderValues.data, null), a._uploadVertexBuffer = i), (a._uploadScene !== h || u) && (a.uploadSceneUniforms(h._shaderValues.data), a._uploadScene = h), (_ !== a._uploadCamera || a._uploadSprite3D !== p || u) && (a.uploadSpriteUniforms(p._shaderValues.data), a._uploadSprite3D = p), (_ !== a._uploadCamera || u) && (a.uploadCameraUniforms(_._shaderValues.data), a._uploadCamera = _), (a._uploadMaterial !== m || u) && (m._upload(), a._uploadMaterial = m), o !== m ? (m._setRenderStateBlendDepth(), m._setRenderStateFrontFace(t, p.transform), o = m, s = p) : s !== p && (m._setRenderStateFrontFace(t, p.transform), s = p), f._render(e), a._uploadLoopCount = l)
                    }
                }
            }, e._renderShadow = function(e, t) {
                for (var n, i, r, a, o, s = R.loopCount, l = this._scene, h = e.camera, _ = !1, u = 0, c = this._finalElements.length; u < c; u++) {
                    var d, f, m, p = this._finalElements[u];
                    0 === p._type && (e.owner = m = p._sprite3D, t || m._projectionViewWorldUpdateCamera === h && m._projectionViewWorldUpdateLoopCount === R.loopCount || (m._render._renderUpdate(e._projectionViewMatrix), m._projectionViewWorldUpdateLoopCount = R.loopCount, m._projectionViewWorldUpdateCamera = h), e.renderElement = p, m._preRenderUpdateComponents(e), d = p.renderObj, f = p._material, this._begainRenderElement(e, d, null) && (i = (n = d._getVertexBuffer(0)).vertexDeclaration, _ = (r = e._shader = f._getShader(l._shaderDefineValue, i.shaderDefineValue, m._shaderDefineValue)).bind() || s !== r._uploadLoopCount, (r._uploadVertexBuffer !== n || _) && (r.uploadAttributes(i.shaderValues.data, null), r._uploadVertexBuffer = n), (h !== r._uploadCamera || r._uploadSprite3D !== m || _) && (r.uploadSpriteUniforms(m._shaderValues.data), r._uploadSprite3D = m), (h !== r._uploadCamera || _) && (r.uploadCameraUniforms(h._shaderValues.data), r._uploadCamera = h), (r._uploadMaterial !== f || _) && (f._upload(), r._uploadMaterial = f), r._uploadRenderElement, a !== f ? (f._setRenderStateFrontFace(!1, m.transform), a = f, o = m) : o !== m && (f._setRenderStateFrontFace(!1, m.transform), o = m), d._render(e), r._uploadLoopCount = s), m._postRenderUpdateComponents(e))
                }
            }, e._clearRenderElements = function() {
                this._dynamicBatchCombineRenderElements.length = 0, this._renderElements.length = 0, this._needSort = !0
            }, e._addRenderElement = function(e) {
                this._renderElements.push(e), this._needSort = !0
            }, e._addDynamicBatchElement = function(e) {
                this._dynamicBatchCombineRenderElements.push(e)
            }, g(0, e, "id", function() {
                return this._id
            }), t._uniqueIDCounter = 0, t._cameraPosition = null, t
        }(),
        J = function() {
            function e() {
                this._staticBatch = null, this._batchIndexStart = 0, this._batchIndexEnd = 0, this._viewMatrix = null, this._projectionMatrix = null, this._projectionViewMatrix = null, this._viewport = null, this._shader = null, this.elapsedTime = NaN, this.scene = null, this.owner = null, this.renderElement = null, this.camera = null
            }
            return m(e, "t_tl.d3.core.render.RenderState"), e.clientWidth = 0, e.clientHeight = 0, e
        }(),
        ee = function() {
            function o(e, t) {
                this._exactBox = null, this._relaxBox = null, this._scene = null, this._parent = null, this._currentDepth = 0, this._boundingSphere = new Tt(new Vt, 0), this._corners = [new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt], this._boundingBoxCenter = new Vt, this._children = M(8), this._objects = [], this._tempBoundBoxCorners = [new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt], this._scene = e, this._currentDepth = t
            }
            m(o, "t_tl.d3.core.scene.OctreeNode");
            var e = o.prototype;
            return x.imps(e, {
                "t_tl.d3.core.scene.ITreeNode": !0
            }), e.init = function(e, t) {
                var n = new Vt,
                    i = new Vt;
                Vt.scale(t, -.5, n), Vt.scale(t, .5, i), Vt.add(n, e, n), Vt.add(i, e, i), this.exactBox = new St(n, i), this.relaxBox = new St(n, i)
            }, e.addTreeNode = function(e) {
                1 === xt.boxContainsBox(this._relaxBox, e.boundingBox) ? this.addNodeDown(e, 0) : this.addObject(e)
            }, e.addChild = function(e) {
                var t = this._children[e];
                if (null == t) {
                    t = new o(this._scene, this._currentDepth + 1), (this._children[e] = t)._parent = this, Vt.subtract(this._exactBox.max, this._exactBox.min, o.tempSize), Vt.multiply(o.tempSize, o._octreeSplit[e], o.tempCenter), Vt.add(this._exactBox.min, o.tempCenter, o.tempCenter), Vt.scale(o.tempSize, .25, o.tempSize);
                    var n = new Vt,
                        i = new Vt;
                    Vt.subtract(o.tempCenter, o.tempSize, n), Vt.add(o.tempCenter, o.tempSize, i), t.exactBox = new St(n, i), Vt.scale(o.tempSize, o.relax, o.tempSize);
                    var r = new Vt,
                        a = new Vt;
                    Vt.subtract(o.tempCenter, o.tempSize, r), Vt.add(o.tempCenter, o.tempSize, a), t.relaxBox = new St(r, a)
                }
                return t
            }, e.addObject = function(e) {
                (e._treeNode = this)._objects.push(e)
            }, e.removeObject = function(e) {
                if (e._treeNode != this) return console.log("OctreeNode::removeObject error"), !1;
                var t = this._objects.indexOf(e);
                return -1 !== t && (this._objects.splice(t, 1), !0)
            }, e.clearObject = function() {
                this._objects.length = 0
            }, e.addNodeUp = function(e, t) {
                this._parent && 1 !== xt.boxContainsBox(this._exactBox, e.boundingBox) ? this._parent.addNodeUp(e, t - 1) : this.addNodeDown(e, t)
            }, e.addNodeDown = function(e, t) {
                if (t < this._scene.treeLevel) {
                    var n = this.inChildIndex(e.boundingBoxCenter),
                        i = this.addChild(n);
                    1 === xt.boxContainsBox(i._relaxBox, e.boundingBox) ? i.addNodeDown(e, ++t) : this.addObject(e)
                } else this.addObject(e)
            }, e.inChildIndex = function(e) {
                return 4 * (e.z < this._boundingBoxCenter.z ? 0 : 1) + 2 * (e.y < this._boundingBoxCenter.y ? 0 : 1) + (e.x < this._boundingBoxCenter.x ? 0 : 1)
            }, e.updateObject = function(e) {
                1 === xt.boxContainsBox(this._relaxBox, e.boundingBox) ? (this.removeObject(e), e._treeNode = null, this.addNodeDown(e, this._currentDepth)) : this._parent && (this.removeObject(e), e._treeNode = null, this._parent.addNodeUp(e, this._currentDepth - 1))
            }, e.cullingObjects = function(e, t, n, i, r) {
                var a, o = 0,
                    s = 0,
                    l = 0,
                    h = this._scene._dynamicBatchManager;
                for (o = 0, a = this._objects.length; o < a; o++) {
                    var _ = this._objects[o];
                    if (F.isVisible(_._owner.layer.mask) && _.enable) {
                        if (t && (R.treeSpriteCollision += 1, 0 === e.containsBoundSphere(_.boundingSphere))) continue;
                        _._renderUpdate(r), _._distanceForSort = Vt.distance(_.boundingSphere.center, i) + _.sortingFudge;
                        var u = _._renderElements;
                        for (s = 0, l = u.length; s < l; s++) {
                            var c = u[s],
                                d = c._staticBatch;
                            if (d && d._material === c._material) d._addBatchRenderElement(c);
                            else {
                                var f = c.renderObj;
                                f.triangleCount < 10 && 1 === f._vertexBufferCount && f._getIndexBuffer() && c._material.renderQueue < 2 && c._canDynamicBatch && !_._owner.isStatic ? h._addPrepareRenderElement(c) : this._scene.getRenderQueue(c._material.renderQueue)._addRenderElement(c)
                            }
                        }
                    }
                }
                for (o = 0; o < 8; o++) {
                    var m = this._children[o];
                    if (null != m) {
                        var p = t;
                        if (t) {
                            var v = e.containsBoundBox(m._relaxBox);
                            if (R.treeNodeCollision += 1, 0 === v) continue;
                            p = 2 === v
                        }
                        m.cullingObjects(e, p, n, i, r)
                    }
                }
            }, e.cullingShadowObjects = function(e, t, n, i, r) {
                var a, o = 0,
                    s = 0,
                    l = 0;
                this._scene._dynamicBatchManager;
                for (o = 0, a = this._objects.length; o < a; o++) {
                    var h = this._objects[o];
                    if (h.castShadow && F.isVisible(h._owner.layer.mask) && h.enable) {
                        if (n && 0 === e[0].containsBoundSphere(h.boundingSphere)) continue;
                        for (var _ = 1, u = e.length; _ < u; _++) {
                            var c = t[_ - 1];
                            if (0 !== e[_].containsBoundSphere(h.boundingSphere)) {
                                var d = h._renderElements;
                                for (s = 0, l = d.length; s < l; s++) c._addRenderElement(d[s])
                            }
                        }
                    }
                }
                for (o = 0; o < 8; o++) {
                    var f = this._children[o];
                    if (null != f) {
                        var m = n;
                        if (n) {
                            var p = e[0].containsBoundBox(f._relaxBox);
                            if (0 === p) continue;
                            m = 2 === p
                        }
                        f.cullingShadowObjects(e, t, m, i, r)
                    }
                }
            }, e.cullingShadowObjectsOnePSSM = function(e, t, n, i, r, a) {
                var o, s = t[0],
                    l = 0,
                    h = 0,
                    _ = 0;
                for (l = 0, o = this._objects.length; l < o; l++) {
                    var u = this._objects[l];
                    if (u.castShadow && F.isVisible(u._owner.layer.mask) && u.enable) {
                        if (i && 0 === e.containsBoundSphere(u.boundingSphere)) continue;
                        u._renderUpdate(n);
                        var c = u._renderElements;
                        for (h = 0, _ = c.length; h < _; h++) s._addRenderElement(c[h])
                    }
                }
                for (l = 0; l < 8; l++) {
                    var d = this._children[l];
                    if (null != d) {
                        var f = i;
                        if (i) {
                            var m = e.containsBoundBox(d._relaxBox);
                            if (0 === m) continue;
                            f = 2 === m
                        }
                        d.cullingShadowObjectsOnePSSM(e, t, n, f, r, a)
                    }
                }
            }, e.renderBoudingBox = function(e) {
                this._renderBoudingBox(e);
                for (var t = 0; t < 8; ++t) {
                    var n = this._children[t];
                    n && n.renderBoudingBox(e)
                }
            }, e.buildAllChild = function(e) {
                if (e < this._scene.treeLevel)
                    for (var t = 0; t < 8; t++) {
                        this.addChild(t).buildAllChild(e + 1)
                    }
            }, e._renderBoudingBox = function(e) {}, g(0, e, "exactBox", function() {
                return this._exactBox
            }, function(e) {
                this._exactBox = e, Vt.add(e.min, e.max, this._boundingBoxCenter), Vt.scale(this._boundingBoxCenter, .5, this._boundingBoxCenter)
            }), g(0, e, "relaxBox", function() {
                return this._relaxBox
            }, function(e) {
                (this._relaxBox = e).getCorners(this._corners), Tt.createfromPoints(this._corners, this._boundingSphere)
            }), o.debugMode = !1, o.relax = 1.15, o.CHILDNUM = 8, u(o, ["tempVector0", function() {
                return this.tempVector0 = new Vt
            }, "tempSize", function() {
                return this.tempSize = new Vt
            }, "tempCenter", function() {
                return this.tempCenter = new Vt
            }, "_octreeSplit", function() {
                return this._octreeSplit = [new Vt(.25, .25, .25), new Vt(.75, .25, .25), new Vt(.25, .75, .25), new Vt(.75, .75, .25), new Vt(.25, .25, .75), new Vt(.75, .25, .75), new Vt(.25, .75, .75), new Vt(.75, .75, .75)]
            }]), o
        }(),
        te = (function() {
            function e() {}
            m(e, "t_tl.d3.core.scene.SceneManager")
        }(), function() {
            function e(e, t, n, i) {
                this._r = NaN, this._g = NaN, this._b = NaN, this._a = NaN, void 0 === e && (e = 1), void 0 === t && (t = 1), void 0 === n && (n = 1), void 0 === i && (i = 1), this._r = e, this._g = t, this._b = n, this._a = i
            }
            return m(e, "t_tl.d3.core.trail.module.Color", null, "Color$1"), e.prototype.cloneTo = function(e) {
                e._r = this._r, e._g = this._g, e._b = this._b, e._a = this._a
            }, u(e, ["RED", function() {
                return this.RED = new e(1, 0, 0, 1)
            }, "GREEN", function() {
                return this.GREEN = new e(0, 1, 0, 1)
            }, "BLUE", function() {
                return this.BLUE = new e(0, 0, 1, 1)
            }, "CYAN", function() {
                return this.CYAN = new e(0, 1, 1, 1)
            }, "YELLOW", function() {
                return this.YELLOW = new e(1, .92, .016, 1)
            }, "MAGENTA", function() {
                return this.MAGENTA = new e(1, 0, 1, 1)
            }, "GRAY", function() {
                return this.GRAY = new e(.5, .5, .5, 1)
            }, "WHITE", function() {
                return this.WHITE = new e(1, 1, 1, 1)
            }, "BLACK", function() {
                return this.BLACK = new e(0, 0, 0, 1)
            }]), e
        }()),
        ne = function() {
            function e() {
                this._mode = 0, this._colorKeys = null, this._alphaKeys = null, this.index = 0, this._colorKeyData = new Float32Array(40), this._alphaKeyData = new Float32Array(20), this._colorKeys = [], this._alphaKeys = []
            }
            m(e, "t_tl.d3.core.trail.module.Gradient");
            var t = e.prototype;
            return t.setKeys = function(e, t) {
                var n, i;
                this._colorKeys = e;
                for (var r = this.index = 0; r < e.length; r++) {
                    var a = (n = e[r]).color;
                    this._colorKeyData[this.index++] = a._r, this._colorKeyData[this.index++] = a._g, this._colorKeyData[this.index++] = a._b, this._colorKeyData[this.index++] = n.time
                }
                this._alphaKeys = t;
                for (var o = this.index = 0; o < t.length; o++) i = t[o], this._alphaKeyData[this.index++] = i.alpha, this._alphaKeyData[this.index++] = i.time
            }, t.cloneTo = function(e) {
                var t = 0,
                    n = 0,
                    i = this.colorKeys,
                    r = [];
                for (t = 0, n = i.length; t < n; t++) {
                    var a = new re;
                    i[t].cloneTo(a), r.push(a)
                }
                var o = this.alphaKeys,
                    s = [];
                for (t = 0, n = o.length; t < n; t++) {
                    var l = new ie;
                    o[t].cloneTo(l), s.push(l)
                }
                e.setKeys(r, s)
            }, g(0, t, "mode", function() {
                return this._mode
            }, function(e) {
                this._mode = e
            }), g(0, t, "colorKeys", function() {
                return this._colorKeys
            }, function(e) {
                this._colorKeys = e;
                for (var t = this.index = 0; t < e.length; t++) {
                    var n = e[t],
                        i = n.color;
                    this._colorKeyData[this.index++] = i._r, this._colorKeyData[this.index++] = i._g, this._colorKeyData[this.index++] = i._b, this._colorKeyData[this.index++] = n.time
                }
            }), g(0, t, "alphaKeys", function() {
                return this._alphaKeys
            }, function(e) {
                this._alphaKeys = e;
                for (var t = this.index = 0; t < e.length; t++) {
                    var n = e[t];
                    this._alphaKeyData[this.index++] = n.alpha, this._alphaKeyData[this.index++] = n.time
                }
            }), e
        }(),
        ie = function() {
            function e(e, t) {
                this._alpha = NaN, this._time = NaN, void 0 === e && (e = 0), void 0 === t && (t = 0), this._alpha = e, this._time = t
            }
            m(e, "t_tl.d3.core.trail.module.GradientAlphaKey");
            var t = e.prototype;
            return t.cloneTo = function(e) {
                e.alpha = this.alpha, e.time = this.time
            }, g(0, t, "alpha", function() {
                return this._alpha
            }, function(e) {
                this._alpha = e
            }), g(0, t, "time", function() {
                return this._time
            }, function(e) {
                this._time = e
            }), e
        }(),
        re = function() {
            function e(e, t) {
                this._color = null, this._time = NaN, void 0 === t && (t = 0), this._color = e || new te, this._time = t
            }
            m(e, "t_tl.d3.core.trail.module.GradientColorKey");
            var t = e.prototype;
            return t.cloneTo = function(e) {
                this.color.cloneTo(e.color), e.time = this.time
            }, g(0, t, "color", function() {
                return this._color
            }, function(e) {
                this._color = e
            }), g(0, t, "time", function() {
                return this._time
            }, function(e) {
                this._time = e
            }), e
        }(),
        ae = (function() {
            function e() {}
            m(e, "t_tl.d3.core.trail.module.GradientMode"), e.Blend = 0, e.Fixed = 1
        }(), function() {
            function e() {}
            m(e, "t_tl.d3.core.trail.module.TextureMode"), e.Stretch = 0, e.Tile = 1
        }(), function() {
            function e() {
                this.time = NaN, this.inTangent = NaN, this.outTangent = NaN, this.value = NaN
            }
            return m(e, "t_tl.d3.core.trail.module.TrailKeyFrame"), e.prototype.cloneTo = function(e) {
                e.time = this.time, e.inTangent = this.inTangent, e.outTangent = this.outTangent, e.value = this.value
            }, e
        }()),
        oe = function() {
            function t(e) {
                this._id = 0, this._owner = null, this._camera = null, this._vertexBuffers = null, this._verticesCount = 0, this._virtualVerticesCount = 0, this._maxVerticesCount = 256, this._vertices1 = null, this._vertexBuffer1 = null, this._floatCountPerVertices1 = 8, this._verticesIndex1 = 0, this._everyAddVerticeCount1 = 0, this._delLength = 0, this._vertices2 = null, this._vertexBuffer2 = null, this._floatCountPerVertices2 = 1, this._everyGroupVertexBirthTime = null, this._VerticesToTailLength = null, this._everyVertexToPreVertexDistance = null, this._pointe = null, this._pointAtoBVector3e = null, this._isStart = !1, this._isFinish = !1, this._isDead = !1, this._curtime = NaN, this._curDisappearIndex = 0, this._lastPosition = new Vt, this._curPosition = new Vt, this._delVector3 = new Vt, this._lastFixedVertexPosition = new Vt, this._pointAtoBVector3 = new Vt, this._pointA = new Vt, this._pointB = new Vt, this._owner = e, this._id = t.renderElementCount++, 0 == this._id ? e._owner.transform.position.cloneTo(this._lastPosition) : e._curSubTrailFinishPosition.cloneTo(this._lastPosition), this._everyGroupVertexBirthTime = [], this._VerticesToTailLength = new Float32Array(this._maxVerticesCount), this._everyVertexToPreVertexDistance = new Float32Array(this._maxVerticesCount), this._vertices1 = new Float32Array(this._maxVerticesCount * this._floatCountPerVertices1), this._vertices2 = new Float32Array(this._maxVerticesCount * this._floatCountPerVertices2), this._vertexBuffer1 = new Kn(se.vertexDeclaration1, this._maxVerticesCount, 35044, !0), this._vertexBuffer2 = new Kn(se.vertexDeclaration2, this._maxVerticesCount, 35044, !0), this._vertexBuffers = [], this._vertexBuffers.push(this._vertexBuffer1), this._vertexBuffers.push(this._vertexBuffer2)
            }
            m(t, "t_tl.d3.core.trail.TrailRenderElement");
            var e = t.prototype;
            return x.imps(e, {
                "t_tl.d3.core.render.IRenderable": !0
            }), e._updateTrail = function() {
                this._everyAddVerticeCount1 = 0, this._isStart || this._addTrailByFirstPosition(this._lastPosition, this._curPosition), this._addTrailByNextPosition(this._curPosition), this._vertexBuffer1.setData(this._vertices1, this._verticesIndex1, this._verticesIndex1, this._everyAddVerticeCount1), this._verticesIndex1 += this._everyAddVerticeCount1, this._curPosition.cloneTo(this._lastPosition), 2 == this._virtualVerticesCount && (this._verticesIndex1 -= 2 * this._floatCountPerVertices1)
            }, e._addTrailByFirstPosition = function(e, t) {
                Vt.subtract(t, e, this._delVector3), Vt.cross(this._delVector3, this._camera.forward, this._pointAtoBVector3), Vt.normalize(this._pointAtoBVector3, this._pointAtoBVector3), Vt.scale(this._pointAtoBVector3, this._owner.widthMultiplier / 2, this._pointAtoBVector3), this._updateVerticesByPosition(e), e.cloneTo(this._lastFixedVertexPosition), this._verticesCount += 2, this._curtime = this._owner._hasLifeSubTrail ? this._owner._curSubTrailFinishCurTime : this._owner._curtime, this._everyGroupVertexBirthTime.push(this._curtime), this._isStart = !0, this._owner._hasLifeSubTrail = !0
            }, e._addTrailByNextPosition = function(e) {
                Vt.subtract(e, this._lastFixedVertexPosition, this._delVector3), Vt.cross(this._delVector3, this._camera.forward, this._pointAtoBVector3), Vt.normalize(this._pointAtoBVector3, this._pointAtoBVector3), Vt.scale(this._pointAtoBVector3, this._owner.widthMultiplier / 2, this._pointAtoBVector3), this._delLength = Vt.scalarLength(this._delVector3), this._delLength - this._owner.minVertexDistance >= Mt.zeroTolerance ? (this._owner._trailTotalLength += this._delLength, this._owner._trailSupplementLength = 0, this._updateVerticesByPosition(e), e.cloneTo(this._lastFixedVertexPosition), this._verticesCount += 2, this._virtualVerticesCount = 0, this._everyGroupVertexBirthTime.push(this._owner._curtime), this._verticesCount == this._maxVerticesCount && this._onTrailRenderElementFinish()) : (this._owner._trailSupplementLength = this._delLength, this._updateVerticesByPosition(e), this._virtualVerticesCount = 2)
            }, e._updateVerticesByPosition = function(e) {
                this._pointe = e.elements, this._pointAtoBVector3e = this._pointAtoBVector3.elements, this._curtime = this._owner._curtime, this._owner._hasLifeSubTrail && 0 == this._isStart && (this._pointe = this._owner._curSubTrailFinishPosition.elements, this._pointAtoBVector3e = this._owner._curSubTrailFinishDirection.elements, this._curtime = this._owner._curSubTrailFinishCurTime), this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[0], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[1], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[2], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = -this._pointAtoBVector3e[0], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = -this._pointAtoBVector3e[1], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = -this._pointAtoBVector3e[2], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._curtime, this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = 1, this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[0], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[1], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[2], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointAtoBVector3e[0], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointAtoBVector3e[1], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointAtoBVector3e[2], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._curtime, this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = 0, this._VerticesToTailLength[this._verticesCount / 2] = this._owner._trailTotalLength + this._owner._trailSupplementLength, 0 == this._owner._trailSupplementLength ? this._everyVertexToPreVertexDistance[this._verticesCount / 2] = this._delLength : this._everyVertexToPreVertexDistance[this._verticesCount / 2] = this._isStart ? this._owner._trailSupplementLength : 0
            }, e._updateVertexBuffer2 = function() {
                var e, t = 0,
                    n = 0,
                    i = 0;
                for (i = 0, e = (this._verticesCount + this._virtualVerticesCount) / 2; i < e; i++) n = 0 == this._owner.textureMode ? (this._VerticesToTailLength[i] - this._owner._trailDeadLength) / (this._owner._trailTotalLength + this._owner._trailSupplementLength - this._owner._trailDeadLength) : this._owner._trailTotalLength + this._owner._trailSupplementLength - this._VerticesToTailLength[i], this._vertices2[t++] = 1 - n, this._vertices2[t++] = 1 - n;
                this._vertexBuffer2.setData(this._vertices2, 0, 0, this._verticesCount + this._virtualVerticesCount)
            }, e._onTrailRenderElementFinish = function() {
                this._lastFixedVertexPosition.cloneTo(this._owner._curSubTrailFinishPosition), this._pointAtoBVector3.cloneTo(this._owner._curSubTrailFinishDirection), this._owner._curSubTrailFinishCurTime = this._owner._curtime, this._isFinish = !0
            }, e._updateDisappear = function() {
                var e, t = 0;
                for (t = this._curDisappearIndex, e = (this._verticesCount + this._virtualVerticesCount) / 2; t < e; t++) this._owner._curtime - this._everyGroupVertexBirthTime[t] >= this._owner.time + Mt.zeroTolerance && (this._curDisappearIndex++, this._owner._trailDeadLength += this._everyVertexToPreVertexDistance[this._curDisappearIndex], this._curDisappearIndex >= (this._verticesCount + this._virtualVerticesCount) / 2 && (this._isDead = !0))
            }, e._beforeRender = function(e) {
                return this._camera = e.camera, null != this._camera && (this._owner._owner.transform.position.cloneTo(this._curPosition), !this._isDead && (this._verticesCount < this._maxVerticesCount ? (this._owner._isStart || (this._owner._owner.transform.position.cloneTo(this._lastPosition), this._owner._isStart = !0), Vt.equals(this._lastPosition, this._curPosition) || this._updateTrail()) : this._isFinish && (this._isFinish = !1, this._owner._curSubTrailFinished = !0), 0 < this._verticesCount) && (this._updateVertexBuffer2(), this._updateDisappear(), !0))
            }, e._render = function(e) {
                this._isDead || (w.mainContext.drawArrays(5, 2 * this._curDisappearIndex, this._verticesCount + this._virtualVerticesCount - 2 * this._curDisappearIndex), console.log(2 * this._curDisappearIndex, this._verticesCount + this._virtualVerticesCount - 2 * this._curDisappearIndex), R.drawCall++, R.trianglesFaces += this._verticesCount + this._virtualVerticesCount - 2 * this._curDisappearIndex - 2)
            }, e._getVertexBuffer = function(e) {
                return void 0 === e && (e = 0), 0 === e ? this._vertexBuffer1 : 1 === e ? this._vertexBuffer2 : null
            }, e._getVertexBuffers = function() {
                return this._vertexBuffers
            }, e._getIndexBuffer = function() {
                return null
            }, e.reActivate = function() {
                this._id = t_tl.d3.core.trail.TrailRenderElement.renderElementCount++, this._isStart = !1, this._isFinish = !1, this._isDead = !1, this._verticesCount = 0, this._virtualVerticesCount = 0, this._verticesIndex1 = 0, this._delLength = 0, this._curDisappearIndex = 0, this._everyGroupVertexBirthTime = [], this._owner._curSubTrailFinishPosition.cloneTo(this._lastPosition)
            }, e._destroy = function() {
                this._vertexBuffer1.dispose(), this._vertexBuffer2.dispose(), this._vertices1 = null, this._vertexBuffer1 = null, this._vertices2 = null, this._vertexBuffer2 = null, this._vertexBuffers = null, this._everyGroupVertexBirthTime = null, this._VerticesToTailLength = null, this._everyVertexToPreVertexDistance = null, this._lastPosition = null, this._curPosition = null, this._delVector3 = null, this._lastFixedVertexPosition = null, this._pointAtoBVector3 = null, this._pointe = null, this._pointAtoBVector3e = null, this._pointA = null, this._pointB = null
            }, g(0, e, "_vertexBufferCount", function() {
                return this._vertexBuffers.length
            }), g(0, e, "triangleCount", function() {
                return 0
            }), t.renderElementCount = 0, t
        }(),
        se = function() {
            function e() {}
            m(e, "t_tl.d3.core.trail.VertexTrail");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration1
            }), g(1, e, "vertexDeclaration1", function() {
                return e._vertexDeclaration1
            }), g(1, e, "vertexDeclaration2", function() {
                return e._vertexDeclaration2
            }), u(e, ["_vertexDeclaration1", function() {
                return this._vertexDeclaration1 = new de(32, [new fe(0, "vector3", 0), new fe(12, "vector3", 41), new fe(24, "single", 33), new fe(28, "single", 40)])
            }, "_vertexDeclaration2", function() {
                return this._vertexDeclaration2 = new de(4, [new fe(0, "single", 38)])
            }]), e
        }(),
        le = function() {
            function S(e) {
                this._vertexDeclaration = null, this._vertexDatas = null, this._indexDatas = null, this._vertexBuffer = null, this._indexBuffer = null, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0, this._combineRenderElements = null, this._materials = null, this._materialToRenderElementsOffsets = null, this._merageElements = null, this._combineRenderElementPool = null, this._combineRenderElementPoolIndex = 0, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0, this._combineRenderElements = [], this._materialToRenderElementsOffsets = [], this._materials = [], this._merageElements = [], this._combineRenderElementPool = [], this._combineRenderElementPoolIndex = 0, this._vertexDeclaration = e
            }
            m(S, "t_tl.d3.graphics.DynamicBatch");
            var e = S.prototype;
            return x.imps(e, {
                "t_tl.d3.core.render.IRenderable": !0
            }), e._getVertexBuffer = function(e) {
                return void 0 === e && (e = 0), 0 === e ? this._vertexBuffer : null
            }, e._getIndexBuffer = function() {
                return this._indexBuffer
            }, e._getCombineRenderElementFromPool = function(e, t, n) {
                var i = this._combineRenderElementPool[this._combineRenderElementPoolIndex++];
                return i || (this._combineRenderElementPool[this._combineRenderElementPoolIndex - 1] = i = new Q, i._sprite3D = new vi), i._sprite3D._render._renderUpdate(n), i
            }, e._getRenderElement = function(e, t, n) {
                this._vertexDatas || (this._vertexDatas = new Float32Array(this._vertexDeclaration.vertexStride / 4 * S.maxVertexCount), this._indexDatas = new Uint16Array(S.maxIndexCount), this._vertexBuffer = Kn.create(this._vertexDeclaration, S.maxVertexCount, 35048), this._indexBuffer = jn.create("ushort", S.maxIndexCount, 35048));
                for (var i = this._merageElements.length = 0, r = 0, a = 0, o = this._combineRenderElements.length; a < o; a++) {
                    var s = this._combineRenderElements[a],
                        l = s.getDynamicBatchBakedVertexs(0),
                        h = s.getBakedIndices(),
                        _ = s._sprite3D.transform._isFrontFaceInvert,
                        u = i / (this._vertexDeclaration.vertexStride / 4),
                        c = r,
                        d = c + h.length;
                    s._tempBatchIndexStart = c, s._tempBatchIndexEnd = d, this._indexDatas.set(h, r);
                    var f = 0;
                    if (_)
                        for (f = c; f < d; f += 3) {
                            this._indexDatas[f] = u + this._indexDatas[f];
                            var m = this._indexDatas[f + 1],
                                p = this._indexDatas[f + 2];
                            this._indexDatas[f + 1] = u + p, this._indexDatas[f + 2] = u + m
                        } else
                            for (f = c; f < d; f += 3) this._indexDatas[f] = u + this._indexDatas[f], this._indexDatas[f + 1] = u + this._indexDatas[f + 1], this._indexDatas[f + 2] = u + this._indexDatas[f + 2];
                    r += h.length, this._vertexDatas.set(l, i), i += l.length
                }
                for (this._vertexBuffer.setData(this._vertexDatas), this._indexBuffer.setData(this._indexDatas), a = this._combineRenderElementPoolIndex = 0, o = this._materials.length; a < o; a++) {
                    var v = this._getCombineRenderElementFromPool(e, t, n);
                    v._type = 2, v._staticBatch = null;
                    var g = (v.renderObj = this)._combineRenderElements[this._materialToRenderElementsOffsets[a]]._tempBatchIndexStart,
                        E = a + 1 === this._materialToRenderElementsOffsets.length ? r : this._combineRenderElements[this._materialToRenderElementsOffsets[a + 1]]._tempBatchIndexStart;
                    v._tempBatchIndexStart = g, v._tempBatchIndexEnd = E, v._material = this._materials[a], this._merageElements.push(v)
                }
            }, e._addCombineRenderObjTest = function(e) {
                var t = e.renderObj,
                    n = this._currentCombineIndexCount + t._getIndexBuffer().indexCount,
                    i = this._currentCombineVertexCount + t._getVertexBuffer().vertexCount;
                return !(S.maxVertexCount < i || S.maxIndexCount < n)
            }, e._addCombineRenderObj = function(e) {
                var t = e.renderObj;
                this._combineRenderElements.push(e), this._currentCombineIndexCount = this._currentCombineIndexCount + t._getIndexBuffer().indexCount, this._currentCombineVertexCount = this._currentCombineVertexCount + t._getVertexBuffer().vertexCount
            }, e._addCombineMaterial = function(e) {
                this._materials.push(e)
            }, e._addMaterialToRenderElementOffset = function(e) {
                this._materialToRenderElementsOffsets.push(e)
            }, e._clearRenderElements = function() {
                this._combineRenderElements.length = 0, this._materials.length = 0, this._materialToRenderElementsOffsets.length = 0, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0
            }, e._addToRenderQueue = function(e, t, n, i) {
                this._getRenderElement(t, n, i);
                for (var r = 0, a = this._materials.length; r < a; r++) e.getRenderQueue(this._materials[r].renderQueue)._addDynamicBatchElement(this._merageElements[r])
            }, e._beforeRender = function(e) {
                return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0
            }, e._render = function(e) {
                var t = e._batchIndexEnd - e._batchIndexStart;
                w.mainContext.drawElements(4, t, 5123, 2 * e._batchIndexStart), R.drawCall++, R.trianglesFaces += t / 3
            }, e._getVertexBuffers = function() {
                return null
            }, g(0, e, "_vertexBufferCount", function() {
                return 1
            }), g(0, e, "triangleCount", function() {
                return this._indexBuffer.indexCount / 3
            }), g(0, e, "combineRenderElementsCount", function() {
                return this._combineRenderElements.length
            }), S.maxVertexCount = 2e4, S.maxIndexCount = 4e4, S.maxCombineTriangleCount = 10, S
        }(),
        he = function() {
            function S() {
                this._dynamicBatches = null, this._prepareDynamicBatchCombineElements = null, this._dynamicBatches = {}, this._prepareDynamicBatchCombineElements = []
            }
            m(S, "t_tl.d3.graphics.DynamicBatchManager");
            var e = S.prototype;
            return e.getDynamicBatch = function(e, t) {
                var n, i = e.id.toString() + t;
                return this._dynamicBatches[i] ? n = this._dynamicBatches[i] : this._dynamicBatches[i] = n = new le(e), n
            }, e._garbageCollection = function() {
                for (var e in this._dynamicBatches) 0 === this._dynamicBatches[e].combineRenderElementsCount && delete this._dynamicBatches[e]
            }, e._addPrepareRenderElement = function(e) {
                this._prepareDynamicBatchCombineElements.push(e)
            }, e._finishCombineDynamicBatch = function(e) {
                var t, n, i;
                this._prepareDynamicBatchCombineElements.sort(S._sortPrepareDynamicBatch);
                for (var r, a, o, s, l, h = -1, _ = !0, u = 0, c = -1, d = 0, f = this._prepareDynamicBatchCombineElements.length; d < f; d++) {
                    var m = (a = this._prepareDynamicBatchCombineElements[d]).renderObj._getVertexBuffer(0).vertexDeclaration,
                        p = n !== m;
                    p && (u = 0, n = m);
                    var v = u !== h;
                    if (v && (h = u), (p || v) && (o = this.getDynamicBatch(m, u), t = null), _)
                        if (o._addCombineRenderObjTest(a)) {
                            if (t !== (r = a._material)) s && (e.getRenderQueue(l._material.renderQueue)._addRenderElement(l), l = s = null, c = -1), s = r, c = o.combineRenderElementsCount, l = a, t = r;
                            else if (s) {
                                var g = l.renderObj,
                                    E = a.renderObj;
                                g._getVertexBuffer().vertexCount + E._getVertexBuffer().vertexCount > le.maxVertexCount || g._getIndexBuffer().indexCount + E._getIndexBuffer().indexCount > le.maxIndexCount ? (e.getRenderQueue(l._material.renderQueue)._addRenderElement(l), s = r, c = o.combineRenderElementsCount, l = a) : (o._addCombineMaterial(s), o._addMaterialToRenderElementOffset(c), o._addCombineRenderObj(l), l = s = null, c = -1, o._addCombineRenderObj(a))
                            } else o._addCombineRenderObj(a);
                            _ = !0
                        } else s && (e.getRenderQueue(l._material.renderQueue)._addRenderElement(l), l = s = null, c = -1), u++, _ = !1;
                    else i = this._prepareDynamicBatchCombineElements[d - 1], o._addMaterialToRenderElementOffset(o.combineRenderElementsCount), t = i._material, o._addCombineMaterial(t), o._addCombineRenderObj(i), _ = !0, t !== (r = a._material) ? (s = r, c = o.combineRenderElementsCount, l = a) : o._addCombineRenderObj(a), t = r
                }
                s && (e.getRenderQueue(l._material.renderQueue)._addRenderElement(l), l = s = null, c = -1), this._prepareDynamicBatchCombineElements.length = 0
            }, e._clearRenderElements = function() {
                for (var e in this._dynamicBatches) this._dynamicBatches[e]._clearRenderElements()
            }, e._addToRenderQueue = function(e, t, n, i) {
                for (var r in this._dynamicBatches) {
                    var a = this._dynamicBatches[r];
                    0 < a.combineRenderElementsCount && a._addToRenderQueue(e, t, n, i)
                }
            }, e.dispose = function() {
                this._dynamicBatches = null
            }, S._sortPrepareDynamicBatch = function(e, t) {
                return e._mainSortID - t._mainSortID
            }, S
        }(),
        _e = function() {
            function e() {}
            return m(e, "t_tl.d3.graphics.FrustumCulling"), e.renderShadowObjectCulling = function(e, t, n, i, r) {
                var a = 0,
                    o = 0,
                    s = 0,
                    l = 0;
                for (a = 0, s = n.length; a < s; a++) {
                    var h = n[a];
                    h && h._clearRenderElements()
                }
                var _, u, c, d = e._cullingRenders;
                if (1 < r) {
                    for (a = 0, s = e._cullingRendersLength; a < s; a++)
                        if ((_ = d[a]).castShadow && F.isVisible(_._owner.layer.mask) && _.enable)
                            for (var f = 1, m = t.length; f < m; f++)
                                if (u = n[f - 1], 0 !== t[f].containsBoundSphere(_.boundingSphere))
                                    for (o = 0, l = (c = _._renderElements).length; o < l; o++) u._addRenderElement(c[o])
                } else
                    for (a = 0, s = e._cullingRendersLength; a < s; a++)
                        if ((_ = d[a]).castShadow && F.isVisible(_._owner.layer.mask) && _.enable && 0 !== t[0].containsBoundSphere(_.boundingSphere))
                            for (_._renderUpdate(i), u = n[0], o = 0, l = (c = _._renderElements).length; o < l; o++) u._addRenderElement(c[o])
            }, e.renderShadowObjectCullingOctree = function(e, t, n, i, r) {
                for (var a = 0, o = n.length; a < o; a++) {
                    var s = n[a];
                    s && s._clearRenderElements()
                }
                1 < r ? e.treeRoot.cullingShadowObjects(t, n, !0, 0, e) : e.treeRoot.cullingShadowObjectsOnePSSM(t[0], n, i, !0, 0, e)
            }, e.renderObjectCulling = function(e, t, n, i, r, a) {
                var o = 0,
                    s = 0,
                    l = 0,
                    h = 0,
                    _ = t._quenes,
                    u = t._dynamicBatchManager,
                    c = t._cullingRenders;
                for (o = 0, s = _.length; o < s; o++) {
                    var d = _[o];
                    d && d._clearRenderElements()
                }
                var f = ue._staticBatchManagers;
                for (o = 0, s = f.length; o < s; o++) f[o]._clearRenderElements();
                u._clearRenderElements();
                var m = n.transform.position;
                for (o = 0, s = t._cullingRendersLength; o < s; o++) {
                    var p = c[o];
                    if (F.isVisible(p._owner.layer.mask) && p.enable && 0 !== e.containsBoundSphere(p.boundingSphere) && p._renderUpdate(a)) {
                        p._distanceForSort = Vt.distance(p.boundingSphere.center, m) + p.sortingFudge;
                        var v = p._renderElements;
                        for (l = 0, h = v.length; l < h; l++) {
                            var g = v[l],
                                E = g._staticBatch;
                            if (E && E._material === g._material) E._addBatchRenderElement(g);
                            else {
                                var S = g.renderObj;
                                S.triangleCount < 10 && 1 === S._vertexBufferCount && S._getIndexBuffer() && g._material.renderQueue < 2 && g._canDynamicBatch && !p._owner.isStatic ? u._addPrepareRenderElement(g) : t.getRenderQueue(g._material.renderQueue)._addRenderElement(g)
                            }
                        }
                    }
                }
                for (o = 0, s = f.length; o < s; o++) f[o]._addToRenderQueue(t, i, r, a);
                u._finishCombineDynamicBatch(t), u._addToRenderQueue(t, i, r, a)
            }, e.renderObjectCullingOctree = function(e, t, n, i, r, a) {
                var o = 0,
                    s = 0,
                    l = t._quenes,
                    h = t._dynamicBatchManager;
                for (o = 0, s = l.length; o < s; o++) {
                    var _ = l[o];
                    _ && _._clearRenderElements()
                }
                var u = ue._staticBatchManagers;
                for (o = 0, s = u.length; o < s; o++) u[o]._clearRenderElements();
                for (h._clearRenderElements(), t._cullingRenders.length = 0, t.treeRoot.cullingObjects(e, !0, 0, n.transform.position, a), o = 0, s = u.length; o < s; o++) u[o]._addToRenderQueue(t, i, r, a);
                h._finishCombineDynamicBatch(t), h._addToRenderQueue(t, i, r, a)
            }, e.renderObjectCullingNoBoundFrustum = function(e, t, n, i, r) {
                var a = 0,
                    o = 0,
                    s = 0,
                    l = 0,
                    h = e._quenes,
                    _ = e._dynamicBatchManager,
                    u = e._cullingRenders;
                for (a = 0, o = h.length; a < o; a++) {
                    var c = h[a];
                    c && c._clearRenderElements()
                }
                var d = ue._staticBatchManagers;
                for (a = 0, o = d.length; a < o; a++) d[a]._clearRenderElements();
                _._clearRenderElements();
                var f = t.transform.position;
                for (a = 0, o = e._cullingRendersLength; a < o; a++) {
                    var m = u[a];
                    if (F.isVisible(m._owner.layer.mask) && m.enable) {
                        m._renderUpdate(r), m._distanceForSort = Vt.distance(m.boundingSphere.center, f) + m.sortingFudge;
                        var p = m._renderElements;
                        for (s = 0, l = p.length; s < l; s++) {
                            var v = p[s],
                                g = v._staticBatch;
                            if (g && g._material === v._material) g._addBatchRenderElement(v);
                            else {
                                var E = v.renderObj;
                                E.triangleCount < 10 && 1 === E._vertexBufferCount && E._getIndexBuffer() && v._material.renderQueue < 2 && v._canDynamicBatch && !m._owner.isStatic ? _._addPrepareRenderElement(v) : e.getRenderQueue(v._material.renderQueue)._addRenderElement(v)
                            }
                        }
                    }
                }
                for (a = 0, o = d.length; a < o; a++) d[a]._addToRenderQueue(e, n, i, r);
                _._finishCombineDynamicBatch(e), _._addToRenderQueue(e, n, i, r)
            }, e
        }(),
        ue = function() {
            function a() {
                this._initBatchRenderElements = null, this._staticBatches = null, this._initBatchRenderElements = [], this._staticBatches = {}
            }
            m(a, "t_tl.d3.graphics.StaticBatchManager");
            var e = a.prototype;
            return e._finishInit = function() {
                for (var e in this._staticBatches) this._staticBatches[e]._finishInit();
                this._initBatchRenderElements.length = 0
            }, e._initStaticBatchs = function(e) {
                throw new Error("StaticBatchManager:must override this function.")
            }, e._addInitBatchSprite = function(e) {
                for (var t = e._render._renderElements, n = 0, i = t.length; n < i; n++) this._initBatchRenderElements.push(t[n])
            }, e._clearRenderElements = function() {
                for (var e in this._staticBatches) this._staticBatches[e]._clearRenderElements()
            }, e._garbageCollection = function(e) {
                var t = e._staticBatch,
                    n = t._initBatchRenderElements,
                    i = n.indexOf(e);
                n.splice(i, 1), 0 === n.length && (t.dispose(), delete this._staticBatches[t._key])
            }, e._addToRenderQueue = function(e, t, n, i) {
                for (var r in this._staticBatches) {
                    var a = this._staticBatches[r];
                    0 < a._batchRenderElements.length && a._updateToRenderQueue(e, i)
                }
            }, e.dispose = function() {
                this._staticBatches = null
            }, a._addToStaticBatchQueue = function(e) {
                e instanceof t_tl.d3.core.RenderableSprite3D && e._addToInitStaticBatchManager();
                for (var t = 0, n = e.numChildren; t < n; t++) a._addToStaticBatchQueue(e._childs[t])
            }, a.combine = function(e, t) {
                var n, i = 0,
                    r = 0;
                if (t)
                    for (i = 0, r = t.length; i < r; i++) {
                        t[i]._addToInitStaticBatchManager()
                    } else e && a._addToStaticBatchQueue(e);
                for (i = 0, r = a._staticBatchManagers.length; i < r; i++)(n = a._staticBatchManagers[i])._initStaticBatchs(e), n._finishInit()
            }, a._staticBatchManagers = [], a
        }(),
        ce = function() {
            function e(e, t, n) {
                this._combineRenderElementPoolIndex = 0, this._combineRenderElementPool = null, this._initBatchRenderElements = null, this._batchRenderElements = null, this._material = null, this._rootOwner = null, this._key = null, this._manager = null, this._key = e, this._manager = t, this._combineRenderElementPoolIndex = 0, this._combineRenderElementPool = [], this._initBatchRenderElements = [], this._batchRenderElements = [], this._rootOwner = n
            }
            m(e, "t_tl.d3.graphics.StaticBatch");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.render.IRenderable": !0,
                "t_tl.resource.IDispose": !0
            }), t._binarySearch = function(e) {
                for (var t = 0, n = this._batchRenderElements.length - 1, i = 0; t <= n;) i = Math.floor((t + n) / 2), this._compareBatchRenderElement(this._batchRenderElements[i], e) ? n = i - 1 : t = i + 1;
                return t
            }, t._compareBatchRenderElement = function(e, t) {
                throw new Error("StaticBatch:must override this function.")
            }, t._getVertexDecLightMap = function(e) {
                return e === at.vertexDeclaration ? et.vertexDeclaration : e === rt.vertexDeclaration ? Je.vertexDeclaration : e === Ye.vertexDeclaration ? ze.vertexDeclaration : e === ht.vertexDeclaration ? null : e === Me.vertexDeclaration ? Re.vertexDeclaration : e === st.vertexDeclaration ? nt.vertexDeclaration : e === Qe.vertexDeclaration ? $e.vertexDeclaration : e === ot.vertexDeclaration ? tt.vertexDeclaration : e === rt.vertexDeclaration ? Je.vertexDeclaration : e === je.vertexDeclaration ? ke.vertexDeclaration : e === ht.vertexDeclaration ? null : e === Me.vertexDeclaration ? Re.vertexDeclaration : e === lt.vertexDeclaration ? it.vertexDeclaration : e === Qe.vertexDeclaration ? $e.vertexDeclaration : e
            }, t._getCombineRenderElementFromPool = function() {
                throw new Error("StaticBatch:must override this function.")
            }, t._addBatchRenderElement = function(e) {
                this._batchRenderElements.splice(this._binarySearch(e), 0, e)
            }, t._updateToRenderQueue = function(e, t) {
                this._combineRenderElementPoolIndex = 0, this._getRenderElement(e.getRenderQueue(this._material.renderQueue)._renderElements, e, t)
            }, t._getRenderElement = function(e, t, n) {
                throw new Error("StaticBatch:must override this function.")
            }, t._finishInit = function() {
                throw new Error("StaticBatch:must override this function.")
            }, t._clearRenderElements = function() {
                this._batchRenderElements.length = 0
            }, t.dispose = function() {}, t._getVertexBuffer = function(e) {
                return void 0 === e && (e = 0), null
            }, t._getIndexBuffer = function() {
                return null
            }, t._beforeRender = function(e) {
                return !0
            }, t._render = function(e) {}, t._getVertexBuffers = function() {
                return null
            }, g(0, t, "_vertexBufferCount", function() {
                return 1
            }), g(0, t, "triangleCount", function() {
                return 0
            }), e.combine = function(e) {
                console.log("StaticBatch: discard property,please use StaticBatchManager.combine() function instead."), ue.combine(e)
            }, e.maxBatchVertexCount = 65535, e
        }(),
        de = function() {
            function o(e, t) {
                if (this._id = 0, this._shaderValues = null, this._shaderDefineValue = 0, this._vertexStride = 0, this._vertexElements = null, this._vertexElementsDic = null, this._id = ++o._uniqueIDCounter, this._id > o.maxVertexDeclaration) throw new Error("VertexDeclaration: VertexDeclaration count should not large than ", o.maxVertexDeclaration);
                this._shaderValues = new Ht, this._vertexElementsDic = {}, this._vertexStride = e, this._vertexElements = t;
                for (var n = 0; n < t.length; n++) {
                    var i = t[n],
                        r = i.elementUsage;
                    this._vertexElementsDic[r] = i;
                    var a = [o._getTypeSize(i.elementFormat) / 4, 5126, !1, this._vertexStride, i.offset];
                    switch (this._shaderValues.setValue(r, a), r) {
                        case 1:
                            this._addShaderDefine(un.SHADERDEFINE_COLOR);
                            break;
                        case 2:
                            this._addShaderDefine(un.SHADERDEFINE_UV0);
                            break;
                        case 15:
                            this._addShaderDefine(un.SHADERDEFINE_UV1)
                    }
                }
            }
            m(o, "t_tl.d3.graphics.VertexDeclaration");
            var e = o.prototype;
            return e._addShaderDefine = function(e) {
                this._shaderDefineValue |= e
            }, e._removeShaderDefine = function(e) {
                this._shaderDefineValue &= ~e
            }, e.getVertexElements = function() {
                return this._vertexElements.slice()
            }, e.getVertexElementByUsage = function(e) {
                return this._vertexElementsDic[e]
            }, e.unBinding = function() {}, g(0, e, "shaderDefineValue", function() {
                return this._shaderDefineValue
            }), g(0, e, "id", function() {
                return this._id
            }), g(0, e, "vertexStride", function() {
                return this._vertexStride
            }), g(0, e, "shaderValues", function() {
                return this._shaderValues
            }), o._getTypeSize = function(e) {
                switch (e) {
                    case "single":
                        return 4;
                    case "vector2":
                        return 8;
                    case "vector3":
                        return 12;
                    case "vector4":
                        return 16;
                    case "color":
                    case "byte4":
                    case "short2":
                        return 4;
                    case "short4":
                        return 8;
                    case "normalizedshort2":
                        return 4;
                    case "normalizedshort4":
                        return 8;
                    case "halfvector2":
                        return 4;
                    case "halfvector4":
                        return 8
                }
                return 0
            }, o.getVertexStride = function(e) {
                for (var t = 0, n = 0; n < e.Length; n++) {
                    var i = e[n],
                        r = i.offset + o._getTypeSize(i.elementFormat);
                    t < r && (t = r)
                }
                return t
            }, o._maxVertexDeclarationBit = 1e3, o._uniqueIDCounter = 1, u(o, ["maxVertexDeclaration", function() {
                return this.maxVertexDeclaration = 2147483647 - 1e3 * Math.floor(2147483.647)
            }]), o
        }(),
        fe = function() {
            function e(e, t, n) {
                this.offset = 0, this.elementFormat = null, this.elementUsage = 0, this.offset = e, this.elementFormat = t, this.elementUsage = n
            }
            return m(e, "t_tl.d3.graphics.VertexElement"), e
        }(),
        me = (function() {
            function e() {}
            m(e, "t_tl.d3.graphics.VertexElementFormat"), e.Single = "single", e.Vector2 = "vector2", e.Vector3 = "vector3", e.Vector4 = "vector4", e.Color = "color", e.Byte4 = "byte4", e.Short2 = "short2", e.Short4 = "short4", e.NormalizedShort2 = "normalizedshort2", e.NormalizedShort4 = "normalizedshort4", e.HalfVector2 = "halfvector2", e.HalfVector4 = "halfvector4"
        }(), function() {
            function e() {}
            m(e, "t_tl.d3.graphics.VertexElementUsage"), e.POSITION0 = 0, e.COLOR0 = 1, e.TEXTURECOORDINATE0 = 2, e.NORMAL0 = 3, e.BINORMAL0 = 4, e.TANGENT0 = 5, e.BLENDINDICES0 = 6, e.BLENDWEIGHT0 = 7, e.DEPTH0 = 8, e.FOG0 = 9, e.POINTSIZE0 = 10, e.SAMPLE0 = 11, e.TESSELLATEFACTOR0 = 12, e.COLOR1 = 13, e.NEXTTEXTURECOORDINATE0 = 14, e.TEXTURECOORDINATE1 = 15, e.NEXTTEXTURECOORDINATE1 = 16, e.CORNERTEXTURECOORDINATE0 = 17, e.VELOCITY0 = 18, e.STARTCOLOR0 = 19, e.STARTSIZE = 20, e.AGEADDSCALE0 = 21, e.STARTROTATION = 22, e.ENDCOLOR0 = 23, e.STARTLIFETIME = 24, e.TIME0 = 33, e.SHAPEPOSITIONSTARTLIFETIME = 30, e.DIRECTIONTIME = 32, e.SIZEROTATION0 = 27, e.RADIUS0 = 28, e.RADIAN0 = 29, e.STARTSPEED = 31, e.RANDOM0 = 34, e.RANDOM1 = 35, e.SIMULATIONWORLDPOSTION = 36, e.SIMULATIONWORLDROTATION = 37, e.TEXTURECOORDINATE0X = 38, e.TEXTURECOORDINATE0X1 = 39, e.TEXTURECOORDINATE0Y = 40, e.OFFSETVECTOR = 41
        }(), function() {
            function e(e, t, n) {
                this._position = null, this._textureCoordinate0 = null, this._time = NaN, this._position = e, this._textureCoordinate0 = t, this._time = n
            }
            m(e, "t_tl.d3.graphics.VertexGlitter");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate0
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "time", function() {
                return this._time
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(24, [new fe(0, "vector3", 0), new fe(12, "vector2", 2), new fe(20, "single", 33)])
            }]), e
        }()),
        pe = (function() {
            function e(e, t, n, i, r, a, o, s, l, h) {
                this._cornerTextureCoordinate = null, this._position = null, this._velocity = null, this._startColor = null, this._endColor = null, this._sizeRotation = null, this._radius = null, this._radian = null, this._ageAddScale = NaN, this._time = NaN, this._cornerTextureCoordinate = e, this._position = t, this._velocity = n, this._startColor = i, this._endColor = r, this._sizeRotation = a, this._radius = o, this._radian = s, this._ageAddScale = l, this._time = h
            }
            m(e, "t_tl.d3.graphics.VertexParticle");
            var t = e.prototype;
            x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "endColor", function() {
                return this._endColor
            }), g(0, t, "cornerTextureCoordinate", function() {
                return this._cornerTextureCoordinate
            }), g(0, t, "sizeRotation", function() {
                return this._sizeRotation
            }), g(0, t, "velocity", function() {
                return this._velocity
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "startColor", function() {
                return this._startColor
            }), g(0, t, "radius", function() {
                return this._radius
            }), g(0, t, "radian", function() {
                return this._radian
            }), g(0, t, "ageAddScale", function() {
                return this._ageAddScale
            }), g(0, t, "time", function() {
                return this._time
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(116, [new fe(0, "vector4", 17), new fe(16, "vector3", 0), new fe(28, "vector3", 18), new fe(40, "vector4", 19), new fe(56, "vector4", 23), new fe(72, "vector3", 27), new fe(84, "vector2", 28), new fe(92, "vector4", 29), new fe(108, "single", 24), new fe(112, "single", 33)])
            }])
        }(), function() {
            function e(e) {
                this._position = null, this._position = e
            }
            m(e, "t_tl.d3.graphics.VertexPosition");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(12, [new fe(0, "vector3", 0)])
            }]), e
        }()),
        ve = function() {
            function e(e, t) {
                this._position = null, this._normal = null, this._position = e, this._normal = t
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormal");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(24, [new fe(0, "vector3", 0), new fe(12, "vector3", 3)])
            }]), e
        }(),
        ge = function() {
            function e(e, t, n) {
                this._position = null, this._normal = null, this._color = null, this._position = e, this._normal = t, this._color = n
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColor");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(40, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1)])
            }]), e
        }(),
        Ee = function() {
            function e(e, t, n, i, r) {
                this._position = null, this._normal = null, this._color = null, this._blendIndex = null, this._blendWeight = null, this._position = e, this._normal = t, this._color = n, this._blendIndex = i, this._blendWeight = r
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorSkin");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(72, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector4", 7), new fe(56, "vector4", 6)])
            }]), e
        }(),
        Se = function() {
            function e(e, t, n, i, r, a) {
                this._position = null, this._normal = null, this._color = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._tangent = i, this._blendIndex = r, this._blendWeight = a
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorSkinSTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(88, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector4", 7), new fe(56, "vector4", 6), new fe(72, "vector4", 5)])
            }]), e
        }(),
        De = function() {
            function e(e, t, n, i, r, a) {
                this._position = null, this._normal = null, this._color = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._tangent = i, this._blendIndex = r, this._blendWeight = a
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorSkinTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(84, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector4", 7), new fe(56, "vector4", 6), new fe(72, "vector3", 5)])
            }]), e
        }(),
        Te = function() {
            function e(e, t, n, i) {
                this._position = null, this._normal = null, this._color = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._tangent = i
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorSTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(56, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector4", 5)])
            }]), e
        }(),
        xe = function() {
            function e(e, t, n, i) {
                this._position = null, this._normal = null, this._color = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._tangent = i
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(52, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector3", 5)])
            }]), e
        }(),
        Me = function() {
            function e(e, t, n, i) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate = i
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTexture");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(48, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2)])
            }]), e
        }(),
        Re = function() {
            function e(e, t, n, i, r) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate0 = i, this._textureCoordinate1 = r
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTexture0Texture1");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(56, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector2", 15)])
            }]), e
        }(),
        Ue = function() {
            function e(e, t, n, i, r, a, o) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate0 = i, this._textureCoordinate1 = r, this._blendIndex = a, this._blendWeight = o
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTexture0Texture1Skin");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(88, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector2", 15), new fe(56, "vector4", 7), new fe(72, "vector4", 6)])
            }]), e
        }(),
        He = function() {
            function e(e, t, n, i, r, a, o, s) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate0 = i, this._textureCoordinate1 = r, this._tangent = a, this._blendIndex = o, this._blendWeight = s
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTexture0Texture1SkinSTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(104, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector2", 15), new fe(56, "vector4", 7), new fe(72, "vector4", 6), new fe(88, "vector4", 5)])
            }]), e
        }(),
        Ge = function() {
            function e() {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTexture0Texture1SkinTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), t.VertexPositionNormalColorTexture0SkinTangent = function(e, t, n, i, r, a, o, s) {
                this._position = e, this._normal = t, this._color = n, this._textureCoordinate0 = i, this._textureCoordinate1 = r, this._tangent = a, this._blendIndex = o, this._blendWeight = s
            }, g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(100, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector2", 15), new fe(56, "vector4", 7), new fe(72, "vector4", 6), new fe(88, "vector3", 5)])
            }]), e
        }(),
        ze = function() {
            function e(e, t, n, i, r, a) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate0 = i, this._textureCoordinate1 = r, this._tangent = a
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTexture0Texture1STangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(72, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector2", 15), new fe(56, "vector4", 5)])
            }]), e
        }(),
        ke = function() {
            function e() {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._tangent = null
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTexture0Texture1Tangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), t.VertexPositionNormalColorTexture0Tangent = function(e, t, n, i, r, a) {
                this._position = e, this._normal = t, this._color = n, this._textureCoordinate0 = i, this._textureCoordinate1 = r, this._tangent = a
            }, g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(68, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector2", 15), new fe(56, "vector3", 5)])
            }]), e
        }(),
        We = function() {
            function e(e, t, n, i, r, a) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate = i, this._blendIndex = r, this._blendWeight = a
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTextureSkin");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(80, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector4", 7), new fe(64, "vector4", 6)])
            }]), e
        }(),
        Xe = function() {
            function e(e, t, n, i, r, a, o) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate = i, this._tangent = r, this._blendIndex = a, this._blendWeight = o
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTextureSkinSTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(96, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector4", 7), new fe(64, "vector4", 6), new fe(80, "vector4", 5)])
            }]), e
        }(),
        Ze = function() {
            function e(e, t, n, i, r, a, o) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate = i, this._tangent = r, this._blendIndex = a, this._blendWeight = o
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTextureSkinTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(92, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector4", 7), new fe(64, "vector4", 6), new fe(80, "vector3", 5)])
            }]), e
        }(),
        Ye = function() {
            function e(e, t, n, i, r) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate = i, this._tangent = r
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTextureSTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(64, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector4", 5)])
            }]), e
        }(),
        je = function() {
            function e(e, t, n, i, r) {
                this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._tangent = null, this._position = e, this._normal = t, this._color = n, this._textureCoordinate = i, this._tangent = r
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalColorTextureTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "color", function() {
                return this._color
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(60, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 1), new fe(40, "vector2", 2), new fe(48, "vector3", 5)])
            }]), e
        }(),
        Ke = function() {
            function e(e, t, n) {
                this._position = null, this._normal = null, this._tangent = null, this._position = e, this._normal = t, this._tangent = n
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalSTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(40, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector4", 5)])
            }]), e
        }(),
        qe = function() {
            function e(e, t, n) {
                this._position = null, this._normal = null, this._tangent = null, this._position = e, this._normal = t, this._tangent = n
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(36, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector3", 5)])
            }]), e
        }(),
        Qe = function() {
            function e(e, t, n) {
                this._position = null, this._normal = null, this._textureCoordinate = null, this._position = e, this._normal = t, this._textureCoordinate = n
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTexture");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(32, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2)])
            }]), e
        }(),
        $e = function() {
            function e(e, t, n, i) {
                this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._position = e, this._normal = t, this._textureCoordinate0 = n, this._textureCoordinate1 = i
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTexture0Texture1");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(40, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector2", 15)])
            }]), e
        }(),
        Je = function() {
            function e(e, t, n, i, r, a) {
                this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._position = e, this._normal = t, this._textureCoordinate0 = n, this._textureCoordinate1 = i, this._blendIndex = r, this._blendWeight = a
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTexture0Texture1Skin");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(72, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector2", 15), new fe(40, "vector4", 7), new fe(56, "vector4", 6)])
            }]), e
        }(),
        et = function() {
            function e(e, t, n, i, r, a, o) {
                this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = e, this._normal = t, this._textureCoordinate0 = n, this._textureCoordinate1 = i, this._tangent = r, this._blendIndex = a, this._blendWeight = o
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTexture0Texture1SkinSTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(88, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector2", 15), new fe(40, "vector4", 7), new fe(56, "vector4", 6), new fe(72, "vector4", 5)])
            }]), e
        }(),
        tt = function() {
            function e() {
                this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTexture0Texture1SkinTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), t.VertexPositionNormalTexture0SkinTangent = function(e, t, n, i, r, a, o) {
                this._position = e, this._normal = t, this._textureCoordinate0 = n, this._textureCoordinate1 = i, this._tangent = r, this._blendIndex = a, this._blendWeight = o
            }, g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(84, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector2", 15), new fe(40, "vector4", 7), new fe(56, "vector4", 6), new fe(72, "vector3", 5)])
            }]), e
        }(),
        nt = function() {
            function e(e, t, n, i, r) {
                this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._tangent = null, this._position = e, this._normal = t, this._textureCoordinate0 = n, this._textureCoordinate1 = i, this._tangent = r
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTexture0Texture1STangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(56, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector2", 15), new fe(40, "vector4", 5)])
            }]), e
        }(),
        it = function() {
            function e() {
                this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._tangent = null
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTexture0Texture1Tangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), t.VertexPositionNormalTexture0Tangent = function(e, t, n, i, r) {
                this._position = e, this._normal = t, this._textureCoordinate0 = n, this._textureCoordinate1 = i, this._tangent = r
            }, g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(52, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector2", 15), new fe(40, "vector3", 5)])
            }]), e
        }(),
        rt = function() {
            function e(e, t, n, i, r) {
                this._position = null, this._normal = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._position = e, this._normal = t, this._textureCoordinate = n, this._blendIndex = i, this._blendWeight = r
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTextureSkin");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(64, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector4", 7), new fe(48, "vector4", 6)])
            }]), e
        }(),
        at = function() {
            function e(e, t, n, i, r, a) {
                this._position = null, this._normal = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = e, this._normal = t, this._textureCoordinate = n, this._tangent = i, this._blendIndex = r, this._blendWeight = a
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTextureSkinSTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(80, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector4", 7), new fe(48, "vector4", 6), new fe(64, "vector4", 5)])
            }]), e
        }(),
        ot = function() {
            function e(e, t, n, i, r, a) {
                this._position = null, this._normal = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = e, this._normal = t, this._textureCoordinate = n, this._tangent = i, this._blendIndex = r, this._blendWeight = a
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTextureSkinTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(76, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector4", 7), new fe(48, "vector4", 6), new fe(64, "vector3", 5)])
            }]), e
        }(),
        st = function() {
            function e(e, t, n, i) {
                this._position = null, this._normal = null, this._textureCoordinate = null, this._tangent = null, this._position = e, this._normal = t, this._textureCoordinate = n, this._tangent = i
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTextureSTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(48, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector4", 5)])
            }]), e
        }(),
        lt = function() {
            function e(e, t, n, i) {
                this._position = null, this._normal = null, this._textureCoordinate = null, this._tangent = null, this._position = e, this._normal = t, this._textureCoordinate = n, this._tangent = i
            }
            m(e, "t_tl.d3.graphics.VertexPositionNormalTextureTangent");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(44, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector3", 5)])
            }]), e
        }(),
        ht = function() {
            function e(e, t, n) {
                this._position = null, this._normal = null, this._textureCoordinate = null, this._position = e, this._normal = t, this._textureCoordinate = n
            }
            m(e, "t_tl.d3.graphics.VertexPositionNTBTexture");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(56, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector3", 5), new fe(36, "vector3", 4), new fe(48, "vector2", 2)])
            }]), e
        }(),
        _t = function() {
            function e(e, t, n, i, r, a, o, s) {
                this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this.binormal = null, this._position = e, this._normal = t, this._textureCoordinate0 = i, this._textureCoordinate1 = r, this._tangent = a, n = n, this._blendIndex = o, this._blendWeight = s
            }
            m(e, "t_tl.d3.graphics.VertexPositionNTBTexture0Texture1Skin");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "tangent", function() {
                return this._tangent
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(0, t, "textureCoordinate1", function() {
                return this._textureCoordinate1
            }), g(0, t, "blendIndex", function() {
                return this._blendIndex
            }), g(0, t, "blendWeight", function() {
                return this._blendWeight
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(96, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector3", 5), new fe(36, "vector3", 4), new fe(48, "vector2", 2), new fe(56, "vector2", 15), new fe(64, "vector4", 7), new fe(80, "vector4", 6)])
            }]), e
        }(),
        ut = function() {
            function e(e, t, n) {
                this._position = null, this._normal = null, this._textureCoordinate = null, this._position = e, this._normal = t, this._textureCoordinate = n
            }
            m(e, "t_tl.d3.graphics.VertexPositionNTBTextureSkin");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "textureCoordinate", function() {
                return this._textureCoordinate
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(88, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector3", 5), new fe(36, "vector3", 4), new fe(48, "vector2", 2), new fe(56, "vector4", 7), new fe(72, "vector4", 6)])
            }]), e
        }(),
        ct = function() {
            function e(e, t, n, i) {
                this._position = null, this._normal = null, this._textureCoord0 = null, this._textureCoord1 = null, this._position = e, this._normal = t, this._textureCoord0 = n, this._textureCoord1 = i
            }
            m(e, "t_tl.d3.graphics.VertexPositionTerrain");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "normal", function() {
                return this._normal
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "textureCoord0", function() {
                return this._textureCoord0
            }), g(0, t, "textureCoord1", function() {
                return this._textureCoord1
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(40, [new fe(0, "vector3", 0), new fe(12, "vector3", 3), new fe(24, "vector2", 2), new fe(32, "vector2", 15)])
            }]), e
        }(),
        dt = function() {
            function e(e, t) {
                this._position = null, this._textureCoordinate0 = null, this._position = e, this._textureCoordinate0 = t
            }
            m(e, "t_tl.d3.graphics.VertexPositionTexture0");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "position", function() {
                return this._position
            }), g(0, t, "textureCoordinate0", function() {
                return this._textureCoordinate0
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(20, [new fe(0, "vector3", 0), new fe(12, "vector2", 2)])
            }]), e
        }(),
        ft = function() {
            function e(e, t, n, i, r, a, o, s, l, h, _, u, c, d) {
                this._cornerTextureCoordinate = null, this._positionStartLifeTime = null, this._velocity = null, this._startColor = null, this._startSize = null, this._startRotation0 = null, this._startRotation1 = null, this._startRotation2 = null, this._startLifeTime = NaN, this._time = NaN, this._startSpeed = NaN, this._randoms0 = null, this._randoms1 = null, this._simulationWorldPostion = null, this._cornerTextureCoordinate = e, this._positionStartLifeTime = t, this._velocity = n, this._startColor = i, this._startSize = r, this._startRotation0 = a, this._startRotation1 = o, this._startRotation2 = s, this._startLifeTime = l, this._time = h, this._startSpeed = _, this._randoms0 = this.random0, this._randoms1 = this.random1, this._simulationWorldPostion = d
            }
            m(e, "t_tl.d3.graphics.VertexShurikenParticleBillboard");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "cornerTextureCoordinate", function() {
                return this._cornerTextureCoordinate
            }), g(0, t, "random1", function() {
                return this._randoms1
            }), g(0, t, "startRotation2", function() {
                return this._startRotation2
            }), g(0, t, "positionStartLifeTime", function() {
                return this._positionStartLifeTime
            }), g(0, t, "velocity", function() {
                return this._velocity
            }), g(0, t, "random0", function() {
                return this._randoms0
            }), g(0, t, "startSize", function() {
                return this._startSize
            }), g(0, t, "startColor", function() {
                return this._startColor
            }), g(0, t, "startRotation0", function() {
                return this._startRotation0
            }), g(0, t, "startRotation1", function() {
                return this._startRotation1
            }), g(0, t, "startLifeTime", function() {
                return this._startLifeTime
            }), g(0, t, "time", function() {
                return this._time
            }), g(0, t, "startSpeed", function() {
                return this._startSpeed
            }), g(0, t, "simulationWorldPostion", function() {
                return this._simulationWorldPostion
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(152, [new fe(0, "vector4", 17), new fe(16, "vector4", 30), new fe(32, "vector4", 32), new fe(48, "vector4", 19), new fe(64, "vector3", 20), new fe(76, "vector3", 22), new fe(88, "single", 31), new fe(92, "vector4", 34), new fe(108, "vector4", 35), new fe(124, "vector3", 36), new fe(136, "vector4", 37)])
            }]), e
        }(),
        mt = function() {
            function e(e, t, n, i, r, a, o, s, l, h, _, u, c, d) {
                this._cornerTextureCoordinate = null, this._positionStartLifeTime = null, this._velocity = null, this._startColor = null, this._startSize = null, this._startRotation0 = null, this._startRotation1 = null, this._startRotation2 = null, this._startLifeTime = NaN, this._time = NaN, this._startSpeed = NaN, this._randoms0 = null, this._randoms1 = null, this._simulationWorldPostion = null, this._cornerTextureCoordinate = e, this._positionStartLifeTime = t, this._velocity = n, this._startColor = i, this._startSize = r, this._startRotation0 = a, this._startRotation1 = o, this._startRotation2 = s, this._startLifeTime = l, this._time = h, this._startSpeed = _, this._randoms0 = this.random0, this._randoms1 = this.random1, this._simulationWorldPostion = d
            }
            m(e, "t_tl.d3.graphics.VertexShurikenParticleMesh");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.graphics.IVertex": !0
            }), g(0, t, "cornerTextureCoordinate", function() {
                return this._cornerTextureCoordinate
            }), g(0, t, "velocity", function() {
                return this._velocity
            }), g(0, t, "position", function() {
                return this._positionStartLifeTime
            }), g(0, t, "random0", function() {
                return this._randoms0
            }), g(0, t, "startSize", function() {
                return this._startSize
            }), g(0, t, "startColor", function() {
                return this._startColor
            }), g(0, t, "startRotation0", function() {
                return this._startRotation0
            }), g(0, t, "startRotation1", function() {
                return this._startRotation1
            }), g(0, t, "random1", function() {
                return this._randoms1
            }), g(0, t, "startRotation2", function() {
                return this._startRotation2
            }), g(0, t, "startLifeTime", function() {
                return this._startLifeTime
            }), g(0, t, "time", function() {
                return this._time
            }), g(0, t, "startSpeed", function() {
                return this._startSpeed
            }), g(0, t, "simulationWorldPostion", function() {
                return this._simulationWorldPostion
            }), g(0, t, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), g(1, e, "vertexDeclaration", function() {
                return e._vertexDeclaration
            }), u(e, ["_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(172, [new fe(0, "vector3", 0), new fe(12, "vector4", 1), new fe(28, "vector2", 2), new fe(36, "vector4", 30), new fe(52, "vector4", 32), new fe(68, "vector4", 19), new fe(84, "vector3", 20), new fe(96, "vector3", 22), new fe(108, "single", 31), new fe(112, "vector4", 34), new fe(128, "vector4", 35), new fe(144, "vector3", 36), new fe(156, "vector4", 37)])
            }]), e
        }(),
        pt = function() {
            function E(e, t, n, i, r, a) {
                this._version = null, this._strings = ["BLOCK", "DATA", "STRINGS"], this._materials = null, this._subMeshes = null, this._materialMap = null, this._readData = null, this._mesh = null, this._BLOCK = {
                    count: 0
                }, this._DATA = {
                    offset: 0,
                    size: 0
                }, this._STRINGS = {
                    offset: 0,
                    size: 0
                }, this._shaderAttributes = null, this._mesh = n, this._materials = i, this._subMeshes = r, this._materialMap = a, this._version = t, this._onLoaded(e)
            }
            m(E, "t_tl.d3.loaders.LoadModelV01");
            var e = E.prototype;
            return e._onLoaded = function(e) {
                this._readData = e, this.READ_BLOCK();
                for (var t = 0; t < this._BLOCK.count; t++) {
                    var n = this._readData.getUint16(),
                        i = this._strings[n],
                        r = this["READ_" + i];
                    if (null == r) throw new Error("model file err,no this function:" + n + " " + i);
                    if (!r.call(this)) break
                }
                return this._mesh
            }, e.onError = function() {}, e._readString = function() {
                return this._strings[this._readData.getUint16()]
            }, e.READ_BLOCK = function() {
                this._readData.getUint16();
                return this._BLOCK.count = this._readData.getUint16(), !0
            }, e.READ_DATA = function() {
                return this._DATA.offset = this._readData.getUint32(), this._DATA.size = this._readData.getUint32(), !0
            }, e.READ_STRINGS = function() {
                this._STRINGS.offset = this._readData.getUint16(), this._STRINGS.size = this._readData.getUint16();
                var e = this._readData.pos;
                this._readData.pos = this._STRINGS.offset + this._DATA.offset;
                for (var t = 0; t < this._STRINGS.size; t++) this._strings[t] = this._readData.readUTFString();
                return this._readData.pos = e, !0
            }, e.READ_MATERIAL = function() {
                var e = this._readData.getUint16(),
                    t = (this._readString(), this._readString());
                return this._materials[e] = "null" !== t ? Ae.getRes(this._materialMap[t]) : new vn, !0
            }, e.READ_MESH = function() {
                this._readString();
                switch (this._version) {
                    case "LAYAMODEL:01":
                        console.log("Warning: The (.lm) file is converted by old fbxTools,please reConverted it use  lastest fbxTools version,later we will remove the  support of old version (.lm) support.");
                        break;
                    case "LAYASKINANI:01":
                    case "LAYAMODEL:02":
                        var e, t = this._readData.__getBuffer(),
                            n = 0,
                            i = this._readData.getUint32(),
                            r = this._readData.getUint32(),
                            a = (new Float32Array(t.slice(i + this._DATA.offset, i + this._DATA.offset + r)), this._readData.getUint32()),
                            o = this._readData.getUint32(),
                            s = new Float32Array(t.slice(a + this._DATA.offset, a + this._DATA.offset + o));
                        for (this.mesh._inverseBindPoses = [], n = 0, e = s.length; n < e; n += 16) {
                            var l = new At(s[n + 0], s[n + 1], s[n + 2], s[n + 3], s[n + 4], s[n + 5], s[n + 6], s[n + 7], s[n + 8], s[n + 9], s[n + 10], s[n + 11], s[n + 12], s[n + 13], s[n + 14], s[n + 15]);
                            this.mesh._inverseBindPoses.push(l)
                        }
                        break;
                    default:
                        throw new Error("LoadModel:unknown version.")
                }
                return !0
            }, e.READ_SUBMESH = function() {
                this._readString(), this._readData.getUint8();
                var e = this._readString();
                this._shaderAttributes = e.match(E._attrReg);
                var t = this._readData.getUint32(),
                    n = this._readData.getUint32(),
                    i = (this._readData.getUint32(), this._readData.getUint32(), this._readData.getUint32()),
                    r = this._readData.getUint32(),
                    a = this._readData.getUint32(),
                    o = this._readData.getUint32(),
                    s = this._readData.__getBuffer(),
                    l = new Ft(this._mesh),
                    h = this._getVertexDeclaration(),
                    _ = Kn.create(h, r / h.vertexStride, 35044, !0),
                    u = i + this._DATA.offset,
                    c = s.slice(u, u + r);
                _.setData(new Float32Array(c));
                for (var d = (l._vertexBuffer = _).vertexDeclaration.getVertexElements(), f = 0; f < d.length; f++) l._bufferUsage[d[f].elementUsage] = _;
                var m = jn.create("ushort", n / 2, 35044, !0),
                    p = t + this._DATA.offset,
                    v = s.slice(p, p + n);
                m.setData(new Uint16Array(v)), l._indexBuffer = m;
                var g = s.slice(a + this._DATA.offset, a + this._DATA.offset + o);
                return l._boneIndicesList[0] = new Uint8Array(g), this._subMeshes.push(l), !0
            }, e.READ_DATAAREA = function() {
                return !1
            }, e._getVertexDeclaration = function() {
                for (var e, t = !1, n = !1, i = !1, r = !1, a = !1, o = !1, s = !1, l = !1, h = !1, _ = 0; _ < this._shaderAttributes.length; _ += 8) switch (this._shaderAttributes[_]) {
                    case "POSITION":
                        t = !0;
                        break;
                    case "NORMAL":
                        n = !0;
                        break;
                    case "COLOR":
                        i = !0;
                        break;
                    case "UV":
                        r = !0;
                        break;
                    case "UV1":
                        a = !0;
                        break;
                    case "BLENDWEIGHT":
                        s = !0;
                        break;
                    case "BLENDINDICES":
                        l = !0;
                        break;
                    case "TANGENT":
                        o = !0;
                        break;
                    case "BINORMAL":
                        h = !0
                }
                return t && n && i && r && a && s && l && o ? e = Ge.vertexDeclaration : t && n && i && r && a && s && l ? e = Ue.vertexDeclaration : t && n && r && a && s && l && o ? e = tt.vertexDeclaration : t && n && r && a && s && l ? e = Je.vertexDeclaration : t && n && i && r && s && l && o ? e = Ze.vertexDeclaration : t && n && i && r && s && l ? e = We.vertexDeclaration : t && n && o && h && r && s && l ? e = ut.vertexDeclaration : t && n && r && s && l && o ? e = ot.vertexDeclaration : t && n && r && s && l ? e = rt.vertexDeclaration : t && n && i && s && l && o ? e = De.vertexDeclaration : t && n && i && s && l ? e = Ee.vertexDeclaration : t && n && i && r && a && o ? e = ke.vertexDeclaration : t && n && i && r && a ? e = Re.vertexDeclaration : t && n && r && a && o ? e = it.vertexDeclaration : t && n && r && a ? e = $e.vertexDeclaration : t && n && i && r && o ? e = je.vertexDeclaration : t && n && r && o && h ? e = ht.vertexDeclaration : t && n && i && r ? e = Me.vertexDeclaration : t && n && r && o ? e = lt.vertexDeclaration : t && n && r ? e = Qe.vertexDeclaration : t && n && i && o ? e = xe.vertexDeclaration : t && n && i && (e = ge.vertexDeclaration), e
            }, g(0, e, "mesh", function() {
                return this._mesh
            }), E._attrReg = new RegExp("(\\w+)|([:,;])", "g"), E
        }(),
        vt = function() {
            function x() {}
            return m(x, "t_tl.d3.loaders.LoadModelV02"), x.parse = function(e, t, n, i, r, a) {
                x._mesh = n, x._materials = i, x._subMeshes = r, x._materialMap = a, x._version = t, x._readData = e, x.READ_DATA(), x.READ_BLOCK(), x.READ_STRINGS();
                for (var o = 0, s = x._BLOCK.count; o < s; o++) {
                    x._readData.pos = x._BLOCK.blockStarts[o];
                    var l = x._readData.getUint16(),
                        h = x._strings[l],
                        _ = x["READ_" + h];
                    if (null == _) throw new Error("model file err,no this function:" + l + " " + h);
                    _.call()
                }
                x._strings.length = 0, x._readData = null, x._version = null, x._mesh = null, x._materials = null, x._subMeshes = null, x._materialMap = null
            }, x._readString = function() {
                return x._strings[x._readData.getUint16()]
            }, x.READ_DATA = function() {
                x._DATA.offset = x._readData.getUint32(), x._DATA.size = x._readData.getUint32()
            }, x.READ_BLOCK = function() {
                for (var e = x._BLOCK.count = x._readData.getUint16(), t = x._BLOCK.blockStarts = [], n = x._BLOCK.blockLengths = [], i = 0; i < e; i++) t.push(x._readData.getUint32()), n.push(x._readData.getUint32())
            }, x.READ_STRINGS = function() {
                var e = x._readData.getUint32(),
                    t = x._readData.getUint16(),
                    n = x._readData.pos;
                x._readData.pos = e + x._DATA.offset;
                for (var i = 0; i < t; i++) x._strings[i] = x._readData.readUTFString();
                x._readData.pos = n
            }, x.READ_MATERIAL = function() {
                x._readString(), x._readString();
                var e = x._readString();
                return "" !== e && x._materials.push(Ae.getRes(x._materialMap[e])), !0
            }, x.READ_MESH = function() {
                x._readString();
                var e, t = x._readData.__getBuffer(),
                    n = 0,
                    i = x._readData.getInt16(),
                    r = x._DATA.offset;
                for (n = 0; n < i; n++) {
                    var a = r + x._readData.getUint32(),
                        o = x._readData.getUint32(),
                        s = new Float32Array(t.slice(a, a + o)),
                        l = x._readString().match(x._attrReg),
                        h = x._getVertexDeclaration(l),
                        _ = Kn.create(h, 4 * s.length / h.vertexStride, 35044, !0);
                    _.setData(s), x._mesh._vertexBuffers.push(_)
                }
                var u = r + x._readData.getUint32(),
                    c = x._readData.getUint32(),
                    d = new Uint16Array(t.slice(u, u + c)),
                    f = jn.create("ushort", c / 2, 35044, !0);
                f.setData(d), x._mesh._indexBuffer = f;
                var m = x._mesh._boneNames = [],
                    p = x._readData.getUint16();
                for (m.length = p, n = 0; n < p; n++) m[n] = x._strings[x._readData.getUint16()];
                var v = x._readData.getUint32(),
                    g = x._readData.getUint32(),
                    E = (new Float32Array(t.slice(r + v, r + v + g)), x._readData.getUint32()),
                    S = x._readData.getUint32(),
                    D = new Float32Array(t.slice(r + E, r + E + S));
                for (x._mesh._inverseBindPoses = [], n = 0, e = D.length; n < e; n += 16) {
                    var T = new At(D[n + 0], D[n + 1], D[n + 2], D[n + 3], D[n + 4], D[n + 5], D[n + 6], D[n + 7], D[n + 8], D[n + 9], D[n + 10], D[n + 11], D[n + 12], D[n + 13], D[n + 14], D[n + 15]);
                    x._mesh._inverseBindPoses.push(T)
                }
                return x._mesh._skinnedDatas = new Float32Array(16 * D.length), !0
            }, x.READ_SUBMESH = function() {
                var e = x._readData.__getBuffer(),
                    t = new Ft(x._mesh),
                    n = x._readData.getInt16(),
                    i = x._readData.getUint32(),
                    r = x._readData.getUint32();
                t._vertexBuffer = x._mesh._vertexBuffers[n], t._vertexStart = i, t._vertexCount = r;
                var a = x._readData.getUint32(),
                    o = x._readData.getUint32(),
                    s = x._mesh._indexBuffer;
                t._indexBuffer = s, t._indexStart = a, t._indexCount = o, t._indices = new Uint16Array(s.getData().buffer, 2 * a, o);
                var l = x._DATA.offset,
                    h = t._subIndexBufferStart,
                    _ = t._subIndexBufferCount,
                    u = t._boneIndicesList,
                    c = x._readData.getUint16();
                h.length = c, _.length = c, u.length = c;
                for (var d = 0; d < c; d++) {
                    h[d] = x._readData.getUint32(), _[d] = x._readData.getUint32();
                    var f = x._readData.getUint32(),
                        m = x._readData.getUint32();
                    t._boneIndicesList[d] = new Uint8Array(e.slice(l + f, l + f + m))
                }
                return x._subMeshes.push(t), !0
            }, x._getVertexDeclaration = function(e) {
                for (var t, n = !1, i = !1, r = !1, a = !1, o = !1, s = !1, l = !1, h = !1, _ = !1, u = 0; u < e.length; u++) switch (e[u]) {
                    case "POSITION":
                        n = !0;
                        break;
                    case "NORMAL":
                        i = !0;
                        break;
                    case "COLOR":
                        r = !0;
                        break;
                    case "UV":
                        a = !0;
                        break;
                    case "UV1":
                        o = !0;
                        break;
                    case "BLENDWEIGHT":
                        l = !0;
                        break;
                    case "BLENDINDICES":
                        h = !0;
                        break;
                    case "TANGENT":
                        s = !0;
                        break;
                    case "BINORMAL":
                        _ = !0
                }
                return n && i && r && a && o && l && h && s ? t = Ge.vertexDeclaration : n && i && r && a && o && l && h ? t = Ue.vertexDeclaration : n && i && a && o && l && h && s ? t = tt.vertexDeclaration : n && i && a && o && l && h ? t = Je.vertexDeclaration : n && i && r && a && l && h && s ? t = Ze.vertexDeclaration : n && i && r && a && l && h ? t = We.vertexDeclaration : n && i && a && l && h && s ? t = ot.vertexDeclaration : n && i && a && l && h ? t = rt.vertexDeclaration : n && i && r && l && h && s ? t = De.vertexDeclaration : n && i && r && l && h ? t = Ee.vertexDeclaration : n && i && r && a && o && s ? t = ke.vertexDeclaration : n && i && r && a && o ? t = Re.vertexDeclaration : n && i && a && o && s ? t = it.vertexDeclaration : n && i && a && o ? t = $e.vertexDeclaration : n && i && r && a && s ? t = je.vertexDeclaration : n && i && a && s && _ ? t = ht.vertexDeclaration : n && i && r && a ? t = Me.vertexDeclaration : n && i && a && s ? t = lt.vertexDeclaration : n && i && a ? t = Qe.vertexDeclaration : n && i && r && s ? t = xe.vertexDeclaration : n && i && r && (t = ge.vertexDeclaration), t
            }, x._attrReg = new RegExp("(\\w+)|([:,;])", "g"), x._strings = [], x._readData = null, x._version = null, x._mesh = null, x._materials = null, x._subMeshes = null, x._materialMap = null, u(x, ["_BLOCK", function() {
                return this._BLOCK = {
                    count: 0
                }
            }, "_DATA", function() {
                return this._DATA = {
                    offset: 0,
                    size: 0
                }
            }]), x
        }(),
        gt = function() {
            function D() {}
            return m(D, "t_tl.d3.loaders.LoadModelV03"), D.parse = function(e, t, n, i, r) {
                D._mesh = n, D._subMeshes = i, D._materialMap = r, D._version = t, D._readData = e, D.READ_DATA(), D.READ_BLOCK(), D.READ_STRINGS();
                for (var a = 0, o = D._BLOCK.count; a < o; a++) {
                    D._readData.pos = D._BLOCK.blockStarts[a];
                    var s = D._readData.getUint16(),
                        l = D._strings[s],
                        h = D["READ_" + l];
                    if (null == h) throw new Error("model file err,no this function:" + s + " " + l);
                    h.call()
                }
                D._strings.length = 0, D._readData = null, D._version = null, D._mesh = null, D._subMeshes = null, D._materialMap = null
            }, D._readString = function() {
                return D._strings[D._readData.getUint16()]
            }, D.READ_DATA = function() {
                D._DATA.offset = D._readData.getUint32(), D._DATA.size = D._readData.getUint32()
            }, D.READ_BLOCK = function() {
                for (var e = D._BLOCK.count = D._readData.getUint16(), t = D._BLOCK.blockStarts = [], n = D._BLOCK.blockLengths = [], i = 0; i < e; i++) t.push(D._readData.getUint32()), n.push(D._readData.getUint32())
            }, D.READ_STRINGS = function() {
                var e = D._readData.getUint32(),
                    t = D._readData.getUint16(),
                    n = D._readData.pos;
                D._readData.pos = e + D._DATA.offset;
                for (var i = 0; i < t; i++) D._strings[i] = D._readData.readUTFString();
                D._readData.pos = n
            }, D.READ_MESH = function() {
                D._readString();
                var e, t = D._readData.__getBuffer(),
                    n = 0,
                    i = D._readData.getInt16(),
                    r = D._DATA.offset;
                for (n = 0; n < i; n++) {
                    var a, o = r + D._readData.getUint32(),
                        s = D._readData.getUint32(),
                        l = new Float32Array(t.slice(o, o + s)),
                        h = D._readString();
                    switch (D._version) {
                        case "LAYAMODEL:03":
                            a = D._vertexDeclarationMap_Discard[h];
                            break;
                        case "LAYAMODEL:0301":
                            a = D._vertexDeclarationMap[h];
                            break;
                        default:
                            throw new Error("LoadModelV03: unknown version.")
                    }
                    if (!a) throw new Error("LoadModelV03: unknown vertexDeclaration.");
                    var _ = Kn.create(a, 4 * l.length / a.vertexStride, 35044, !0);
                    _.setData(l), D._mesh._vertexBuffers.push(_)
                }
                var u = r + D._readData.getUint32(),
                    c = D._readData.getUint32(),
                    d = new Uint16Array(t.slice(u, u + c)),
                    f = jn.create("ushort", c / 2, 35044, !0);
                f.setData(d), D._mesh._indexBuffer = f;
                var m = D._mesh._boneNames = [],
                    p = D._readData.getUint16();
                for (m.length = p, n = 0; n < p; n++) m[n] = D._strings[D._readData.getUint16()];
                D._readData.pos += 8;
                var v = D._readData.getUint32(),
                    g = D._readData.getUint32(),
                    E = new Float32Array(t.slice(r + v, r + v + g));
                for (D._mesh._inverseBindPoses = [], n = 0, e = E.length; n < e; n += 16) {
                    var S = new At(E[n + 0], E[n + 1], E[n + 2], E[n + 3], E[n + 4], E[n + 5], E[n + 6], E[n + 7], E[n + 8], E[n + 9], E[n + 10], E[n + 11], E[n + 12], E[n + 13], E[n + 14], E[n + 15]);
                    D._mesh._inverseBindPoses.push(S)
                }
                return D._mesh._skinnedDatas = new Float32Array(16 * E.length), !0
            }, D.READ_SUBMESH = function() {
                var e = D._readData.__getBuffer(),
                    t = new Ft(D._mesh),
                    n = D._readData.getInt16(),
                    i = D._readData.getUint32(),
                    r = D._readData.getUint32();
                t._vertexBuffer = D._mesh._vertexBuffers[n], t._vertexStart = i, t._vertexCount = r;
                var a = D._readData.getUint32(),
                    o = D._readData.getUint32(),
                    s = D._mesh._indexBuffer;
                t._indexBuffer = s, t._indexStart = a, t._indexCount = o, t._indices = new Uint16Array(s.getData().buffer, 2 * a, o);
                var l = D._DATA.offset,
                    h = t._subIndexBufferStart,
                    _ = t._subIndexBufferCount,
                    u = t._boneIndicesList,
                    c = D._readData.getUint16();
                h.length = c, _.length = c, u.length = c;
                for (var d = 0; d < c; d++) {
                    h[d] = D._readData.getUint32(), _[d] = D._readData.getUint32();
                    var f = D._readData.getUint32(),
                        m = D._readData.getUint32();
                    u[d] = new Uint8Array(e.slice(l + f, l + f + m))
                }
                return D._subMeshes.push(t), !0
            }, D._strings = [], D._readData = null, D._version = null, D._mesh = null, D._subMeshes = null, D._materialMap = null, u(D, ["_vertexDeclarationMap_Discard", function() {
                return this._vertexDeclarationMap_Discard = {
                    "POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT": Ge.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES": Ue.vertexDeclaration,
                    "POSITION,NORMAL,TANGENT,BINORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,": _t.vertexDeclaration,
                    "POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT": tt.vertexDeclaration,
                    "POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES": Je.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES,TANGENT": Ze.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES": We.vertexDeclaration,
                    "POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES,TANGENT": ot.vertexDeclaration,
                    "POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES": rt.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES,TANGENT": De.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES": Ee.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,UV1,TANGENT": ke.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,UV1": Re.vertexDeclaration,
                    "POSITION,NORMAL,UV,UV1,TANGENT": it.vertexDeclaration,
                    "POSITION,NORMAL,UV,UV1": $e.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,TANGENT": je.vertexDeclaration,
                    "POSITION,NORMAL,UV,TANGENT,BINORMAL": ht.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV": Me.vertexDeclaration,
                    "POSITION,NORMAL,UV,TANGENT": lt.vertexDeclaration,
                    "POSITION,NORMAL,UV": Qe.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,TANGENT": xe.vertexDeclaration,
                    "POSITION,NORMAL,COLOR": ge.vertexDeclaration,
                    "POSITION,NORMAL,TANGENT": qe.vertexDeclaration,
                    "POSITION,NORMAL": ve.vertexDeclaration,
                    "POSITION,UV": dt.vertexDeclaration,
                    POSITION: pe.vertexDeclaration
                }
            }, "_vertexDeclarationMap", function() {
                return this._vertexDeclarationMap = {
                    "POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT": He.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES": Ue.vertexDeclaration,
                    "POSITION,NORMAL,TANGENT,BINORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,": _t.vertexDeclaration,
                    "POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT": et.vertexDeclaration,
                    "POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES": Je.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES,TANGENT": Xe.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES": We.vertexDeclaration,
                    "POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES,TANGENT": at.vertexDeclaration,
                    "POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES": rt.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES,TANGENT": Se.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES": Ee.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,UV1,TANGENT": ze.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,UV1": Re.vertexDeclaration,
                    "POSITION,NORMAL,UV,UV1,TANGENT": nt.vertexDeclaration,
                    "POSITION,NORMAL,UV,UV1": $e.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV,TANGENT": Ye.vertexDeclaration,
                    "POSITION,NORMAL,UV,TANGENT,BINORMAL": ht.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,UV": Me.vertexDeclaration,
                    "POSITION,NORMAL,UV,TANGENT": st.vertexDeclaration,
                    "POSITION,NORMAL,UV": Qe.vertexDeclaration,
                    "POSITION,NORMAL,COLOR,TANGENT": Te.vertexDeclaration,
                    "POSITION,NORMAL,COLOR": ge.vertexDeclaration,
                    "POSITION,NORMAL,TANGENT": Ke.vertexDeclaration,
                    "POSITION,NORMAL": ve.vertexDeclaration,
                    "POSITION,UV": dt.vertexDeclaration,
                    POSITION: pe.vertexDeclaration
                }
            }, "_BLOCK", function() {
                return this._BLOCK = {
                    count: 0
                }
            }, "_DATA", function() {
                return this._DATA = {
                    offset: 0,
                    size: 0
                }
            }]), D
        }(),
        Et = function() {
            function s() {}
            return m(s, "t_tl.d3.loaders.MeshReader"), s.read = function(e, t, n, i, r) {
                var a = new S(e);
                a.pos = 0;
                var o = a.readUTFString();
                switch (o) {
                    case "LAYAMODEL:01":
                    case "LAYASKINANI:01":
                        s._readVersion01(a, o, t, n, i, r);
                        break;
                    case "LAYAMODEL:02":
                        vt.parse(a, o, t, n, i, r);
                        break;
                    case "LAYAMODEL:03":
                    case "LAYAMODEL:0301":
                        gt.parse(a, o, t, i, r);
                        break;
                    default:
                        throw new Error("MeshReader: unknown mesh version.")
                }
                t._setSubMeshes(i)
            }, s._readVersion01 = function(e, t, n, i, r, a) {
                new pt(e, t, n, i, r, a)
            }, s
        }(),
        St = function() {
            function e(e, t) {
                this.min = null, this.max = null, this.min = e, this.max = t
            }
            m(e, "t_tl.d3.math.BoundBox");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.getCorners = function(e) {
                e.length = 8;
                var t = this.min.elements,
                    n = this.max.elements,
                    i = t[0],
                    r = t[1],
                    a = t[2],
                    o = n[0],
                    s = n[1],
                    l = n[2];
                e[0] = new Vt(i, s, l), e[1] = new Vt(o, s, l), e[2] = new Vt(o, r, l), e[3] = new Vt(i, r, l), e[4] = new Vt(i, s, a), e[5] = new Vt(o, s, a), e[6] = new Vt(o, r, a), e[7] = new Vt(i, r, a)
            }, t.toDefault = function() {
                this.min.toDefault(), this.max.toDefault()
            }, t.cloneTo = function(e) {
                var t = e;
                this.min.cloneTo(t.min), this.max.cloneTo(t.max)
            }, t.clone = function() {
                var e = new this.constructor(new Vt, new Vt);
                return this.cloneTo(e), e
            }, e.createfromPoints = function(e, t) {
                if (null == e) throw new Error("points");
                var n = t.min,
                    i = t.max,
                    r = n.elements;
                r[0] = Number.MAX_VALUE, r[1] = Number.MAX_VALUE, r[2] = Number.MAX_VALUE;
                var a = i.elements;
                a[0] = -Number.MAX_VALUE, a[1] = -Number.MAX_VALUE, a[2] = -Number.MAX_VALUE;
                for (var o = 0, s = e.length; o < s; ++o) Vt.min(n, e[o], n), Vt.max(i, e[o], i)
            }, e.merge = function(e, t, n) {
                Vt.min(e.min, t.min, n.min), Vt.max(e.max, t.max, n.max)
            }, e
        }(),
        Dt = function() {
            function h(e) {
                this._matrix = null, this._near = null, this._far = null, this._left = null, this._right = null, this._top = null, this._bottom = null, this._matrix = e, this._near = new yt(new Vt), this._far = new yt(new Vt), this._left = new yt(new Vt), this._right = new yt(new Vt), this._top = new yt(new Vt), this._bottom = new yt(new Vt), h._getPlanesFromMatrix(this._matrix, this._near, this._far, this._left, this._right, this._top, this._bottom)
            }
            m(h, "t_tl.d3.math.BoundFrustum");
            var e = h.prototype;
            return e.equalsBoundFrustum = function(e) {
                return this._matrix.equalsOtherMatrix(e.matrix)
            }, e.equalsObj = function(e) {
                if (e instanceof t_tl.d3.math.BoundFrustum) {
                    var t = e;
                    return this.equalsBoundFrustum(t)
                }
                return !1
            }, e.getPlane = function(e) {
                switch (e) {
                    case 0:
                        return this._near;
                    case 1:
                        return this._far;
                    case 2:
                        return this._left;
                    case 3:
                        return this._right;
                    case 4:
                        return this._top;
                    case 5:
                        return this._bottom;
                    default:
                        return null
                }
            }, e.getCorners = function(e) {
                h._get3PlaneInterPoint(this._near, this._bottom, this._right).cloneTo(e[0]), h._get3PlaneInterPoint(this._near, this._top, this._right).cloneTo(e[1]), h._get3PlaneInterPoint(this._near, this._top, this._left).cloneTo(e[2]), h._get3PlaneInterPoint(this._near, this._bottom, this._left).cloneTo(e[3]), h._get3PlaneInterPoint(this._far, this._bottom, this._right).cloneTo(e[4]), h._get3PlaneInterPoint(this._far, this._top, this._right).cloneTo(e[5]), h._get3PlaneInterPoint(this._far, this._top, this._left).cloneTo(e[6]), h._get3PlaneInterPoint(this._far, this._bottom, this._left).cloneTo(e[7])
            }, e.containsPoint = function(e) {
                for (var t = yt.PlaneIntersectionType_Front, n = yt.PlaneIntersectionType_Front, i = 0; i < 6; i++) {
                    switch (i) {
                        case 0:
                            n = xt.intersectsPlaneAndPoint(this._near, e);
                            break;
                        case 1:
                            n = xt.intersectsPlaneAndPoint(this._far, e);
                            break;
                        case 2:
                            n = xt.intersectsPlaneAndPoint(this._left, e);
                            break;
                        case 3:
                            n = xt.intersectsPlaneAndPoint(this._right, e);
                            break;
                        case 4:
                            n = xt.intersectsPlaneAndPoint(this._top, e);
                            break;
                        case 5:
                            n = xt.intersectsPlaneAndPoint(this._bottom, e)
                    }
                    switch (n) {
                        case yt.PlaneIntersectionType_Back:
                            return 0;
                        case yt.PlaneIntersectionType_Intersecting:
                            t = yt.PlaneIntersectionType_Intersecting
                    }
                }
                switch (t) {
                    case yt.PlaneIntersectionType_Intersecting:
                        return 2;
                    default:
                        return 1
                }
            }, e.containsBoundBox = function(e) {
                for (var t, n = h._tempV30, i = h._tempV31, r = 1, a = 0; a < 6; a++) {
                    if (t = this.getPlane(a), this._getBoxToPlanePVertexNVertex(e, t.normal, n, i), xt.intersectsPlaneAndPoint(t, n) === yt.PlaneIntersectionType_Back) return 0;
                    xt.intersectsPlaneAndPoint(t, i) === yt.PlaneIntersectionType_Back && (r = 2)
                }
                return r
            }, e.containsBoundSphere = function(e) {
                for (var t = yt.PlaneIntersectionType_Front, n = yt.PlaneIntersectionType_Front, i = 0; i < 6; i++) {
                    switch (i) {
                        case 0:
                            n = xt.intersectsPlaneAndSphere(this._near, e);
                            break;
                        case 1:
                            n = xt.intersectsPlaneAndSphere(this._far, e);
                            break;
                        case 2:
                            n = xt.intersectsPlaneAndSphere(this._left, e);
                            break;
                        case 3:
                            n = xt.intersectsPlaneAndSphere(this._right, e);
                            break;
                        case 4:
                            n = xt.intersectsPlaneAndSphere(this._top, e);
                            break;
                        case 5:
                            n = xt.intersectsPlaneAndSphere(this._bottom, e)
                    }
                    switch (n) {
                        case yt.PlaneIntersectionType_Back:
                            return 0;
                        case yt.PlaneIntersectionType_Intersecting:
                            t = yt.PlaneIntersectionType_Intersecting
                    }
                }
                switch (t) {
                    case yt.PlaneIntersectionType_Intersecting:
                        return 2;
                    default:
                        return 1
                }
            }, e._getBoxToPlanePVertexNVertex = function(e, t, n, i) {
                var r = e.min,
                    a = r.elements,
                    o = e.max,
                    s = o.elements,
                    l = t.elements,
                    h = l[0],
                    _ = l[1],
                    u = l[2];
                r.cloneTo(n);
                var c = n.elements;
                0 <= h && (c[0] = s[0]), 0 <= _ && (c[1] = s[1]), 0 <= u && (c[2] = s[2]), o.cloneTo(i);
                var d = i.elements;
                0 <= h && (d[0] = a[0]), 0 <= _ && (d[1] = a[1]), 0 <= u && (d[2] = a[2])
            }, g(0, e, "top", function() {
                return this._top
            }), g(0, e, "matrix", function() {
                return this._matrix
            }, function(e) {
                this._matrix = e, h._getPlanesFromMatrix(this._matrix, this._near, this._far, this._left, this._right, this._top, this._bottom)
            }), g(0, e, "near", function() {
                return this._near
            }), g(0, e, "far", function() {
                return this._far
            }), g(0, e, "left", function() {
                return this._left
            }), g(0, e, "right", function() {
                return this._right
            }), g(0, e, "bottom", function() {
                return this._bottom
            }), h._getPlanesFromMatrix = function(e, t, n, i, r, a, o) {
                var s = e.elements,
                    l = s[0],
                    h = s[1],
                    _ = s[2],
                    u = s[3],
                    c = s[4],
                    d = s[5],
                    f = s[6],
                    m = s[7],
                    p = s[8],
                    v = s[9],
                    g = s[10],
                    E = s[11],
                    S = s[12],
                    D = s[13],
                    T = s[14],
                    x = s[15],
                    M = t.normal.elements;
                M[0] = u + _, M[1] = m + f, M[2] = E + g, t.distance = x + T, t.normalize();
                var R = n.normal.elements;
                R[0] = u - _, R[1] = m - f, R[2] = E - g, n.distance = x - T, n.normalize();
                var A = i.normal.elements;
                A[0] = u + l, A[1] = m + c, A[2] = E + p, i.distance = x + S, i.normalize();
                var I = r.normal.elements;
                I[0] = u - l, I[1] = m - c, I[2] = E - p, r.distance = x - S, r.normalize();
                var y = a.normal.elements;
                y[0] = u - h, y[1] = m - d, y[2] = E - v, a.distance = x - D, a.normalize();
                var C = o.normal.elements;
                C[0] = u + h, C[1] = m + d, C[2] = E + v, o.distance = x + D, o.normalize()
            }, h._get3PlaneInterPoint = function(e, t, n) {
                var i = e.normal,
                    r = t.normal,
                    a = n.normal;
                Vt.cross(r, a, h._tempV30), Vt.cross(a, i, h._tempV31), Vt.cross(i, r, h._tempV32);
                var o = Vt.dot(i, h._tempV30),
                    s = Vt.dot(r, h._tempV31),
                    l = Vt.dot(a, h._tempV32);
                return Vt.scale(h._tempV30, -e.distance / o, h._tempV33), Vt.scale(h._tempV31, -t.distance / s, h._tempV34), Vt.scale(h._tempV32, -n.distance / l, h._tempV35), Vt.add(h._tempV33, h._tempV34, h._tempV36), Vt.add(h._tempV35, h._tempV36, h._tempV37), h._tempV37
            }, u(h, ["_tempV30", function() {
                return this._tempV30 = new Vt
            }, "_tempV31", function() {
                return this._tempV31 = new Vt
            }, "_tempV32", function() {
                return this._tempV32 = new Vt
            }, "_tempV33", function() {
                return this._tempV33 = new Vt
            }, "_tempV34", function() {
                return this._tempV34 = new Vt
            }, "_tempV35", function() {
                return this._tempV35 = new Vt
            }, "_tempV36", function() {
                return this._tempV36 = new Vt
            }, "_tempV37", function() {
                return this._tempV37 = new Vt
            }]), h
        }(),
        Tt = function() {
            function _(e, t) {
                this.center = null, this.radius = NaN, this.center = e, this.radius = t
            }
            m(_, "t_tl.d3.math.BoundSphere");
            var e = _.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.toDefault = function() {
                this.center.toDefault(), this.radius = 0
            }, e.intersectsRayDistance = function(e) {
                return xt.intersectsRayAndSphereRD(e, this)
            }, e.intersectsRayPoint = function(e, t) {
                return xt.intersectsRayAndSphereRP(e, this, t)
            }, e.cloneTo = function(e) {
                var t = e;
                this.center.cloneTo(t.center), t.radius = this.radius
            }, e.clone = function() {
                var e = new this.constructor(new Vt, new Vt);
                return this.cloneTo(e), e
            }, _.createFromSubPoints = function(e, t, n, i) {
                if (null == e) throw new Error("points");
                if (t < 0 || t >= e.length) throw new Error("start" + t + "Must be in the range [0, " + (e.length - 1) + "]");
                if (n < 0 || t + n > e.length) throw new Error("count" + n + "Must be in the range <= " + e.length + "}");
                var r = t + n,
                    a = _._tempVector3;
                a.elements[0] = 0, a.elements[1] = 0, a.elements[2] = 0;
                for (var o = t; o < r; ++o) Vt.add(e[o], a, a);
                var s = i.center;
                Vt.scale(a, 1 / n, s);
                var l = 0;
                for (o = t; o < r; ++o) {
                    var h = Vt.distanceSquared(s, e[o]);
                    l < h && (l = h)
                }
                i.radius = Math.sqrt(l)
            }, _.createfromPoints = function(e, t) {
                if (null == e) throw new Error("points");
                _.createFromSubPoints(e, 0, e.length, t)
            }, u(_, ["_tempVector3", function() {
                return this._tempVector3 = new Vt
            }]), _
        }(),
        xt = function() {
            function q() {}
            return m(q, "t_tl.d3.math.Collision"), q.distancePlaneToPoint = function(e, t) {
                return Vt.dot(e.normal, t) - e.distance
            }, q.distanceBoxToPoint = function(e, t) {
                var n = e.min.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = e.max.elements,
                    s = o[0],
                    l = o[1],
                    h = o[2],
                    _ = t.elements,
                    u = _[0],
                    c = _[1],
                    d = _[2],
                    f = 0;
                return u < i && (f += (i - u) * (i - u)), s < u && (f += (s - u) * (s - u)), c < r && (f += (r - c) * (r - c)), l < c && (f += (l - c) * (l - c)), d < a && (f += (a - d) * (a - d)), h < d && (f += (h - d) * (h - d)), Math.sqrt(f)
            }, q.distanceBoxToBox = function(e, t) {
                var n = e.min.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = e.max.elements,
                    s = o[0],
                    l = o[1],
                    h = o[2],
                    _ = t.min.elements,
                    u = _[0],
                    c = _[1],
                    d = _[2],
                    f = t.max.elements,
                    m = f[0],
                    p = f[1],
                    v = f[2],
                    g = 0,
                    E = NaN;
                return m < i ? g += (E = i - m) * E : s < u && (g += (E = u - s) * E), p < r ? g += (E = r - p) * E : l < c && (g += (E = c - l) * E), v < a ? g += (E = a - v) * E : h < d && (g += (E = d - h) * E), Math.sqrt(g)
            }, q.distanceSphereToPoint = function(e, t) {
                var n = Math.sqrt(Vt.distanceSquared(e.center, t));
                return n -= e.radius, Math.max(n, 0)
            }, q.distanceSphereToSphere = function(e, t) {
                var n = Math.sqrt(Vt.distanceSquared(e.center, t.center));
                return n -= e.radius + t.radius, Math.max(n, 0)
            }, q.intersectsRayAndTriangleRD = function(e, t, n, i, r) {
                var a = e.origin.elements,
                    o = a[0],
                    s = a[1],
                    l = a[2],
                    h = e.direction.elements,
                    _ = h[0],
                    u = h[1],
                    c = h[2],
                    d = t.elements,
                    f = d[0],
                    m = d[1],
                    p = d[2],
                    v = n.elements,
                    g = v[0],
                    E = v[1],
                    S = v[2],
                    D = i.elements,
                    T = D[0],
                    x = D[1],
                    M = D[2],
                    R = q._tempV30.elements,
                    A = R[0],
                    I = R[1],
                    y = R[2];
                A = g - f, I = E - m, y = S - p;
                var C = q._tempV31.elements,
                    N = C[0],
                    w = C[1],
                    O = C[2];
                N = T - f, w = x - m, O = M - p;
                var V = q._tempV32.elements,
                    P = V[0],
                    L = V[1],
                    b = V[2],
                    F = A * (P = u * O - c * w) + I * (L = c * N - _ * O) + y * (b = _ * w - u * N);
                if (Mt.isZero(F)) return 0, !1;
                var B = 1 / F,
                    U = q._tempV33.elements,
                    H = U[0],
                    G = U[1],
                    z = U[2],
                    k = (H = o - f) * P + (G = s - m) * L + (z = l - p) * b;
                if ((k *= B) < 0 || 1 < k) return 0, !1;
                var W = q._tempV34.elements,
                    X = W[0],
                    Z = W[1],
                    Y = W[2],
                    j = _ * (X = G * y - z * I) + u * (Z = z * A - H * y) + c * (Y = H * I - G * A);
                if ((j *= B) < 0 || 1 < k + j) return 0, !1;
                var K = N * X + w * Z + O * Y;
                return (K *= B) < 0 ? (0, !1) : (K, !0)
            }, q.intersectsRayAndTriangleRP = function(e, t, n, i, r) {
                return q.intersectsRayAndTriangleRD(e, t, n, i, NaN) ? (Vt.scale(e.direction, NaN, q._tempV30), Vt.add(e.origin, q._tempV30, r), !0) : (r = Vt.ZERO, !1)
            }, q.intersectsRayAndPoint = function(e, t) {
                Vt.subtract(e.origin, t, q._tempV30);
                var n = Vt.dot(q._tempV30, e.direction),
                    i = Vt.dot(q._tempV30, q._tempV30) - Mt.zeroTolerance;
                return !(0 < i && 0 < n) && !(n * n - i < 0)
            }, q.intersectsRayAndRay = function(e, t, n) {
                var i = e.origin,
                    r = i.elements,
                    a = r[0],
                    o = r[1],
                    s = r[2],
                    l = e.direction,
                    h = l.elements,
                    _ = h[0],
                    u = h[1],
                    c = h[2],
                    d = t.origin,
                    f = d.elements,
                    m = f[0],
                    p = f[1],
                    v = f[2],
                    g = t.direction,
                    E = g.elements,
                    S = E[0],
                    D = E[1],
                    T = E[2];
                Vt.cross(l, g, q._tempV30);
                var x = q._tempV30.elements,
                    M = Vt.scalarLengthSquared(q._tempV30);
                if (Mt.isZero(M) && Mt.nearEqual(m, a) && Mt.nearEqual(p, o) && Mt.nearEqual(v, s)) return Vt.ZERO.cloneTo(n), !0;
                var R = m - a,
                    A = p - o,
                    I = v - s,
                    y = S,
                    C = D,
                    N = T,
                    w = x[0],
                    O = x[1],
                    V = x[2],
                    P = (R * C * V + A * N * w + I * y * O - R * N * O - A * y * V - I * C * w) / M,
                    L = (R * (C = u) * V + A * (N = c) * w + I * (y = _) * O - R * N * O - A * y * V - I * C * w) / M;
                Vt.scale(l, P, q._tempV30), Vt.scale(g, L, q._tempV31), Vt.add(i, q._tempV30, q._tempV32), Vt.add(d, q._tempV31, q._tempV33);
                var b = q._tempV32.elements,
                    F = q._tempV33.elements;
                return Mt.nearEqual(F[0], b[0]) && Mt.nearEqual(F[1], b[1]) && Mt.nearEqual(F[2], b[2]) ? (q._tempV32.cloneTo(n), !0) : (Vt.ZERO.cloneTo(n), !1)
            }, q.intersectsPlaneAndTriangle = function(e, t, n, i) {
                var r = q.intersectsPlaneAndPoint(e, t),
                    a = q.intersectsPlaneAndPoint(e, n),
                    o = q.intersectsPlaneAndPoint(e, i);
                return r == yt.PlaneIntersectionType_Front && a == yt.PlaneIntersectionType_Front && o == yt.PlaneIntersectionType_Front ? yt.PlaneIntersectionType_Front : r == yt.PlaneIntersectionType_Back && a == yt.PlaneIntersectionType_Back && o == yt.PlaneIntersectionType_Back ? yt.PlaneIntersectionType_Back : yt.PlaneIntersectionType_Intersecting
            }, q.intersectsRayAndPlaneRD = function(e, t, n) {
                var i = t.normal,
                    r = Vt.dot(i, e.direction);
                if (Mt.isZero(r)) return 0, !1;
                var a = Vt.dot(i, e.origin);
                return !((-t.distance - a) / r < 0) || (0, !1)
            }, q.intersectsRayAndPlaneRP = function(e, t, n) {
                return q.intersectsRayAndPlaneRD(e, t, NaN) ? (Vt.scale(e.direction, NaN, q._tempV30), Vt.add(e.origin, q._tempV30, q._tempV31), q._tempV31, !0) : (Vt.ZERO, !1)
            }, q.intersectsRayAndBoxRD = function(e, t) {
                var n = e.origin.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = e.direction.elements,
                    s = o[0],
                    l = o[1],
                    h = o[2],
                    _ = t.min.elements,
                    u = _[0],
                    c = _[1],
                    d = _[2],
                    f = t.max.elements,
                    m = f[0],
                    p = f[1],
                    v = f[2],
                    g = 0,
                    E = Mt.MaxValue;
                if (Mt.isZero(s)) {
                    if (i < u || m < i) return -1
                } else {
                    var S = 1 / s,
                        D = (u - i) * S,
                        T = (m - i) * S;
                    if (T < D) {
                        var x = D;
                        D = T, T = x
                    }
                    if (g = Math.max(D, g), (E = Math.min(T, E)) < g) return -1
                }
                if (Mt.isZero(l)) {
                    if (r < c || p < r) return -1
                } else {
                    var M = 1 / l,
                        R = (c - r) * M,
                        A = (p - r) * M;
                    if (A < R) {
                        var I = R;
                        R = A, A = I
                    }
                    if (g = Math.max(R, g), (E = Math.min(A, E)) < g) return -1
                }
                if (Mt.isZero(h)) {
                    if (a < d || v < a) return -1
                } else {
                    var y = 1 / h,
                        C = (d - a) * y,
                        N = (v - a) * y;
                    if (N < C) {
                        var w = C;
                        C = N, N = w
                    }
                    if (g = Math.max(C, g), (E = Math.min(N, E)) < g) return -1
                }
                return g
            }, q.intersectsRayAndBoxRP = function(e, t, n) {
                var i = q.intersectsRayAndBoxRD(e, t);
                return -1 === i ? Vt.ZERO.cloneTo(n) : (Vt.scale(e.direction, i, q._tempV30), Vt.add(e.origin, q._tempV30, q._tempV31), q._tempV31.cloneTo(n)), i
            }, q.intersectsRayAndSphereRD = function(e, t) {
                var n = t.radius;
                Vt.subtract(e.origin, t.center, q._tempV30);
                var i = Vt.dot(q._tempV30, e.direction),
                    r = Vt.dot(q._tempV30, q._tempV30) - n * n;
                if (0 < r && 0 < i) return -1;
                var a = i * i - r;
                if (a < 0) return -1;
                var o = -i - Math.sqrt(a);
                return o < 0 && (o = 0), o
            }, q.intersectsRayAndSphereRP = function(e, t, n) {
                var i = q.intersectsRayAndSphereRD(e, t);
                return -1 === i ? Vt.ZERO.cloneTo(n) : (Vt.scale(e.direction, i, q._tempV30), Vt.add(e.origin, q._tempV30, q._tempV31), q._tempV31.cloneTo(n)), i
            }, q.intersectsSphereAndTriangle = function(e, t, n, i) {
                var r = e.center,
                    a = e.radius;
                return q.closestPointPointTriangle(r, t, n, i, q._tempV30), Vt.subtract(q._tempV30, r, q._tempV31), Vt.dot(q._tempV31, q._tempV31) <= a * a
            }, q.intersectsPlaneAndPoint = function(e, t) {
                var n = Vt.dot(e.normal, t) + e.distance;
                return 0 < n ? yt.PlaneIntersectionType_Front : n < 0 ? yt.PlaneIntersectionType_Back : yt.PlaneIntersectionType_Intersecting
            }, q.intersectsPlaneAndPlane = function(e, t) {
                Vt.cross(e.normal, t.normal, q._tempV30);
                var n = Vt.dot(q._tempV30, q._tempV30);
                return !Mt.isZero(n)
            }, q.intersectsPlaneAndPlaneRL = function(e, t, n) {
                var i = e.normal,
                    r = t.normal;
                Vt.cross(i, r, q._tempV34);
                var a = Vt.dot(q._tempV34, q._tempV34);
                return !Mt.isZero(a) && (Vt.scale(r, e.distance, q._tempV30), Vt.scale(i, t.distance, q._tempV31), Vt.subtract(q._tempV30, q._tempV31, q._tempV32), Vt.cross(q._tempV32, q._tempV34, q._tempV33), Vt.normalize(q._tempV34, q._tempV34), new wt(q._tempV33, q._tempV34), !0)
            }, q.intersectsPlaneAndBox = function(e, t) {
                var n = e.distance,
                    i = e.normal,
                    r = i.elements,
                    a = r[0],
                    o = r[1],
                    s = r[2],
                    l = t.min.elements,
                    h = l[0],
                    _ = l[1],
                    u = l[2],
                    c = t.max.elements,
                    d = c[0],
                    f = c[1],
                    m = c[2];
                q._tempV30.elements[0] = 0 < a ? h : d, q._tempV30.elements[1] = 0 < o ? _ : f, q._tempV30.elements[2] = 0 < s ? u : m, q._tempV31.elements[0] = 0 < a ? d : h, q._tempV31.elements[1] = 0 < o ? f : _, q._tempV31.elements[2] = 0 < s ? m : u;
                var p = Vt.dot(i, q._tempV30);
                return 0 < p + n ? yt.PlaneIntersectionType_Front : (p = Vt.dot(i, q._tempV31)) + n < 0 ? yt.PlaneIntersectionType_Back : yt.PlaneIntersectionType_Intersecting
            }, q.intersectsPlaneAndSphere = function(e, t) {
                var n = t.radius,
                    i = Vt.dot(e.normal, t.center) + e.distance;
                return n < i ? yt.PlaneIntersectionType_Front : i < -n ? yt.PlaneIntersectionType_Back : yt.PlaneIntersectionType_Intersecting
            }, q.intersectsBoxAndBox = function(e, t) {
                var n = e.min.elements,
                    i = e.max.elements,
                    r = t.min.elements,
                    a = t.max.elements;
                return !(n[0] > a[0] || r[0] > i[0]) && (!(n[1] > a[1] || r[1] > i[1]) && !(n[2] > a[2] || r[2] > i[2]))
            }, q.intersectsBoxAndSphere = function(e, t) {
                var n = t.center,
                    i = t.radius;
                return Vt.Clamp(n, e.min, e.max, q._tempV30), Vt.distanceSquared(n, q._tempV30) <= i * i
            }, q.intersectsSphereAndSphere = function(e, t) {
                var n = e.radius + t.radius;
                return Vt.distanceSquared(e.center, t.center) <= n * n
            }, q.boxContainsPoint = function(e, t) {
                var n = e.min.elements,
                    i = e.max.elements,
                    r = t.elements;
                return n[0] <= r[0] && i[0] >= r[0] && n[1] <= r[1] && i[1] >= r[1] && n[2] <= r[2] && i[2] >= r[2] ? 1 : 0
            }, q.boxContainsBox = function(e, t) {
                var n = e.min.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = e.max.elements,
                    s = o[0],
                    l = o[1],
                    h = o[2],
                    _ = t.min.elements,
                    u = _[0],
                    c = _[1],
                    d = _[2],
                    f = t.max.elements,
                    m = f[0],
                    p = f[1],
                    v = f[2];
                return s < u || m < i ? 0 : l < c || p < r ? 0 : h < d || v < a ? 0 : i <= u && m <= m && r <= c && p <= l && a <= d && v <= h ? 1 : 2
            }, q.boxContainsSphere = function(e, t) {
                var n = e.min,
                    i = n.elements,
                    r = i[0],
                    a = i[1],
                    o = i[2],
                    s = e.max,
                    l = s.elements,
                    h = l[0],
                    _ = l[1],
                    u = l[2],
                    c = t.center,
                    d = c.elements,
                    f = d[0],
                    m = d[1],
                    p = d[2],
                    v = t.radius;
                return Vt.Clamp(c, n, s, q._tempV30), v * v < Vt.distanceSquared(c, q._tempV30) ? 0 : r + v <= f && f <= h - v && v < h - r && a + v <= m && m <= _ - v && v < _ - a && o + v <= p && p <= u - v && v < u - o ? 1 : 2
            }, q.sphereContainsPoint = function(e, t) {
                return Vt.distanceSquared(t, e.center) <= e.radius * e.radius ? 1 : 0
            }, q.sphereContainsTriangle = function(e, t, n, i) {
                var r = q.sphereContainsPoint(e, t),
                    a = q.sphereContainsPoint(e, n),
                    o = q.sphereContainsPoint(e, i);
                return 1 == r && 1 == a && 1 == o ? 1 : q.intersectsSphereAndTriangle(e, t, n, i) ? 2 : 0
            }, q.sphereContainsBox = function(e, t) {
                var n = e.center.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = e.radius,
                    s = t.min.elements,
                    l = s[0],
                    h = s[1],
                    _ = s[2],
                    u = t.max.elements,
                    c = u[0],
                    d = u[1],
                    f = u[2],
                    m = q._tempV30.elements;
                m[0], m[1], m[2];
                if (!q.intersectsBoxAndSphere(t, e)) return 0;
                var p = o * o;
                return i - l, r - d, a - f, Vt.scalarLengthSquared(q._tempV30) > p ? 2 : (i - c, r - d, a - f, Vt.scalarLengthSquared(q._tempV30) > p ? 2 : (i - c, r - h, a - f, Vt.scalarLengthSquared(q._tempV30) > p ? 2 : (i - l, r - h, a - f, Vt.scalarLengthSquared(q._tempV30) > p ? 2 : (i - l, r - d, a - _, Vt.scalarLengthSquared(q._tempV30) > p ? 2 : (i - c, r - d, a - _, Vt.scalarLengthSquared(q._tempV30) > p ? 2 : (i - c, r - h, a - _, Vt.scalarLengthSquared(q._tempV30) > p ? 2 : (i - l, r - h, a - _, Vt.scalarLengthSquared(q._tempV30) > p ? 2 : 1)))))))
            }, q.sphereContainsSphere = function(e, t) {
                var n = e.radius,
                    i = t.radius,
                    r = Vt.distance(e.center, t.center);
                return n + i < r ? 0 : n - i < r ? 2 : 1
            }, q.closestPointPointTriangle = function(e, t, n, i, r) {
                Vt.subtract(n, t, q._tempV30), Vt.subtract(i, t, q._tempV31), Vt.subtract(e, t, q._tempV32), Vt.subtract(e, n, q._tempV33), Vt.subtract(e, i, q._tempV34);
                var a = Vt.dot(q._tempV30, q._tempV32),
                    o = Vt.dot(q._tempV31, q._tempV32),
                    s = Vt.dot(q._tempV30, q._tempV33),
                    l = Vt.dot(q._tempV31, q._tempV33),
                    h = Vt.dot(q._tempV30, q._tempV34),
                    _ = Vt.dot(q._tempV31, q._tempV34);
                if (a <= 0 && o <= 0) t.cloneTo(r);
                else if (0 <= s && l <= s) n.cloneTo(r);
                else {
                    var u = a * l - s * o;
                    if (u <= 0 && 0 <= a && s <= 0) {
                        var c = a / (a - s);
                        return Vt.scale(q._tempV30, c, r), void Vt.add(t, r, r)
                    }
                    if (0 <= _ && h <= _) i.cloneTo(r);
                    else {
                        var d = h * o - a * _;
                        if (d <= 0 && 0 <= o && _ <= 0) {
                            var f = o / (o - _);
                            return Vt.scale(q._tempV31, f, r), void Vt.add(t, r, r)
                        }
                        var m = s * _ - h * l;
                        if (m <= 0 && 0 <= l - s && 0 <= h - _) {
                            var p = (l - s) / (l - s + (h - _));
                            return Vt.subtract(i, n, r), Vt.scale(r, p, r), void Vt.add(n, r, r)
                        }
                        var v = 1 / (m + d + u),
                            g = d * v,
                            E = u * v;
                        Vt.scale(q._tempV30, g, q._tempV35), Vt.scale(q._tempV31, E, q._tempV36), Vt.add(q._tempV35, q._tempV36, r), Vt.add(t, r, r)
                    }
                }
            }, q.closestPointPlanePoint = function(e, t, n) {
                var i = e.normal,
                    r = Vt.dot(i, t) - e.distance;
                Vt.scale(i, r, q._tempV30), Vt.subtract(t, q._tempV30, n)
            }, q.closestPointBoxPoint = function(e, t, n) {
                Vt.max(t, e.min, q._tempV30), Vt.min(q._tempV30, e.max, n)
            }, q.closestPointSpherePoint = function(e, t, n) {
                var i = e.center;
                Vt.subtract(t, i, n), Vt.normalize(n, n), Vt.scale(n, e.radius, n), Vt.add(n, i, n)
            }, q.closestPointSphereSphere = function(e, t, n) {
                var i = e.center;
                Vt.subtract(t.center, i, n), Vt.normalize(n, n), Vt.scale(n, e.radius, n), Vt.add(n, i, n)
            }, u(q, ["_tempV30", function() {
                return this._tempV30 = new Vt
            }, "_tempV31", function() {
                return this._tempV31 = new Vt
            }, "_tempV32", function() {
                return this._tempV32 = new Vt
            }, "_tempV33", function() {
                return this._tempV33 = new Vt
            }, "_tempV34", function() {
                return this._tempV34 = new Vt
            }, "_tempV35", function() {
                return this._tempV35 = new Vt
            }, "_tempV36", function() {
                return this._tempV36 = new Vt
            }]), q
        }(),
        Mt = (function() {
            function e() {}
            m(e, "t_tl.d3.math.ContainmentType"), e.Disjoint = 0, e.Contains = 1, e.Intersects = 2
        }(), function() {
            function n() {}
            return m(n, "t_tl.d3.math.MathUtils3D"), n.isZero = function(e) {
                return Math.abs(e) < n.zeroTolerance
            }, n.nearEqual = function(e, t) {
                return !!n.isZero(e - t)
            }, n.fastInvSqrt = function(e) {
                return n.isZero(e) ? e : 1 / Math.sqrt(e)
            }, u(n, ["zeroTolerance", function() {
                return this.zeroTolerance = 1e-6
            }, "MaxValue", function() {
                return this.MaxValue = 340282347e30
            }, "MinValue", function() {
                return this.MinValue = -340282347e30
            }]), n
        }()),
        Rt = function() {
            function l() {
                var e = this.elements = new Float32Array(9);
                e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 1, e[5] = 0, e[6] = 0, e[7] = 0, e[8] = 1
            }
            m(l, "t_tl.d3.math.Matrix3x3");
            var e = l.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.determinant = function() {
                var e = this.elements,
                    t = e[0],
                    n = e[1],
                    i = e[2],
                    r = e[3],
                    a = e[4],
                    o = e[5],
                    s = e[6],
                    l = e[7],
                    h = e[8];
                return t * (h * a - o * l) + n * (-h * r + o * s) + i * (l * r - a * s)
            }, e.translate = function(e, t) {
                var n = t.elements,
                    i = this.elements,
                    r = e.elements,
                    a = i[0],
                    o = i[1],
                    s = i[2],
                    l = i[3],
                    h = i[4],
                    _ = i[5],
                    u = i[6],
                    c = i[7],
                    d = i[8],
                    f = r[0],
                    m = r[1];
                n[0] = a, n[1] = o, n[2] = s, n[3] = l, n[4] = h, n[5] = _, n[6] = f * a + m * l + u, n[7] = f * o + m * h + c, n[8] = f * s + m * _ + d
            }, e.rotate = function(e, t) {
                var n = t.elements,
                    i = this.elements,
                    r = i[0],
                    a = i[1],
                    o = i[2],
                    s = i[3],
                    l = i[4],
                    h = i[5],
                    _ = i[6],
                    u = i[7],
                    c = i[8],
                    d = Math.sin(e),
                    f = Math.cos(e);
                n[0] = f * r + d * s, n[1] = f * a + d * l, n[2] = f * o + d * h, n[3] = f * s - d * r, n[4] = f * l - d * a, n[5] = f * h - d * o, n[6] = _, n[7] = u, n[8] = c
            }, e.scale = function(e, t) {
                var n = t.elements,
                    i = this.elements,
                    r = e.elements,
                    a = r[0],
                    o = r[1];
                n[0] = a * i[0], n[1] = a * i[1], n[2] = a * i[2], n[3] = o * i[3], n[4] = o * i[4], n[5] = o * i[5], n[6] = i[6], n[7] = i[7], n[8] = i[8]
            }, e.invert = function(e) {
                var t = e.elements,
                    n = this.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = n[3],
                    s = n[4],
                    l = n[5],
                    h = n[6],
                    _ = n[7],
                    u = n[8],
                    c = u * s - l * _,
                    d = -u * o + l * h,
                    f = _ * o - s * h,
                    m = i * c + r * d + a * f;
                m || (e = null), m = 1 / m, t[0] = c * m, t[1] = (-u * r + a * _) * m, t[2] = (l * r - a * s) * m, t[3] = d * m, t[4] = (u * i - a * h) * m, t[5] = (-l * i + a * o) * m, t[6] = f * m, t[7] = (-_ * i + r * h) * m, t[8] = (s * i - r * o) * m
            }, e.transpose = function(e) {
                var t = e.elements,
                    n = this.elements;
                if (e === this) {
                    var i = n[1],
                        r = n[2],
                        a = n[5];
                    t[1] = n[3], t[2] = n[6], t[3] = i, t[5] = n[7], t[6] = r, t[7] = a
                } else t[0] = n[0], t[1] = n[3], t[2] = n[6], t[3] = n[1], t[4] = n[4], t[5] = n[7], t[6] = n[2], t[7] = n[5], t[8] = n[8]
            }, e.identity = function() {
                var e = this.elements;
                e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 1, e[5] = 0, e[6] = 0, e[7] = 0, e[8] = 1
            }, e.cloneTo = function(e) {
                var t, n, i;
                if ((n = this.elements) !== (i = e.elements))
                    for (t = 0; t < 9; ++t) i[t] = n[t]
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, l.createFromTranslation = function(e, t) {
                t.elements;
                var n = e.elements;
                t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = n[0], t[7] = n[1], t[8] = 1
            }, l.createFromRotation = function(e, t) {
                var n = t.elements,
                    i = Math.sin(e),
                    r = Math.cos(e);
                n[0] = r, n[1] = i, n[2] = 0, n[3] = -i, n[4] = r, n[5] = 0, n[6] = 0, n[7] = 0, n[8] = 1
            }, l.createFromScaling = function(e, t) {
                var n = t.elements,
                    i = e.elements;
                n[0] = i[0], n[1] = 0, n[2] = 0, n[3] = 0, n[4] = i[1], n[5] = 0, n[6] = 0, n[7] = 0, n[8] = 1
            }, l.createFromMatrix4x4 = function(e, t) {
                t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[4], t[4] = e[5], t[5] = e[6], t[6] = e[8], t[7] = e[9], t[8] = e[10]
            }, l.multiply = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements,
                    o = r[0],
                    s = r[1],
                    l = r[2],
                    h = r[3],
                    _ = r[4],
                    u = r[5],
                    c = r[6],
                    d = r[7],
                    f = r[8],
                    m = a[0],
                    p = a[1],
                    v = a[2],
                    g = a[3],
                    E = a[4],
                    S = a[5],
                    D = a[6],
                    T = a[7],
                    x = a[8];
                i[0] = m * o + p * h + v * c, i[1] = m * s + p * _ + v * d, i[2] = m * l + p * u + v * f, i[3] = g * o + E * h + S * c, i[4] = g * s + E * _ + S * d, i[5] = g * l + E * u + S * f, i[6] = D * o + T * h + x * c, i[7] = D * s + T * _ + x * d, i[8] = D * l + T * u + x * f
            }, l.lookAt = function(e, t, n, i) {
                Vt.subtract(e, t, l._tempV30), Vt.normalize(l._tempV30, l._tempV30), Vt.cross(n, l._tempV30, l._tempV31), Vt.normalize(l._tempV31, l._tempV31), Vt.cross(l._tempV30, l._tempV31, l._tempV32);
                var r = l._tempV30.elements,
                    a = l._tempV31.elements,
                    o = l._tempV32.elements,
                    s = i.elements;
                s[0] = a[0], s[3] = a[1], s[6] = a[2], s[1] = o[0], s[4] = o[1], s[7] = o[2], s[2] = r[0], s[5] = r[1], s[8] = r[2]
            }, l.DEFAULT = new l, u(l, ["_tempV30", function() {
                return this._tempV30 = new Vt
            }, "_tempV31", function() {
                return this._tempV31 = new Vt
            }, "_tempV32", function() {
                return this._tempV32 = new Vt
            }]), l
        }(),
        At = function() {
            function R(e, t, n, i, r, a, o, s, l, h, _, u, c, d, f, m) {
                void 0 === e && (e = 1), void 0 === t && (t = 0), void 0 === n && (n = 0), void 0 === i && (i = 0), void 0 === r && (r = 0), void 0 === a && (a = 1), void 0 === o && (o = 0), void 0 === s && (s = 0), void 0 === l && (l = 0), void 0 === h && (h = 0), void 0 === _ && (_ = 1), void 0 === u && (u = 0), void 0 === c && (c = 0), void 0 === d && (d = 0), void 0 === f && (f = 0), void 0 === m && (m = 1);
                var p = this.elements = new Float32Array(16);
                p[0] = e, p[1] = t, p[2] = n, p[3] = i, p[4] = r, p[5] = a, p[6] = o, p[7] = s, p[8] = l, p[9] = h, p[10] = _, p[11] = u, p[12] = c, p[13] = d, p[14] = f, p[15] = m
            }
            m(R, "t_tl.d3.math.Matrix4x4");
            var e = R.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.getElementByRowColumn = function(e, t) {
                if (e < 0 || 3 < e) throw new Error("row", "Rows and columns for matrices run from 0 to 3, inclusive.");
                if (t < 0 || 3 < t) throw new Error("column", "Rows and columns for matrices run from 0 to 3, inclusive.");
                return this.elements[4 * e + t]
            }, e.setElementByRowColumn = function(e, t, n) {
                if (e < 0 || 3 < e) throw new Error("row", "Rows and columns for matrices run from 0 to 3, inclusive.");
                if (t < 0 || 3 < t) throw new Error("column", "Rows and columns for matrices run from 0 to 3, inclusive.");
                this.elements[4 * e + t] = n
            }, e.equalsOtherMatrix = function(e) {
                var t = this.elements,
                    n = e.elements;
                return Mt.nearEqual(t[0], n[0]) && Mt.nearEqual(t[1], n[1]) && Mt.nearEqual(t[2], n[2]) && Mt.nearEqual(t[3], n[3]) && Mt.nearEqual(t[4], n[4]) && Mt.nearEqual(t[5], n[5]) && Mt.nearEqual(t[6], n[6]) && Mt.nearEqual(t[7], n[7]) && Mt.nearEqual(t[8], n[8]) && Mt.nearEqual(t[9], n[9]) && Mt.nearEqual(t[10], n[10]) && Mt.nearEqual(t[11], n[11]) && Mt.nearEqual(t[12], n[12]) && Mt.nearEqual(t[13], n[13]) && Mt.nearEqual(t[14], n[14]) && Mt.nearEqual(t[15], n[15])
            }, e.decomposeTransRotScale = function(e, t, n) {
                var i = R._tempMatrix4x4;
                return this.decomposeTransRotMatScale(e, i, n) ? (Ct.createFromMatrix4x4(i, t), !0) : (t.identity(), !1)
            }, e.decomposeTransRotMatScale = function(e, t, n) {
                var i = this.elements,
                    r = e.elements,
                    a = t.elements,
                    o = n.elements;
                r[0] = i[12], r[1] = i[13], r[2] = i[14];
                var s = i[0],
                    l = i[1],
                    h = i[2],
                    _ = i[4],
                    u = i[5],
                    c = i[6],
                    d = i[8],
                    f = i[9],
                    m = i[10],
                    p = o[0] = Math.sqrt(s * s + l * l + h * h),
                    v = o[1] = Math.sqrt(_ * _ + u * u + c * c),
                    g = o[2] = Math.sqrt(d * d + f * f + m * m);
                if (Mt.isZero(p) || Mt.isZero(v) || Mt.isZero(g)) return a[1] = a[2] = a[3] = a[4] = a[6] = a[7] = a[8] = a[9] = a[11] = a[12] = a[13] = a[14] = 0, a[0] = a[5] = a[10] = a[15] = 1, !1;
                var E = R._tempVector0,
                    S = E.elements;
                S[0] = d / g, S[1] = f / g, S[2] = m / g;
                var D = R._tempVector1,
                    T = D.elements;
                T[0] = s / p, T[1] = l / p, T[2] = h / p;
                var x = R._tempVector2;
                Vt.cross(E, D, x);
                var M = R._tempVector1;
                return Vt.cross(x, E, M), a[3] = a[7] = a[11] = a[12] = a[13] = a[14] = 0, a[15] = 1, a[0] = M.x, a[1] = M.y, a[2] = M.z, a[4] = x.x, a[5] = x.y, a[6] = x.z, a[8] = E.x, a[9] = E.y, a[10] = E.z, a[0] * s + a[1] * l + a[2] * h < 0 && (o[0] = -p), a[4] * _ + a[5] * u + a[6] * c < 0 && (o[1] = -v), a[8] * d + a[9] * f + a[10] * m < 0 && (o[2] = -g), !0
            }, e.decomposeYawPitchRoll = function(e) {
                var t = e.elements,
                    n = Math.asin(-this.elements[9]);
                t[1] = n, Math.cos(n) > Mt.zeroTolerance ? (t[2] = Math.atan2(this.elements[1], this.elements[5]), t[0] = Math.atan2(this.elements[8], this.elements[10])) : (t[2] = Math.atan2(-this.elements[4], this.elements[0]), t[0] = 0)
            }, e.normalize = function() {
                var e = this.elements,
                    t = e[0],
                    n = e[1],
                    i = e[2],
                    r = Math.sqrt(t * t + n * n + i * i);
                if (!r) return e[0] = 0, e[1] = 0, void(e[2] = 0);
                1 != r && (r = 1 / r, e[0] = t * r, e[1] = n * r, e[2] = i * r)
            }, e.transpose = function() {
                var e, t;
                return t = (e = this.elements)[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this
            }, e.invert = function(e) {
                var t = this.elements,
                    n = e.elements,
                    i = t[0],
                    r = t[1],
                    a = t[2],
                    o = t[3],
                    s = t[4],
                    l = t[5],
                    h = t[6],
                    _ = t[7],
                    u = t[8],
                    c = t[9],
                    d = t[10],
                    f = t[11],
                    m = t[12],
                    p = t[13],
                    v = t[14],
                    g = t[15],
                    E = i * l - r * s,
                    S = i * h - a * s,
                    D = i * _ - o * s,
                    T = r * h - a * l,
                    x = r * _ - o * l,
                    M = a * _ - o * h,
                    R = u * p - c * m,
                    A = u * v - d * m,
                    I = u * g - f * m,
                    y = c * v - d * p,
                    C = c * g - f * p,
                    N = d * g - f * v,
                    w = E * N - S * C + D * y + T * I - x * A + M * R;
                0 !== Math.abs(w) && (w = 1 / w, n[0] = (l * N - h * C + _ * y) * w, n[1] = (a * C - r * N - o * y) * w, n[2] = (p * M - v * x + g * T) * w, n[3] = (d * x - c * M - f * T) * w, n[4] = (h * I - s * N - _ * A) * w, n[5] = (i * N - a * I + o * A) * w, n[6] = (v * D - m * M - g * S) * w, n[7] = (u * M - d * D + f * S) * w, n[8] = (s * C - l * I + _ * R) * w, n[9] = (r * I - i * C - o * R) * w, n[10] = (m * x - p * D + g * E) * w, n[11] = (c * D - u * x - f * E) * w, n[12] = (l * A - s * y - h * R) * w, n[13] = (i * y - r * A + a * R) * w, n[14] = (p * S - m * T - v * E) * w, n[15] = (u * T - c * S + d * E) * w)
            }, e.identity = function() {
                var e = this.elements;
                e[1] = e[2] = e[3] = e[4] = e[6] = e[7] = e[8] = e[9] = e[11] = e[12] = e[13] = e[14] = 0, e[0] = e[5] = e[10] = e[15] = 1
            }, e.cloneTo = function(e) {
                var t, n, i;
                if ((n = this.elements) !== (i = e.elements))
                    for (t = 0; t < 16; ++t) i[t] = n[t]
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, e.getTranslationVector = function(e) {
                var t = this.elements,
                    n = e.elements;
                n[0] = t[12], n[1] = t[13], n[2] = t[14]
            }, e.setTranslationVector = function(e) {
                var t = this.elements,
                    n = e.elements;
                t[12] = n[0], t[13] = n[1], t[14] = n[2]
            }, e.getForward = function(e) {
                var t = this.elements,
                    n = e.elements;
                n[0] = -t[8], n[1] = -t[9], n[2] = -t[10]
            }, e.setForward = function(e) {
                var t = this.elements,
                    n = e.elements;
                t[8] = -n[0], t[9] = -n[1], t[10] = -n[2]
            }, R.createRotationX = function(e, t) {
                var n = t.elements,
                    i = Math.sin(e),
                    r = Math.cos(e);
                n[1] = n[2] = n[3] = n[4] = n[7] = n[8] = n[11] = n[12] = n[13] = n[14] = 0, n[0] = n[15] = 1, n[5] = n[10] = r, n[6] = i, n[9] = -i
            }, R.createRotationY = function(e, t) {
                var n = t.elements,
                    i = Math.sin(e),
                    r = Math.cos(e);
                n[1] = n[3] = n[4] = n[6] = n[7] = n[9] = n[11] = n[12] = n[13] = n[14] = 0, n[5] = n[15] = 1, n[0] = n[10] = r, n[2] = -i, n[8] = i
            }, R.createRotationZ = function(e, t) {
                var n = t.elements,
                    i = Math.sin(e),
                    r = Math.cos(e);
                n[2] = n[3] = n[6] = n[7] = n[8] = n[9] = n[11] = n[12] = n[13] = n[14] = 0, n[10] = n[15] = 1, n[0] = n[5] = r, n[1] = i, n[4] = -i
            }, R.createRotationYawPitchRoll = function(e, t, n, i) {
                Ct.createFromYawPitchRoll(e, t, n, R._tempQuaternion), R.createRotationQuaternion(R._tempQuaternion, i)
            }, R.createRotationAxis = function(e, t, n) {
                var i = e.elements,
                    r = i[0],
                    a = i[1],
                    o = i[2],
                    s = Math.cos(t),
                    l = Math.sin(t),
                    h = r * r,
                    _ = a * a,
                    u = o * o,
                    c = r * a,
                    d = r * o,
                    f = a * o,
                    m = n.elements;
                m[3] = m[7] = m[11] = m[12] = m[13] = m[14] = 0, m[15] = 1, m[0] = h + s * (1 - h), m[1] = c - s * c + l * o, m[2] = d - s * d - l * a, m[4] = c - s * c - l * o, m[5] = _ + s * (1 - _), m[6] = f - s * f + l * r, m[8] = d - s * d + l * a, m[9] = f - s * f - l * r, m[10] = u + s * (1 - u)
            }, R.createRotationQuaternion = function(e, t) {
                var n = e.elements,
                    i = t.elements,
                    r = n[0],
                    a = n[1],
                    o = n[2],
                    s = n[3],
                    l = r * r,
                    h = a * a,
                    _ = o * o,
                    u = r * a,
                    c = o * s,
                    d = o * r,
                    f = a * s,
                    m = a * o,
                    p = r * s;
                i[3] = i[7] = i[11] = i[12] = i[13] = i[14] = 0, i[15] = 1, i[0] = 1 - 2 * (h + _), i[1] = 2 * (u + c), i[2] = 2 * (d - f), i[4] = 2 * (u - c), i[5] = 1 - 2 * (_ + l), i[6] = 2 * (m + p), i[8] = 2 * (d + f), i[9] = 2 * (m - p), i[10] = 1 - 2 * (h + l)
            }, R.createTranslate = function(e, t) {
                var n = e.elements,
                    i = t.elements;
                i[4] = i[8] = i[1] = i[9] = i[2] = i[6] = i[3] = i[7] = i[11] = 0, i[0] = i[5] = i[10] = i[15] = 1, i[12] = n[0], i[13] = n[1], i[14] = n[2]
            }, R.createScaling = function(e, t) {
                var n = e.elements,
                    i = t.elements;
                i[0] = n[0], i[5] = n[1], i[10] = n[2], i[1] = i[4] = i[8] = i[12] = i[9] = i[13] = i[2] = i[6] = i[14] = i[3] = i[7] = i[11] = 0, i[15] = 1
            }, R.multiply = function(e, t, n) {
                var i, r, a, o, s, l, h, _;
                if (r = n.elements, a = e.elements, r === (o = t.elements))
                    for (o = new Float32Array(16), i = 0; i < 16; ++i) o[i] = r[i];
                for (i = 0; i < 4; i++) s = a[i], l = a[i + 4], h = a[i + 8], _ = a[i + 12], r[i] = s * o[0] + l * o[1] + h * o[2] + _ * o[3], r[i + 4] = s * o[4] + l * o[5] + h * o[6] + _ * o[7], r[i + 8] = s * o[8] + l * o[9] + h * o[10] + _ * o[11], r[i + 12] = s * o[12] + l * o[13] + h * o[14] + _ * o[15]
            }, R.createFromQuaternion = function(e, t) {
                var n = t.elements,
                    i = e.elements,
                    r = i[0],
                    a = i[1],
                    o = i[2],
                    s = i[3],
                    l = r + r,
                    h = a + a,
                    _ = o + o,
                    u = r * l,
                    c = a * l,
                    d = a * h,
                    f = o * l,
                    m = o * h,
                    p = o * _,
                    v = s * l,
                    g = s * h,
                    E = s * _;
                n[0] = 1 - d - p, n[1] = c + E, n[2] = f - g, n[3] = 0, n[4] = c - E, n[5] = 1 - u - p, n[6] = m + v, n[7] = 0, n[8] = f + g, n[9] = m - v, n[10] = 1 - u - d, n[11] = 0, n[12] = 0, n[13] = 0, n[14] = 0, n[15] = 1
            }, R.createAffineTransformation = function(e, t, n, i) {
                var r = e.elements,
                    a = t.elements,
                    o = n.elements,
                    s = i.elements,
                    l = a[0],
                    h = a[1],
                    _ = a[2],
                    u = a[3],
                    c = l + l,
                    d = h + h,
                    f = _ + _,
                    m = l * c,
                    p = l * d,
                    v = l * f,
                    g = h * d,
                    E = h * f,
                    S = _ * f,
                    D = u * c,
                    T = u * d,
                    x = u * f,
                    M = o[0],
                    R = o[1],
                    A = o[2];
                s[0] = (1 - (g + S)) * M, s[1] = (p + x) * M, s[2] = (v - T) * M, s[3] = 0, s[4] = (p - x) * R, s[5] = (1 - (m + S)) * R, s[6] = (E + D) * R, s[7] = 0, s[8] = (v + T) * A, s[9] = (E - D) * A, s[10] = (1 - (m + g)) * A, s[11] = 0, s[12] = r[0], s[13] = r[1], s[14] = r[2], s[15] = 1
            }, R.createLookAt = function(e, t, n, i) {
                var r = i.elements,
                    a = R._tempVector0,
                    o = R._tempVector1,
                    s = R._tempVector2;
                Vt.subtract(e, t, s), Vt.normalize(s, s), Vt.cross(n, s, a), Vt.normalize(a, a), Vt.cross(s, a, o), i.identity(), r[0] = a.x, r[4] = a.y, r[8] = a.z, r[1] = o.x, r[5] = o.y, r[9] = o.z, r[2] = s.x, r[6] = s.y, r[10] = s.z, r[12] = -Vt.dot(a, e), r[13] = -Vt.dot(o, e), r[14] = -Vt.dot(s, e)
            }, R.createPerspective = function(e, t, n, i, r) {
                var a = r.elements,
                    o = 1 / Math.tan(e / 2),
                    s = 1 / (n - i);
                a[0] = o / t, a[5] = o, a[10] = (i + n) * s, a[11] = -1, a[14] = 2 * i * n * s, a[1] = a[2] = a[3] = a[4] = a[6] = a[7] = a[8] = a[9] = a[12] = a[13] = a[15] = 0
            }, R.createOrthoOffCenterRH = function(e, t, n, i, r, a, o) {
                var s = o.elements,
                    l = 1 / (e - t),
                    h = 1 / (n - i),
                    _ = 1 / (r - a);
                s[1] = s[2] = s[3] = s[4] = s[6] = s[7] = s[8] = s[9] = s[11] = 0, s[15] = 1, s[0] = -2 * l, s[5] = -2 * h, s[10] = 2 * _, s[12] = (e + t) * l, s[13] = (i + n) * h, s[14] = (a + r) * _
            }, R.translation = function(e, t) {
                var n = e.elements,
                    i = t.elements;
                i[0] = i[5] = i[10] = i[15] = 1, i[12] = n[0], i[13] = n[1], i[14] = n[2]
            }, u(R, ["_tempMatrix4x4", function() {
                return this._tempMatrix4x4 = new R
            }, "_tempVector0", function() {
                return this._tempVector0 = new Vt
            }, "_tempVector1", function() {
                return this._tempVector1 = new Vt
            }, "_tempVector2", function() {
                return this._tempVector2 = new Vt
            }, "_tempQuaternion", function() {
                return this._tempQuaternion = new Ct
            }, "DEFAULT", function() {
                return this.DEFAULT = new R
            }, "ZERO", function() {
                return this.ZERO = new R(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
            }]), R
        }(),
        It = function() {
            function E(e, t) {
                this.extents = null, this.transformation = null, this.extents = e, this.transformation = t
            }
            m(E, "t_tl.d3.math.OrientedBoundBox");
            var e = E.prototype;
            return e.getCorners = function(e) {
                var t = E._tempV30.elements,
                    n = E._tempV31.elements,
                    i = E._tempV32.elements,
                    r = this.extents.elements;
                t[0] = r[0], t[1] = t[2] = 0, n[1] = r[1], n[0] = n[2] = 0, i[2] = r[2], i[0] = i[1] = 0, Vt.TransformNormal(E._tempV30, this.transformation, E._tempV30), Vt.TransformNormal(E._tempV31, this.transformation, E._tempV31), Vt.TransformNormal(E._tempV32, this.transformation, E._tempV32);
                var a = E._tempV33;
                this.transformation.getTranslationVector(a), e.length = 8, Vt.add(a, E._tempV30, E._tempV34), Vt.add(E._tempV34, E._tempV31, E._tempV34), Vt.add(E._tempV34, E._tempV32, e[0]), Vt.add(a, E._tempV30, E._tempV34), Vt.add(E._tempV34, E._tempV31, E._tempV34), Vt.subtract(E._tempV34, E._tempV32, e[1]), Vt.subtract(a, E._tempV30, E._tempV34), Vt.add(E._tempV34, E._tempV31, E._tempV34), Vt.subtract(E._tempV34, E._tempV32, e[2]), Vt.subtract(a, E._tempV30, E._tempV34), Vt.add(E._tempV34, E._tempV31, E._tempV34), Vt.add(E._tempV34, E._tempV32, e[3]), Vt.add(a, E._tempV30, E._tempV34), Vt.subtract(E._tempV34, E._tempV31, E._tempV34), Vt.add(E._tempV34, E._tempV32, e[4]), Vt.add(a, E._tempV30, E._tempV34), Vt.subtract(E._tempV34, E._tempV31, E._tempV34), Vt.subtract(E._tempV34, E._tempV32, e[5]), Vt.subtract(a, E._tempV30, E._tempV34), Vt.subtract(E._tempV34, E._tempV31, E._tempV34), Vt.subtract(E._tempV34, E._tempV32, e[6]), Vt.subtract(a, E._tempV30, E._tempV34), Vt.subtract(E._tempV34, E._tempV31, E._tempV34), Vt.add(E._tempV34, E._tempV32, e[7])
            }, e.transform = function(e) {
                At.multiply(this.transformation, e, this.transformation)
            }, e.scale = function(e) {
                Vt.multiply(this.extents, e, this.extents)
            }, e.translate = function(e) {
                this.transformation.getTranslationVector(E._tempV30), Vt.add(E._tempV30, e, E._tempV31), this.transformation.setTranslationVector(E._tempV31)
            }, e.Size = function(e) {
                Vt.scale(this.extents, 2, e)
            }, e.getSize = function(e) {
                var t = this.extents.elements;
                E._tempV30.x = t[0], E._tempV31.y = t[1], E._tempV32.z = t[2], Vt.TransformNormal(E._tempV30, this.transformation, E._tempV30), Vt.TransformNormal(E._tempV31, this.transformation, E._tempV31), Vt.TransformNormal(E._tempV31, this.transformation, E._tempV32);
                var n = e.elements;
                n[0] = Vt.scalarLength(E._tempV30), n[1] = Vt.scalarLength(E._tempV31), n[2] = Vt.scalarLength(E._tempV32)
            }, e.getSizeSquared = function(e) {
                var t = this.extents.elements;
                E._tempV30.x = t[0], E._tempV31.y = t[1], E._tempV32.z = t[2], Vt.TransformNormal(E._tempV30, this.transformation, E._tempV30), Vt.TransformNormal(E._tempV31, this.transformation, E._tempV31), Vt.TransformNormal(E._tempV31, this.transformation, E._tempV32);
                var n = e.elements;
                n[0] = Vt.scalarLengthSquared(E._tempV30), n[1] = Vt.scalarLengthSquared(E._tempV31), n[2] = Vt.scalarLengthSquared(E._tempV32)
            }, e.getCenter = function(e) {
                this.transformation.getTranslationVector(e)
            }, e.containsPoint = function(e) {
                var t = this.extents.elements,
                    n = t[0],
                    i = t[1],
                    r = t[2];
                this.transformation.invert(E._tempM0), Vt.transformCoordinate(e, E._tempM0, E._tempV30);
                var a = E._tempV30.elements,
                    o = Math.abs(a[0]),
                    s = Math.abs(a[1]),
                    l = Math.abs(a[2]);
                return Mt.nearEqual(o, n) && Mt.nearEqual(s, i) && Mt.nearEqual(l, r) ? 2 : o < n && s < i && l < r ? 1 : 0
            }, e.containsPoints = function(e) {
                var t = this.extents.elements,
                    n = t[0],
                    i = t[1],
                    r = t[2];
                this.transformation.invert(E._tempM0);
                for (var a = !0, o = !1, s = 0; s < e.length; s++) {
                    Vt.transformCoordinate(e[s], E._tempM0, E._tempV30);
                    var l = E._tempV30.elements,
                        h = Math.abs(l[0]),
                        _ = Math.abs(l[1]),
                        u = Math.abs(l[2]);
                    Mt.nearEqual(h, n) && Mt.nearEqual(_, i) && Mt.nearEqual(u, r) && (o = !0), h < n && _ < i && u < r ? o = !0 : a = !1
                }
                return a ? 1 : o ? 2 : 0
            }, e.containsSphere = function(e, t) {
                void 0 === t && (t = !1);
                var n = this.extents.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = e.radius;
                this.transformation.invert(E._tempM0), Vt.transformCoordinate(e.center, E._tempM0, E._tempV30);
                var s = NaN;
                if (t ? s = o : (Vt.scale(Vt.UnitX, o, E._tempV31), Vt.TransformNormal(E._tempV31, E._tempM0, E._tempV31), s = Vt.scalarLength(E._tempV31)), Vt.scale(this.extents, -1, E._tempV32), Vt.Clamp(E._tempV30, E._tempV32, this.extents, E._tempV33), s * s < Vt.distanceSquared(E._tempV30, E._tempV33)) return 0;
                var l = E._tempV30.elements,
                    h = l[0],
                    _ = l[1],
                    u = l[2],
                    c = E._tempV32.elements,
                    d = c[0],
                    f = c[1],
                    m = c[2];
                return d + s <= h && h <= i - s && s < i - d && f + s <= _ && _ <= r - s && s < r - f && m + s <= u && u <= a - s && s < a - m ? 1 : 2
            }, e.containsOrientedBoundBox = function(e) {
                var t = 0,
                    n = 0;
                e.getCorners(E._corners);
                var i = this.containsPoints(E._corners);
                if (0 != i) return i;
                var r = this.extents.elements;
                e.extents.cloneTo(E._tempV35);
                var a = E._tempV35.elements;
                E._getRows(this.transformation, E._rows1), E._getRows(e.transformation, E._rows2);
                var o = NaN;
                for (t = 0; t < 4; t++)
                    for (n = 0; n < 4; n++) 3 == t || 3 == n ? (E._tempM0.setElementByRowColumn(t, n, 0), E._tempM1.setElementByRowColumn(t, n, 0)) : (o = Vt.dot(E._rows1[t], E._rows2[n]), E._tempM0.setElementByRowColumn(t, n, o), E._tempM1.setElementByRowColumn(t, n, Math.abs(o)));
                e.getCenter(E._tempV34), this.getCenter(E._tempV36), Vt.subtract(E._tempV34, E._tempV36, E._tempV30);
                var s = E._tempV31.elements;
                s[0] = Vt.dot(E._tempV30, E._rows1[0]), s[1] = Vt.dot(E._tempV30, E._rows1[1]), s[2] = Vt.dot(E._tempV30, E._rows1[2]);
                var l = E._tempV32.elements,
                    h = E._tempV33.elements;
                for (t = 0; t < 3; t++)
                    if (l[0] = E._tempM1.getElementByRowColumn(t, 0), l[1] = E._tempM1.getElementByRowColumn(t, 1), l[2] = E._tempM1.getElementByRowColumn(t, 2), r[t] + Vt.dot(E._tempV35, E._tempV32) < Math.abs(s[t])) return 0;
                for (n = 0; n < 3; n++)
                    if (l[0] = E._tempM1.getElementByRowColumn(0, n), l[1] = E._tempM1.getElementByRowColumn(1, n), l[2] = E._tempM1.getElementByRowColumn(2, n), h[0] = E._tempM0.getElementByRowColumn(0, n), h[1] = E._tempM0.getElementByRowColumn(1, n), h[2] = E._tempM0.getElementByRowColumn(2, n), Vt.dot(this.extents, E._tempV32) + a[n] < Math.abs(Vt.dot(E._tempV31, E._tempV33))) return 0;
                for (t = 0; t < 3; t++)
                    for (n = 0; n < 3; n++) {
                        var _ = (t + 1) % 3,
                            u = (t + 2) % 3,
                            c = (n + 1) % 3,
                            d = (n + 2) % 3;
                        if (r[_] * E._tempM1.getElementByRowColumn(u, n) + r[u] * E._tempM1.getElementByRowColumn(_, n) + (a[c] * E._tempM1.getElementByRowColumn(t, d) + a[d] * E._tempM1.getElementByRowColumn(t, c)) < Math.abs(s[u] * E._tempM0.getElementByRowColumn(_, n) - s[_] * E._tempM0.getElementByRowColumn(u, n))) return 0
                    }
                return 2
            }, e.containsLine = function(e, t) {
                E._corners[0] = e, E._corners[1] = t;
                var n = this.containsPoints(E._corners);
                if (0 != n) return n;
                var i = this.extents.elements,
                    r = i[0],
                    a = i[1],
                    o = i[2];
                this.transformation.invert(E._tempM0), Vt.transformCoordinate(e, E._tempM0, E._tempV30), Vt.transformCoordinate(t, E._tempM0, E._tempV31), Vt.add(E._tempV30, E._tempV31, E._tempV32), Vt.scale(E._tempV32, .5, E._tempV32), Vt.subtract(E._tempV30, E._tempV32, E._tempV33);
                var s = E._tempV33.elements,
                    l = s[0],
                    h = s[1],
                    _ = s[2],
                    u = E._tempV34.elements,
                    c = u[0] = Math.abs(s[0]),
                    d = u[1] = Math.abs(s[1]),
                    f = u[2] = Math.abs(s[2]),
                    m = E._tempV32.elements,
                    p = m[0],
                    v = m[1],
                    g = m[2];
                return Math.abs(p) > r + c ? 0 : Math.abs(v) > a + d ? 0 : Math.abs(g) > o + f ? 0 : Math.abs(v * _ - g * h) > a * f + o * d ? 0 : Math.abs(p * _ - g * l) > r * f + o * c ? 0 : Math.abs(p * h - v * l) > r * d + a * c ? 0 : 2
            }, e.containsBoundBox = function(e) {
                var t = 0,
                    n = 0,
                    i = e.min,
                    r = e.max;
                e.getCorners(E._corners);
                var a = this.containsPoints(E._corners);
                if (0 != a) return a;
                Vt.subtract(r, i, E._tempV30), Vt.scale(E._tempV30, .5, E._tempV30), Vt.add(i, E._tempV30, E._tempV30), Vt.subtract(r, E._tempV30, E._tempV31);
                var o = this.extents.elements,
                    s = E._tempV31.elements;
                E._getRows(this.transformation, E._rows1), this.transformation.invert(E._tempM0);
                for (t = 0; t < 3; t++)
                    for (n = 0; n < 3; n++) E._tempM1.setElementByRowColumn(t, n, Math.abs(E._tempM0.getElementByRowColumn(t, n)));
                this.getCenter(E._tempV35), Vt.subtract(E._tempV30, E._tempV35, E._tempV32);
                var l = E._tempV31.elements;
                l[0] = Vt.dot(E._tempV32, E._rows1[0]), l[1] = Vt.dot(E._tempV32, E._rows1[1]), l[2] = Vt.dot(E._tempV32, E._rows1[2]);
                var h = E._tempV33.elements,
                    _ = E._tempV34.elements;
                for (t = 0; t < 3; t++)
                    if (h[0] = E._tempM1.getElementByRowColumn(t, 0), h[1] = E._tempM1.getElementByRowColumn(t, 1), h[2] = E._tempM1.getElementByRowColumn(t, 2), o[t] + Vt.dot(E._tempV31, E._tempV33) < Math.abs(l[t])) return 0;
                for (n = 0; n < 3; n++)
                    if (h[0] = E._tempM1.getElementByRowColumn(0, n), h[1] = E._tempM1.getElementByRowColumn(1, n), h[2] = E._tempM1.getElementByRowColumn(2, n), _[0] = E._tempM0.getElementByRowColumn(0, n), _[1] = E._tempM0.getElementByRowColumn(1, n), _[2] = E._tempM0.getElementByRowColumn(2, n), Vt.dot(this.extents, E._tempV33) + s[n] < Math.abs(Vt.dot(E._tempV31, E._tempV34))) return 0;
                for (t = 0; t < 3; t++)
                    for (n = 0; n < 3; n++) {
                        var u = (t + 1) % 3,
                            c = (t + 2) % 3,
                            d = (n + 1) % 3,
                            f = (n + 2) % 3;
                        if (o[u] * E._tempM1.getElementByRowColumn(c, n) + o[c] * E._tempM1.getElementByRowColumn(u, n) + (s[d] * E._tempM1.getElementByRowColumn(t, f) + s[f] * E._tempM1.getElementByRowColumn(t, d)) < Math.abs(l[c] * E._tempM0.getElementByRowColumn(u, n) - l[u] * E._tempM0.getElementByRowColumn(c, n))) return 0
                    }
                return 2
            }, e.intersectsRay = function(e, t) {
                Vt.scale(this.extents, -1, E._tempV30), this.transformation.invert(E._tempM0), Vt.TransformNormal(e.direction, E._tempM0, E._ray.direction), Vt.transformCoordinate(e.origin, E._tempM0, E._ray.origin), E._boxBound1.min = E._tempV30, E._boxBound1.max = this.extents;
                var n = xt.intersectsRayAndBoxRP(E._ray, E._boxBound1, t);
                return -1 !== n && Vt.transformCoordinate(t, this.transformation, t), n
            }, e._getLocalCorners = function(e) {
                e.length = 8;
                var t = this.extents.elements;
                E._tempV30.x = t[0], E._tempV31.y = t[1], E._tempV32.z = t[2], Vt.add(E._tempV30, E._tempV31, E._tempV33), Vt.add(E._tempV33, E._tempV32, e[0]), Vt.add(E._tempV30, E._tempV31, E._tempV33), Vt.subtract(E._tempV33, E._tempV32, e[1]), Vt.subtract(E._tempV31, E._tempV30, E._tempV33), Vt.subtract(E._tempV33, E._tempV30, e[2]), Vt.subtract(E._tempV31, E._tempV30, E._tempV33), Vt.add(E._tempV33, E._tempV32, e[3]), Vt.subtract(E._tempV30, E._tempV31, E._tempV33), Vt.add(E._tempV33, E._tempV32, e[4]), Vt.subtract(E._tempV30, E._tempV31, E._tempV33), Vt.subtract(E._tempV33, E._tempV32, e[5]), Vt.scale(e[0], -1, e[6]), Vt.subtract(E._tempV32, E._tempV30, E._tempV33), Vt.subtract(E._tempV33, E._tempV31, e[7])
            }, e.equals = function(e) {
                return this.extents == e.extents && this.transformation == e.transformation
            }, e.cloneTo = function(e) {
                var t = e;
                this.extents.cloneTo(t.extents), this.transformation.cloneTo(t.transformation)
            }, E.createByBoundBox = function(e, t) {
                var n = e.min,
                    i = e.max;
                Vt.subtract(i, n, E._tempV30), Vt.scale(E._tempV30, .5, E._tempV30), Vt.add(n, E._tempV30, E._tempV31), Vt.subtract(i, E._tempV31, E._tempV32), At.translation(E._tempV31, E._tempM0);
                var r = E._tempV32.clone(),
                    a = E._tempM0.clone();
                t.extents = r, t.transformation = a
            }, E.createByMinAndMaxVertex = function(e, t) {
                return Vt.subtract(t, e, E._tempV30), Vt.scale(E._tempV30, .5, E._tempV30), Vt.add(e, E._tempV30, E._tempV31), Vt.subtract(t, E._tempV31, E._tempV32), At.translation(E._tempV31, E._tempM0), new E(E._tempV32, E._tempM0)
            }, E._getRows = function(e, t) {
                t.length = 3;
                var n = e.elements,
                    i = t[0].elements;
                i[0] = n[0], i[1] = n[1], i[2] = n[2];
                var r = t[1].elements;
                r[0] = n[4], r[1] = n[5], r[2] = n[6];
                var a = t[2].elements;
                a[0] = n[8], a[1] = n[9], a[2] = n[10]
            }, E.getObbtoObbMatrix4x4 = function(e, t, n, i) {
                var r = e.transformation,
                    a = t.transformation;
                if (n) {
                    E._getRows(r, E._rows1), E._getRows(a, E._rows2);
                    for (var o = 0; o < 3; o++)
                        for (var s = 0; s < 3; s++) i.setElementByRowColumn(o, s, Vt.dot(E._rows2[o], E._rows1[s]));
                    t.getCenter(E._tempV30), e.getCenter(E._tempV31), Vt.subtract(E._tempV30, E._tempV31, E._tempV32);
                    var l = i.elements;
                    l[12] = Vt.dot(E._tempV32, E._rows1[0]), l[13] = Vt.dot(E._tempV32, E._rows1[1]), l[14] = Vt.dot(E._tempV32, E._rows1[2]), l[15] = 1
                } else r.invert(E._tempM0), At.multiply(a, E._tempM0, i)
            }, E.merge = function(e, t, n) {
                var i = e.extents,
                    r = e.transformation;
                E.getObbtoObbMatrix4x4(e, t, n, E._tempM0), t._getLocalCorners(E._corners), Vt.transformCoordinate(E._corners[0], E._tempM0, E._corners[0]), Vt.transformCoordinate(E._corners[1], E._tempM0, E._corners[1]), Vt.transformCoordinate(E._corners[2], E._tempM0, E._corners[2]), Vt.transformCoordinate(E._corners[3], E._tempM0, E._corners[3]), Vt.transformCoordinate(E._corners[4], E._tempM0, E._corners[4]), Vt.transformCoordinate(E._corners[5], E._tempM0, E._corners[5]), Vt.transformCoordinate(E._corners[6], E._tempM0, E._corners[6]), Vt.transformCoordinate(E._corners[7], E._tempM0, E._corners[7]), Vt.scale(i, -1, E._boxBound1.min), i.cloneTo(E._boxBound1.max), St.createfromPoints(E._corners, E._boxBound2), St.merge(E._boxBound2, E._boxBound1, E._boxBound3);
                var a = E._boxBound3.min,
                    o = E._boxBound3.max;
                Vt.subtract(o, a, E._tempV30), Vt.scale(E._tempV30, .5, E._tempV30), Vt.add(a, E._tempV30, E._tempV32), Vt.subtract(o, E._tempV32, i), Vt.transformCoordinate(E._tempV32, r, E._tempV33)
            }, u(E, ["_tempV30", function() {
                return this._tempV30 = new Vt
            }, "_tempV31", function() {
                return this._tempV31 = new Vt
            }, "_tempV32", function() {
                return this._tempV32 = new Vt
            }, "_tempV33", function() {
                return this._tempV33 = new Vt
            }, "_tempV34", function() {
                return this._tempV34 = new Vt
            }, "_tempV35", function() {
                return this._tempV35 = new Vt
            }, "_tempV36", function() {
                return this._tempV36 = new Vt
            }, "_tempM0", function() {
                return this._tempM0 = new At
            }, "_tempM1", function() {
                return this._tempM1 = new At
            }, "_corners", function() {
                return this._corners = [new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt]
            }, "_rows1", function() {
                return this._rows1 = [new Vt, new Vt, new Vt]
            }, "_rows2", function() {
                return this._rows2 = [new Vt, new Vt, new Vt]
            }, "_ray", function() {
                return this._ray = new wt(new Vt, new Vt)
            }, "_boxBound1", function() {
                return this._boxBound1 = new St(new Vt, new Vt)
            }, "_boxBound2", function() {
                return this._boxBound2 = new St(new Vt, new Vt)
            }, "_boxBound3", function() {
                return this._boxBound3 = new St(new Vt, new Vt)
            }]), E
        }(),
        yt = function() {
            function D(e, t) {
                this.normal = null, this.distance = NaN, void 0 === t && (t = 0), this.normal = e, this.distance = t
            }
            return m(D, "t_tl.d3.math.Plane"), D.prototype.normalize = function() {
                var e = this.normal.elements,
                    t = e[0],
                    n = e[1],
                    i = e[2],
                    r = 1 / Math.sqrt(t * t + n * n + i * i);
                e[0] = t * r, e[1] = n * r, e[2] = i * r, this.distance *= r
            }, D.createPlaneBy3P = function(e, t, n) {
                var i = e.elements,
                    r = t.elements,
                    a = n.elements,
                    o = r[0] - i[0],
                    s = r[1] - i[1],
                    l = r[2] - i[2],
                    h = a[0] - i[0],
                    _ = a[1] - i[1],
                    u = a[2] - i[2],
                    c = s * u - l * _,
                    d = l * h - o * u,
                    f = o * _ - s * h,
                    m = 1 / Math.sqrt(c * c + d * d + f * f),
                    p = c * m,
                    v = d * m,
                    g = f * m,
                    E = D._TEMPVec3.elements;
                E[0] = p, E[1] = v, E[2] = g;
                var S = -(p * i[0] + v * i[1] + g * i[2]);
                return new D(D._TEMPVec3, S)
            }, D.PlaneIntersectionType_Back = 0, D.PlaneIntersectionType_Front = 1, D.PlaneIntersectionType_Intersecting = 2, u(D, ["_TEMPVec3", function() {
                return this._TEMPVec3 = new Vt
            }]), D
        }(),
        Ct = function() {
            function r(e, t, n, i) {
                this.elements = new Float32Array(4), void 0 === e && (e = 0), void 0 === t && (t = 0), void 0 === n && (n = 0), void 0 === i && (i = 1), this.elements[0] = e, this.elements[1] = t, this.elements[2] = n, this.elements[3] = i
            }
            m(r, "t_tl.d3.math.Quaternion");
            var e = r.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.scaling = function(e, t) {
                var n = t.elements,
                    i = this.elements;
                n[0] = i[0] * e, n[1] = i[1] * e, n[2] = i[2] * e, n[3] = i[3] * e
            }, e.normalize = function(e) {
                var t = e.elements,
                    n = this.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = n[3],
                    s = i * i + r * r + a * a + o * o;
                0 < s && (s = 1 / Math.sqrt(s), t[0] = i * s, t[1] = r * s, t[2] = a * s, t[3] = o * s)
            }, e.length = function() {
                var e = this.elements,
                    t = e[0],
                    n = e[1],
                    i = e[2],
                    r = e[3];
                return Math.sqrt(t * t + n * n + i * i + r * r)
            }, e.rotateX = function(e, t) {
                var n = t.elements,
                    i = this.elements;
                e *= .5;
                var r = i[0],
                    a = i[1],
                    o = i[2],
                    s = i[3],
                    l = Math.sin(e),
                    h = Math.cos(e);
                n[0] = r * h + s * l, n[1] = a * h + o * l, n[2] = o * h - a * l, n[3] = s * h - r * l
            }, e.rotateY = function(e, t) {
                var n = t.elements,
                    i = this.elements;
                e *= .5;
                var r = i[0],
                    a = i[1],
                    o = i[2],
                    s = i[3],
                    l = Math.sin(e),
                    h = Math.cos(e);
                n[0] = r * h - o * l, n[1] = a * h + s * l, n[2] = o * h + r * l, n[3] = s * h - a * l
            }, e.rotateZ = function(e, t) {
                var n = t.elements,
                    i = this.elements;
                e *= .5;
                var r = i[0],
                    a = i[1],
                    o = i[2],
                    s = i[3],
                    l = Math.sin(e),
                    h = Math.cos(e);
                n[0] = r * h + a * l, n[1] = a * h - r * l, n[2] = o * h + s * l, n[3] = s * h - o * l
            }, e.getYawPitchRoll = function(e) {
                Vt.transformQuat(Vt.ForwardRH, this, r.TEMPVector31), Vt.transformQuat(Vt.Up, this, r.TEMPVector32);
                var t = r.TEMPVector32.elements;
                r.angleTo(Vt.ZERO, r.TEMPVector31, r.TEMPVector33);
                var n = r.TEMPVector33.elements;
                n[0] == Math.PI / 2 ? (n[1] = r.arcTanAngle(t[2], t[0]), n[2] = 0) : n[0] == -Math.PI / 2 ? (n[1] = r.arcTanAngle(-t[2], -t[0]), n[2] = 0) : (At.createRotationY(-n[1], r.TEMPMatrix0), At.createRotationX(-n[0], r.TEMPMatrix1), Vt.transformCoordinate(r.TEMPVector32, r.TEMPMatrix0, r.TEMPVector32), Vt.transformCoordinate(r.TEMPVector32, r.TEMPMatrix1, r.TEMPVector32), n[2] = r.arcTanAngle(t[1], -t[0])), n[1] <= -Math.PI && (n[1] = Math.PI), n[2] <= -Math.PI && (n[2] = Math.PI), n[1] >= Math.PI && n[2] >= Math.PI && (n[1] = 0, n[2] = 0, n[0] = Math.PI - n[0]);
                var i = e.elements;
                i[0] = n[1], i[1] = n[0], i[2] = n[2]
            }, e.invert = function(e) {
                var t = e.elements,
                    n = this.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = n[3],
                    s = i * i + r * r + a * a + o * o,
                    l = s ? 1 / s : 0;
                t[0] = -i * l, t[1] = -r * l, t[2] = -a * l, t[3] = o * l
            }, e.identity = function() {
                var e = this.elements;
                e[0] = 0, e[1] = 0, e[2] = 0, e[3] = 1
            }, e.fromArray = function(e, t) {
                void 0 === t && (t = 0), this.elements[0] = e[t + 0], this.elements[1] = e[t + 1], this.elements[2] = e[t + 2], this.elements[3] = e[t + 3]
            }, e.cloneTo = function(e) {
                var t, n, i;
                if ((n = this.elements) !== (i = e.elements))
                    for (t = 0; t < 4; ++t) i[t] = n[t]
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, e.equals = function(e) {
                var t = this.elements,
                    n = e.elements;
                return Mt.nearEqual(t[0], n[0]) && Mt.nearEqual(t[1], n[1]) && Mt.nearEqual(t[2], n[2]) && Mt.nearEqual(t[3], n[3])
            }, e.lengthSquared = function() {
                var e = this.elements[0],
                    t = this.elements[1],
                    n = this.elements[2],
                    i = this.elements[3];
                return e * e + t * t + n * n + i * i
            }, g(0, e, "x", function() {
                return this.elements[0]
            }), g(0, e, "y", function() {
                return this.elements[1]
            }), g(0, e, "z", function() {
                return this.elements[2]
            }), g(0, e, "w", function() {
                return this.elements[3]
            }), r.createFromYawPitchRoll = function(e, t, n, i) {
                var r = .5 * n,
                    a = .5 * t,
                    o = .5 * e,
                    s = Math.sin(r),
                    l = Math.cos(r),
                    h = Math.sin(a),
                    _ = Math.cos(a),
                    u = Math.sin(o),
                    c = Math.cos(o),
                    d = i.elements;
                d[0] = c * h * l + u * _ * s, d[1] = u * _ * l - c * h * s, d[2] = c * _ * s - u * h * l, d[3] = c * _ * l + u * h * s
            }, r.multiply = function(e, t, n) {
                var i = e.elements,
                    r = t.elements,
                    a = n.elements,
                    o = i[0],
                    s = i[1],
                    l = i[2],
                    h = i[3],
                    _ = r[0],
                    u = r[1],
                    c = r[2],
                    d = r[3],
                    f = s * c - l * u,
                    m = l * _ - o * c,
                    p = o * u - s * _,
                    v = o * _ + s * u + l * c;
                a[0] = o * d + _ * h + f, a[1] = s * d + u * h + m, a[2] = l * d + c * h + p, a[3] = h * d - v
            }, r.arcTanAngle = function(e, t) {
                return 0 == e ? 1 == t ? Math.PI / 2 : -Math.PI / 2 : 0 < e ? Math.atan(t / e) : e < 0 ? 0 < t ? Math.atan(t / e) + Math.PI : Math.atan(t / e) - Math.PI : 0
            }, r.angleTo = function(e, t, n) {
                Vt.subtract(t, e, r.TEMPVector30), Vt.normalize(r.TEMPVector30, r.TEMPVector30), n.elements[0] = Math.asin(r.TEMPVector30.y), n.elements[1] = r.arcTanAngle(-r.TEMPVector30.z, -r.TEMPVector30.x)
            }, r.createFromAxisAngle = function(e, t, n) {
                var i = n.elements,
                    r = e.elements;
                t *= .5;
                var a = Math.sin(t);
                i[0] = a * r[0], i[1] = a * r[1], i[2] = a * r[2], i[3] = Math.cos(t)
            }, r.createFromMatrix3x3 = function(e, t) {
                var n, i = t.elements,
                    r = e.elements,
                    a = r[0] + r[4] + r[8];
                if (0 < a) n = Math.sqrt(a + 1), i[3] = .5 * n, n = .5 / n, i[0] = (r[5] - r[7]) * n, i[1] = (r[6] - r[2]) * n, i[2] = (r[1] - r[3]) * n;
                else {
                    var o = 0;
                    r[4] > r[0] && (o = 1), r[8] > r[3 * o + o] && (o = 2);
                    var s = (o + 1) % 3,
                        l = (o + 2) % 3;
                    n = Math.sqrt(r[3 * o + o] - r[3 * s + s] - r[3 * l + l] + 1), i[o] = .5 * n, n = .5 / n, i[3] = (r[3 * s + l] - r[3 * l + s]) * n, i[s] = (r[3 * s + o] + r[3 * o + s]) * n, i[l] = (r[3 * l + o] + r[3 * o + l]) * n
                }
            }, r.createFromMatrix4x4 = function(e, t) {
                var n, i, r = e.elements,
                    a = t.elements,
                    o = r[0] + r[5] + r[10];
                0 < o ? (n = Math.sqrt(o + 1), a[3] = .5 * n, n = .5 / n, a[0] = (r[6] - r[9]) * n, a[1] = (r[8] - r[2]) * n, a[2] = (r[1] - r[4]) * n) : r[0] >= r[5] && r[0] >= r[10] ? (i = .5 / (n = Math.sqrt(1 + r[0] - r[5] - r[10])), a[0] = .5 * n, a[1] = (r[1] + r[4]) * i, a[2] = (r[2] + r[8]) * i, a[3] = (r[6] - r[9]) * i) : r[5] > r[10] ? (i = .5 / (n = Math.sqrt(1 + r[5] - r[0] - r[10])), a[0] = (r[4] + r[1]) * i, a[1] = .5 * n, a[2] = (r[9] + r[6]) * i, a[3] = (r[8] - r[2]) * i) : (i = .5 / (n = Math.sqrt(1 + r[10] - r[0] - r[5])), a[0] = (r[8] + r[2]) * i, a[1] = (r[9] + r[6]) * i, a[2] = .5 * n, a[3] = (r[1] - r[4]) * i)
            }, r.slerp = function(e, t, n, i) {
                var r, a, o, s, l, h = e.elements,
                    _ = t.elements,
                    u = i.elements,
                    c = h[0],
                    d = h[1],
                    f = h[2],
                    m = h[3],
                    p = _[0],
                    v = _[1],
                    g = _[2],
                    E = _[3];
                return (a = c * p + d * v + f * g + m * E) < 0 && (a = -a, p = -p, v = -v, g = -g, E = -E), 1e-6 < 1 - a ? (r = Math.acos(a), o = Math.sin(r), s = Math.sin((1 - n) * r) / o, l = Math.sin(n * r) / o) : (s = 1 - n, l = n), u[0] = s * c + l * p, u[1] = s * d + l * v, u[2] = s * f + l * g, u[3] = s * m + l * E, u
            }, r.lerp = function(e, t, n, i) {
                var r = i.elements,
                    a = e.elements,
                    o = t.elements,
                    s = a[0],
                    l = a[1],
                    h = a[2],
                    _ = a[3];
                r[0] = s + n * (o[0] - s), r[1] = l + n * (o[1] - l), r[2] = h + n * (o[2] - h), r[3] = _ + n * (o[3] - _)
            }, r.add = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = r[0] + a[0], i[1] = r[1] + a[1], i[2] = r[2] + a[2], i[3] = r[3] + a[3]
            }, r.dot = function(e, t) {
                var n = e.elements,
                    i = t.elements;
                return n[0] * i[0] + n[1] * i[1] + n[2] * i[2] + n[3] * i[3]
            }, r.rotationLookAt = function(e, t, n) {
                r.lookAt(Vt.ZERO, e, t, n)
            }, r.lookAt = function(e, t, n, i) {
                Rt.lookAt(e, t, n, r._tempMatrix3x3), r.rotationMatrix(r._tempMatrix3x3, i)
            }, r.invert = function(e, t) {
                var n = e.elements,
                    i = t.elements,
                    r = e.lengthSquared();
                Mt.isZero(r) || (r = 1 / r, i[0] = -n[0] * r, i[1] = -n[1] * r, i[2] = -n[2] * r, i[3] = n[3] * r)
            }, r.rotationMatrix = function(e, t) {
                var n = e.elements,
                    i = n[0],
                    r = n[1],
                    a = n[2],
                    o = n[3],
                    s = n[4],
                    l = n[5],
                    h = n[6],
                    _ = n[7],
                    u = n[8],
                    c = t.elements,
                    d = NaN,
                    f = NaN,
                    m = i + s + u;
                0 < m ? (d = Math.sqrt(m + 1), c[3] = .5 * d, d = .5 / d, c[0] = (l - _) * d, c[1] = (h - a) * d, c[2] = (r - o) * d) : s <= i && u <= i ? (f = .5 / (d = Math.sqrt(1 + i - s - u)), c[0] = .5 * d, c[1] = (r + o) * f, c[2] = (a + h) * f, c[3] = (l - _) * f) : u < s ? (f = .5 / (d = Math.sqrt(1 + s - i - u)), c[0] = (o + r) * f, c[1] = .5 * d, c[2] = (_ + l) * f, c[3] = (h - a) * f) : (f = .5 / (d = Math.sqrt(1 + u - i - s)), c[0] = (h + a) * f, c[1] = (_ + l) * f, c[2] = .5 * d, c[3] = (r - o) * f)
            }, r.DEFAULT = new r, u(r, ["TEMPVector30", function() {
                return this.TEMPVector30 = new Vt
            }, "TEMPVector31", function() {
                return this.TEMPVector31 = new Vt
            }, "TEMPVector32", function() {
                return this.TEMPVector32 = new Vt
            }, "TEMPVector33", function() {
                return this.TEMPVector33 = new Vt
            }, "TEMPMatrix0", function() {
                return this.TEMPMatrix0 = new At
            }, "TEMPMatrix1", function() {
                return this.TEMPMatrix1 = new At
            }, "_tempMatrix3x3", function() {
                return this._tempMatrix3x3 = new Rt
            }, "NAN", function() {
                return this.NAN = new r(NaN, NaN, NaN, NaN)
            }]), r
        }(),
        Nt = function() {
            function e(e) {
                this._temp = new Uint32Array(1), this.seeds = new Uint32Array(4), this.seeds[0] = e, this.seeds[1] = 1812433253 * this.seeds[0] + 1, this.seeds[2] = 1812433253 * this.seeds[1] + 1, this.seeds[3] = 1812433253 * this.seeds[2] + 1
            }
            m(e, "t_tl.d3.math.Rand");
            var t = e.prototype;
            return t.getUint = function() {
                return this._temp[0] = this.seeds[0] ^ this.seeds[0] << 11, this.seeds[0] = this.seeds[1], this.seeds[1] = this.seeds[2], this.seeds[2] = this.seeds[3], this.seeds[3] = this.seeds[3] ^ this.seeds[3] >>> 19 ^ this._temp[0] ^ this._temp[0] >>> 8, this.seeds[3]
            }, t.getFloat = function() {
                return this.getUint(), (8388607 & this.seeds[3]) * (1 / 8388607)
            }, t.getSignedFloat = function() {
                return 2 * this.getFloat() - 1
            }, g(0, t, "seed", function() {
                return this.seeds[0]
            }, function(e) {
                this.seeds[0] = e, this.seeds[1] = 1812433253 * this.seeds[0] + 1, this.seeds[2] = 1812433253 * this.seeds[1] + 1, this.seeds[3] = 1812433253 * this.seeds[2] + 1
            }), e.getFloatFromInt = function(e) {
                return 1 / 8388607 * (8388607 & e)
            }, e.getByteFromInt = function(e) {
                return (8388607 & e) >>> 15
            }, e
        }(),
        wt = (function() {
            function r(e) {
                if (this._state0U = NaN, this._state0L = NaN, this._state1U = NaN, this._state1L = NaN, !(e instanceof Array) || 4 !== e.length) throw new Error("Rand:Seed must be an array with 4 numbers");
                this._state0U = 0 | e[0], this._state0L = 0 | e[1], this._state1U = 0 | e[2], this._state1L = 0 | e[3]
            }
            m(r, "t_tl.d3.math.RandX");
            var e = r.prototype;
            e.randomint = function() {
                var e = this._state0U,
                    t = this._state0L,
                    n = this._state1U,
                    i = this._state1L,
                    r = (i >>> 0) + (t >>> 0),
                    a = n + e + (r / 2 >>> 31) >>> 0,
                    o = r >>> 0,
                    s = 0,
                    l = 0;
                s = (e ^= s = e << 23 | (-512 & t) >>> 9) ^ (this._state0U = n), l = (t ^= l = t << 23) ^ (this._state0L = i);
                s ^= e >>> 18, l ^= t >>> 18 | (262143 & e) << 14;
                return s ^= n >>> 5, l ^= i >>> 5 | (31 & n) << 27, this._state1U = s, this._state1L = l, [a, o]
            }, e.random = function() {
                var e = this.randomint(),
                    t = e[0],
                    n = 1023 << 20 | t >>> 12,
                    i = 0 | (e[1] >>> 12 | (4095 & t) << 20);
                return r._CONVERTION_BUFFER.setUint32(0, n, !1), r._CONVERTION_BUFFER.setUint32(4, i, !1), Nt._CONVERTION_BUFFER.getFloat64(0, !1) - 1
            }, u(r, ["_CONVERTION_BUFFER", function() {
                return this._CONVERTION_BUFFER = new DataView(new ArrayBuffer(8))
            }, "defaultRand", function() {
                return this.defaultRand = new Nt([0, Date.now() / 65536, 0, Date.now() % 65536])
            }])
        }(), function() {
            function e(e, t) {
                this.origin = null, this.direction = null, this.origin = e, this.direction = t
            }
            return m(e, "t_tl.d3.math.Ray"), e
        }()),
        Ot = function() {
            function e(e, t) {
                this.elements = new Float32Array(2), void 0 === e && (e = 0), void 0 === t && (t = 0);
                var n = this.elements;
                n[0] = e, n[1] = t
            }
            m(e, "t_tl.d3.math.Vector2");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.fromArray = function(e, t) {
                void 0 === t && (t = 0), this.elements[0] = e[t + 0], this.elements[1] = e[t + 1]
            }, t.cloneTo = function(e) {
                var t = e.elements,
                    n = this.elements;
                t[0] = n[0], t[1] = n[1]
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, t, "x", function() {
                return this.elements[0]
            }, function(e) {
                this.elements[0] = e
            }), g(0, t, "y", function() {
                return this.elements[1]
            }, function(e) {
                this.elements[1] = e
            }), e.scale = function(e, t, n) {
                var i = n.elements,
                    r = e.elements;
                i[0] = r[0] * t, i[1] = r[1] * t
            }, u(e, ["ZERO", function() {
                return this.ZERO = new e(0, 0)
            }, "ONE", function() {
                return this.ONE = new e(1, 1)
            }]), e
        }(),
        Vt = function() {
            function _(e, t, n) {
                this.elements = new Float32Array(3), void 0 === e && (e = 0), void 0 === t && (t = 0), void 0 === n && (n = 0);
                var i = this.elements;
                i[0] = e, i[1] = t, i[2] = n
            }
            m(_, "t_tl.d3.math.Vector3");
            var e = _.prototype;
            return x.imps(e, {
                "t_tl.d3.core.IClone": !0
            }), e.fromArray = function(e, t) {
                void 0 === t && (t = 0), this.elements[0] = e[t + 0], this.elements[1] = e[t + 1], this.elements[2] = e[t + 2]
            }, e.cloneTo = function(e) {
                var t = e.elements,
                    n = this.elements;
                t[0] = n[0], t[1] = n[1], t[2] = n[2]
            }, e.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, e.toDefault = function() {
                this.elements[0] = 0, this.elements[1] = 0, this.elements[2] = 0
            }, g(0, e, "x", function() {
                return this.elements[0]
            }, function(e) {
                this.elements[0] = e
            }), g(0, e, "y", function() {
                return this.elements[1]
            }, function(e) {
                this.elements[1] = e
            }), g(0, e, "z", function() {
                return this.elements[2]
            }, function(e) {
                this.elements[2] = e
            }), _.distanceSquared = function(e, t) {
                var n = e.elements,
                    i = t.elements,
                    r = n[0] - i[0],
                    a = n[1] - i[1],
                    o = n[2] - i[2];
                return r * r + a * a + o * o
            }, _.distance = function(e, t) {
                var n = e.elements,
                    i = t.elements,
                    r = n[0] - i[0],
                    a = n[1] - i[1],
                    o = n[2] - i[2];
                return Math.sqrt(r * r + a * a + o * o)
            }, _.min = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = Math.min(r[0], a[0]), i[1] = Math.min(r[1], a[1]), i[2] = Math.min(r[2], a[2])
            }, _.max = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = Math.max(r[0], a[0]), i[1] = Math.max(r[1], a[1]), i[2] = Math.max(r[2], a[2])
            }, _.transformQuat = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements,
                    o = r[0],
                    s = r[1],
                    l = r[2],
                    h = a[0],
                    _ = a[1],
                    u = a[2],
                    c = a[3],
                    d = c * o + _ * l - u * s,
                    f = c * s + u * o - h * l,
                    m = c * l + h * s - _ * o,
                    p = -h * o - _ * s - u * l;
                i[0] = d * c + p * -h + f * -u - m * -_, i[1] = f * c + p * -_ + m * -h - d * -u, i[2] = m * c + p * -u + d * -_ - f * -h
            }, _.scalarLength = function(e) {
                var t = e.elements,
                    n = t[0],
                    i = t[1],
                    r = t[2];
                return Math.sqrt(n * n + i * i + r * r)
            }, _.scalarLengthSquared = function(e) {
                var t = e.elements,
                    n = t[0],
                    i = t[1],
                    r = t[2];
                return n * n + i * i + r * r
            }, _.normalize = function(e, t) {
                var n = e.elements,
                    i = t.elements,
                    r = n[0],
                    a = n[1],
                    o = n[2],
                    s = r * r + a * a + o * o;
                0 < s && (s = 1 / Math.sqrt(s), i[0] = n[0] * s, i[1] = n[1] * s, i[2] = n[2] * s)
            }, _.multiply = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = r[0] * a[0], i[1] = r[1] * a[1], i[2] = r[2] * a[2]
            }, _.scale = function(e, t, n) {
                var i = n.elements,
                    r = e.elements;
                i[0] = r[0] * t, i[1] = r[1] * t, i[2] = r[2] * t
            }, _.lerp = function(e, t, n, i) {
                var r = i.elements,
                    a = e.elements,
                    o = t.elements,
                    s = a[0],
                    l = a[1],
                    h = a[2];
                r[0] = s + n * (o[0] - s), r[1] = l + n * (o[1] - l), r[2] = h + n * (o[2] - h)
            }, _.transformV3ToV3 = function(e, t, n) {
                var i = _._tempVector4;
                _.transformV3ToV4(e, t, i);
                var r = i.elements,
                    a = n.elements;
                a[0] = r[0], a[1] = r[1], a[2] = r[2]
            }, _.transformV3ToV4 = function(e, t, n) {
                var i = e.elements,
                    r = i[0],
                    a = i[1],
                    o = i[2],
                    s = t.elements,
                    l = n.elements;
                l[0] = r * s[0] + a * s[4] + o * s[8] + s[12], l[1] = r * s[1] + a * s[5] + o * s[9] + s[13], l[2] = r * s[2] + a * s[6] + o * s[10] + s[14], l[3] = r * s[3] + a * s[7] + o * s[11] + s[15]
            }, _.TransformNormal = function(e, t, n) {
                var i = e.elements,
                    r = i[0],
                    a = i[1],
                    o = i[2],
                    s = t.elements,
                    l = n.elements;
                l[0] = r * s[0] + a * s[4] + o * s[8], l[1] = r * s[1] + a * s[5] + o * s[9], l[2] = r * s[2] + a * s[6] + o * s[10]
            }, _.transformCoordinate = function(e, t, n) {
                var i = _._tempVector4.elements,
                    r = e.elements,
                    a = r[0],
                    o = r[1],
                    s = r[2],
                    l = t.elements;
                i[0] = a * l[0] + o * l[4] + s * l[8] + l[12], i[1] = a * l[1] + o * l[5] + s * l[9] + l[13], i[2] = a * l[2] + o * l[6] + s * l[10] + l[14], i[3] = 1 / (a * l[3] + o * l[7] + s * l[11] + l[15]);
                var h = n.elements;
                h[0] = i[0] * i[3], h[1] = i[1] * i[3], h[2] = i[2] * i[3]
            }, _.Clamp = function(e, t, n, i) {
                var r = e.elements,
                    a = r[0],
                    o = r[1],
                    s = r[2],
                    l = t.elements,
                    h = l[0],
                    _ = l[1],
                    u = l[2],
                    c = n.elements,
                    d = c[0],
                    f = c[1],
                    m = c[2],
                    p = i.elements;
                a = (a = d < a ? d : a) < h ? h : a, o = (o = f < o ? f : o) < _ ? _ : o, s = (s = m < s ? m : s) < u ? u : s, p[0] = a, p[1] = o, p[2] = s
            }, _.add = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = r[0] + a[0], i[1] = r[1] + a[1], i[2] = r[2] + a[2]
            }, _.subtract = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = r[0] - a[0], i[1] = r[1] - a[1], i[2] = r[2] - a[2]
            }, _.cross = function(e, t, n) {
                var i = e.elements,
                    r = t.elements,
                    a = n.elements,
                    o = i[0],
                    s = i[1],
                    l = i[2],
                    h = r[0],
                    _ = r[1],
                    u = r[2];
                a[0] = s * u - l * _, a[1] = l * h - o * u, a[2] = o * _ - s * h
            }, _.dot = function(e, t) {
                var n = e.elements,
                    i = t.elements;
                return n[0] * i[0] + n[1] * i[1] + n[2] * i[2]
            }, _.equals = function(e, t) {
                var n = e.elements,
                    i = t.elements;
                return Mt.nearEqual(Math.abs(n[0]), Math.abs(i[0])) && Mt.nearEqual(Math.abs(n[1]), Math.abs(i[1])) && Mt.nearEqual(Math.abs(n[2]), Math.abs(i[2]))
            }, _.ZERO = new _(0, 0, 0), _.ONE = new _(1, 1, 1), _.NegativeUnitX = new _(-1, 0, 0), _.UnitX = new _(1, 0, 0), _.UnitY = new _(0, 1, 0), _.UnitZ = new _(0, 0, 1), _.ForwardRH = new _(0, 0, -1), _.ForwardLH = new _(0, 0, 1), _.Up = new _(0, 1, 0), _.NAN = new _(NaN, NaN, NaN), u(_, ["_tempVector4", function() {
                return this._tempVector4 = new Pt
            }]), _
        }(),
        Pt = function() {
            function e(e, t, n, i) {
                this.elements = new Float32Array(4), void 0 === e && (e = 0), void 0 === t && (t = 0), void 0 === n && (n = 0), void 0 === i && (i = 0);
                var r = this.elements;
                r[0] = e, r[1] = t, r[2] = n, r[3] = i
            }
            m(e, "t_tl.d3.math.Vector4");
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t.fromArray = function(e, t) {
                void 0 === t && (t = 0), this.elements[0] = e[t + 0], this.elements[1] = e[t + 1], this.elements[2] = e[t + 2], this.elements[3] = e[t + 3]
            }, t.cloneTo = function(e) {
                var t = e.elements,
                    n = this.elements;
                t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3]
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, t.length = function() {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
            }, t.lengthSquared = function() {
                return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
            }, g(0, t, "x", function() {
                return this.elements[0]
            }, function(e) {
                this.elements[0] = e
            }), g(0, t, "y", function() {
                return this.elements[1]
            }, function(e) {
                this.elements[1] = e
            }), g(0, t, "z", function() {
                return this.elements[2]
            }, function(e) {
                this.elements[2] = e
            }), g(0, t, "w", function() {
                return this.elements[3]
            }, function(e) {
                this.elements[3] = e
            }), e.lerp = function(e, t, n, i) {
                var r = i.elements,
                    a = e.elements,
                    o = t.elements,
                    s = a[0],
                    l = a[1],
                    h = a[2],
                    _ = a[3];
                r[0] = s + n * (o[0] - s), r[1] = l + n * (o[1] - l), r[2] = h + n * (o[2] - h), r[3] = _ + n * (o[3] - _)
            }, e.transformByM4x4 = function(e, t, n) {
                var i = e.elements,
                    r = i[0],
                    a = i[1],
                    o = i[2],
                    s = i[3],
                    l = t.elements,
                    h = n.elements;
                h[0] = r * l[0] + a * l[4] + o * l[8] + s * l[12], h[1] = r * l[1] + a * l[5] + o * l[9] + s * l[13], h[2] = r * l[2] + a * l[6] + o * l[10] + s * l[14], h[3] = r * l[3] + a * l[7] + o * l[11] + s * l[15]
            }, e.equals = function(e, t) {
                var n = e.elements,
                    i = t.elements;
                return Mt.nearEqual(Math.abs(n[0]), Math.abs(i[0])) && Mt.nearEqual(Math.abs(n[1]), Math.abs(i[1])) && Mt.nearEqual(Math.abs(n[2]), Math.abs(i[2])) && Mt.nearEqual(Math.abs(n[3]), Math.abs(i[3]))
            }, e.normalize = function(e, t) {
                var n = e.elements,
                    i = t.elements,
                    r = e.length();
                0 < r && (i[0] = n[0] * r, i[1] = n[1] * r, i[2] = n[2] * r, i[3] = n[3] * r)
            }, e.add = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = r[0] + a[0], i[1] = r[1] + a[1], i[2] = r[2] + a[2], i[3] = r[3] + a[3]
            }, e.subtract = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = r[0] - a[0], i[1] = r[1] - a[1], i[2] = r[2] - a[2], i[3] = r[3] - a[3]
            }, e.multiply = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = r[0] * a[0], i[1] = r[1] * a[1], i[2] = r[2] * a[2], i[3] = r[3] * a[3]
            }, e.scale = function(e, t, n) {
                var i = n.elements,
                    r = e.elements;
                i[0] = r[0] * t, i[1] = r[1] * t, i[2] = r[2] * t, i[3] = r[3] * t
            }, e.Clamp = function(e, t, n, i) {
                var r = e.elements,
                    a = r[0],
                    o = r[1],
                    s = r[2],
                    l = r[3],
                    h = t.elements,
                    _ = h[0],
                    u = h[1],
                    c = h[2],
                    d = h[3],
                    f = n.elements,
                    m = f[0],
                    p = f[1],
                    v = f[2],
                    g = f[3],
                    E = i.elements;
                a = (a = m < a ? m : a) < _ ? _ : a, o = (o = p < o ? p : o) < u ? u : o, s = (s = v < s ? v : s) < c ? c : s, l = (l = g < l ? g : l) < d ? d : l, E[0] = a, E[1] = o, E[2] = s, E[3] = l
            }, e.distanceSquared = function(e, t) {
                var n = e.elements,
                    i = t.elements,
                    r = n[0] - i[0],
                    a = n[1] - i[1],
                    o = n[2] - i[2],
                    s = n[3] - i[3];
                return r * r + a * a + o * o + s * s
            }, e.distance = function(e, t) {
                var n = e.elements,
                    i = t.elements,
                    r = n[0] - i[0],
                    a = n[1] - i[1],
                    o = n[2] - i[2],
                    s = n[3] - i[3];
                return Math.sqrt(r * r + a * a + o * o + s * s)
            }, e.dot = function(e, t) {
                var n = e.elements,
                    i = t.elements;
                return n[0] * i[0] + n[1] * i[1] + n[2] * i[2] + n[3] * i[3]
            }, e.min = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = Math.min(r[0], a[0]), i[1] = Math.min(r[1], a[1]), i[2] = Math.min(r[2], a[2]), i[3] = Math.min(r[3], a[3])
            }, e.max = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t.elements;
                i[0] = Math.max(r[0], a[0]), i[1] = Math.max(r[1], a[1]), i[2] = Math.max(r[2], a[2]), i[3] = Math.max(r[3], a[3])
            }, u(e, ["ZERO", function() {
                return this.ZERO = new e
            }, "ONE", function() {
                return this.ONE = new e(1, 1, 1, 1)
            }, "UnitX", function() {
                return this.UnitX = new e(1, 0, 0, 0)
            }, "UnitY", function() {
                return this.UnitY = new e(0, 1, 0, 0)
            }, "UnitZ", function() {
                return this.UnitZ = new e(0, 0, 1, 0)
            }, "UnitW", function() {
                return this.UnitW = new e(0, 0, 0, 1)
            }]), e
        }(),
        Lt = function() {
            function a(e, t, n, i) {
                this.minDepth = 0, this.maxDepth = 1, this.x = e, this.y = t, this.width = n, this.height = i
            }
            m(a, "t_tl.d3.math.Viewport");
            var e = a.prototype;
            return e.project = function(e, t, n) {
                Vt.transformV3ToV3(e, t, n);
                var i = e.elements,
                    r = t.elements,
                    a = n.elements,
                    o = i[0] * r[3] + i[1] * r[7] + i[2] * r[11] + r[15];
                1 !== o && (a[0] = a[0] / o, a[1] = a[1] / o, a[2] = a[2] / o), a[0] = .5 * (a[0] + 1) * this.width + this.x, a[1] = .5 * (1 - a[1]) * this.height + this.y, a[2] = a[2] * (this.maxDepth - this.minDepth) + this.minDepth
            }, e.unprojectFromMat = function(e, t, n) {
                var i = e.elements,
                    r = t.elements,
                    a = n.elements;
                a[0] = (i[0] - this.x) / this.width * 2 - 1, a[1] = -((i[1] - this.y) / this.height * 2 - 1);
                var o = (this.maxDepth - this.minDepth) / 2;
                a[2] = (i[2] - this.minDepth - o) / o;
                var s = a[0] * r[3] + a[1] * r[7] + a[2] * r[11] + r[15];
                Vt.transformV3ToV3(n, t, n), 1 !== s && (a[0] = a[0] / s, a[1] = a[1] / s, a[2] = a[2] / s)
            }, e.unprojectFromWVP = function(e, t, n, i, r) {
                At.multiply(t, n, a._tempMatrix4x4), i && At.multiply(a._tempMatrix4x4, i, a._tempMatrix4x4), a._tempMatrix4x4.invert(a._tempMatrix4x4), this.unprojectFromMat(e, a._tempMatrix4x4, r)
            }, u(a, ["_tempMatrix4x4", function() {
                return this._tempMatrix4x4 = new At
            }]), a
        }(),
        bt = function() {
            function e() {
                this._alphaBlending = 1, this._colorIntensity = 1, this._shaderValue = new Ht
            }
            m(e, "t_tl.d3.resource.models.Sky");
            var t = e.prototype;
            return t._setEnvironmentDiffuse = function() {
                this._environmentDiffuse.loaded ? this.__ownerCamera._shaderValues.setValue(7, this._environmentDiffuse) : this._environmentDiffuse.on("loaded", this, this._environmentDiffuseLoaded)
            }, t._setEnvironmentSpecular = function() {
                if (this._environmentSpecular.loaded) {
                    var e = this._environmentSpecular.simLodInfo;
                    e && e instanceof Float32Array && this.__ownerCamera._shaderValues.setValue(9, e), this.__ownerCamera._shaderValues.setValue(8, this._environmentSpecular)
                } else this._environmentSpecular.on("loaded", this, this._environmentSpecularLoaded)
            }, t._environmentDiffuseLoaded = function() {
                this.__ownerCamera._shaderValues.setValue(7, this._environmentDiffuse)
            }, t._environmentSpecularLoaded = function() {
                var e = this._environmentSpecular.simLodInfo;
                e && e instanceof Float32Array && this.__ownerCamera._shaderValues.setValue(9, e), this.__ownerCamera._shaderValues.setValue(8, this._environmentSpecular)
            }, t._render = function(e) {}, t.destroy = function() {
                this.__ownerCamera = null
            }, g(0, t, "_ownerCamera", null, function(e) {
                this.__ownerCamera = e, this._environmentDiffuse && this._setEnvironmentDiffuse(), this._environmentSpecular && this._setEnvironmentSpecular()
            }), g(0, t, "alphaBlending", function() {
                return this._alphaBlending
            }, function(e) {
                this._alphaBlending = e, this._alphaBlending < 0 && (this._alphaBlending = 0), 1 < this._alphaBlending && (this._alphaBlending = 1)
            }), g(0, t, "envDiffuseSHBlue", null, function(e) {
                this.__ownerCamera._shaderValues.setValue(12, e)
            }), g(0, t, "colorIntensity", function() {
                return this._colorIntensity
            }, function(e) {
                this._colorIntensity = e, this._colorIntensity < 0 && (this._colorIntensity = 0)
            }), g(0, t, "envDiffuseSHGreen", null, function(e) {
                this.__ownerCamera._shaderValues.setValue(11, e)
            }), g(0, t, "envDiffuseSHRed", null, function(e) {
                this.__ownerCamera._shaderValues.setValue(10, e)
            }), g(0, t, "environmentDiffuse", function() {
                return this._environmentDiffuse
            }, function(e) {
                e.minFifter = 9728, this._environmentDiffuse = e, this.__ownerCamera && this._setEnvironmentDiffuse()
            }), g(0, t, "environmentSpecular", function() {
                return this._environmentSpecular
            }, function(e) {
                this._environmentSpecular = e, this.__ownerCamera && this._setEnvironmentSpecular()
            }), e.MVPMATRIX = 0, e.INTENSITY = 1, e.ALPHABLENDING = 2, e.DIFFUSETEXTURE = 3, e
        }(),
        Ft = function() {
            function y(e) {
                this._mesh = null, this._boneIndicesList = null, this._subIndexBufferStart = null, this._subIndexBufferCount = null, this._skinAnimationDatas = null, this._bufferUsage = null, this._indexInMesh = 0, this._vertexBuffer = null, this._vertexStart = 0, this._vertexCount = 0, this._indexBuffer = null, this._indexStart = 0, this._indexCount = 0, this._indices = null, this._bufferUsage = {}, this._mesh = e, this._boneIndicesList = [], this._subIndexBufferStart = [], this._subIndexBufferCount = []
            }
            m(y, "t_tl.d3.resource.models.SubMesh");
            var e = y.prototype;
            return x.imps(e, {
                "t_tl.d3.core.render.IRenderable": !0,
                "t_tl.resource.IDispose": !0
            }), e._getVertexBuffer = function(e) {
                return void 0 === e && (e = 0), 0 === e ? this._vertexBuffer : null
            }, e._getIndexBuffer = function() {
                return this._indexBuffer
            }, e._getStaticBatchBakedVertexs = function(e, t) {
                var n, i, r = this._vertexBuffer,
                    a = r.vertexDeclaration,
                    o = a.getVertexElementByUsage(0).offset / 4,
                    s = a.getVertexElementByUsage(3).offset / 4,
                    l = t.meshRender.lightmapScaleOffset,
                    h = 0,
                    _ = 0,
                    u = 0,
                    c = 0,
                    d = 0,
                    f = 0;
                if (l)
                    if (i = a.getVertexElementByUsage(15)) u = a.vertexStride / 4, n = 0 < this._vertexCount ? r.getData().slice(this._vertexStart * u, (this._vertexStart + this._vertexCount) * u) : r.getData().slice(), c = i.offset / 4;
                    else {
                        u = (f = a.vertexStride / 4) + 2, n = this._vertexCount ? new Float32Array(this._vertexCount * (r.vertexDeclaration.vertexStride / 4 + 2)) : new Float32Array(r.vertexCount * (r.vertexDeclaration.vertexStride / 4 + 2)), c = (d = a.getVertexElementByUsage(2).offset / 4) + 2;
                        var m = r.getData();
                        for (h = 0, _ = m.length / f; h < _; h++) {
                            var p = 0;
                            p = 0 < this._vertexCount ? (this._vertexStart + h) * f : h * f;
                            var v = h * u,
                                g = 0;
                            for (g = 0; g < c; g++) n[v + g] = m[p + g];
                            for (g = c; g < f; g++) n[v + g + 2] = m[p + g]
                        }
                    }
                else u = a.vertexStride / 4, n = this._vertexCount ? r.getData().slice(this._vertexStart * u, (this._vertexStart + this._vertexCount) * u) : r.getData().slice();
                if (e) {
                    var E = e.worldMatrix,
                        S = y._tempMatrix4x40;
                    E.invert(S);
                    var D = y._tempMatrix4x41,
                        T = t.transform.worldMatrix;
                    At.multiply(S, T, D)
                } else D = t.transform.worldMatrix;
                var x = y._tempQuaternion0;
                for (D.decomposeTransRotScale(y._tempVector30, x, y._tempVector31), h = 0, _ = n.length / u; h < _; h++) {
                    var M = h * u + o,
                        R = h * u + s;
                    if (qt.transformVector3ArrayToVector3ArrayCoordinate(n, M, D, n, M), qt.transformVector3ArrayByQuat(n, R, x, n, R), l) {
                        var A = h * u + c;
                        if (i) qt.transformLightingMapTexcoordByUV1Array(n, A, l, n, A);
                        else {
                            var I = h * f + d;
                            qt.transformLightingMapTexcoordByUV0Array(m, I, l, n, A)
                        }
                    }
                }
                return n
            }, e._getVertexBuffers = function() {
                return null
            }, e._beforeRender = function(e) {
                return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0
            }, e._render = function(e) {
                var t, n = 0,
                    i = e.renderElement;
                if (1 < this._indexCount) {
                    var r = this._boneIndicesList.length;
                    if (1 < r) {
                        for (var a = 0; a < r; a++)(t = i._skinAnimationDatas || this._skinAnimationDatas) && (i._shaderValue.setValue(0, t[a]), e._shader.uploadRenderElementUniforms(i._shaderValue.data)), w.mainContext.drawElements(4, this._subIndexBufferCount[a], 5123, 2 * this._subIndexBufferStart[a]);
                        R.drawCall += r
                    } else(t = i._skinAnimationDatas || this._skinAnimationDatas) && (i._shaderValue.setValue(0, t[0]), e._shader.uploadRenderElementUniforms(i._shaderValue.data)), w.mainContext.drawElements(4, this._indexCount, 5123, 2 * this._indexStart), R.drawCall++;
                    n = this._indexCount
                } else n = this._indexBuffer.indexCount, (t = i._skinAnimationDatas || this._skinAnimationDatas) && (i._shaderValue.setValue(0, t[0]), e._shader.uploadRenderElementUniforms(i._shaderValue.data)), w.mainContext.drawElements(4, n, 5123, 0), R.drawCall++;
                R.trianglesFaces += n / 3
            }, e.getIndices = function() {
                return 0 < this._indexCount ? this._indices : this._indexBuffer.getData()
            }, e.dispose = function() {
                this._indexBuffer.destroy(), this._vertexBuffer.destroy(), this._mesh = null, this._boneIndicesList = null, this._subIndexBufferStart = null, this._subIndexBufferCount = null, this._skinAnimationDatas = null, this._bufferUsage = null, this._vertexBuffer = null, this._indexBuffer = null
            }, g(0, e, "_vertexBufferCount", function() {
                return 1
            }), g(0, e, "triangleCount", function() {
                return this._indexBuffer.indexCount / 3
            }), u(y, ["_tempVector30", function() {
                return this._tempVector30 = new Vt
            }, "_tempVector31", function() {
                return this._tempVector31 = new Vt
            }, "_tempQuaternion0", function() {
                return this._tempQuaternion0 = new Ct
            }, "_tempMatrix4x40", function() {
                return this._tempMatrix4x40 = new At
            }, "_tempMatrix4x41", function() {
                return this._tempMatrix4x41 = new At
            }]), y
        }(),
        Bt = function() {
            function e(e) {
                this.defineCounter = 0, this.defines = null, e ? (this.defineCounter = e.defineCounter, this.defines = e.defines.slice()) : (this.defineCounter = 0, this.defines = [])
            }
            return m(e, "t_tl.d3.shader.ShaderDefines", null, "ShaderDefines$1"), e.prototype.registerDefine = function(e) {
                var t = Math.pow(2, this.defineCounter++);
                return this.defines[t] = e, t
            }, e
        }(),
        Ut = function() {
            function e() {}
            return m(e, "t_tl.d3.shader.ShaderInit3D"), e.__init__ = function() {
                var e, t;
                un._globalRegDefine("HIGHPRECISION", un.SHADERDEFINE_HIGHPRECISION), un._globalRegDefine("FOG", un.SHADERDEFINE_FOG), un._globalRegDefine("DIRECTIONLIGHT", un.SHADERDEFINE_DIRECTIONLIGHT), un._globalRegDefine("POINTLIGHT", un.SHADERDEFINE_POINTLIGHT), un._globalRegDefine("SPOTLIGHT", un.SHADERDEFINE_SPOTLIGHT), un._globalRegDefine("UV", un.SHADERDEFINE_UV0), un._globalRegDefine("COLOR", un.SHADERDEFINE_COLOR), un._globalRegDefine("UV1", un.SHADERDEFINE_UV1), un._globalRegDefine("CASTSHADOW", Gt.SHADERDEFINE_CAST_SHADOW), un._globalRegDefine("SHADOWMAP_PSSM1", Gt.SHADERDEFINE_SHADOW_PSSM1), un._globalRegDefine("SHADOWMAP_PSSM2", Gt.SHADERDEFINE_SHADOW_PSSM2), un._globalRegDefine("SHADOWMAP_PSSM3", Gt.SHADERDEFINE_SHADOW_PSSM3), un._globalRegDefine("SHADOWMAP_PCF_NO", Gt.SHADERDEFINE_SHADOW_PCF_NO), un._globalRegDefine("SHADOWMAP_PCF1", Gt.SHADERDEFINE_SHADOW_PCF1), un._globalRegDefine("SHADOWMAP_PCF2", Gt.SHADERDEFINE_SHADOW_PCF2), un._globalRegDefine("SHADOWMAP_PCF3", Gt.SHADERDEFINE_SHADOW_PCF3), un._globalRegDefine("DEPTHFOG", un.SAHDERDEFINE_DEPTHFOG), Bn.addInclude("LightHelper.glsl", "\nstruct DirectionLight\n{\n vec3 Direction;\n vec3 Diffuse;\n};\n\nstruct PointLight\n{\n vec3 Diffuse;\n vec3 Attenuation;\n vec3 Position;\n float Range;\n};\n\nstruct SpotLight\n{\n vec3 Diffuse;\n vec3 Attenuation;\n vec3 Position;\n vec3 Direction;\n float Spot;\n float Range;\n};\n\n\nvec3 NormalSampleToWorldSpace(vec3 normalMapSample, vec3 unitNormal, vec3 tangent)\n{\n\tvec3 normalT = 2.0*normalMapSample - 1.0;\n\n\t// Build orthonormal basis.\n\tvec3 N = normalize(unitNormal);\n\tvec3 T = normalize(tangent- dot(tangent, N)*N);\n\tvec3 B = cross(T, N);\n\n\tmat3 TBN = mat3(T, B, N);\n\n\t// Transform from tangent space to world space.\n\tvec3 bumpedNormal = TBN*normalT;\n\n\treturn bumpedNormal;\n}\n\n\nvoid  computeDirectionLight(in vec3 matDif,in vec3 matAmb,in vec4 matSpe,in DirectionLight dirLight,in vec3 ambinentColor,in vec3 normal,in vec3 toEye,out vec3 dif,out vec3 amb,out vec3 spec)\n{\n\tdif=vec3(0.0);//不初始化在IOS中闪烁，PC中不会闪烁\n\tamb=vec3(0.0);\n\tspec=vec3(0.0);\n\tvec3 lightVec=-normalize(dirLight.Direction);\n\t\n\tamb=matAmb*ambinentColor;\n\t\n\tfloat  diffuseFactor=dot(lightVec, normal);\n\t\n\tif(diffuseFactor>0.0)\n\t{\n\t   vec3 v = reflect(-lightVec, normal);\n\t   float specFactor = pow(max(dot(v, toEye), 0.0), matSpe.w);\n\t   \n\t   dif = diffuseFactor * matDif * dirLight.Diffuse;\n\t   spec = specFactor * matSpe.rgb;\n\t}\n\t\n}\n\nvoid computePointLight(in vec3 matDif,in vec3 matAmb,in vec4 matSpe,in PointLight poiLight,in vec3 ambinentColor, in vec3 pos,in vec3 normal,in vec3 toEye,out vec3 dif,out vec3 amb,out vec3 spec)\n{\n\tdif=vec3(0.0);\n\tamb=vec3(0.0);\n\tspec=vec3(0.0);\n\tvec3 lightVec = poiLight.Position - pos;\n\t\t\n\tfloat d = length(lightVec);\n\t\n\tif( d > poiLight.Range )\n\t\treturn;\n\t\t\n\tlightVec /= d; \n\t\n\tamb = matAmb*ambinentColor;\t\n\n\tfloat diffuseFactor = dot(lightVec, normal);\n\n\tif( diffuseFactor > 0.0 )\n\t{\n\t\tvec3 v= reflect(-lightVec, normal);\n\t\tfloat specFactor = pow(max(dot(v, toEye), 0.0), matSpe.w);\n\t\t\t\t\t\n\t\tdif = diffuseFactor * matDif * poiLight.Diffuse;\n\t\tspec = specFactor * matSpe.rgb;\n\t}\n\n\tfloat attenuate = 1.0 / dot(poiLight.Attenuation, vec3(1.0, d, d*d));\n\n\tdif *= attenuate;\n\tspec*= attenuate;\n}\n\nvoid ComputeSpotLight(in vec3 matDif,in vec3 matAmb,in vec4 matSpe,in SpotLight spoLight,in vec3 ambinentColor,in vec3 pos, in vec3 normal,in vec3 toEye,out vec3 dif,out vec3 amb,out vec3 spec)\n{\n\tamb = vec3(0.0);\n\tdif =vec3(0.0);\n\tspec= vec3(0.0);\n\tvec3 lightVec = spoLight.Position - pos;\n\t\t\n\tfloat d = length(lightVec);\n\t\n\tif( d > spoLight.Range)\n\t\treturn;\n\t\t\n\tlightVec /= d; \n\t\n\tamb = matAmb*ambinentColor;\t\n\n\tfloat diffuseFactor = dot(lightVec, normal);\n\n\tif(diffuseFactor > 0.0)\n\t{\n\t\tvec3 v= reflect(-lightVec, normal);\n\t\tfloat specFactor = pow(max(dot(v, toEye), 0.0), matSpe.w);\n\t\t\t\t\t\n\t\tdif = diffuseFactor * matDif * spoLight.Diffuse;\n\t\tspec = specFactor * matSpe.rgb;\n\t}\n\t\n\tfloat spot = pow(max(dot(-lightVec, normalize(spoLight.Direction)), 0.0), spoLight.Spot);\n\n\tfloat attenuate = spot/dot(spoLight.Attenuation, vec3(1.0, d, d*d));\n\n\tamb *= spot;\n\tdif *= attenuate;\n\tspec*= attenuate;\n}\n\n"), Bn.addInclude("Lighting.glsl", "\nstruct DirectionLight\n{\n\tvec3 Color;\n\tvec3 Direction;\n};\n\nstruct PointLight\n{\n\tvec3 Color;\n\tvec3 Position;\n\tfloat Range;\n};\n\nstruct SpotLight\n{\n\tvec3 Color;\n\tvec3 Position;\n\tvec3 Direction;\n\tfloat Spot;\n\tfloat Range;\n};\n\n// U3D中使用衰减纹理,此函数模拟并非正确\n//float U3DAttenuation(in vec3 L,in float invLightRadius)\n//{\n//\tfloat fRatio = clamp(length(L) * invLightRadius,0.0,1.0);\n//\tfRatio *= fRatio;\n//\treturn 1.0 / (1.0 + 25.0 * fRatio)* clamp(4.0*(1.0 - fRatio),0.0,1.0); //fade to black as if 4 pixel texture\n//} \n\n// Same as Just Cause 2 and Crysis 2 (you can read GPU Pro 1 book for more information)\nfloat BasicAttenuation(in vec3 L,in float invLightRadius)\n{\n\tvec3 distance = L * invLightRadius;\n\tfloat attenuation = clamp(1.0 - dot(distance, distance),0.0,1.0); // Equals float attenuation = saturate(1.0f - dot(L, L) / (lightRadius *  lightRadius)); \t\n\treturn attenuation * attenuation;\n} \n\n// Inspired on http://fools.slindev.com/viewtopic.php?f=11&t=21&view=unread#unread\t\nfloat NaturalAttenuation(in vec3 L,in float invLightRadius)\n{\n\tfloat attenuationFactor = 30.0;\n\tvec3 distance = L * invLightRadius;\n\tfloat attenuation = dot(distance, distance); // Equals float attenuation = dot(L, L) / (lightRadius *  lightRadius);\n\tattenuation = 1.0 / (attenuation * attenuationFactor + 1.0);\n\t// Second we move down the function therewith it reaches zero at abscissa 1:\n\tattenuationFactor = 1.0 / (attenuationFactor + 1.0); //attenuationFactor contains now the value we have to subtract\n\tattenuation = max(attenuation - attenuationFactor, 0.0); // The max fixes a bug.\n\t// Finally we expand the equation along the y-axis so that it starts with a function value of 1 again.\n\tattenuation /= 1.0 - attenuationFactor;\n\treturn attenuation;\n} \n\nvoid LayaAirBlinnPhongLight (in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir,in vec3 lightColor, in vec3 lightVec,out vec3 diffuseColor,out vec3 specularColor)\n{\n    mediump vec3 h = normalize(viewDir-lightVec);\n    lowp float ln = max (0.0, dot (-lightVec,normal));\n    float nh = max (0.0, dot (h,normal));\n\tdiffuseColor=lightColor * ln;\n\tspecularColor=lightColor *specColor*pow (nh, specColorIntensity*128.0) * gloss;\n}\n\nvoid LayaAirBlinnPhongDiectionLight (in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir, in DirectionLight light,out vec3 diffuseColor,out vec3 specularColor)\n{\n\tvec3 lightVec=normalize(light.Direction);\n\tLayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.Color,lightVec,diffuseColor,specularColor);\n}\n\nvoid LayaAirBlinnPhongPointLight (in vec3 pos,in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir, in PointLight light,out vec3 diffuseColor,out vec3 specularColor)\n{\n\tvec3 lightVec =  pos-light.Position;\n\t//if( length(lightVec) > light.Range )\n\t//\treturn;\n\tLayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.Color,lightVec/length(lightVec),diffuseColor,specularColor);\n\tfloat attenuate = BasicAttenuation(lightVec, 1.0/light.Range);\n\tdiffuseColor *= attenuate;\n\tspecularColor*= attenuate;\n}\n\nvoid LayaAirBlinnPhongSpotLight (in vec3 pos,in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir, in SpotLight light,out vec3 diffuseColor,out vec3 specularColor)\n{\n\tvec3 lightVec =  pos-light.Position;\n\t//if( length(lightVec) > light.Range )\n\t//\treturn;\n\tvec3 normalLightVec=lightVec/length(lightVec);\n\tLayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.Color,normalLightVec,diffuseColor,specularColor);\n\tfloat spot = pow(max(dot(normalLightVec, normalize(light.Direction)), 0.0), light.Spot);\n\tfloat attenuate = spot*BasicAttenuation(lightVec, 1.0/light.Range);\n\tdiffuseColor *= attenuate;\n\tspecularColor*= attenuate;\n}\n\nvec3 NormalSampleToWorldSpace(vec3 normalMapSample, vec3 unitNormal, vec3 tangent,vec3 binormal)\n{\n\tvec3 normalT =vec3(2.0*normalMapSample.x - 1.0,1.0-2.0*normalMapSample.y,2.0*normalMapSample.z - 1.0);\n\t\n\t// Build orthonormal basis.\n\tvec3 N = normalize(unitNormal);\n\tvec3 T = normalize(tangent);\n\tvec3 B = normalize(binormal);\n\tmat3 TBN = mat3(T, B, N);\n\t\n\t// Transform from tangent space to world space.\n\tvec3 bumpedNormal = TBN*normalT;\n\n\treturn bumpedNormal;\n}\n\n\n"), Bn.addInclude("ShadowHelper.glsl", "uniform sampler2D u_shadowMap1;\nuniform sampler2D u_shadowMap2;\nuniform sampler2D u_shadowMap3;\nuniform vec2\t  u_shadowPCFoffset;\nuniform vec4     u_shadowPSSMDistance;\nvec4 packDepth(const in float depth)\n{\n\tconst vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n\tconst vec4 bitMask\t= vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n\tvec4 res = mod(depth*bitShift*vec4(255), vec4(256))/vec4(255);\n\tres -= res.xxyz * bitMask;\n\treturn res;\n}\nfloat unpackDepth(const in vec4 rgbaDepth)\n{\n\tconst vec4 bitShift = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n\tfloat depth = dot(rgbaDepth, bitShift);\n\treturn depth;\n}\nfloat tex2DPCF( sampler2D shadowMap,vec2 texcoord,vec2 invsize,float zRef )\n{\n\tvec2 texelpos =texcoord / invsize;\n\tvec2 lerps = fract( texelpos );\n\tfloat sourcevals[4];\n\tsourcevals[0] = float( unpackDepth(texture2D(shadowMap,texcoord)) > zRef );\n\tsourcevals[1] = float( unpackDepth(texture2D(shadowMap,texcoord + vec2(invsize.x,0))) > zRef );\n\tsourcevals[2] = float( unpackDepth(texture2D(shadowMap,texcoord + vec2(0,invsize.y))) > zRef );\n\tsourcevals[3] = float( unpackDepth(texture2D(shadowMap,texcoord + vec2(invsize.x, invsize.y) )) > zRef );\n\treturn mix( mix(sourcevals[0],sourcevals[2],lerps.y),mix(sourcevals[1],sourcevals[3],lerps.y),lerps.x );\n}\nfloat getShadowPSSM3( sampler2D shadowMap1,sampler2D shadowMap2,sampler2D shadowMap3,mat4 lightShadowVP[4],vec4 pssmDistance,vec2 shadowPCFOffset,vec3 worldPos,float posViewZ,float zBias )\n{\n\tfloat value = 1.0;\n\tint nPSNum = int(posViewZ>pssmDistance.x);\n\tnPSNum += int(posViewZ>pssmDistance.y);\n\tnPSNum += int(posViewZ>pssmDistance.z);\n\t//真SB,webgl不支持在PS中直接访问数组\n\tmat4 lightVP;\n\tif( nPSNum == 0 )\n\t{\n\t\tlightVP = lightShadowVP[1];\n\t}\n\telse if( nPSNum == 1 )\n\t{\n\t\tlightVP = lightShadowVP[2];\n\t}\n\telse if( nPSNum == 2 )\n\t{\n\t\tlightVP = lightShadowVP[3];\n\t}\n\tvec4 vLightMVPPos = lightVP * vec4(worldPos,1.0);\n\t//为了效率，在CPU计算/2.0 + 0.5\n\t//vec3 vText = (vLightMVPPos.xyz / vLightMVPPos.w)/2.0 + 0.5;\n\tvec3 vText = vLightMVPPos.xyz / vLightMVPPos.w;\n\tfloat fMyZ = vText.z - zBias;\n\t/*\n\tbvec4 bInFrustumVec = bvec4 ( vText.x >= 0.0, vText.x <= 1.0, vText.y >= 0.0, vText.y <= 1.0 );\n\tbool bInFrustum = all( bInFrustumVec );\n\tbvec2 bFrustumTestVec = bvec2( bInFrustum, fMyZ <= 1.0 );\n\tbool bFrustumTest = all( bFrustumTestVec );\n\tif ( bFrustumTest ) \n\t*/\n\tif( fMyZ <= 1.0 )\n\t{\n\t\tfloat zdepth=0.0;\n#ifdef SHADOWMAP_PCF3\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue =  tex2DPCF( shadowMap1, vText.xy,shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.xy),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.x,0),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(0,shadowPCFOffset.y),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue = value/4.0;\n\t\t} \n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap3,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF2\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap3,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n\n#endif\n#ifdef SHADOWMAP_PCF1\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap2,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap3,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF_NO\n\t\tvec4 color;\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap1,vText.xy );\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap2,vText.xy );\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap3,vText.xy );\n\t\t}\n\t\tzdepth = unpackDepth(color);\n\t\tvalue = float(fMyZ < zdepth);\n#endif\n\t}\n\treturn value;\n}\nfloat getShadowPSSM2( sampler2D shadowMap1,sampler2D shadowMap2,mat4 lightShadowVP[4],vec4 pssmDistance,vec2 shadowPCFOffset,vec3 worldPos,float posViewZ,float zBias )\n{\n\tfloat value = 1.0;\n\tint nPSNum = int(posViewZ>pssmDistance.x);\n\tnPSNum += int(posViewZ>pssmDistance.y);\n\t//真SB,webgl不支持在PS中直接访问数组\n\tmat4 lightVP;\n\tif( nPSNum == 0 )\n\t{\n\t\tlightVP = lightShadowVP[1];\n\t}\n\telse if( nPSNum == 1 )\n\t{\n\t\tlightVP = lightShadowVP[2];\n\t}\n\tvec4 vLightMVPPos = lightVP * vec4(worldPos,1.0);\n\t//为了效率，在CPU计算/2.0 + 0.5\n\t//vec3 vText = (vLightMVPPos.xyz / vLightMVPPos.w)/2.0 + 0.5;\n\tvec3 vText = vLightMVPPos.xyz / vLightMVPPos.w;\n\tfloat fMyZ = vText.z - zBias;\n\t/*\n\tbvec4 bInFrustumVec = bvec4 ( vText.x >= 0.0, vText.x <= 1.0, vText.y >= 0.0, vText.y <= 1.0 );\n\tbool bInFrustum = all( bInFrustumVec );\n\tbvec2 bFrustumTestVec = bvec2( bInFrustum, fMyZ <= 1.0 );\n\tbool bFrustumTest = all( bFrustumTestVec );\n\tif ( bFrustumTest ) \n\t*/\n\tif( fMyZ <= 1.0 )\n\t{\n\t\tfloat zdepth=0.0;\n#ifdef SHADOWMAP_PCF3\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue =  tex2DPCF( shadowMap1, vText.xy,shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.xy),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.x,0),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(0,shadowPCFOffset.y),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue = value/4.0;\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF2\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF1\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap2,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF_NO\n\t\tvec4 color;\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap1,vText.xy );\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap2,vText.xy );\n\t\t}\n\t\tzdepth = unpackDepth(color);\n\t\tvalue = float(fMyZ < zdepth);\n#endif\n\t}\n\treturn value;\n}\nfloat getShadowPSSM1( sampler2D shadowMap1,vec4 lightMVPPos,vec4 pssmDistance,vec2 shadowPCFOffset,float posViewZ,float zBias )\n{\n\tfloat value = 1.0;\n\tif( posViewZ < pssmDistance.x )\n\t{\n\t\tvec3 vText = lightMVPPos.xyz / lightMVPPos.w;\n\t\tfloat fMyZ = vText.z - zBias;\n\t\t/*\n\t\tbvec4 bInFrustumVec = bvec4 ( vText.x >= 0.0, vText.x <= 1.0, vText.y >= 0.0, vText.y <= 1.0 );\n\t\tbool bInFrustum = all( bInFrustumVec );\n\t\tbvec2 bFrustumTestVec = bvec2( bInFrustum, fMyZ <= 1.0 );\n\t\tbool bFrustumTest = all( bFrustumTestVec );\n\t\t*/\n\t\tif ( fMyZ <= 1.0 ) \n\t\t{\n\t\t\tfloat zdepth=0.0;\n#ifdef SHADOWMAP_PCF3\n\t\t\tvalue =  tex2DPCF( shadowMap1, vText.xy,shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.xy),shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.x,0),shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(0,shadowPCFOffset.y),shadowPCFOffset,fMyZ );\n\t\t\tvalue = value/4.0;\n#endif\n#ifdef SHADOWMAP_PCF2\t\t\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n#endif\n#ifdef SHADOWMAP_PCF1\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n#endif\n#ifdef SHADOWMAP_PCF_NO\t\t\n\t\t\tvec4 color = texture2D( shadowMap1,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n#endif\n\t\t}\n\t}\n\treturn value;\n}"), Bn.addInclude("WaveFunction.glsl", "\nuniform vec2 u_WaveInfoD[20];\nuniform vec4 u_WaveInfo[20];\n\nuniform float TEXWAVE_UV_SCALE ;//= 20.0; //每texwidth像素代表的实际距离\n/**\n\t这里的计算都是\n*/\n\n/**\n* 计算一个波形\n*  开始计算的时候都按照z向上，最后输出的时候，颠倒一下。\n* @param tm {float} 毫秒\n*/\nvoid calcGerstnerWave(float curtm, vec3 pos, float deep, vec2 uvpos, out vec3 opos, out vec3 B, out vec3 T, out vec3 N, out float foamS){\n\tfloat tm = curtm/1000.;\n\topos = pos;\n\tvec3 wpos=vec3(0.);\t\t//累加的位置\n\tN=vec3(0.,0.,0.);\t//输出的法线初始化一下\n\tT=vec3(0.,0.,0.);\n\tB=vec3(0.,0.,0.);\n\tvec2 cD ;//= D;\n\t//float deepAtt = max(0.,min(deep,1.0));\n\t//A*=deepAtt; //TODO\n\t\n\tfor( int i=0; i<4; i++){\n\t\tcD = u_WaveInfoD[i];//vec2(wi.winfo[0],wi.winfo[1]);// wi.vDir;\n\t\tfloat Q = u_WaveInfo[i].x;//wi.QorK;\n\t\tfloat A = u_WaveInfo[i].y;//wi.A;\n\t\tfloat W = u_WaveInfo[i].z;//wi.omega;\n\t\tfloat P = u_WaveInfo[i].w;//wi.phi;\n\t\tfloat dop = dot(cD,uvpos);\n\t\tfloat c = cos(dop*W - tm*P);//TODO 优化\n\t\tfloat s = sin(dop*W - tm*P);\n\t\tfloat AWs = A*W*s;\n\t\tfloat AWc = A*W*c;\n\t\tfloat _QxyAWs = -Q*cD.x*cD.y*AWs;\n\t\t\n\t\twpos += vec3(Q*A*cD.x*c,\n\t\t\t\t\tQ*A*cD.y*c,\n\t\t\t\t\tA*s);\n\t\tN += vec3(-cD.x*AWc,\n\t\t\t\t-cD.y*AWc,\n\t\t\t\tQ*AWs);//记得最后1-\n\t\tT += vec3(_QxyAWs,\n\t\t\t\tQ*cD.y*cD.y*AWs,//记得1-\n\t\t\t\tcD.y*AWc\n\t\t\t);\n\t\tB += vec3(Q*cD.x*cD.x*AWs,//记得1-\n\t\t\t\t_QxyAWs,\n\t\t\t\tcD.x*AWc\n\t\t\t);\n\t\t//float v1 = exp(-tan((dop*W - tm*P)/2.+1.07));//除2，+pi/2 这样正好能对齐\n#ifdef USE_FOAM\t\t\n\t\tfloat v1 = 0.5-sin((dop*W - tm*P)/1.+2.0)/2.;\n\t\tfoamS += pow(v1,9.)/4.;\n#endif\n\t}\n\tT.y=1.-T.y; B.x=1.-B.x;N.z=1.-N.z;\n\topos += vec3(wpos.x,wpos.z*min(deep/10.,1.),wpos.y);\n\t//y和z交换一下。现在根据uv计算的位置，所以直接交换yz就行。其他情况下有问题么\n\tT.xyz=T.xzy;\n\tB.xyz=B.xzy;\n\tN.xyz=N.xzy;\n}\n\n\nvoid calcWave(float curtm, vec2 uv, out vec3 B, out vec3 T, out vec3 N){\n\tfloat tm = curtm/1000.;\n\tN=vec3(0.,0.,0.);\t//输出的法线初始化一下\n\tvec2 uvpos = uv*TEXWAVE_UV_SCALE; //TODO 这个范围是什么 就是1？\n\tuvpos.y*=-1.;\n\tvec2 cD;// = D;\n\tconst int NumWaves = 4;\n\tfloat scale = 1./float(NumWaves);\n\tfor( int i=0; i<NumWaves; i++){\n\t\tcD = u_WaveInfoD[i];//vec2(wi.winfo[0],wi.winfo[1]);// wi.vDir;\n\t\tfloat k = 1.5;//u_WaveInfo[i].x;//wi.QorK; TODO  不知道为什么，这个取u_WaveInfo[i].x，在mi3w上就会闪。测试发现实际值也传过来了，就是1.5\n\t\tfloat A = u_WaveInfo[i].y;//wi.A;\n\t\tfloat W = u_WaveInfo[i].z;//wi.omega;\n\t\tfloat P = u_WaveInfo[i].w;//wi.phi;\n\t\t\n\t\tfloat dop = dot(cD,uvpos);\n\t\tfloat c = cos(dop*W - tm*P);//TODO 优化\n\t\tfloat s = sin(dop*W - tm*P);\n\t\t/*\n\t\tfloat AWs = A*W*s;\n\t\tfloat AWc = A*W*c;\n\t\tfloat _QxyAWs = -Q*cD.x*cD.y*AWs;\n\t\t\n\t\tN += vec3(-cD.x*AWc,\n\t\t\t\t-cD.y*AWc,\n\t\t\t\tQ*AWs);//记得最后1-\n\t\t*/\n\t\tfloat kWAc = scale*c;//k*W*A*c;  为了提高精度，这里只保留sin，cos部分，实际使用的时候再乘回来。\n\t\t//float kWAc = k*W*A*c;  \n\t\tN += vec3(\n\t\t\t-kWAc*cD.x*pow((s+1.)/2.,k-1.),\n\t\t\t-kWAc*cD.y*pow((s+1.)/2.,k-1.),\n\t\t\t1.\n\t\t);\n\t}\n\t//N.z=1.-N.z;\n\t//y和z交换一下。现在根据uv计算的位置，所以直接交换yz就行。其他情况下有问题么\n\tN.xyz=N.xzy;\n}\n"), Bn.addInclude("BRDF.glsl", "vec4 LayaAirBRDF(in vec3 diffuseColor, in vec3 specularColor, in float oneMinusReflectivity, in float smoothness, in vec3 normal, in vec3 viewDir, in vec3 lightDir, in vec3 lightColor, in vec3 gi)\n{\n\tfloat perceptualRoughness = SmoothnessToPerceptualRoughness(smoothness);\n\tvec3 halfDir = SafeNormalize(viewDir - lightDir);\n\t\n\tfloat nv = abs(dot(normal, viewDir));\n\t\n\tfloat nl = clamp(dot(normal,   -lightDir),  0.0, 1.0);\n\tfloat nh = clamp(dot(normal,     halfDir),  0.0, 1.0);\n\tfloat lv = clamp(dot(lightDir,   viewDir),  0.0, 1.0);\n\tfloat lh = clamp(dot(lightDir,  -halfDir),  0.0, 1.0);\n\t\n\tfloat diffuseTerm = DisneyDiffuse(nv, nl, lh, perceptualRoughness) * nl;\n\t\n\tfloat roughness = PerceptualRoughnessToRoughness(perceptualRoughness);\n\t\n\t//#if UNITY_BRDF_GGX\n\tfloat V = SmithJointGGXVisibilityTerm(nl, nv, roughness);\n\tfloat D = GGXTerm(nh, roughness);\n\t\n\tfloat specularTerm = V * D * PI;\n\t\n\tspecularTerm = sqrt(max(0.0001, specularTerm));\n\tspecularTerm = max(0.0, specularTerm * nl);\n\t\n\tvec4 color;\n\tcolor.rgb = diffuseColor * (gi + lightColor * diffuseTerm) + specularTerm * lightColor * FresnelTerm (specularColor, lh);\n\t\n\tcolor.a = 1.0;\n\treturn color;\n}"), Bn.addInclude("PBRUtils.glsl", "struct DirectionLight\n{\n\tvec3 Color;\n\tvec3 Direction;\n};\n\nvec3 UnpackScaleNormal(in vec2 uv0)\n{\n\t#ifdef NORMALTEXTURE\n\t\tvec3 normalT;\n\t\tvec4 normalMapSample = texture2D(u_NormalTexture, uv0);\n\t\tnormalT.x = 2.0 * normalMapSample.x - 1.0;\n\t\tnormalT.y = 1.0 - 2.0 * normalMapSample.y;\n\t\tnormalT.xy *= u_normalScale;\n\t\tnormalT.z = sqrt(1.0 - clamp(dot(normalT.xy, normalT.xy), 0.0, 1.0));\n\t\t\n\t\tvec3 T = normalize(v_Tangent);\n\t\tvec3 B = normalize(v_Binormal);\n\t\tvec3 N = normalize(v_Normal);\n\t\tmat3 TBN = mat3(T, B, N);\n\t\t\n\t\tvec3 bumpedNormal = TBN * normalize(normalT);\n\t\treturn bumpedNormal;\n\t#else\n\t\treturn normalize(v_Normal);\n\t#endif\n}\n\nvec4 DielectricSpecularColor = vec4(0.220916301, 0.220916301, 0.220916301, 1.0 - 0.220916301);\n\nfloat PI = 3.14159265359;\n\nvec3 FresnelTerm (in vec3 F0, in float cosA)\n{\n\treturn F0 + (vec3(1.0) - F0) * pow(1.0 - cosA, 5.0);\n}\n\nfloat PerceptualRoughnessToRoughness(in float perceptualRoughness)\n{\n\treturn perceptualRoughness * perceptualRoughness;\n}\n\nfloat PerceptualRoughnessToSpecularPower(in float perceptualRoughness)\n{\n\tfloat m = PerceptualRoughnessToRoughness(perceptualRoughness);\n\tfloat sq = max(0.0001, m * m);\n\tfloat n = (2.0 / sq) - 2.0;\n\tn = max(n, 0.0001);\n\treturn n;\n}\n\nfloat RoughnessToPerceptualRoughness(in float roughness)\n{\n\treturn sqrt(roughness);\n}\n\nfloat SmoothnessToRoughness(in float smoothness)\n{\n\treturn (1.0 - smoothness) * (1.0 - smoothness);\n}\n\nfloat SmoothnessToPerceptualRoughness(in float smoothness)\n{\n\treturn (1.0 - smoothness);\n}\n\nvec3 SafeNormalize(in vec3 inVec)\n{\n\tfloat dp3 = max(0.001,dot(inVec,inVec));\n\treturn inVec * (1.0 / sqrt(dp3));\n}\n\nfloat DisneyDiffuse(in float NdotV, in float NdotL, in float LdotH, in float perceptualRoughness)\n{\n\tfloat fd90 = 0.5 + 2.0 * LdotH * LdotH * perceptualRoughness;\n\tfloat lightScatter\t= (1.0 + (fd90 - 1.0) * pow(1.0 - NdotL,5.0));\n\tfloat viewScatter\t= (1.0 + (fd90 - 1.0) * pow(1.0 - NdotV,5.0));\n\n\treturn lightScatter * viewScatter;\n}\n\nfloat SmithJointGGXVisibilityTerm (float NdotL, float NdotV, float roughness)\n{\n\tfloat a = roughness;\n\tfloat lambdaV = NdotL * (NdotV * (1.0 - a) + a);\n\tfloat lambdaL = NdotV * (NdotL * (1.0 - a) + a);\n\n\treturn 0.5 / (lambdaV + lambdaL + 0.00001);\n}\n\nfloat GGXTerm (float NdotH, float roughness)\n{\n\tfloat a2 = roughness * roughness;\n\tfloat d = (NdotH * a2 - NdotH) * NdotH + 1.0;\n\treturn 0.31830988618 * a2 / (d * d + 0.0000001);\n}\n\nfloat OneMinusReflectivityFromMetallic(in float metallic)\n{\n\tfloat oneMinusDielectricSpec = DielectricSpecularColor.a;\n\treturn oneMinusDielectricSpec - metallic * oneMinusDielectricSpec;\n}\n\nfloat SpecularStrength(vec3 specular)\n{\n    //(SHADER_TARGET < 30)return specular.r; \n    return max (max (specular.r, specular.g), specular.b);\n}\n\nvec3 DiffuseAndSpecularFromMetallic(in vec3 diffuseColor, in float metallic, out vec3 specularColor, out float oneMinusReflectivity)\n{\n\tspecularColor = mix(DielectricSpecularColor.rgb, diffuseColor, metallic);\n\toneMinusReflectivity = OneMinusReflectivityFromMetallic(metallic);\n\treturn diffuseColor * oneMinusReflectivity;\n}\n\nvec3 EnergyConservationBetweenDiffuseAndSpecular(in vec3 diffuseColor, in vec3 specularColor, out float oneMinusReflectivity)\n{\n\toneMinusReflectivity = 1.0 - SpecularStrength(specularColor);\n\treturn diffuseColor * oneMinusReflectivity;\n}\n\nvec4 Occlusion(in vec2 uv0){\n\t#ifdef OCCLUSIONTEXTURE\n\t\tvec4 occlusionTextureColor = texture2D(u_OcclusionTexture, uv0);\n\t\tfloat occ = occlusionTextureColor.g;\n\t\tfloat oneMinusT = 1.0 - u_occlusionStrength;\n\t\tfloat lerpOneTo = oneMinusT + occ * u_occlusionStrength;\n\t\treturn occlusionTextureColor * lerpOneTo;\n\t#else\n\t\treturn vec4(1.0);\n\t#endif\n}\n\nvec2 ParallaxOffset(in vec3 viewDir){\n\t#ifdef PARALLAXTEXTURE\n\t\tfloat h = texture2D(u_ParallaxTexture, v_Texcoord0).g;\n\t\th = h * u_parallaxScale - u_parallaxScale / 2.0;\n\t\tvec3 v = viewDir;\n\t\tv.z += 0.42;\n\t\tvec2 offset = h * (v.xy / v.z);\n\t\treturn v_Texcoord0 + offset;\n\t#else\n\t\treturn v_Texcoord0;\n\t#endif\n}\n\n"), Bn.addInclude("PBRStandardLighting.glsl", '#include "PBRUtils.glsl"\n#include "BRDF.glsl"\n\nvec4 PBRStandardLight(in vec3 diffuseColor, in float metallic, in float smoothness, in vec3 normal, in vec3 viewDir, in vec3 lightDir, in vec3 lightColor, in vec3 gi)\n{\n\tfloat oneMinusReflectivity;\n\tvec3 specularColor;\n\tdiffuseColor = DiffuseAndSpecularFromMetallic (diffuseColor, metallic, specularColor, oneMinusReflectivity);\n\t\n\tvec4 color = LayaAirBRDF(diffuseColor, specularColor, oneMinusReflectivity, smoothness, normal, viewDir, lightDir, lightColor, gi);\n\treturn color;\n}\n\nvec4 PBRStandardDiectionLight (in vec3 diffuseColor, in float metallic, in float smoothness, in vec3 normal, in vec3 viewDir, in DirectionLight light, in vec3 gi)\n{\n\tvec3 lightVec = normalize(light.Direction);\n\treturn PBRStandardLight(diffuseColor, metallic, smoothness, normal, viewDir, lightVec, light.Color, gi);\n}\n\nvec2 MetallicGloss(in float diffuseTextureAlpha, in vec2 uv0)\n{\n\tvec2 mg;\n\t\n\t#ifdef METALLICGLOSSTEXTURE\n\t\tvec4 metallicGlossTextureColor = texture2D(u_MetallicGlossTexture, uv0);\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tmg.r = metallicGlossTextureColor.r;\n\t\t\tmg.g = diffuseTextureAlpha;\n\t\t#else\n\t\t    mg = metallicGlossTextureColor.ra;\n\t\t#endif\n\t\tmg.g *= u_smoothnessScale;\n\t#else\n\t\tmg.r = u_metallic;\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tmg.g = diffuseTextureAlpha * u_smoothnessScale;\n\t\t#else\n\t\t\tmg.g = u_smoothness;\n\t\t#endif\n\t#endif\n\t\n\treturn mg;\n}\n\n'), Bn.addInclude("PBRSpecularLighting.glsl", '#include "PBRUtils.glsl"\n#include "BRDF.glsl"\n\nvec4 PBRSpecularLight(in vec3 diffuseColor, in vec3 specularColor, in float smoothness, in vec3 normal, in vec3 viewDir, in vec3 lightDir, in vec3 lightColor, in vec3 gi)\n{\n\tfloat oneMinusReflectivity;\n\tdiffuseColor = EnergyConservationBetweenDiffuseAndSpecular (diffuseColor, specularColor, oneMinusReflectivity);\n\t\n\tvec4 color = LayaAirBRDF(diffuseColor, specularColor, oneMinusReflectivity, smoothness, normal, viewDir, lightDir, lightColor, gi);\n\treturn color;\n}\n\nvec4 PBRSpecularDiectionLight (in vec3 diffuseColor, in vec3 specularColor, in float smoothness, in vec3 normal, in vec3 viewDir, in DirectionLight light, in vec3 gi)\n{\n\tvec3 lightVec = normalize(light.Direction);\n\treturn PBRSpecularLight(diffuseColor, specularColor, smoothness, normal, viewDir, lightVec, light.Color, gi);\n}\n\nvec4 SpecularGloss(float diffuseTextureAlpha, in vec2 uv0)\n{\n    vec4 sg;\n\t\n\t#ifdef SPECULARTEXTURE\n\t\tvec4 specularTextureColor = texture2D(u_SpecularTexture, uv0);\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tsg.rgb = specularTextureColor.rgb;\n\t\t\tsg.a = diffuseTextureAlpha;\n\t\t#else\n\t\t\tsg = specularTextureColor;\n\t\t#endif\n\t\tsg.a *= u_smoothnessScale;\n\t#else\n\t\tsg.rgb = u_SpecularColor.rgb;\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tsg.a = diffuseTextureAlpha * u_smoothnessScale;\n\t\t#else\n\t\t\tsg.a = u_smoothness;\n\t\t#endif\n\t#endif\n\t\n    return sg;\n}\n\n');
                var n = {
                        a_Position: 0,
                        a_Color: 1,
                        a_Normal: 3,
                        a_Texcoord0: 2,
                        a_Texcoord1: 15,
                        a_BoneWeights: 7,
                        a_BoneIndices: 6,
                        a_Tangent0: 5
                    },
                    i = {
                        u_Bones: [0, 0],
                        u_DiffuseTexture: [1, 1],
                        u_SpecularTexture: [3, 1],
                        u_NormalTexture: [2, 1],
                        u_ReflectTexture: [5, 1],
                        u_AlphaTestValue: [0, 1],
                        u_DiffuseColor: [6, 1],
                        u_MaterialSpecular: [8, 1],
                        u_Shininess: [9, 1],
                        u_MaterialReflect: [10, 1],
                        u_TilingOffset: [11, 1],
                        u_WorldMat: [0, 2],
                        u_MvpMatrix: [1, 2],
                        u_LightmapScaleOffset: [2, 2],
                        u_LightMap: [3, 2],
                        u_CameraPos: [0, 3],
                        u_FogStart: [1, 4],
                        u_FogRange: [2, 4],
                        u_FogColor: [0, 4],
                        "u_DirectionLight.Color": [4, 4],
                        "u_DirectionLight.Direction": [3, 4],
                        "u_PointLight.Position": [5, 4],
                        "u_PointLight.Range": [6, 4],
                        "u_PointLight.Color": [8, 4],
                        "u_SpotLight.Position": [9, 4],
                        "u_SpotLight.Direction": [10, 4],
                        "u_SpotLight.Range": [12, 4],
                        "u_SpotLight.Spot": [11, 4],
                        "u_SpotLight.Color": [14, 4],
                        u_AmbientColor: [21, 4],
                        u_shadowMap1: [18, 4],
                        u_shadowMap2: [19, 4],
                        u_shadowMap3: [20, 4],
                        u_shadowPSSMDistance: [15, 4],
                        u_lightShadowVP: [16, 4],
                        u_shadowPCFoffset: [17, 4]
                    },
                    r = Bn.nameKey.add("BLINNPHONG");
                e = 'attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))||(defined(LIGHTMAP)&&defined(UV))\n\tattribute vec2 a_Texcoord0;\n\tvarying vec2 v_Texcoord0;\n#endif\n\n#if defined(LIGHTMAP)&&defined(UV1)\n\tattribute vec2 a_Texcoord1;\n#endif\n\n#ifdef LIGHTMAP\n\tuniform vec4 u_LightmapScaleOffset;\n\tvarying vec2 v_LightMapUV;\n#endif\n\n#ifdef COLOR\n\tattribute vec4 a_Color;\n\tvarying vec4 v_Color;\n#endif\n\n#ifdef BONE\n\tconst int c_MaxBoneCount = 24;\n\tattribute vec4 a_BoneIndices;\n\tattribute vec4 a_BoneWeights;\n\tuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tattribute vec3 a_Normal;\n\tvarying vec3 v_Normal; \n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tuniform vec3 u_CameraPos;\n\tvarying vec3 v_ViewDir; \n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP))&&defined(NORMALMAP)\n\tattribute vec4 a_Tangent0;\n\tvarying vec3 v_Tangent;\n\tvarying vec3 v_Binormal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\tuniform mat4 u_WorldMat;\n\tvarying vec3 v_PositionWorld;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvoid main_castShadow()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position=skinTransform*a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\t \n\t//TODO没考虑UV动画呢\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tv_Texcoord0=a_Texcoord0;\n\t#endif\n\t\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position=skinTransform*a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\t\tmat3 worldMat;\n\t\t#ifdef BONE\n\t\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t\t#else\n\t\t\tworldMat=mat3(u_WorldMat);\n\t\t#endif  \n\t\tv_Normal=worldMat*a_Normal;//TODO:法线可以用"魔法"矩阵\n\t\t#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\t\tv_Tangent=worldMat*a_Tangent0.xyz;\n\t\t\tv_Binormal=cross(v_Normal,v_Tangent)*a_Tangent0.w;\n\t\t#endif\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\t\t#ifdef BONE\n\t\t\tv_PositionWorld=(u_WorldMat*position).xyz;\n\t\t#else\n\t\t\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n\t\t#endif\n\t#endif\n\t\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\t\tv_ViewDir=u_CameraPos-v_PositionWorld;\n\t#endif\n\n\t#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\n\t\tv_Texcoord0=a_Texcoord0;\n\t\t#ifdef TILINGOFFSET\n\t\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t\t\tv_Texcoord0=vec2(v_Texcoord0.x,1.0+v_Texcoord0.y);\n\t\t#endif\n\t#endif\n\n\t#ifdef LIGHTMAP\n\t\t#ifdef SCALEOFFSETLIGHTINGMAPUV\n\t\t\t#ifdef UV1\n\t\t\t\tv_LightMapUV=vec2(a_Texcoord1.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,1.0+a_Texcoord1.y*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n\t\t\t#else\n\t\t\t\tv_LightMapUV=vec2(a_Texcoord0.x,a_Texcoord0.y-1.0)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\n\t\t\t#endif \n\t\t#else\n\t\t\t#ifdef UV1\n\t\t\t\tv_LightMapUV=a_Texcoord1;\n\t\t\t#else\n\t\t\t\tv_LightMapUV=a_Texcoord0;\n\t\t\t#endif \n\t\t#endif \n\t#endif\n\n\t#ifdef COLOR\n\t\tv_Color=a_Color;\n\t#endif\n\n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1 \n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif\n}', t = '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#include "Lighting.glsl";\n\nuniform vec4 u_DiffuseColor;\n\n#ifdef COLOR\n\tvarying vec4 v_Color;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tvarying vec3 v_ViewDir; \n#endif\n\n#ifdef ALPHATEST\n\tuniform float u_AlphaTestValue;\n#endif\n\n#ifdef DIFFUSEMAP\n\tuniform sampler2D u_DiffuseTexture;\n#endif\n\n#ifdef REFLECTMAP\n\tuniform samplerCube u_ReflectTexture;\n\tuniform vec3 u_MaterialReflect;\n#endif\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\n\tvarying vec2 v_Texcoord0;\n#endif\n\n#ifdef LIGHTMAP\n\tvarying vec2 v_LightMapUV;\n\tuniform sampler2D u_LightMap;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tuniform vec3 u_MaterialSpecular;\n\tuniform float u_Shininess;\n\t#ifdef SPECULARMAP \n\t\tuniform sampler2D u_SpecularTexture;\n\t#endif\n#endif\n\n#ifdef FOG\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\t#ifdef ADDTIVEFOG\n\t#else\n\t\tuniform vec3 u_FogColor;\n\t#endif\n#endif\n\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tvarying vec3 v_Normal;\n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\tuniform sampler2D u_NormalTexture;\n\tvarying vec3 v_Tangent;\n\tvarying vec3 v_Binormal;\n#endif\n\n#ifdef DIRECTIONLIGHT\n\tuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\n\tuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\n\tuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n\n#if defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#include "ShadowHelper.glsl"\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nvoid main_castShadow()\n{\n\t//gl_FragColor=vec4(v_posViewZ,0.0,0.0,1.0);\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\nvoid main_normal()\n{\n\tvec4 mainColor=u_DiffuseColor;\n\t#ifdef DIFFUSEMAP\n\t\tvec4 difTexColor=texture2D(u_DiffuseTexture, v_Texcoord0);\n\t\tmainColor=mainColor*difTexColor;\n\t#endif \n\t#ifdef COLOR\n\t\tmainColor=mainColor*v_Color;\n\t#endif \n    \n\t#ifdef ALPHATEST\n\t\tif(mainColor.a<u_AlphaTestValue)\n\t\t\tdiscard;\n\t#endif\n  \n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\t\tvec3 normal;\n\t\t#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\t\tvec3 normalMapSample = texture2D(u_NormalTexture, v_Texcoord0).rgb;\n\t\t\tnormal = normalize(NormalSampleToWorldSpace(normalMapSample, v_Normal, v_Tangent,v_Binormal));\n\t\t#else\n\t\t\tnormal = normalize(v_Normal);\n\t\t#endif\n\t#endif\n\t\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tvec3 viewDir= normalize(v_ViewDir);\n\t\tvec3 diffuse = vec3(0.0);\n\t\tvec3 specular= vec3(0.0);\n\t\tvec3 dif,spe;\n\t\t#ifdef SPECULARMAP\n\t\t\tvec3 gloss=texture2D(u_SpecularTexture, v_Texcoord0).rgb;\n\t\t#else\n\t\t\t#ifdef DIFFUSEMAP\n\t\t\t\tvec3 gloss=vec3(difTexColor.a);\n\t\t\t#else\n\t\t\t\tvec3 gloss=vec3(1.0);\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\n\t\n\t#ifdef DIRECTIONLIGHT\n\t\tLayaAirBlinnPhongDiectionLight(u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_DirectionLight,dif,spe);\n\t\tdiffuse+=dif;\n\t\tspecular+=spe;\n\t#endif\n \n\t#ifdef POINTLIGHT\n\t\tLayaAirBlinnPhongPointLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_PointLight,dif,spe);\n\t\tdiffuse+=dif;\n\t\tspecular+=spe;\n\t#endif\n\n\t#ifdef SPOTLIGHT\n\t\tLayaAirBlinnPhongSpotLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_SpotLight,dif,spe);\n\t\tdiffuse+=dif;\n\t\tspecular+=spe;\n\t#endif\n\n\t\n\tvec3 finalDiffuse;\n\t#ifdef LIGHTMAP\n\t\tfinalDiffuse=texture2D(u_LightMap, v_LightMapUV).rgb*2.0;\n\t\t//float exponent = texture2D(u_LightMap, v_LightMapUV).a;\n\t\t//finalDiffuse = texture2D(u_LightMap, v_LightMapUV).rgb;\n\t\t//float ratio = pow(2.0, exponent * 255.0 - (128.0 + 8.0));\n\t\t//finalDiffuse = finalDiffuse * 255.0 * ratio;\t\n\t\t//finalDiffuse = sqrt(finalDiffuse);\n\t#else\n\t\tfinalDiffuse=vec3(0.0);\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tfinalDiffuse+=diffuse;\n\t#endif\n\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t\t#endif\n\t\tgl_FragColor =vec4(mainColor.rgb*(u_AmbientColor + finalDiffuse)*shadowValue,mainColor.a);\n\t#else\n\t\tgl_FragColor =vec4(mainColor.rgb*(u_AmbientColor + finalDiffuse),mainColor.a);\n\t#endif\n\t\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\t#ifdef RECEIVESHADOW\n\t\t\tgl_FragColor.rgb+=specular*shadowValue;\n\t\t#else\n\t\t\tgl_FragColor.rgb+=specular;\n\t\t#endif\n\t#endif\n\n\n\t#ifdef REFLECTMAP\n\t\tvec3 incident = -viewDir;\n\t\tvec3 reflectionVector = reflect(incident,normal);\n\t\tvec3 reflectionColor  = textureCube(u_ReflectTexture,reflectionVector).rgb;\n\t\tgl_FragColor.rgb += u_MaterialReflect*reflectionColor;\n\t#endif\n\t  \n\t#ifdef FOG\n\t\tfloat lerpFact=clamp((1.0/gl_FragCoord.w-u_FogStart)/u_FogRange,0.0,1.0);\n\t\t#ifdef ADDTIVEFOG\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\n\t\t#else\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\t\t\n\t\tmain_castShadow();\n\t#else\n\t  main_normal();\n\t#endif  \n}\n\n';
                var a = un.add(r, e, t, n, i);
                Un.SHADERDEFINE_DIFFUSEMAP = a.registerMaterialDefine("DIFFUSEMAP"), Un.SHADERDEFINE_NORMALMAP = a.registerMaterialDefine("NORMALMAP"), Un.SHADERDEFINE_SPECULARMAP = a.registerMaterialDefine("SPECULARMAP"), Un.SHADERDEFINE_REFLECTMAP = a.registerMaterialDefine("REFLECTMAP"), Un.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), Un.SHADERDEFINE_ADDTIVEFOG = a.registerMaterialDefine("ADDTIVEFOG"), n = {
                    a_Position: 0,
                    a_Color: 1,
                    a_Normal: 3,
                    a_Texcoord0: 2,
                    a_Texcoord1: 15,
                    a_TexcoordNext0: 14,
                    a_BoneWeights: 7,
                    a_BoneIndices: 6,
                    a_Tangent0: 5
                }, i = {
                    u_Bones: [0, 0],
                    u_DiffuseTexture: [1, 1],
                    u_SpecularTexture: [3, 1],
                    u_NormalTexture: [2, 1],
                    u_AmbientTexture: [5, 1],
                    u_ReflectTexture: [6, 1],
                    u_AlphaTestValue: [0, 1],
                    u_Albedo: [7, 1],
                    u_UVMatrix: [13, 1],
                    u_UVAge: [14, 1],
                    u_UVAniAge: [8, 1],
                    u_MaterialDiffuse: [10, 1],
                    u_MaterialAmbient: [9, 1],
                    u_MaterialSpecular: [11, 1],
                    u_MaterialReflect: [12, 1],
                    u_TilingOffset: [15, 1],
                    u_WorldMat: [0, 2],
                    u_MvpMatrix: [1, 2],
                    u_LightmapScaleOffset: [2, 2],
                    u_LightMap: [3, 2],
                    u_CameraPos: [0, 3],
                    u_FogStart: [1, 4],
                    u_FogRange: [2, 4],
                    u_FogColor: [0, 4],
                    "u_DirectionLight.Direction": [3, 4],
                    "u_DirectionLight.Diffuse": [4, 4],
                    "u_PointLight.Position": [5, 4],
                    "u_PointLight.Range": [6, 4],
                    "u_PointLight.Attenuation": [7, 4],
                    "u_PointLight.Diffuse": [8, 4],
                    "u_SpotLight.Position": [9, 4],
                    "u_SpotLight.Direction": [10, 4],
                    "u_SpotLight.Range": [12, 4],
                    "u_SpotLight.Spot": [11, 4],
                    "u_SpotLight.Attenuation": [13, 4],
                    "u_SpotLight.Diffuse": [14, 4],
                    u_AmbientColor: [21, 4],
                    u_shadowMap1: [18, 4],
                    u_shadowMap2: [19, 4],
                    u_shadowMap3: [20, 4],
                    u_shadowPSSMDistance: [15, 4],
                    u_lightShadowVP: [16, 4],
                    u_shadowPCFoffset: [17, 4]
                };
                var o = Bn.nameKey.add("SIMPLE");
                e = "attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\n\n\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(COLOR)&&defined(SPECULARMAP)||defined(NORMALMAP)))||(defined(LIGHTMAP)&&defined(UV))\nattribute vec2 a_Texcoord0;\nvarying vec2 v_Texcoord0;\n  #ifdef UVTRANSFORM \n  uniform mat4 u_UVMatrix;\n  #endif\n#endif\n\n#if defined(AMBIENTMAP)||(defined(LIGHTMAP)&&defined(UV1))\nattribute vec2 a_Texcoord1;\n#endif\n\n#if defined(AMBIENTMAP)||defined(LIGHTMAP)\nuniform vec4 u_LightmapScaleOffset;\nvarying vec2 v_LightMapUV;\n#endif\n\n\n#ifdef COLOR\nattribute vec4 a_Color;\nvarying vec4 v_Color;\n#endif\n\n#ifdef BONE\nattribute vec4 a_BoneIndices;\nattribute vec4 a_BoneWeights;\nconst int c_MaxBoneCount = 24;\nuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\nattribute vec3 a_Normal;\nvarying vec3 v_Normal;\n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP))&&defined(NORMALMAP)\nattribute vec3 a_Tangent0;\nvarying vec3 v_Tangent0;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\nuniform mat4 u_WorldMat;\nvarying vec3 v_PositionWorld;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvoid main_castShadow()\n{\n#ifdef BONE\n\tmat4 skinTransform=mat4(0.0);\n\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\tvec4 position=skinTransform*a_Position;\n\tgl_Position = u_MvpMatrix * position;\n#else\n\tgl_Position = u_MvpMatrix * a_Position;\n#endif\n \n//TODO没考虑UV动画呢\n#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\tv_Texcoord0=a_Texcoord0;\n#endif\n\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n#ifdef BONE\n\tmat4 skinTransform=mat4(0.0);\n\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\tvec4 position=skinTransform*a_Position;\n\tgl_Position = u_MvpMatrix * position;\n#else\n\tgl_Position = u_MvpMatrix * a_Position;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tmat3 worldMat;\n\t#ifdef BONE\n\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t#else\n\t\tworldMat=mat3(u_WorldMat);\n\t#endif  \n\tv_Normal=worldMat*a_Normal;\n\t#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\tv_Tangent0=worldMat*a_Tangent0;\n\t#endif\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\t#ifdef BONE\n\t\tv_PositionWorld=(u_WorldMat*position).xyz;\n\t#else\n\t\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n\t#endif\n#endif\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(COLOR)&&defined(SPECULARMAP)||defined(NORMALMAP)))\n\tv_Texcoord0=a_Texcoord0;\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t\tv_Texcoord0=vec2(v_Texcoord0.x,v_Texcoord0.y+1.0);\n\t#endif\n\t#ifdef UVTRANSFORM\n\t\tv_Texcoord0=(u_UVMatrix*vec4(v_Texcoord0,0.0,1.0)).xy;\n\t#endif\n#endif\n\n#if defined(AMBIENTMAP)||defined(LIGHTMAP)\n\t#ifdef SCALEOFFSETLIGHTINGMAPUV\n\t\t#ifdef UV1\n\t\t\tv_LightMapUV=vec2(a_Texcoord1.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,1.0+a_Texcoord1.y*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n\t\t#else\n\t\t\tv_LightMapUV=vec2(a_Texcoord0.x,a_Texcoord0.y-1.0)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\n\t\t#endif \n\t#else\n\t\t#ifdef UV1\n\t\t\tv_LightMapUV=a_Texcoord1;\n\t\t#else\n\t\t\tv_LightMapUV=a_Texcoord0;\n\t\t#endif \n\t#endif \n#endif\n\n#ifdef COLOR\n\tv_Color=a_Color;\n#endif\n\n#ifdef RECEIVESHADOW\n\tv_posViewZ = gl_Position.w;\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t#endif\n#endif\n}\n\nvoid main()\n{\n#ifdef CASTSHADOW\n\tmain_castShadow();\n#else\n\tmain_normal();\n#endif\n}", t = '#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#include "LightHelper.glsl";\n\nuniform vec4 u_Albedo;\n\n#ifdef ALPHATEST\nuniform float u_AlphaTestValue;\n#endif\n\n#ifdef DIFFUSEMAP\nuniform sampler2D u_DiffuseTexture;\n#endif\n\n#ifdef REFLECTMAP\nuniform samplerCube u_ReflectTexture;\nuniform vec3 u_MaterialReflect;\n#endif\n\n#if   defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(COLOR)&&defined(SPECULARMAP)||defined(NORMALMAP)))\nvarying vec2 v_Texcoord0;\n#endif\n\n#if defined(AMBIENTMAP)||defined(LIGHTMAP)\nvarying vec2 v_LightMapUV;\n#endif\n#ifdef AMBIENTMAP\nuniform sampler2D u_AmbientTexture;\n#endif\n#ifdef LIGHTMAP\nuniform sampler2D u_LightMap;\n#endif\n\n#ifdef COLOR\nvarying vec4 v_Color;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\nuniform vec3 u_MaterialDiffuse;\nuniform vec4 u_MaterialSpecular;\n  #if (defined(DIFFUSEMAP)||defined(COLOR))&&defined(SPECULARMAP) \n  uniform sampler2D u_SpecularTexture;\n  #endif\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(AMBIENTMAP)||defined(LIGHTMAP)\nuniform vec3 u_MaterialAmbient;\n#endif\n\n#if defined(FOG)||defined(DEPTHFOG)\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\t#ifdef ADDTIVEFOG\n\t#else\n\t\tuniform vec3 u_FogColor;\n\t#endif\n#endif\n\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\nvarying vec3 v_Normal;\n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\nuniform sampler2D u_NormalTexture;\nvarying vec3 v_Tangent0;\n#endif\n\n#ifdef DIRECTIONLIGHT\nuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\nuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\nuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)||(defined(RECEIVESHADOW)&&(defined(SHADOWMAP_PSM2)||defined(SHADOWMAP_PSM3)))\nuniform vec3 u_CameraPos;\n#endif\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)\nvarying vec3 v_PositionWorld;\n#endif\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\nvarying float v_posViewZ;\n\n\n\nvoid main_castShadow()\n{\n\t//gl_FragColor=vec4(v_posViewZ,0.0,0.0,1.0);\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\nvoid main_normal()\n{\n#if defined(DIFFUSEMAP)&&!defined(COLOR)\n\tgl_FragColor=texture2D(u_DiffuseTexture, v_Texcoord0);\n#endif \n  \n#if defined(COLOR)&&!defined(DIFFUSEMAP)\n\tgl_FragColor=v_Color;\n#endif \n  \n#if defined(DIFFUSEMAP)&&defined(COLOR)\n\tvec4 texColor=texture2D(u_DiffuseTexture, v_Texcoord0);\n\tgl_FragColor=texColor*v_Color;\n#endif\n  \n#if !defined(DIFFUSEMAP)&&!defined(COLOR)\n\tgl_FragColor=vec4(1.0,1.0,1.0,1.0);\n#endif \n    \n#ifdef ALPHATEST\n\tif(gl_FragColor.a-u_AlphaTestValue<0.0)\n\t\tdiscard;\n#endif\n  \n  \n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tvec3 normal;\n    #if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\tvec3 normalMapSample = texture2D(u_NormalTexture, v_Texcoord0).rgb;\n\t\tnormal = normalize(NormalSampleToWorldSpace(normalMapSample, v_Normal, v_Tangent0));\n\t#else\n\t\tnormal = normalize(v_Normal);\n    #endif\n#endif\n\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tvec3 diffuse = vec3(0.0);\n\tvec3 ambient = vec3(0.0);\n\tvec3 specular= vec3(0.0);\n\tvec3 dif, amb, spe;\n#endif\n  \n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(REFLECTMAP)\n\tvec3 toEye;\n\t#ifdef FOG\n\t\ttoEye=u_CameraPos-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t#else\n\t\ttoEye=normalize(u_CameraPos-v_PositionWorld);\n\t#endif\n#endif\n\t\n#ifdef DIRECTIONLIGHT\n\tcomputeDirectionLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_DirectionLight,u_AmbientColor,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n \n#ifdef POINTLIGHT\n\tcomputePointLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_PointLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef SPOTLIGHT\n\tComputeSpotLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_SpotLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef RECEIVESHADOW\n\tfloat shadowValue = 1.0;\n\t#ifdef SHADOWMAP_PSSM3\n\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif\n\t#ifdef SHADOWMAP_PSSM2\n\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif \n\t#ifdef SHADOWMAP_PSSM1\n\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t#endif\n#endif\n\n#ifdef AMBIENTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_AmbientTexture, v_LightMapUV).rgb); \n\t#else\n\t\t#if defined(RECEIVESHADOW)\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_AmbientTexture, v_LightMapUV).rgb * shadowValue);\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_AmbientTexture, v_LightMapUV).rgb); \n\t\t#endif\n\t#endif\n#endif\n\n#ifdef LIGHTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb); \n\t#else\n\t\t#if defined(RECEIVESHADOW)\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue);\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb); \n\t\t#endif\n\t#endif\n#endif\n\ngl_FragColor=gl_FragColor*u_Albedo;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t#if (defined(DIFFUSEMAP)||defined(COLOR))&&defined(SPECULARMAP)\n\t\tspecular =specular*texture2D(u_SpecularTexture, v_Texcoord0).rgb;\n    #endif\n\t#ifdef RECEIVESHADOW\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse*shadowValue) + specular*shadowValue,gl_FragColor.a);\n\t#else\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse) + specular,gl_FragColor.a);\n\t#endif\n#endif\n  \n#ifdef REFLECTMAP\n\tvec3 incident = -toEye;\n\tvec3 reflectionVector = reflect(incident,normal);\n\tvec3 reflectionColor  = textureCube(u_ReflectTexture,reflectionVector).rgb;\n\tgl_FragColor.rgb += u_MaterialReflect*reflectionColor;\n#endif\n  \n#ifdef FOG\n\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\t#ifdef ADDTIVEFOG\n\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\n\t#else\n\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n\t#endif\n#endif\n#ifdef DEPTHFOG\n\tfloat lerpFact = (-v_PositionWorld.y-u_FogStart)/u_FogRange;\n\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n#endif\n}\n\nvoid main()\n{\n#ifdef CASTSHADOW\t\t\n\tmain_castShadow();\n#else\n  main_normal();\n#endif  \n}\n\n', a = un.add(o, e, t, n, i), Xn.SHADERDEFINE_DIFFUSEMAP = a.registerMaterialDefine("DIFFUSEMAP"), Xn.SHADERDEFINE_NORMALMAP = a.registerMaterialDefine("NORMALMAP"), Xn.SHADERDEFINE_SPECULARMAP = a.registerMaterialDefine("SPECULARMAP"), Xn.SHADERDEFINE_EMISSIVEMAP = a.registerMaterialDefine("EMISSIVEMAP"), Xn.SHADERDEFINE_AMBIENTMAP = a.registerMaterialDefine("AMBIENTMAP"), Xn.SHADERDEFINE_REFLECTMAP = a.registerMaterialDefine("REFLECTMAP"), Xn.SHADERDEFINE_UVTRANSFORM = a.registerMaterialDefine("UVTRANSFORM"), Xn.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), Xn.SHADERDEFINE_ADDTIVEFOG = a.registerMaterialDefine("ADDTIVEFOG"), n = {
                    a_Position: 0,
                    a_Color: 1
                }, i = {
                    u_MvpMatrix: [1, 2]
                };
                var s = Bn.nameKey.add("LINE");
                e = "attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\nattribute vec4 a_Color;\nvarying vec4 v_Color;\n\n\nvoid main()\n{\n  gl_Position = u_MvpMatrix * a_Position;\n  v_Color=a_Color;\n}", t = "#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec4 v_Color;\n\nvoid main()\n{\n  gl_FragColor=v_Color; \n}\n\n", un.add(s, e, t, n, i), n = {
                    a_position: 0,
                    a_normal: 3,
                    tangent: 5,
                    binormal: 4,
                    uv: 2,
                    a_BoneWeights: 7,
                    a_BoneIndices: 6,
                    a_Tangent0: 5
                }, i = {
                    u_Bones: [0, 0],
                    u_lodRect: [9, 3],
                    irrad_mat_red: [10, 3],
                    irrad_mat_green: [11, 3],
                    irrad_mat_blue: [12, 3],
                    u_hdrexposure: [13, 3],
                    u_aoObjPos: [14, 1],
                    texBaseColor: [1, 1],
                    texNormal: [2, 1],
                    texPbrInfo: [3, 1],
                    texPrefilterdEnv: [8, 3],
                    texHSNoise: [15, 1],
                    texPrefilterDiff: [7, 3],
                    u_AlphaTestValue: [0, 1],
                    texBRDFLUT: [4, 1],
                    u_UVAniAge: [5, 1],
                    u_roughness: [6, 1],
                    u_metaless: [7, 1],
                    u_UVMatrix: [8, 1],
                    u_UVAge: [9, 1],
                    modelMatrix: [0, 2],
                    mvp: [1, 2],
                    cameraPosition: [0, 3],
                    u_View: [1, 3],
                    u_Project: [2, 3],
                    u_FogStart: [1, 4],
                    u_FogRange: [2, 4],
                    u_FogColor: [0, 4],
                    "u_DirectionLight.Direction": [3, 4],
                    "u_DirectionLight.Diffuse": [4, 4],
                    "u_PointLight.Position": [5, 4],
                    "u_PointLight.Range": [6, 4],
                    "u_PointLight.Attenuation": [7, 4],
                    "u_PointLight.Diffuse": [8, 4],
                    "u_SpotLight.Position": [9, 4],
                    "u_SpotLight.Direction": [10, 4],
                    "u_SpotLight.Range": [12, 4],
                    "u_SpotLight.Spot": [11, 4],
                    "u_SpotLight.Attenuation": [13, 4],
                    "u_SpotLight.Diffuse": [14, 4],
                    u_shadowMap1: [18, 4],
                    u_shadowMap2: [19, 4],
                    u_shadowMap3: [20, 4],
                    u_shadowPSSMDistance: [15, 4],
                    u_lightShadowVP: [16, 4],
                    u_shadowPCFoffset: [17, 4]
                };
                var l = Bn.nameKey.add("PBR");
                e = "\nuniform mat4 modelMatrix;\n//uniform mat4 modelViewMatrix;\n//uniform mat4 projectionMatrix;\nuniform mat4 u_View;\nuniform mat4 u_Project;\nuniform mat4 mvp;\n//uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n\nattribute vec3 a_position;\nattribute vec3 a_normal;\n#ifdef HAS_TANGENT\nattribute vec3 tangent;\nattribute vec3 binormal;\n#endif\nattribute vec2 uv;\n#ifdef BONE\nattribute vec4 a_BoneIndices;\nattribute vec4 a_BoneWeights;\nconst int c_MaxBoneCount = 24;\nuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\nvarying vec3 vLightDir;\nvarying vec3 vViewDir;\n#ifdef HAS_TANGENT\nvarying vec3 vWorldTangent;\nvarying vec3 vWorldBinormal;\n#endif\n\n#ifdef RECEIVESHADOW\nvarying float v_posViewZ;\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\nvoid main() {\n#ifdef BONE\n\tmat4 skinTransform=mat4(0.0);\n\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\tgl_Position = mvp*skinTransform*vec4(a_position,1.);\n\tmat4 modelMat = modelMatrix*skinTransform;\n#else\n\tgl_Position = mvp*vec4(a_position,1.);\n\tmat4 modelMat = modelMatrix;\n#endif\t\n\tvWorldPos = modelMat*vec4(a_position,1.);\n\n#ifdef CASTSHADOW \n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tvUv = uv;\n\t#endif\t\n#else\n    vUv = uv;\n\tvWorldNorm = normalize((modelMat*vec4(a_normal,0.0)).xyz);\n\t#ifdef HAS_TANGENT\n\tvWorldTangent = normalize((modelMat*vec4(tangent,0.0)).xyz);\n\tvWorldBinormal = normalize((modelMat*vec4(binormal,0.0)).xyz);\n\t#endif\n    \n    vViewDir = (vWorldPos.xyz-cameraPosition);//这个不能normalize。否则无法线性差值了\n#ifdef RECEIVESHADOW\n\tv_posViewZ = gl_Position.z;\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tv_lightMVPPos = u_lightShadowVP[0] * vWorldPos;\n\t#endif\n#endif\t\n#endif\n}\n", t = '//#version 300 es\n\nprecision highp float;\nprecision lowp int;\n\nconst float PI = 3.14159265358979323846264;\nconst float _2PI = 6.2831853071796;\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\n#ifdef HAS_TANGENT\nvarying vec3 vWorldTangent;\nvarying vec3 vWorldBinormal;\n#endif\nvarying vec3 vViewDir;\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\n//\nuniform sampler2D texBaseColor;\nuniform sampler2D texNormal;\n//预计算的贴图\nuniform sampler2D texPrefilterdEnv;\nuniform sampler2D texBRDFLUT;\nuniform sampler2D texPrefilterDiff;\n#ifdef HAS_PBRINFO\nuniform sampler2D texPbrInfo;   //Ao, Roughness, Metallic\n#endif\nuniform float u_hdrexposure;\nuniform float u_AlphaTestValue;\n\nuniform float u_roughness;\nuniform float u_metaless;\nconst float maxlv = 7.;\t//现在只支持512分辨率的环境贴图\nconst int nmaxlv = 9;//\n\t\t\t\t\t\t\t\nuniform mat4 irrad_mat_red;\nuniform mat4 irrad_mat_green;\nuniform mat4 irrad_mat_blue;\t\t\t\t\t\t\t\n\nvec3 speccontrib = vec3(0.);\n\nconst float _maxu8 = 255.0;\nconst float _maxu16 = 65535.0;\nconst float _shift8 = 256.0;    //平移的话是*256而不是255\nvec2 _RGBAToU16(const in vec4 rgba){\n    return vec2((rgba.r*_maxu8+rgba.g*_maxu8*_shift8)/_maxu16, (rgba.b*_maxu8+rgba.a*_maxu8*_shift8)/_maxu16);\n}\nvec3 _RGBEToRGB( const in vec4 rgba ){\n    float f = pow(2.0, rgba.w * 255.0 - (128.0 + 8.0));\n    return rgba.rgb * (255.0 * f);\n}\n\nfloat saturate(float v){\n    return min(max(v,0.),1.);\n}\n\nvec4 tex2dLod(sampler2D tex, float u, float v, float lod){\n\tvec2 uv = vec2(u,v);\n\tuv+=mod(gl_FragCoord.xy-vec2(0.5),2.0)*vec2(128.,0.);\n\treturn texture2D(tex,uv,lod-16.);\n}\n\n/*\n* 对一个全景图进行采样。假设x轴指向中心。\n*/\nvec4 texPanorama(sampler2D tex, const in vec3 dir){\n\tfloat envu = atan(dir.z,dir.x)/_2PI+0.5; \t\n\tfloat envv = acos(dir.y)/PI;//(1.0-dir.y)/2.0;\n\treturn texture2D(tex,vec2(envu,envv));\n}\n\nvec4 texPanoramaLod(sampler2D tex, const in vec3 dir, float lod){\n\tfloat envu = atan(dir.z,dir.x)/_2PI+0.5; \t\n\tfloat envv = acos(dir.y)/PI;//(1.0-dir.y)/2.0;\n\treturn tex2dLod(tex,envu,envv,lod);\n}\n\n/*\n    计算sh光照。\n    使用level=2，所以需要9个系数。\n    https://cseweb.ucsd.edu/~ravir/papers/envmap/envmap.pdf\n*/\nfloat environment_exposure = 1.0;\nvec3 diff_sh9(vec3 dir){\n\tvec4 shDir = vec4(dir.x,-dir.z,dir.y,1.0);\n  return max(vec3(0.0), vec3(\n\tdot(shDir, irrad_mat_red * shDir),\n\tdot(shDir, irrad_mat_green * shDir),\n\tdot(shDir, irrad_mat_blue * shDir)\n\t)) * environment_exposure;\t\n}\n\n#ifdef HAS_TANGENT\nvec3 applyNormalTex( vec3 norm, vec3 surf_norm ) {\n    vec3 mapN = norm * 2.0 - 1.0;\n    //mapN.xy = normalScale * mapN.xy;\n    mat3 tsn = mat3( vWorldTangent, vWorldBinormal, surf_norm );\n    return normalize( tsn * mapN );\n}\n#endif\n\nvec4 pbrlight(vec3 normal, float rough, float NoV, vec3 R){\n    vec4 basecolor = texture2D(texBaseColor,vUv);\n\tbasecolor.rgb = pow(basecolor.rgb,vec3(2.2));\n\tfloat metaless = 1.0; \t\n\tconst float ismetalinfov = (128./255.);\n\tif(basecolor.a>=ismetalinfov){//这时候表示金属度\n\t\tmetaless = (basecolor.a-ismetalinfov)*2.;\n\t\tbasecolor.a = 1.0;\n\t}else{\n\t\tmetaless = 0.;\n\t\tbasecolor.a = basecolor.a*2.0;\n\t}\n\t#ifdef FIX_METALESS\n\tmetaless = u_metaless;\n\t#endif\n\t#ifdef HAS_PBRINFO\t\n\tvec4 pbrinfo = texture2D(texPbrInfo, vUv);\n\tmetaless = pbrinfo.b;\n\trough = pbrinfo.g;\n\t#endif\n    const vec3 nonmetalF0 =vec3(0.02);\n    vec3 F0 =  mix(nonmetalF0, basecolor.rgb, metaless);\n\t\n    vec4 PrefilteredColor = texPanoramaLod(texPrefilterdEnv, R, rough*maxlv);\n    PrefilteredColor.rgb = _RGBEToRGB(PrefilteredColor);\n    vec4 EnvBRDF = texture2D(texBRDFLUT,vec2(rough , NoV));//TODO lod\n    vec2 rg = _RGBAToU16(EnvBRDF);    \n    speccontrib = (F0* rg.x + saturate( 50.0 * PrefilteredColor.g ) * rg.y);\n\tvec3 color_spec = PrefilteredColor.rgb*speccontrib;\n\t\n\tvec3 color_diff=diff_sh9(normal);\n\tvec3 outc =  color_diff*mix(basecolor.rgb,vec3(0.),metaless)*(vec3(1.0)-speccontrib)+color_spec;\n\t#ifdef HAS_PBRINFO\n\toutc*=pbrinfo.r;\n\t#endif\n\treturn vec4(outc, basecolor.a);\n}\n\nvec3 oldlight(vec4 normal, float NoV, vec3 R){\n    vec4 basecolor = texture2D(texBaseColor,vUv);\n\tconst vec3 lightdir=normalize(vec3(1.,1.,0.));\n\tconst vec3 spcecol = vec3(1.,0.8,0.8);\n\tconst vec3 amb = vec3(0.5);\n\tvec3 diffv =  (vec3(saturate(dot(lightdir,normal.xyz)))+amb);\n\t//vec3 spec = spcecol* pow(saturate(dot(R,lightdir)),(1.-pbrinfo.g)*5.);\n\treturn diffv*basecolor.rgb;//+spec;\n}\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\nvarying float v_posViewZ;\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nvoid main() {\n#ifdef CASTSHADOW\n\tgl_FragColor=packDepth(gl_FragCoord.w);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(texBaseColor,vUv).w;\n\t\tif( alpha < u_AlphaTestValue ){\n\t\t\tdiscard;\n\t\t}\n\t#endif\n#else\n\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,vWorldPos.xyz,v_posViewZ,0.0001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,vWorldPos.xyz,v_posViewZ,0.0001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.0001);\n\t\t#endif\n\t#endif\t\n\t\n    vec3 normal =  normalize(vWorldNorm);\n\tvec4 normtex = texture2D( texNormal, vUv );\n\t#ifdef HAS_TANGENT\t\n\tnormal = applyNormalTex(normtex.xyz, normal);\n\t#endif\n    vec3 view   = -normalize(vViewDir);\n    float NoV = saturate(dot( view, normal ));\n    vec3 R = 2. * NoV * normal - view;\n\tfloat roughness = normtex.a;\n\t#ifdef FIX_ROUGHNESS\n\troughness = u_roughness;\n\t#endif\n\t\n\tvec4 pbrl = pbrlight(normal,roughness,NoV,R)*u_hdrexposure;\n    gl_FragColor.rgb =  pow(pbrl.rgb,vec3(0.45455));\n\t//gl_FragColor.rgb = oldlight(normtex,NoV,R);\n\t#ifdef RECEIVESHADOW\n\tgl_FragColor.rgb *= max(shadowValue,0.7);\n\t#endif\n\t\n    gl_FragColor.a = pbrl.a;\n\n#endif\n}\n', a = un.add(l, e, t, n, i), zn.SHADERDEFINE_FIX_METALESS = a.registerMaterialDefine("FIX_METALESS"), zn.SHADERDEFINE_FIX_ROUGHNESS = a.registerMaterialDefine("FIX_ROUGHNESS"), zn.SHADERDEFINE_HAS_TANGENT = a.registerMaterialDefine("HAS_TANGENT"), zn.SHADERDEFINE_HAS_PBRINFO = a.registerMaterialDefine("HAS_PBRINFO"), zn.SHADERDEFINE_USE_GROUNDTRUTH = a.registerMaterialDefine("USE_GROUNDTRUTH"), zn.SHADERDEFINE_TEST_CLIPZ = a.registerMaterialDefine("CLIPZ"), n = {
                    a_Position: 0,
                    a_Normal: 3,
                    a_Tangent0: 5,
                    a_Texcoord0: 2,
                    a_BoneWeights: 7,
                    a_BoneIndices: 6
                }, i = {
                    u_Bones: [0, 0],
                    u_MvpMatrix: [1, 2],
                    u_WorldMat: [0, 2],
                    u_CameraPos: [0, 3],
                    u_AlphaTestValue: [0, 1],
                    u_DiffuseColor: [7, 1],
                    u_EmissionColor: [8, 1],
                    u_DiffuseTexture: [1, 1],
                    u_NormalTexture: [3, 1],
                    u_ParallaxTexture: [4, 1],
                    u_MetallicGlossTexture: [2, 1],
                    u_OcclusionTexture: [5, 1],
                    u_EmissionTexture: [6, 1],
                    u_metallic: [9, 1],
                    u_smoothness: [10, 1],
                    u_smoothnessScale: [11, 1],
                    u_occlusionStrength: [13, 1],
                    u_normalScale: [14, 1],
                    u_parallaxScale: [15, 1],
                    u_TilingOffset: [17, 1],
                    "u_DirectionLight.Direction": [3, 4],
                    "u_DirectionLight.Color": [4, 4],
                    u_AmbientColor: [21, 4],
                    u_shadowMap1: [18, 4],
                    u_shadowMap2: [19, 4],
                    u_shadowMap3: [20, 4],
                    u_shadowPSSMDistance: [15, 4],
                    u_lightShadowVP: [16, 4],
                    u_shadowPCFoffset: [17, 4]
                };
                var h = Bn.nameKey.add("PBRStandard");
                e = "attribute vec4 a_Position;\nattribute vec3 a_Normal;\nattribute vec4 a_Tangent0;\nattribute vec2 a_Texcoord0;\n\nuniform mat4 u_MvpMatrix;\nuniform mat4 u_WorldMat;\nuniform vec3 u_CameraPos;\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\nvarying vec3 v_PositionWorld;\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n\t  varying vec4 v_lightMVPPos;\n\t  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef BONE\n\tconst int c_MaxBoneCount = 24;\n\tattribute vec4 a_BoneIndices;\n\tattribute vec4 a_BoneWeights;\n\tuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\nvoid main_castShadow()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\t \n\t//TODO没考虑UV动画呢\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tv_Texcoord0 = a_Texcoord0;\n\t#endif\n\t\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n\tmat3 worldMat;\n\t#ifdef BONE\n\t\tmat4 skinTransform = mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t\tv_PositionWorld = (u_WorldMat * position).xyz;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t\tworldMat = mat3(u_WorldMat);\n\t\tv_PositionWorld = (u_WorldMat * a_Position).xyz;\n\t#endif\n\t\n\tv_Normal = worldMat * a_Normal;\n\tv_Tangent = worldMat * a_Tangent0.xyz;\n\tv_Binormal = cross(v_Normal, v_Tangent) * a_Tangent0.w;\n  \n\tv_Texcoord0 = a_Texcoord0;\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t#endif\n\t\tv_Texcoord0=vec2(v_Texcoord0.x,1.0 + v_Texcoord0.y);\n  \n\tv_ViewDir = u_CameraPos - v_PositionWorld;\n  \n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1 \n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif\n}", t = '#ifdef FSHIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\n\nuniform vec4 u_AmbientColor;\nuniform vec4 u_DiffuseColor;\n\n#ifdef DIFFUSETEXTURE\n\tuniform sampler2D u_DiffuseTexture;\n#endif\n#ifdef METALLICGLOSSTEXTURE\n\tuniform sampler2D u_MetallicGlossTexture;\n#endif\n#ifdef NORMALTEXTURE\n\tuniform sampler2D u_NormalTexture;\n\tuniform float u_normalScale;\n#endif\n#ifdef PARALLAXTEXTURE\n\tuniform sampler2D u_ParallaxTexture;\n\tuniform float u_parallaxScale;\n#endif\n#ifdef OCCLUSIONTEXTURE\n\tuniform sampler2D u_OcclusionTexture;\n\tuniform float u_occlusionStrength;\n#endif\n#ifdef EMISSION\n\t#ifdef EMISSIONTEXTURE\n\t\tuniform sampler2D u_EmissionTexture;\n\t#endif\n\tuniform vec4 u_EmissionColor;\n#endif\n\nuniform float u_AlphaTestValue;\nuniform float u_metallic;\nuniform float u_smoothness;\nuniform float u_smoothnessScale;\n\n#include "PBRStandardLighting.glsl"\n#include "ShadowHelper.glsl"\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nuniform DirectionLight u_DirectionLight;\n\nvoid main_castShadow()\n{\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\n\nvoid main_normal()\n{\t\n\tvec3 viewDir = normalize(v_ViewDir);\n\t\n\tvec2 uv0 = ParallaxOffset(viewDir);\n\t\n\tvec2 mg;\n\t#ifdef DIFFUSETEXTURE\n\t\tvec4 diffuseTextureColor = texture2D(u_DiffuseTexture, uv0);\n\t\tvec4 diffuseColor = diffuseTextureColor * u_DiffuseColor;\n\t\tmg = MetallicGloss(diffuseTextureColor.a, uv0);\n\t#else\n\t\tvec4 diffuseColor = u_DiffuseColor;\n\t\tmg = MetallicGloss(1.0, uv0);\n\t#endif\n\t\n\t#ifdef ALPHATEST\n\t\tif(diffuseColor.a < u_AlphaTestValue)\n\t\t\tdiscard;\n\t#endif\n\t\n\tgl_FragColor = diffuseColor;\n\t\n\tvec3 normal = UnpackScaleNormal(uv0);\n  \n\tvec3 gi = (u_AmbientColor * Occlusion(uv0)).rgb;\n  \n\tvec4 color = PBRStandardDiectionLight(diffuseColor.rgb, mg.r, mg.g, normal, viewDir, u_DirectionLight, gi);\n\t\n\tcolor.a = diffuseColor.a;\n\t\n\t#ifdef EMISSION\n\t\tvec4 emissionColor = u_EmissionColor;\n\t\t#ifdef EMISSIONTEXTURE\n\t\t\temissionColor *=  texture2D(u_EmissionTexture, uv0);\n\t\t#endif\n\t\tcolor.rgb += emissionColor.rgb;\n\t#endif\n\t\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t\t#endif\n\t\tgl_FragColor = vec4(color.rgb * shadowValue, color.a);\n\t#else\n\t\tgl_FragColor = color;\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\t\t\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif  \n}\n\n', a = un.add(h, e, t, n, i), Wn.SHADERDEFINE_DIFFUSETEXTURE = a.registerMaterialDefine("DIFFUSETEXTURE"), Wn.SHADERDEFINE_METALLICGLOSSTEXTURE = a.registerMaterialDefine("METALLICGLOSSTEXTURE"), Wn.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = a.registerMaterialDefine("SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA"), Wn.SHADERDEFINE_NORMALTEXTURE = a.registerMaterialDefine("NORMALTEXTURE"), Wn.SHADERDEFINE_PARALLAXTEXTURE = a.registerMaterialDefine("PARALLAXTEXTURE"), Wn.SHADERDEFINE_OCCLUSIONTEXTURE = a.registerMaterialDefine("OCCLUSIONTEXTURE"), Wn.SHADERDEFINE_EMISSION = a.registerMaterialDefine("EMISSION"), Wn.SHADERDEFINE_EMISSIONTEXTURE = a.registerMaterialDefine("EMISSIONTEXTURE"), Wn.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), n = {
                    a_Position: 0,
                    a_Normal: 3,
                    a_Tangent0: 5,
                    a_Texcoord0: 2,
                    a_BoneWeights: 7,
                    a_BoneIndices: 6
                }, i = {
                    u_Bones: [0, 0],
                    u_MvpMatrix: [1, 2],
                    u_WorldMat: [0, 2],
                    u_CameraPos: [0, 3],
                    u_AlphaTestValue: [0, 1],
                    u_DiffuseColor: [7, 1],
                    u_SpecularColor: [8, 1],
                    u_EmissionColor: [9, 1],
                    u_DiffuseTexture: [1, 1],
                    u_NormalTexture: [3, 1],
                    u_ParallaxTexture: [4, 1],
                    u_SpecularTexture: [2, 1],
                    u_OcclusionTexture: [5, 1],
                    u_EmissionTexture: [6, 1],
                    u_smoothness: [10, 1],
                    u_smoothnessScale: [11, 1],
                    u_occlusionStrength: [13, 1],
                    u_normalScale: [14, 1],
                    u_parallaxScale: [15, 1],
                    u_TilingOffset: [17, 1],
                    "u_DirectionLight.Direction": [3, 4],
                    "u_DirectionLight.Color": [4, 4],
                    u_AmbientColor: [21, 4],
                    u_shadowMap1: [18, 4],
                    u_shadowMap2: [19, 4],
                    u_shadowMap3: [20, 4],
                    u_shadowPSSMDistance: [15, 4],
                    u_lightShadowVP: [16, 4],
                    u_shadowPCFoffset: [17, 4]
                };
                var _ = Bn.nameKey.add("PBRSpecular");
                e = "attribute vec4 a_Position;\nattribute vec3 a_Normal;\nattribute vec4 a_Tangent0;\nattribute vec2 a_Texcoord0;\n\nuniform mat4 u_MvpMatrix;\nuniform mat4 u_WorldMat;\nuniform vec3 u_CameraPos;\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\nvarying vec3 v_PositionWorld;\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n\t  varying vec4 v_lightMVPPos;\n\t  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef BONE\n\tconst int c_MaxBoneCount = 24;\n\tattribute vec4 a_BoneIndices;\n\tattribute vec4 a_BoneWeights;\n\tuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\nvoid main_castShadow()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\t \n\t//TODO没考虑UV动画呢\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tv_Texcoord0 = a_Texcoord0;\n\t#endif\n\t\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n\tmat3 worldMat;\n\t#ifdef BONE\n\t\tmat4 skinTransform = mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t\tv_PositionWorld = (u_WorldMat * position).xyz;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t\tworldMat = mat3(u_WorldMat);\n\t\tv_PositionWorld = (u_WorldMat * a_Position).xyz;\n\t#endif\n\t\n\tv_Normal = worldMat * a_Normal;\n\tv_Tangent = worldMat * a_Tangent0.xyz;\n\tv_Binormal = cross(v_Normal, v_Tangent) * a_Tangent0.w;\n  \n\tv_Texcoord0 = a_Texcoord0;\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t#endif\n\t\tv_Texcoord0=vec2(v_Texcoord0.x,1.0 + v_Texcoord0.y);\n  \n\tv_ViewDir = u_CameraPos - v_PositionWorld;\n  \n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1 \n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif\n}", t = '#ifdef FSHIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\n\nuniform vec4 u_AmbientColor;\nuniform vec4 u_DiffuseColor;\nuniform vec4 u_SpecularColor;\n\n#ifdef DIFFUSETEXTURE\n\tuniform sampler2D u_DiffuseTexture;\n#endif\n#ifdef SPECULARTEXTURE\n\tuniform sampler2D u_SpecularTexture;\n#endif\n#ifdef NORMALTEXTURE\n\tuniform sampler2D u_NormalTexture;\n\tuniform float u_normalScale;\n#endif\n#ifdef PARALLAXTEXTURE\n\tuniform sampler2D u_ParallaxTexture;\n\tuniform float u_parallaxScale;\n#endif\n#ifdef OCCLUSIONTEXTURE\n\tuniform sampler2D u_OcclusionTexture;\n\tuniform float u_occlusionStrength;\n#endif\n#ifdef EMISSION\n\t#ifdef EMISSIONTEXTURE\n\t\tuniform sampler2D u_EmissionTexture;\n\t#endif\n\tuniform vec4 u_EmissionColor;\n#endif\n\nuniform float u_AlphaTestValue;\nuniform float u_metallic;\nuniform float u_smoothness;\nuniform float u_smoothnessScale;\n\n#include "PBRSpecularLighting.glsl"\n#include "ShadowHelper.glsl"\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nuniform DirectionLight u_DirectionLight;\n\nvoid main_castShadow()\n{\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\n\nvoid main_normal()\n{\t\n\tvec3 viewDir = normalize(v_ViewDir);\n\t\n\tvec2 uv0 = ParallaxOffset(viewDir);\n\t\n\tvec4 sg;\n\t#ifdef DIFFUSETEXTURE\n\t\tvec4 diffuseTextureColor = texture2D(u_DiffuseTexture, uv0);\n\t\tvec4 diffuseColor = diffuseTextureColor * u_DiffuseColor;\n\t\tsg = SpecularGloss(diffuseTextureColor.a, uv0);\n\t#else\n\t\tvec4 diffuseColor = u_DiffuseColor;\n\t\tsg = SpecularGloss(1.0, uv0);\n\t#endif\n\t\n\t#ifdef ALPHATEST\n\t\tif(diffuseColor.a < u_AlphaTestValue)\n\t\t\tdiscard;\n\t#endif\n  \n\tvec3 normal = UnpackScaleNormal(uv0);\n\t\n\tvec3 gi = (u_AmbientColor * Occlusion(uv0)).rgb;\n\t\n\t//float a = (sg.r+sg.g+sg.b) / 3.0;\n  \n\tvec4 color = PBRSpecularDiectionLight(diffuseColor.rgb, sg.rgb, sg.a, normal,viewDir, u_DirectionLight, gi);\n\t\n\tcolor.a = diffuseColor.a;\n\t\n\t#ifdef EMISSION\n\t\tvec4 emissionColor = u_EmissionColor;\n\t\t#ifdef EMISSIONTEXTURE\n\t\t\temissionColor *=  texture2D(u_EmissionTexture, uv0);\n\t\t#endif\n\t\tcolor.rgb += emissionColor.rgb;\n\t#endif\n\t\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t\t#endif\n\t\tgl_FragColor = vec4(color.rgb * shadowValue, color.a);\n\t#else\n\t\tgl_FragColor = color;\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\t\t\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif  \n}\n\n', a = un.add(_, e, t, n, i), kn.SHADERDEFINE_DIFFUSETEXTURE = a.registerMaterialDefine("DIFFUSETEXTURE"), kn.SHADERDEFINE_SPECULARTEXTURE = a.registerMaterialDefine("SPECULARTEXTURE"), kn.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = a.registerMaterialDefine("SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA"), kn.SHADERDEFINE_NORMALTEXTURE = a.registerMaterialDefine("NORMALTEXTURE"), kn.SHADERDEFINE_PARALLAXTEXTURE = a.registerMaterialDefine("PARALLAXTEXTURE"), kn.SHADERDEFINE_OCCLUSIONTEXTURE = a.registerMaterialDefine("OCCLUSIONTEXTURE"), kn.SHADERDEFINE_EMISSION = a.registerMaterialDefine("EMISSION"), kn.SHADERDEFINE_EMISSIONTEXTURE = a.registerMaterialDefine("EMISSIONTEXTURE"), kn.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), n = {
                    a_position: 0,
                    a_normal: 3,
                    uv: 2
                }, i = {
                    irrad_mat_red: [10, 3],
                    irrad_mat_green: [11, 3],
                    irrad_mat_blue: [12, 3],
                    u_hdrexposure: [13, 3],
                    texBaseColor: [1, 1],
                    texNormal: [2, 1],
                    texSky: [11, 1],
                    texUnderWater: [3, 1],
                    texPrefilterdEnv: [8, 3],
                    texPrefilterDiff: [7, 3],
                    texWaterDisp: [4, 1],
                    texWaveDetail: [9, 1],
                    texDeepColor: [10, 1],
                    texWaterInfo: [16, 1],
                    texFoam: [17, 1],
                    GEOWAVE_UV_SCALE: [18, 1],
                    modelMatrix: [0, 2],
                    mvp: [1, 2],
                    cameraPosition: [0, 3],
                    u_curTm: [8, 1],
                    u_scrsize: [15, 1],
                    u_WaveInfoD: [13, 1],
                    u_WaveInfo: [12, 1],
                    u_WaveMainDir: [14, 1],
                    u_DeepScale: [20, 1],
                    u_SeaColor: [19, 1],
                    u_View: [1, 3],
                    u_Project: [2, 3],
                    u_FogStart: [1, 4],
                    u_FogRange: [2, 4],
                    u_FogColor: [0, 4],
                    "u_DirectionLight.Direction": [3, 4],
                    "u_DirectionLight.Diffuse": [4, 4],
                    "u_PointLight.Position": [5, 4],
                    "u_PointLight.Range": [6, 4],
                    "u_PointLight.Attenuation": [7, 4],
                    "u_PointLight.Diffuse": [8, 4],
                    "u_SpotLight.Position": [9, 4],
                    "u_SpotLight.Direction": [10, 4],
                    "u_SpotLight.Range": [12, 4],
                    "u_SpotLight.Spot": [11, 4],
                    "u_SpotLight.Attenuation": [13, 4],
                    "u_SpotLight.Diffuse": [14, 4]
                };
                var u = Bn.nameKey.add("Water");
                e = '\nuniform mat4 modelMatrix;\n//uniform mat4 modelViewMatrix;\n//uniform mat4 projectionMatrix;\nuniform mat4 u_View;\nuniform mat4 u_Project;\nuniform mat4 mvp;\n//uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\nuniform float u_curTm;\n\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 uv;\n//uniform sampler2D texWaterDisp;\n#ifdef USE_VERTEX_DEEPINFO\n#else\nuniform sampler2D texWaterInfo;\nvarying vec4 vWaterInfo;\nuniform float u_DeepScale;//texWaterInfo.r*vDeepScale\n#endif\nuniform float u_WaveMainDir;\t//主波方向\nuniform float GEOWAVE_UV_SCALE ;//= 100.0;\n\n\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\nvarying vec3 vWorldTan;\nvarying vec3 vWorldBin;\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\nvarying vec3 vLightDir;\nvarying vec3 vViewDir;\nvarying vec3 vDisp;\nvarying float fDeep;\nvarying mat2 matUVTrans;\nvarying float fFoam;\n\nconst float PI = 3.14159265358979323846264;\n\n#include "WaveFunction.glsl"\n\nvec2 getPosFromUV(vec2 uv){\n\treturn uv*50.;\n}\n\nvoid main() {\n\tvec3 pos = a_position;\n    vUv = uv;\n\t\n\t//vDisp = texture2D(texWaterDisp,uv).rgb;\n\t//vec3 disp = vDisp;\n\t\n\t//TODO 这里有个潜规则。\n\tfloat tt = pos.y; pos.y=pos.z; pos.z=-tt;\n\t\n\t#ifdef USE_VERTEX_DEEPINFO\n\tfDeep = -pos.y;\n\tpos.y=0.0;\n\t#else\n\tvWaterInfo = texture2D(texWaterInfo,uv);\n\tfDeep = vWaterInfo.r*u_DeepScale;\n\t#endif\n\t\n\t\n\t//计算波形\n\tmat4 modelMat = modelMatrix;\n\tvec3 opos, T,B,N;\n\tfloat foams=0.;\n\tvec2 uvpos = uv*GEOWAVE_UV_SCALE+vec2(modelMat[3][0],0.);//TODO 如果有旋转缩放怎么办\n\tcalcGerstnerWave(u_curTm, pos,fDeep, uvpos,opos,B,T,N,foams);\n\tfFoam = foams;\n\tgl_Position = mvp*vec4(opos,1.);\n\tvWorldPos = modelMat*vec4(opos,1.);\n\n\tvWorldNorm = normalize((modelMatrix*vec4(N,0.0)).xyz);\n\tvWorldTan = normalize((modelMatrix*vec4(T,0.0)).xyz);\n\tvWorldBin = normalize((modelMatrix*vec4(B,0.0)).xyz);\n    vViewDir = vWorldPos.xyz-cameraPosition; //这个不能取normalize，否则会引入非线性\n\t\n\tfloat s = sin(u_WaveMainDir);\n\tfloat c = cos(u_WaveMainDir);\n\tmatUVTrans = mat2(c,-s,s,c);\n}\n', t = "//#version 300 es\n\nprecision highp float;\nprecision lowp int;\n\nconst float PI = 3.14159265358979323846264;\nconst float _2PI = 6.2831853071796;\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\nvarying vec3 vWorldTan;\nvarying vec3 vWorldBin;\nvarying vec3 vViewDir;//入射。pos-cam\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\nvarying float fDeep;\nvarying mat2 matUVTrans;\n#ifdef USE_VERTEX_DEEPINFO\n#else\nvarying vec4 vWaterInfo;\n#endif\nmat3 matTBNOff;//\n\n//\nuniform sampler2D texBaseColor;\nuniform sampler2D texNormal;\n#ifdef CUBE_ENV\nuniform samplerCube texSky;\n#else\nuniform sampler2D texSky;\n#endif\nuniform sampler2D texUnderWater;\nuniform sampler2D texWaveDetail;\n//uniform sampler2D texDeepColor;\nuniform sampler2D texFoam;\nvarying float fFoam;\nuniform float u_curTm;\nuniform vec2 u_scrsize;\nuniform vec3 u_SeaColor;//\n\nconst int NumTexWaves=4;\nconst float Amp_over_L = 0.01;\n//const vec3 SEA_COLOR1 = vec3(0.0292,0.672,0.7467);//大洋\n//const vec3 SEA_COLOR2 = vec3(0,0.927,0.43);//近海\n\nconst float _maxu8 = 255.0;\nconst float _maxu16 = 65535.0;\nconst float _shift8 = 256.0;    //平移的话是*256而不是255\nvec2 _RGBAToU16(const in vec4 rgba){\n    return vec2((rgba.r*_maxu8+rgba.g*_maxu8*_shift8)/_maxu16, (rgba.b*_maxu8+rgba.a*_maxu8*_shift8)/_maxu16);\n}\nvec3 _RGBEToRGB( const in vec4 rgba ){\n    float f = pow(2.0, rgba.w * 255.0 - (128.0 + 8.0));\n    return rgba.rgb * (255.0 * f);\n}\n\nfloat saturate(float v){\n    return min(max(v,0.),1.);\n}\n\n/*\n\t各种 ToneMap\n*/\n//Reinhard\nvec3 ReinhardToneMapping(vec3 color, float adapted_lum) {\n    const float MIDDLE_GREY = 1.;\n    color *= MIDDLE_GREY / adapted_lum;\n    return color / (1.0 + color);\n}\n\n//CE2\nvec3 CEToneMapping(vec3 color, float adapted_lum){\n    return 1. - exp(-adapted_lum * color);\n}\n\n//UC2\nvec3 F1(vec3 x){\n\tconst float A = 0.22;\n\tconst float B = 0.30;\n\tconst float C = 0.10;\n\tconst float D = 0.20;\n\tconst float E = 0.01;\n\tconst float F = 0.30;\n \n\treturn ((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - E / F;\n}\n\nvec3 Uncharted2ToneMapping(vec3 color, float adapted_lum){\n\tconst vec3 WHITE = vec3(11.2);\n\treturn F1(1.6 * adapted_lum * color) / F1(WHITE);\n}\n\n//ACES\nvec3 ACESToneMapping(vec3 color, float adapted_lum){\n\tconst float A = 2.51;\n\tconst float B = 0.03;\n\tconst float C = 2.43;\n\tconst float D = 0.59;\n\tconst float E = 0.14;\n\n\tcolor *= adapted_lum;\n\treturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n\n/*\n* 对一个全景图进行采样。假设x轴指向中心。\n*/\nvec4 texPanorama(sampler2D tex, const in vec3 dir){\n\tfloat envu = atan(dir.z,dir.x)/_2PI+0.5; \t\n\tfloat envv = acos(dir.y)/PI;//(1.0-dir.y)/2.0;\n\treturn texture2D(tex,vec2(envu,envv));\n}\n\n/*\n\t与位于0点的测试棒的相交测试交点\n\t这个是瞎写的，只是为了测试\n*/\nbool hitClydiner(vec3 pos, vec3 dir, out vec3 hitpos, out vec3 hitnormal){\n\tconst float r = 0.5;\n\tfloat a = dir.x*dir.x+dir.z*dir.z;\n\tfloat b = 2.*dir.x*pos.x+2.*dir.z*pos.z;\n\tfloat c = pos.x*pos.x+pos.z*pos.z-r*r;\n\tfloat d = b*b-4.*a*c;\n\tif(d>=0.0){\n\t\tfloat t = (-b+sqrt(d))/2./a;\n\t\tt =min(t, (-b-sqrt(d))/2./a);\n\t\thitpos = pos+dir*t;\n\t\treturn true;\n\t}\n\t/*\n\tvec3 v1 = normalize(cross(dir,vec3(0.,1.,0.)));//公垂线\n\tfloat dist = dot(pos,v1);//最短距离\n\tif(abs(dist)<r){\n\t\treturn true;\n\t}\n\t*/\n\treturn false;\n}\n\n///* 根据散射公式来计算某个方向的颜色 *///\n//\nfloat phase_function(float costheta, float g, float g2){\n\treturn 1.5*( (1.0-g2) / (2.0+g2) ) * (1.0+costheta*costheta) / pow(1.0+g2-2.0*g*costheta, 1.5);\t\n}\n\nconst float _density = .2;\nconst vec3 _vLightDir=vec3(0.,-1.,0.);//必须是规格化的\nconst int _SAMPLENUM = 20;\nconst float _K1 = 1.0;\nconst float _g = -0.93;\n//\nvec3 calcScatter(vec3 start, vec3 dir, vec3 end){\n\tfloat len = length(end-start);\n\tfloat costheta = dot(dir,_vLightDir);\n\tfloat g2 = _g*_g;\n\tfloat K = _K1*len*_density*phase_function(costheta,_g,g2);\n\t//用分段的方式来积分\n\tfloat dlen = len/float(_SAMPLENUM);//距离平分\n\tfloat ddeep = (start.y-end.y)/float(_SAMPLENUM);//深度平分\n\tfloat sum=0.;\n\tfor( int i=0; i<_SAMPLENUM; i++){\n\t\tfloat fi = float(i);\n\t\tfloat v1 = exp(-_density*(dlen+ddeep)*fi);//TODO 应该可以用分析法计算出来\n\t\tsum += v1;\n\t}\n\treturn vec3(K*sum);\n}\n///* 根据散射公式来计算某个方向的亮度  END *///\n\nconst float cDeep = -2.;\t//假设水的深度\nvec3 getShuiDiColor(vec3 pos, vec3 dir, vec3 normal){\n\t//一个无限大的水底，黑白格纹理。纹理长度为1米\n\tfloat t = ( cDeep-pos.y )/dir.y;\n\tif(t<0.) return vec3(1.,0.,0.);//TEST\n\tbool bhit = false;\n\tvec3 hitpos;\n\tvec3 hitcolor;\n\tvec3 hn;\n\tif(hitClydiner(pos,dir,hitpos,hn) && hitpos.y>cDeep && hitpos.y<pos.y){\n\t\tbhit=true;\n\t\thitcolor = vec3(.8,.8,.8);\n\n\t}else\n\t{\n\t\thitpos = pos+dir*t;\n\t\tvec3 hp = floor(hitpos);\n\t\tfloat a = mod((hp.x+hp.z),2.);\n\t\thitcolor = (a<.9)?vec3(0.,0.,0.):vec3(1.,1.,1.);\n\t\t//hitcolor = texture2D(texUnderWater,hitpos.xz/10.).rgb;\n\t}\n\t\n\tfloat l = length(hitpos-pos);\n\t//return texture2D(texDeepColor,vec2(min(max(l/400.,0.),1.),0.5)).rgb;\n\t//return SEA_COLOR1*calcScatter(pos,dir,hitpos);\n\tfloat left = pow(0.8,l);//假设透过率为80%，则到达水底的时候的光强。\n\treturn mix(hitcolor,u_SeaColor,1.-left);\n}\n\n/*\n\tview已经normalize了\n*/\nvec3 getRefractColor(vec3 view,vec3 normal){\n\tvec3 T = refract(-view, normal, 0.7);\n\treturn getShuiDiColor(vWorldPos.xyz,T,normal); \n}\n\nvec4 calcWaterC(vec3 view, vec3 normal, float von, vec3 R, float rough){\n\t/*\n\t只有浪顶的法线向下，也就是波形形成了交叠的时候，才会这样，所以要通过参数控制避免出现这种情况，而不是在这里保护。\n\tif(dot(R,vec3(0.,1.,0.))<0.){\n\t\tR = -R;\n\t}\n\t*/\n\t//vec3 refr = getRefractColor(-view,normal);\n#ifdef USE_REFR_TEX\t\n\tvec3 refr = texture2D(texUnderWater, gl_FragCoord.xy/u_scrsize+normal.xz/8.).rgb;\n#else\n\tvec3 refr = u_SeaColor;\n#endif\n\tfloat F0=0.02;\n\t//菲涅尔，越大反射越强\n\tfloat f =  F0+(1.0-F0)*exp2((-5.55473*von-6.98316)*von);\n\t//float f = F0+(1.0-F0)*pow(1.-von,5.);\n\t//能看到水底的程度。反射剩余的*水中的衰减\n\t//float a = (1.-f)*(1.-deepk);\n#ifdef CUBE_ENV\n\tvec4 reflc = textureCube(texSky,R);\n#else\n\tvec4 reflc = texPanorama(texSky, R);\n#endif\n#ifdef HDR_ENV\n\tvec3 refl = _RGBEToRGB(reflc)*f;\n#else\n\tvec3 refl = reflc.rgb*f;\n#endif\n\t//return vec4(refl*(1.-rough),1.);\n\t\n\t//vec3 refl = reflc.rgb*f;\n\tvec3 final = mix(refr, u_SeaColor, min(fDeep/10.,1.))+refl*(max(0.,1.-rough));\n#ifdef HDR_ENV\n\tfinal = ACESToneMapping(final,1.);//TODO 这个要uniform传入\n#endif\n\treturn vec4(final,f);\n}\n\nvoid main() {\n    vec3 normal =  normalize(vWorldNorm);\n\t//如果uv=1为100米，希望每个细节纹理表示20米的小波形，则uv缩放是 100/20。细节纹理内部也要用这个值，即pos=uv*20\n\tvec2 ruv = matUVTrans*vUv;\n\tvec3 detailNorm = texture2D(texWaveDetail,fract(ruv*5.)).rgb*2.-vec3(1.);//TODO uv怎么算\n\tfloat texNormScale = 2.*PI*float(NumTexWaves)*Amp_over_L*2.5;\n\tdetailNorm *= vec3(texNormScale,1.,texNormScale);\n\t//旋转\n\t//细节纹理来自rendertarget，因此需要颠倒z\n\t\n\tmatTBNOff = mat3(matUVTrans[0][0],0.,matUVTrans[1][0],\n\t0.,1.,0.,\n\tmatUVTrans[0][1],0.,matUVTrans[1][1]\n\t);\n\t\n\t/*\n\tmatTBNOff = mat3(0.,0.,1.,\n\t0.,1.,0.,\n\t-1.,0.,0.\n\t);\n\t*/\n\n    mat3 tsn = mat3( vWorldBin, normal, vWorldTan);\t\n    //normal = normalize(tsn * matTBNOff * detailNorm);\n\tnormal = normalize(tsn * detailNorm); //这个应该更正确。因为本身方向就是根据uv算的，如果是静态图片才需要转换。\n\t//vec4 normtex = texture2D( texNormal, vUv );\n    vec3 view   = -normalize(vViewDir);//view 是指向camera的\n    float NoV = saturate(dot( view, normal ));\n    //vec3 R = 2. * NoV * normal - view;\n\t\n#ifdef USE_FOAM\t\n\tvec4 foamc = (texture2D(texFoam,vUv*50.)+texture2D(texFoam,vUv*20.))/2.;\n\tfloat nearcoast = 1.-min(fDeep/10.,1.);// 1.-vWaterInfo.r;\n\tfloat foams = (nearcoast/4.+fFoam)*2.*nearcoast;\n#else\n\tfloat foams =0.;\n#endif\n\t\n\tvec3 R = reflect(-view,normal);\n\tvec4 wc = calcWaterC(view, normal,NoV,R, foams);\n\n\tgl_FragColor.rgb = wc.rgb;//normalize(detailNorm).rrr;//((normal)+vec3(0.0))/1.;//normalize(normal).rgb;//texture2D(texWaveDetail,vUv).rgb;// fracColor * texture2D(texUnderWater, vUv*20.0).rgb;// vec3(1.0);//pbrl.rgb;\n    gl_FragColor.a = 1.0;//wc.a;\n#ifdef USE_FOAM\n\tgl_FragColor.rgb = mix(gl_FragColor.rgb,vec3(1.),foamc.a*foams);\n\tgl_FragColor.a = foamc.r;\n#endif\n\t//if(mod(vUv.x*100.,1.0)<0.02 || mod(vUv.y*100.,1.0)<0.02) gl_FragColor.rgb=vec3(0.5,.5,.5);\n\t//gl_FragColor.rgb = detailNorm;\n}\n", a = un.add(u, e, t, n, i), Yn.SHADERDEFINE_CUBE_ENV = a.registerMaterialDefine("CUBE_ENV"), Yn.SHADERDEFINE_HDR_ENV = a.registerMaterialDefine("HDR_ENV"), Yn.SHADERDEFINE_SHOW_NORMAL = a.registerMaterialDefine("SHOW_NORMAL"), Yn.SHADERDEFINE_USEVERTEXHEIGHT = a.registerMaterialDefine("USE_VERTEX_DEEPINFO"), Yn.SHADERDEFINE_USE_FOAM = a.registerMaterialDefine("USE_FOAM"), Yn.SHADERDEFINE_USE_REFRACT_TEX = a.registerMaterialDefine("USE_REFR_TEX"), n = {
                    a_CornerTextureCoordinate: 17,
                    a_MeshPosition: 0,
                    a_MeshColor: 1,
                    a_MeshTextureCoordinate: 2,
                    a_ShapePositionStartLifeTime: 30,
                    a_DirectionTime: 32,
                    a_StartColor: 19,
                    a_EndColor: 23,
                    a_StartSize: 20,
                    a_StartRotation0: 22,
                    a_StartSpeed: 31,
                    a_Random0: 34,
                    a_Random1: 35,
                    a_SimulationWorldPostion: 36,
                    a_SimulationWorldRotation: 37
                }, i = {
                    u_Tintcolor: [2, 1],
                    u_TilingOffset: [3, 1],
                    u_texture: [1, 1],
                    u_WorldPosition: [0, 2],
                    u_WorldRotation: [1, 2],
                    u_PositionScale: [4, 2],
                    u_SizeScale: [5, 2],
                    u_ScalingMode: [6, 2],
                    u_Gravity: [7, 2],
                    u_ThreeDStartRotation: [8, 2],
                    u_StretchedBillboardLengthScale: [9, 2],
                    u_StretchedBillboardSpeedScale: [10, 2],
                    u_SimulationSpace: [11, 2],
                    u_CurrentTime: [12, 2],
                    u_ColorOverLifeGradientAlphas: [22, 2],
                    u_ColorOverLifeGradientColors: [23, 2],
                    u_MaxColorOverLifeGradientAlphas: [24, 2],
                    u_MaxColorOverLifeGradientColors: [25, 2],
                    u_VOLVelocityConst: [13, 2],
                    u_VOLVelocityGradientX: [14, 2],
                    u_VOLVelocityGradientY: [15, 2],
                    u_VOLVelocityGradientZ: [16, 2],
                    u_VOLVelocityConstMax: [17, 2],
                    u_VOLVelocityGradientMaxX: [18, 2],
                    u_VOLVelocityGradientMaxY: [19, 2],
                    u_VOLVelocityGradientMaxZ: [20, 2],
                    u_VOLSpaceType: [21, 2],
                    u_SOLSizeGradient: [26, 2],
                    u_SOLSizeGradientX: [27, 2],
                    u_SOLSizeGradientY: [28, 2],
                    u_SOLSizeGradientZ: [29, 2],
                    u_SOLSizeGradientMax: [30, 2],
                    u_SOLSizeGradientMaxX: [31, 2],
                    u_SOLSizeGradientMaxY: [32, 2],
                    u_SOLSizeGradientMaxZ: [33, 2],
                    u_ROLAngularVelocityConst: [34, 2],
                    u_ROLAngularVelocityConstSeprarate: [35, 2],
                    u_ROLAngularVelocityGradient: [36, 2],
                    u_ROLAngularVelocityGradientX: [37, 2],
                    u_ROLAngularVelocityGradientY: [38, 2],
                    u_ROLAngularVelocityGradientZ: [39, 2],
                    u_ROLAngularVelocityGradientW: [40, 2],
                    u_ROLAngularVelocityConstMax: [41, 2],
                    u_ROLAngularVelocityConstMaxSeprarate: [42, 2],
                    u_ROLAngularVelocityGradientMax: [43, 2],
                    u_ROLAngularVelocityGradientMaxX: [44, 2],
                    u_ROLAngularVelocityGradientMaxY: [45, 2],
                    u_ROLAngularVelocityGradientMaxZ: [46, 2],
                    u_ROLAngularVelocityGradientMaxW: [47, 2],
                    u_TSACycles: [48, 2],
                    u_TSASubUVLength: [49, 2],
                    u_TSAGradientUVs: [50, 2],
                    u_TSAMaxGradientUVs: [51, 2],
                    u_CameraPosition: [0, 3],
                    u_CameraDirection: [5, 3],
                    u_CameraUp: [6, 3],
                    u_View: [1, 3],
                    u_Projection: [2, 3],
                    u_FogStart: [1, 4],
                    u_FogRange: [2, 4],
                    u_FogColor: [0, 4]
                };
                var c = Bn.nameKey.add("PARTICLESHURIKEN");
                e = "#ifdef HIGHPRECISION\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n\n#if defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\n\tattribute vec4 a_CornerTextureCoordinate;\n#endif\n#ifdef RENDERMODE_MESH\n\tattribute vec3 a_MeshPosition;\n\tattribute vec4 a_MeshColor;\n\tattribute vec2 a_MeshTextureCoordinate;\n\tvarying vec4 v_MeshColor;\n#endif\n\nattribute vec4 a_ShapePositionStartLifeTime;\nattribute vec4 a_DirectionTime;\nattribute vec4 a_StartColor;\nattribute vec3 a_StartSize;\nattribute vec3 a_StartRotation0;\nattribute float a_StartSpeed;\n#if defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n  attribute vec4 a_Random0;\n#endif\n#if defined(TEXTURESHEETANIMATIONRANDOMCURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n  attribute vec4 a_Random1;\n#endif\nattribute vec3 a_SimulationWorldPostion;\nattribute vec4 a_SimulationWorldRotation;\n\nvarying float v_Discard;\nvarying vec4 v_Color;\n#ifdef DIFFUSEMAP\n\tvarying vec2 v_TextureCoordinate;\n#endif\n\nuniform float u_CurrentTime;\nuniform vec3 u_Gravity;\n\nuniform vec3 u_WorldPosition;\nuniform vec4 u_WorldRotation;\nuniform bool u_ThreeDStartRotation;\nuniform int u_ScalingMode;\nuniform vec3 u_PositionScale;\nuniform vec3 u_SizeScale;\nuniform mat4 u_View;\nuniform mat4 u_Projection;\n\n#ifdef STRETCHEDBILLBOARD\n\tuniform vec3 u_CameraPosition;\n#endif\nuniform vec3 u_CameraDirection;//TODO:只有几种广告牌模式需要用\nuniform vec3 u_CameraUp;\n\nuniform  float u_StretchedBillboardLengthScale;\nuniform  float u_StretchedBillboardSpeedScale;\nuniform int u_SimulationSpace;\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n  uniform  int  u_VOLSpaceType;\n#endif\n#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)\n  uniform  vec3 u_VOLVelocityConst;\n#endif\n#if defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n  uniform  vec2 u_VOLVelocityGradientX[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientY[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientZ[4];//x为key,y为速度\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n  uniform  vec3 u_VOLVelocityConstMax;\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n  uniform  vec2 u_VOLVelocityGradientMaxX[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientMaxY[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientMaxZ[4];//x为key,y为速度\n#endif\n\n#ifdef COLOROVERLIFETIME\n  uniform  vec4 u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\n  uniform  vec2 u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\n#endif\n#ifdef RANDOMCOLOROVERLIFETIME\n  uniform  vec4 u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\n  uniform  vec2 u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\n  uniform  vec4 u_MaxColorOverLifeGradientColors[4];//x为key,yzw为Color\n  uniform  vec2 u_MaxColorOverLifeGradientAlphas[4];//x为key,y为Alpha\n#endif\n\n\n#if defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMERANDOMCURVES)\n  uniform  vec2 u_SOLSizeGradient[4];//x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVES\n  uniform  vec2 u_SOLSizeGradientMax[4];//x为key,y为尺寸\n#endif\n#if defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\n  uniform  vec2 u_SOLSizeGradientX[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientY[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientZ[4];//x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n  uniform  vec2 u_SOLSizeGradientMaxX[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientMaxY[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientMaxZ[4];//x为key,y为尺寸\n#endif\n\n\n#ifdef ROTATIONOVERLIFETIME\n  #if defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\n    uniform  float u_ROLAngularVelocityConst;\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    uniform  float u_ROLAngularVelocityConstMax;\n  #endif\n  #if defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n    uniform  vec2 u_ROLAngularVelocityGradient[4];//x为key,y为旋转\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    uniform  vec2 u_ROLAngularVelocityGradientMax[4];//x为key,y为旋转\n  #endif\n#endif\n#ifdef ROTATIONOVERLIFETIMESEPERATE\n  #if defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\n    uniform  vec3 u_ROLAngularVelocityConstSeprarate;\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    uniform  vec3 u_ROLAngularVelocityConstMaxSeprarate;\n  #endif\n  #if defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n    uniform  vec2 u_ROLAngularVelocityGradientX[4];\n    uniform  vec2 u_ROLAngularVelocityGradientY[4];\n    uniform  vec2 u_ROLAngularVelocityGradientZ[4];\n\tuniform  vec2 u_ROLAngularVelocityGradientW[4];\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    uniform  vec2 u_ROLAngularVelocityGradientMaxX[4];\n    uniform  vec2 u_ROLAngularVelocityGradientMaxY[4];\n    uniform  vec2 u_ROLAngularVelocityGradientMaxZ[4];\n\tuniform  vec2 u_ROLAngularVelocityGradientMaxW[4];\n  #endif\n#endif\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\n  uniform  float u_TSACycles;\n  uniform  vec2 u_TSASubUVLength;\n  uniform  vec2 u_TSAGradientUVs[4];//x为key,y为frame\n#endif\n#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n  uniform  vec2 u_TSAMaxGradientUVs[4];//x为key,y为frame\n#endif\n\n#ifdef FOG\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvec3 rotationByEuler(in vec3 vector,in vec3 rot)\n{\n\tfloat halfRoll = rot.z * 0.5;\n    float halfPitch = rot.x * 0.5;\n\tfloat halfYaw = rot.y * 0.5;\n\n\tfloat sinRoll = sin(halfRoll);\n\tfloat cosRoll = cos(halfRoll);\n\tfloat sinPitch = sin(halfPitch);\n\tfloat cosPitch = cos(halfPitch);\n\tfloat sinYaw = sin(halfYaw);\n\tfloat cosYaw = cos(halfYaw);\n\n\tfloat quaX = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\n\tfloat quaY = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\n\tfloat quaZ = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\n\tfloat quaW = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\n\t\n\t//vec4 q=vec4(quaX,quaY,quaZ,quaW);\n\t//vec3 temp = cross(q.xyz, vector) + q.w * vector;\n\t//return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\t\n\tfloat x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n\tfloat xx = quaX * x;\n    float xy = quaX * y;\n\tfloat xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n                ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n                ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n\t\n}\n\n//假定axis已经归一化\nvec3 rotationByAxis(in vec3 vector,in vec3 axis, in float angle)\n{\n\tfloat halfAngle = angle * 0.5;\n\tfloat sin = sin(halfAngle);\n\t\n\tfloat quaX = axis.x * sin;\n\tfloat quaY = axis.y * sin;\n\tfloat quaZ = axis.z * sin;\n\tfloat quaW = cos(halfAngle);\n\t\n\t//vec4 q=vec4(quaX,quaY,quaZ,quaW);\n\t//vec3 temp = cross(q.xyz, vector) + q.w * vector;\n\t//return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\t\n\tfloat x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n\tfloat xx = quaX * x;\n    float xy = quaX * y;\n\tfloat xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n                ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n                ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n\t\n}\n\nvec3 rotationByQuaternions(in vec3 v,in vec4 q) \n{\n\treturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\n \n#if defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\nfloat getCurValueFromGradientFloat(in vec2 gradientNumbers[4],in float normalizedAge)\n{\n\tfloat curValue;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientNumber=gradientNumbers[i];\n\t\tfloat key=gradientNumber.x;\n\t\tif(key>=normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientNumber=gradientNumbers[i-1];\n\t\t\tfloat lastKey=lastGradientNumber.x;\n\t\t\tfloat age=(normalizedAge-lastKey)/(key-lastKey);\n\t\t\tcurValue=mix(lastGradientNumber.y,gradientNumber.y,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn curValue;\n}\n#endif\n\n#if defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\nfloat getTotalValueFromGradientFloat(in vec2 gradientNumbers[4],in float normalizedAge)\n{\n\tfloat totalValue=0.0;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientNumber=gradientNumbers[i];\n\t\tfloat key=gradientNumber.x;\n\t\tvec2 lastGradientNumber=gradientNumbers[i-1];\n\t\tfloat lastValue=lastGradientNumber.y;\n\t\t\n\t\tif(key>=normalizedAge){\n\t\t\tfloat lastKey=lastGradientNumber.x;\n\t\t\tfloat age=(normalizedAge-lastKey)/(key-lastKey);\n\t\t\ttotalValue+=(lastValue+mix(lastValue,gradientNumber.y,age))/2.0*a_ShapePositionStartLifeTime.w*(normalizedAge-lastKey);\n\t\t\tbreak;\n\t\t}\n\t\telse{\n\t\t\ttotalValue+=(lastValue+gradientNumber.y)/2.0*a_ShapePositionStartLifeTime.w*(key-lastGradientNumber.x);\n\t\t}\n\t}\n\treturn totalValue;\n}\n#endif\n\n#if defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)\nvec4 getColorFromGradient(in vec2 gradientAlphas[4],in vec4 gradientColors[4],in float normalizedAge)\n{\n\tvec4 overTimeColor;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientAlpha=gradientAlphas[i];\n\t\tfloat alphaKey=gradientAlpha.x;\n\t\tif(alphaKey>=normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientAlpha=gradientAlphas[i-1];\n\t\t\tfloat lastAlphaKey=lastGradientAlpha.x;\n\t\t\tfloat age=(normalizedAge-lastAlphaKey)/(alphaKey-lastAlphaKey);\n\t\t\toverTimeColor.a=mix(lastGradientAlpha.y,gradientAlpha.y,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec4 gradientColor=gradientColors[i];\n\t\tfloat colorKey=gradientColor.x;\n\t\tif(colorKey>=normalizedAge)\n\t\t{\n\t\t\tvec4 lastGradientColor=gradientColors[i-1];\n\t\t\tfloat lastColorKey=lastGradientColor.x;\n\t\t\tfloat age=(normalizedAge-lastColorKey)/(colorKey-lastColorKey);\n\t\t\toverTimeColor.rgb=mix(gradientColors[i-1].yzw,gradientColor.yzw,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn overTimeColor;\n}\n#endif\n\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\nfloat getFrameFromGradient(in vec2 gradientFrames[4],in float normalizedAge)\n{\n\tfloat overTimeFrame;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientFrame=gradientFrames[i];\n\t\tfloat key=gradientFrame.x;\n\t\tif(key>=normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientFrame=gradientFrames[i-1];\n\t\t\tfloat lastKey=lastGradientFrame.x;\n\t\t\tfloat age=(normalizedAge-lastKey)/(key-lastKey);\n\t\t\toverTimeFrame=mix(lastGradientFrame.y,gradientFrame.y,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn floor(overTimeFrame);\n}\n#endif\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nvec3 computeParticleLifeVelocity(in float normalizedAge)\n{\n  vec3 outLifeVelocity;\n  #ifdef VELOCITYOVERLIFETIMECONSTANT\n\t outLifeVelocity=u_VOLVelocityConst; \n  #endif\n  #ifdef VELOCITYOVERLIFETIMECURVE\n     outLifeVelocity= vec3(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\n  #endif\n  #ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n\t outLifeVelocity=mix(u_VOLVelocityConst,u_VOLVelocityConstMax,vec3(a_Random1.y,a_Random1.z,a_Random1.w)); \n  #endif\n  #ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n     outLifeVelocity=vec3(mix(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y),\n\t                 mix(getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z),\n\t\t\t\t\t mix(getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\n  #endif\n\t\t\t\t\t\n  return outLifeVelocity;\n} \n#endif\n\nvec3 computeParticlePosition(in vec3 startVelocity, in vec3 lifeVelocity,in float age,in float normalizedAge,vec3 gravityVelocity,vec4 worldRotation)\n{\n   vec3 startPosition;\n   vec3 lifePosition;\n   #if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t#ifdef VELOCITYOVERLIFETIMECONSTANT\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=lifeVelocity*age;\n\t#endif\n\t#ifdef VELOCITYOVERLIFETIMECURVE\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=vec3(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\n\t#endif\n\t#ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=lifeVelocity*age;\n\t#endif\n\t#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=vec3(mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y)\n\t      ,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z)\n\t      ,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\n\t#endif\n\t\n\tvec3 finalPosition;\n\tif(u_VOLSpaceType==0){\n\t  if(u_ScalingMode!=2)\n\t   finalPosition =rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition),worldRotation);\n\t  else\n\t   finalPosition =rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition,worldRotation);\n\t}\n\telse{\n\t  if(u_ScalingMode!=2)\n\t    finalPosition = rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation)+lifePosition;\n\t  else\n\t    finalPosition = rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation)+lifePosition;\n\t}\n  #else\n\t startPosition=startVelocity*age;\n\t vec3 finalPosition;\n\t if(u_ScalingMode!=2)\n\t   finalPosition = rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation);\n\t else\n\t   finalPosition = rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation);\n  #endif\n  \n  if(u_SimulationSpace==0)\n    finalPosition=finalPosition+a_SimulationWorldPostion;\n  else if(u_SimulationSpace==1) \n    finalPosition=finalPosition+u_WorldPosition;\n  \n  finalPosition+=0.5*gravityVelocity*age;\n \n  return  finalPosition;\n}\n\n\nvec4 computeParticleColor(in vec4 color,in float normalizedAge)\n{\n\t#ifdef COLOROVERLIFETIME\n\t  color*=getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge);\n\t#endif\n\t\n\t#ifdef RANDOMCOLOROVERLIFETIME\n\t  color*=mix(getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge),getColorFromGradient(u_MaxColorOverLifeGradientAlphas,u_MaxColorOverLifeGradientColors,normalizedAge),a_Random0.y);\n\t#endif\n\n    return color;\n}\n\nvec2 computeParticleSizeBillbard(in vec2 size,in float normalizedAge)\n{\n\t#ifdef SIZEOVERLIFETIMECURVE\n\t\tsize*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVES\n\t    size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z); \n\t#endif\n\t#ifdef SIZEOVERLIFETIMECURVESEPERATE\n\t\tsize*=vec2(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge));\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n\t    size*=vec2(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\n\t    ,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z));\n\t#endif\n\treturn size;\n}\n\n#ifdef RENDERMODE_MESH\nvec3 computeParticleSizeMesh(in vec3 size,in float normalizedAge)\n{\n\t#ifdef SIZEOVERLIFETIMECURVE\n\t\tsize*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVES\n\t    size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z); \n\t#endif\n\t#ifdef SIZEOVERLIFETIMECURVESEPERATE\n\t\tsize*=vec3(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge));\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n\t    size*=vec3(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\n\t    ,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z)\n\t\t,mix(getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxZ,normalizedAge),a_Random0.z));\n\t#endif\n\treturn size;\n}\n#endif\n\nfloat computeParticleRotationFloat(in float rotation,in float age,in float normalizedAge)\n{ \n\t#ifdef ROTATIONOVERLIFETIME\n\t\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot=u_ROLAngularVelocityConst*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\n\t\t#endif\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot=u_ROLAngularVelocityConstSeprarate.z*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot=mix(u_ROLAngularVelocityConstSeprarate.z,u_ROLAngularVelocityConstMaxSeprarate.z,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\n\t\t#endif\n\t#endif\n\treturn rotation;\n}\n\n\n#if defined(RENDERMODE_MESH)&&(defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE))\nvec3 computeParticleRotationVec3(in vec3 rotation,in float age,in float normalizedAge)\n{ \n\t#ifdef ROTATIONOVERLIFETIME\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot=u_ROLAngularVelocityConst*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\n\t\t#endif\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tvec3 ageRot=u_ROLAngularVelocityConstSeprarate*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=vec3(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge));\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tvec3 ageRot=mix(u_ROLAngularVelocityConstSeprarate,u_ROLAngularVelocityConstMaxSeprarate,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=vec3(mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxX,normalizedAge),a_Random0.w)\n\t        ,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxY,normalizedAge),a_Random0.w)\n\t        ,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\n\t\t#endif\n\t#endif\n\treturn rotation;\n}\n#endif\n\nvec2 computeParticleUV(in vec2 uv,in float normalizedAge)\n{ \n\t#ifdef TEXTURESHEETANIMATIONCURVE\n\t\tfloat cycleNormalizedAge=normalizedAge*u_TSACycles;\n\t\tfloat frame=getFrameFromGradient(u_TSAGradientUVs,cycleNormalizedAge-floor(cycleNormalizedAge));\n\t\tfloat totalULength=frame*u_TSASubUVLength.x;\n\t\tfloat floorTotalULength=floor(totalULength);\n\t    uv.x+=totalULength-floorTotalULength;\n\t\tuv.y+=floorTotalULength*u_TSASubUVLength.y;\n    #endif\n\t#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n\t\tfloat cycleNormalizedAge=normalizedAge*u_TSACycles;\n\t\tfloat uvNormalizedAge=cycleNormalizedAge-floor(cycleNormalizedAge);\n\t    float frame=floor(mix(getFrameFromGradient(u_TSAGradientUVs,uvNormalizedAge),getFrameFromGradient(u_TSAMaxGradientUVs,uvNormalizedAge),a_Random1.x));\n\t\tfloat totalULength=frame*u_TSASubUVLength.x;\n\t\tfloat floorTotalULength=floor(totalULength);\n\t    uv.x+=totalULength-floorTotalULength;\n\t\tuv.y+=floorTotalULength*u_TSASubUVLength.y;\n    #endif\n\treturn uv;\n}\n\nvoid main()\n{\n\tfloat age = u_CurrentTime - a_DirectionTime.w;\n\tfloat normalizedAge = age/a_ShapePositionStartLifeTime.w;\n\tvec3 lifeVelocity;\n\tif(normalizedAge<1.0){ \n\tvec3 startVelocity=a_DirectionTime.xyz*a_StartSpeed;\n\t#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t\tlifeVelocity= computeParticleLifeVelocity(normalizedAge);//计算粒子生命周期速度\n\t#endif \n\tvec3 gravityVelocity=u_Gravity*age;\n\t\n\tvec4 worldRotation;\n\tif(u_SimulationSpace==0)\n\t\tworldRotation=a_SimulationWorldRotation;\n\telse\n\t\tworldRotation=u_WorldRotation;\n\t\n\tvec3 center=computeParticlePosition(startVelocity, lifeVelocity, age, normalizedAge,gravityVelocity,worldRotation);//计算粒子位置\n   \n   \n   #ifdef SPHERHBILLBOARD\n\t\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n        vec3 cameraUpVector =normalize(u_CameraUp);//TODO:是否外面归一化\n        vec3 sideVector = normalize(cross(u_CameraDirection,cameraUpVector));\n        vec3 upVector = normalize(cross(sideVector,u_CameraDirection));\n\t    corner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n\t\t#if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tvec3 rotation=vec3(a_StartRotation0.xy,computeParticleRotationFloat(a_StartRotation0.z,age,normalizedAge));\n\t\t\t\tcenter += u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,rotation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfloat rot = computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n\t\t\t\tfloat c = cos(rot);\n\t\t\t\tfloat s = sin(rot);\n\t\t\t\tmat2 rotation= mat2(c, -s, s, c);\n\t\t\t\tcorner=rotation*corner;\n\t\t\t\tcenter += u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n\t\t\t}\n\t\t#else\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tcenter += u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,a_StartRotation0);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfloat c = cos(a_StartRotation0.x);\n\t\t\t\tfloat s = sin(a_StartRotation0.x);\n\t\t\t\tmat2 rotation= mat2(c, -s, s, c);\n\t\t\t\tcorner=rotation*corner;\n\t\t\t\tcenter += u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n\t\t\t}\n\t\t#endif\n   #endif\n   \n   #ifdef STRETCHEDBILLBOARD\n\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n\tvec3 velocity;\n\t#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t    if(u_VOLSpaceType==0)\n\t\t  velocity=rotationByQuaternions(u_SizeScale*(startVelocity+lifeVelocity),worldRotation)+gravityVelocity;\n\t    else\n\t\t  velocity=rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+lifeVelocity+gravityVelocity;\n    #else\n\t    velocity= rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+gravityVelocity;\n    #endif\t\n\t\tvec3 cameraUpVector = normalize(velocity);\n\t\tvec3 direction = normalize(center-u_CameraPosition);\n        vec3 sideVector = normalize(cross(direction,normalize(velocity)));\n\t\t\n\t\tsideVector=u_SizeScale.xzy*sideVector;\n\t\tcameraUpVector=length(vec3(u_SizeScale.x,0.0,0.0))*cameraUpVector;\n\t\t\n\t    vec2 size=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n\t\t\n\t    const mat2 rotaionZHalfPI=mat2(0.0, -1.0, 1.0, 0.0);\n\t    corner=rotaionZHalfPI*corner;\n\t    corner.y=corner.y-abs(corner.y);\n\t\t\n\t    float speed=length(velocity);//TODO:\n\t    center +=sign(u_SizeScale.x)*(sign(u_StretchedBillboardLengthScale)*size.x*corner.x*sideVector+(speed*u_StretchedBillboardSpeedScale+size.y*u_StretchedBillboardLengthScale)*corner.y*cameraUpVector);\n   #endif\n   \n   #ifdef HORIZONTALBILLBOARD\n\t\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n        const vec3 cameraUpVector=vec3(0.0,0.0,1.0);\n\t    const vec3 sideVector = vec3(-1.0,0.0,0.0);\n\t\t\n\t\tfloat rot = computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n        float c = cos(rot);\n        float s = sin(rot);\n        mat2 rotation= mat2(c, -s, s, c);\n\t    corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\n\t\tcorner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n        center +=u_SizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n   #endif\n   \n   #ifdef VERTICALBILLBOARD\n\t\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n        const vec3 cameraUpVector =vec3(0.0,1.0,0.0);\n        vec3 sideVector = normalize(cross(u_CameraDirection,cameraUpVector));\n\t\t\n\t\tfloat rot = computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n        float c = cos(rot);\n        float s = sin(rot);\n        mat2 rotation= mat2(c, -s, s, c);\n\t    corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\n\t\tcorner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n        center +=u_SizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n   #endif\n   \n   #ifdef RENDERMODE_MESH\n\t    vec3 size=computeParticleSizeMesh(a_StartSize,normalizedAge);\n\t\t#if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tvec3 rotation=vec3(a_StartRotation0.xy,-computeParticleRotationFloat(a_StartRotation0.z, age,normalizedAge));\n\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,rotation),worldRotation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t#ifdef ROTATIONOVERLIFETIME\n\t\t\t\t\tfloat angle=computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n\t\t\t\t\tif(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\n\t\t\t\t\t\tcenter+= (rotationByQuaternions(rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),angle),worldRotation));//已验证\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t#ifdef SHAPE\n\t\t\t\t\t\t\tcenter+= u_SizeScale.xzy*(rotationByQuaternions(rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),angle),worldRotation));\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\t\t\tcenter+=rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle);//已验证\n\t\t\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\t\t\tcenter+=rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle),worldRotation);//已验证\n\t\t\t\t\t\t#endif\n\t\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t\t\t\t//TODO:是否应合并if(u_ThreeDStartRotation)分支代码,待测试\n\t\t\t\t\tvec3 angle=computeParticleRotationVec3(vec3(0.0,0.0,a_StartRotation0.z), age,normalizedAge);\n\t\t\t\t\tcenter+= (rotationByQuaternions(rotationByEuler(u_SizeScale*a_MeshPosition*size,vec3(angle.x,angle.y,angle.z)),worldRotation));//已验证\n\t\t\t\t#endif\t\n\t\t\t}\n\t\t#else\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,a_StartRotation0),worldRotation);//已验证\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\n\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\tcenter+= rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x);\n\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\tcenter+= (rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x),worldRotation));//已验证\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t#ifdef SHAPE\n\t\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\t\tcenter+= u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x);\n\t\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x),worldRotation);\t\n\t\t\t\t\t#else\n\t\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\t\tcenter+= rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x);\n\t\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x),worldRotation);//已验证\n\t\t\t\t\t#endif\n\t\t\t\t}\n\t\t\t}\n\t\t#endif\n\t\tv_MeshColor=a_MeshColor;\n   #endif\n   \n    gl_Position=u_Projection*u_View*vec4(center,1.0);\n    v_Color = computeParticleColor(a_StartColor, normalizedAge);\n\t#ifdef DIFFUSEMAP\n\t\t#if defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\n\t\t\tv_TextureCoordinate =computeParticleUV(a_CornerTextureCoordinate.zw, normalizedAge);\n\t\t#endif\n\t\t#ifdef RENDERMODE_MESH\n\t\t\tv_TextureCoordinate =computeParticleUV(a_MeshTextureCoordinate, normalizedAge);\n\t\t#endif\n\t\t\n\t\t#ifdef TILINGOFFSET\n\t\t\tv_TextureCoordinate=vec2(v_TextureCoordinate.x,1.0-v_TextureCoordinate.y)*u_TilingOffset.xy+vec2(u_TilingOffset.z,-u_TilingOffset.w);//需要特殊处理\n\t\t\tv_TextureCoordinate=vec2(v_TextureCoordinate.x,1.0-v_TextureCoordinate.y);//需要特殊处理\n\t\t#endif\n\t#endif\n    v_Discard=0.0;\n\t  \n\t#ifdef FOG\n\t\tv_PositionWorld=center;\n\t#endif\n   }\n   else\n\t{\n\t\tv_Discard=1.0;\n\t}\n}\n\n", t = "#ifdef HIGHPRECISION\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n\nvarying float v_Discard;\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\nuniform sampler2D u_texture;\nuniform vec4 u_Tintcolor;\n\n#ifdef RENDERMODE_MESH\n\tvarying vec4 v_MeshColor;\n#endif\n\n#ifdef FOG\n\tvarying vec3 v_PositionWorld;\n\tuniform vec3 u_CameraPosition;\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\t#ifdef ADDTIVEFOG\n\t#else\n\t\tuniform vec3 u_FogColor;\n\t#endif\n#endif\n\n\nvoid main()\n{\t\n\t#ifdef RENDERMODE_MESH\n\t\tgl_FragColor=v_MeshColor;\n\t#else\n\t\tgl_FragColor=vec4(1.0);\t\n\t#endif\n\t\t\n\t#ifdef DIFFUSEMAP\n\t\tif(v_Discard!=0.0)\n\t\t\tdiscard;\n\t\t#ifdef TINTCOLOR\n\t\t\tgl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*u_Tintcolor*2.0*v_Color;\n\t\t#else\n\t\t\tgl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*v_Color;\n\t\t#endif\n\t#else\n\t\t#ifdef TINTCOLOR\n\t\t\tgl_FragColor*=u_Tintcolor*2.0*v_Color;\n\t\t#else\n\t\t\tgl_FragColor*=v_Color;\n\t\t#endif\n\t#endif\n\t\n\t#ifdef FOG\n\t\tvec3 toEye=u_CameraPosition-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t\t\n\t\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\t\t#ifdef ADDTIVEFOG\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\n\t\t#else\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n\t\t#endif\n\t#endif\n}", a = un.add(c, e, t, n, i), qn.SHADERDEFINE_DIFFUSEMAP = a.registerMaterialDefine("DIFFUSEMAP"), qn.SHADERDEFINE_TINTCOLOR = a.registerMaterialDefine("TINTCOLOR"), qn.SHADERDEFINE_ADDTIVEFOG = a.registerMaterialDefine("ADDTIVEFOG"), qn.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), gi.SHADERDEFINE_RENDERMODE_BILLBOARD = a.registerSpriteDefine("SPHERHBILLBOARD"), gi.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = a.registerSpriteDefine("STRETCHEDBILLBOARD"), gi.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = a.registerSpriteDefine("HORIZONTALBILLBOARD"), gi.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = a.registerSpriteDefine("VERTICALBILLBOARD"), gi.SHADERDEFINE_COLOROVERLIFETIME = a.registerSpriteDefine("COLOROVERLIFETIME"), gi.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = a.registerSpriteDefine("RANDOMCOLOROVERLIFETIME"), gi.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = a.registerSpriteDefine("VELOCITYOVERLIFETIMECONSTANT"), gi.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = a.registerSpriteDefine("VELOCITYOVERLIFETIMECURVE"), gi.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = a.registerSpriteDefine("VELOCITYOVERLIFETIMERANDOMCONSTANT"), gi.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = a.registerSpriteDefine("VELOCITYOVERLIFETIMERANDOMCURVE"), gi.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = a.registerSpriteDefine("TEXTURESHEETANIMATIONCURVE"), gi.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = a.registerSpriteDefine("TEXTURESHEETANIMATIONRANDOMCURVE"), gi.SHADERDEFINE_ROTATIONOVERLIFETIME = a.registerSpriteDefine("ROTATIONOVERLIFETIME"), gi.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = a.registerSpriteDefine("ROTATIONOVERLIFETIMESEPERATE"), gi.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = a.registerSpriteDefine("ROTATIONOVERLIFETIMECONSTANT"), gi.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = a.registerSpriteDefine("ROTATIONOVERLIFETIMECURVE"), gi.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = a.registerSpriteDefine("ROTATIONOVERLIFETIMERANDOMCONSTANTS"), gi.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = a.registerSpriteDefine("ROTATIONOVERLIFETIMERANDOMCURVES"), gi.SHADERDEFINE_SIZEOVERLIFETIMECURVE = a.registerSpriteDefine("SIZEOVERLIFETIMECURVE"), gi.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = a.registerSpriteDefine("SIZEOVERLIFETIMECURVESEPERATE"), gi.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = a.registerSpriteDefine("SIZEOVERLIFETIMERANDOMCURVES"), gi.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = a.registerSpriteDefine("SIZEOVERLIFETIMERANDOMCURVESSEPERATE"), gi.SHADERDEFINE_RENDERMODE_MESH = a.registerSpriteDefine("RENDERMODE_MESH"), gi.SHADERDEFINE_SHAPE = a.registerSpriteDefine("SHAPE"), n = {
                    a_Position: 0,
                    a_Texcoord0: 2,
                    a_Time: 33
                }, i = {
                    u_Texture: [1, 1],
                    u_Albedo: [2, 1],
                    u_Color: [3, 1],
                    u_CurrentTime: [2, 2],
                    u_Duration: [3, 2],
                    u_MvpMatrix: [1, 2]
                };
                var d = Bn.nameKey.add("GLITTER");
                e = "attribute vec4 a_Position;\nattribute vec2 a_Texcoord0;\nattribute float a_Time;\n\nuniform mat4 u_MvpMatrix;\nuniform  float u_CurrentTime;\nuniform  vec4 u_Color;\nuniform float u_Duration;\n\nvarying vec2 v_Texcoord;\nvarying vec4 v_Color;\n\n\nvoid main()\n{\n  gl_Position = u_MvpMatrix * a_Position;\n  \n  float age = u_CurrentTime-a_Time;\n  float normalizedAge = clamp(age / u_Duration,0.0,1.0);\n   \n  v_Texcoord=a_Texcoord0;\n  \n  v_Color=u_Color;\n  v_Color.a*=1.0-normalizedAge;\n}\n", t = "#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nuniform vec4 u_Albedo;\nuniform sampler2D u_Texture;\n\nvarying vec2 v_Texcoord;\nvarying vec4 v_Color;\n\n\nvoid main()\n{\t\n  gl_FragColor=texture2D(u_Texture, v_Texcoord)*v_Color;\n  gl_FragColor=gl_FragColor*u_Albedo;\n}\n\n", a = un.add(d, e, t, n, i), n = {
                    a_Position: 0
                }, i = {
                    u_Intensity: [1, 1],
                    u_AlphaBlending: [2, 1],
                    u_CubeTexture: [3, 1],
                    u_MvpMatrix: [4, 3]
                };
                var f = Bn.nameKey.add("SkyBox");
                e = "attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\nvarying vec3 v_Texcoord;\n\n\nvoid main()\n{\n  gl_Position = (u_MvpMatrix*a_Position).xyww;\n  v_Texcoord=a_Position.xyz;\n}\n", t = "#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nuniform float u_Intensity;\nuniform float u_AlphaBlending;\nuniform samplerCube u_CubeTexture;\n\nvarying vec3 v_Texcoord;\n\n\nvoid main()\n{\t\n  gl_FragColor=vec4(textureCube(u_CubeTexture, v_Texcoord).rgb*u_Intensity,u_AlphaBlending);\n}\n\n", un.add(f, e, t, n, i), n = {
                    a_Position: 0,
                    a_Texcoord0: 2
                }, i = {
                    u_Intensity: [1, 1],
                    u_AlphaBlending: [2, 1],
                    u_texture: [3, 1],
                    u_MvpMatrix: [4, 3]
                };
                var m = Bn.nameKey.add("SkyDome");
                e = "attribute vec4 a_Position;\nattribute vec2 a_Texcoord0;\nuniform mat4 u_MvpMatrix;\nvarying vec2 v_Texcoord;\n\n\nvoid main()\n{\n  gl_Position = (u_MvpMatrix*a_Position).xyww;\n  v_Texcoord = a_Texcoord0;\n}\n", t = "#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nuniform float u_Intensity;\nuniform float u_AlphaBlending;\nuniform sampler2D u_texture;\n\nvarying vec2 v_Texcoord;\n\n\nvoid main()\n{\t\n  gl_FragColor=vec4(texture2D(u_texture, v_Texcoord).rgb*u_Intensity,u_AlphaBlending);\n}\n\n", un.add(m, e, t, n, i), n = {
                    a_Position: 0,
                    a_Normal: 3,
                    a_Texcoord0: 2,
                    a_Texcoord1: 15
                }, i = {
                    u_MvpMatrix: [1, 2],
                    u_WorldMat: [0, 2],
                    u_LightmapScaleOffset: [2, 2],
                    u_LightMap: [3, 2],
                    u_SplatAlphaTexture: [0, 1],
                    u_NormalTexture: [1, 1],
                    u_DiffuseTexture1: [2, 1],
                    u_DiffuseTexture2: [3, 1],
                    u_DiffuseTexture3: [4, 1],
                    u_DiffuseTexture4: [5, 1],
                    u_DiffuseScale1: [6, 1],
                    u_DiffuseScale2: [7, 1],
                    u_DiffuseScale3: [8, 1],
                    u_DiffuseScale4: [9, 1],
                    u_MaterialDiffuse: [11, 1],
                    u_MaterialAmbient: [10, 1],
                    u_MaterialSpecular: [12, 1],
                    u_CameraPos: [0, 3],
                    u_FogStart: [1, 4],
                    u_FogRange: [2, 4],
                    u_FogColor: [0, 4],
                    "u_DirectionLight.Direction": [3, 4],
                    "u_DirectionLight.Diffuse": [4, 4],
                    "u_PointLight.Position": [5, 4],
                    "u_PointLight.Range": [6, 4],
                    "u_PointLight.Attenuation": [7, 4],
                    "u_PointLight.Diffuse": [8, 4],
                    "u_SpotLight.Position": [9, 4],
                    "u_SpotLight.Direction": [10, 4],
                    "u_SpotLight.Range": [12, 4],
                    "u_SpotLight.Spot": [11, 4],
                    "u_SpotLight.Attenuation": [13, 4],
                    "u_SpotLight.Diffuse": [14, 4],
                    u_AmbientColor: [21, 4],
                    u_shadowMap1: [18, 4],
                    u_shadowMap2: [19, 4],
                    u_shadowMap3: [20, 4],
                    u_shadowPSSMDistance: [15, 4],
                    u_lightShadowVP: [16, 4],
                    u_shadowPCFoffset: [17, 4]
                };
                var p = Bn.nameKey.add("Terrain");
                e = "attribute vec4 a_Position;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\n\tattribute vec3 a_Normal;\n\tvarying vec3 v_Normal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\tuniform mat4 u_WorldMat;\n\tvarying vec3 v_PositionWorld;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef LIGHTMAP\n\tuniform vec4 u_LightmapScaleOffset;\n\tvarying vec2 v_LightMapUV;\n#endif\n\nattribute vec2 a_Texcoord0;\nattribute vec2 a_Texcoord1;\nvarying vec2 v_Texcoord0;\nvarying vec2 v_Texcoord1;\nuniform mat4 u_MvpMatrix;\n\nvoid main()\n{\n\tgl_Position = u_MvpMatrix * a_Position;\n\tv_Texcoord0=a_Texcoord0;\n\tv_Texcoord1=a_Texcoord1;\n\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tv_Normal=a_Normal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n#endif\n\n#ifdef LIGHTMAP\n\t//这个地方使用a_Normal 并不是真的代表normal，其实凑巧法线图的uv正好是符合 light_Map的UV\n\tv_LightMapUV=vec2(a_Normal.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,(a_Normal.y-1.0)*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n#endif\n\n#ifdef RECEIVESHADOW\n\tv_posViewZ = gl_Position.w;\n\t#ifdef SHADOWMAP_PSSM1\n\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t#endif\n#endif\n\n}", t = '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#include "LightHelper.glsl";\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tuniform vec3 u_MaterialDiffuse;\n\tuniform vec4 u_MaterialSpecular;\n\tuniform vec3 u_CameraPos;\n\tvarying vec3 v_Normal;\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\n\tuniform vec3 u_MaterialAmbient;\n#endif\n\n#ifdef FOG\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\tuniform vec3 u_FogColor;\n#endif\n\n\n#ifdef DIRECTIONLIGHT\n\tuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\n\tuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\n\tuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\nvarying float v_posViewZ;\n\n\nuniform sampler2D u_SplatAlphaTexture;\nuniform sampler2D u_NormalTexture;\nuniform sampler2D u_DiffuseTexture1;\nuniform sampler2D u_DiffuseTexture2;\nuniform sampler2D u_DiffuseTexture3;\nuniform sampler2D u_DiffuseTexture4;\nuniform vec2 u_DiffuseScale1;\nuniform vec2 u_DiffuseScale2;\nuniform vec2 u_DiffuseScale3;\nuniform vec2 u_DiffuseScale4;\nvarying vec2 v_Texcoord0;\nvarying vec2 v_Texcoord1;\n\n#ifdef LIGHTMAP\n\tuniform sampler2D u_LightMap;\n\tvarying vec2 v_LightMapUV;\n#endif\n\nvoid main()\n{\n#ifdef DETAIL_NUM1\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz;\n#endif\n#ifdef DETAIL_NUM2\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord1/u_DiffuseScale2);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz * (1.0-splatAlpha.r) + color2.xyz * splatAlpha.r;\n#endif\n#ifdef DETAIL_NUM3\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord1/u_DiffuseScale2);\n\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord1/u_DiffuseScale3);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz * (1.0-(splatAlpha.r+splatAlpha.g)) + color2.xyz * splatAlpha.r + color3.xyz * splatAlpha.g;\n#endif\n#ifdef DETAIL_NUM4\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord1/u_DiffuseScale2);\n\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord1/u_DiffuseScale3);\n\tvec4 color4 = texture2D(u_DiffuseTexture4, v_Texcoord1/u_DiffuseScale4);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz * (1.0-(splatAlpha.r+splatAlpha.g+splatAlpha.b))+ color2.xyz * splatAlpha.r + color3.xyz * splatAlpha.g + color4.xyz * splatAlpha.b;\n#endif\n\tgl_FragColor.w = splatAlpha.a;\n\t\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n    vec3 normal = texture2D(u_NormalTexture,v_Normal.xy).xyz;\n\tnormal = normal*2.0 - vec3(1.0);\n\tvec3 diffuse = vec3(0.0);\n\tvec3 ambient = vec3(0.0);\n\tvec3 specular= vec3(0.0);\n\tvec3 dif, amb, spe;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\n\tvec3 toEye;\n\t#ifdef FOG\n\t\ttoEye=u_CameraPos-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t#else\n\t\ttoEye=normalize(u_CameraPos-v_PositionWorld);\n\t#endif\n#endif\n\n#ifdef DIRECTIONLIGHT\n\tcomputeDirectionLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_DirectionLight,u_AmbientColor,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n \n#ifdef POINTLIGHT\n\tcomputePointLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_PointLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef SPOTLIGHT\n\tComputeSpotLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_SpotLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef RECEIVESHADOW\n\tfloat shadowValue = 1.0;\n\t#ifdef SHADOWMAP_PSSM3\n\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif\n\t#ifdef SHADOWMAP_PSSM2\n\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif \n\t#ifdef SHADOWMAP_PSSM1\n\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t#endif\n#endif\n\n#ifdef LIGHTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t#else\n\t\t#if defined(RECEIVESHADOW)\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue);\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t\t#endif\n\t#endif\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t#ifdef RECEIVESHADOW\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse*shadowValue) + specular * shadowValue,gl_FragColor.a);\n\t#else\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse) + specular, gl_FragColor.a);\n\t#endif\n#endif\n\n#ifdef FOG\n\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n#endif\n}\n\n';
                var v = un.add(p, e, t, n, i);
                Zn.SHADERDEFINE_DETAIL_NUM1 = v.registerMaterialDefine("DETAIL_NUM1"), Zn.SHADERDEFINE_DETAIL_NUM2 = v.registerMaterialDefine("DETAIL_NUM2"), Zn.SHADERDEFINE_DETAIL_NUM4 = v.registerMaterialDefine("DETAIL_NUM4"), Zn.SHADERDEFINE_DETAIL_NUM3 = v.registerMaterialDefine("DETAIL_NUM3"), n = {
                    a_Position: 0,
                    a_Normal: 3,
                    a_Texcoord0: 2
                }, i = {
                    u_MvpMatrix: [1, 2],
                    u_WorldMat: [0, 2],
                    u_CameraPos: [0, 3],
                    u_LightmapScaleOffset: [2, 2],
                    u_LightMap: [3, 2],
                    u_SplatAlphaTexture: [0, 1],
                    u_DiffuseTexture1: [1, 1],
                    u_DiffuseTexture2: [2, 1],
                    u_DiffuseTexture3: [3, 1],
                    u_DiffuseTexture4: [4, 1],
                    u_DiffuseTexture5: [5, 1],
                    u_DiffuseScaleOffset1: [6, 1],
                    u_DiffuseScaleOffset2: [7, 1],
                    u_DiffuseScaleOffset3: [8, 1],
                    u_DiffuseScaleOffset4: [9, 1],
                    u_DiffuseScaleOffset5: [10, 1],
                    u_MaterialAlbedo: [14, 1],
                    u_MaterialDiffuse: [12, 1],
                    u_MaterialAmbient: [11, 1],
                    u_MaterialSpecular: [13, 1],
                    u_FogStart: [1, 4],
                    u_FogRange: [2, 4],
                    u_FogColor: [0, 4],
                    "u_DirectionLight.Direction": [3, 4],
                    "u_DirectionLight.Diffuse": [4, 4],
                    "u_PointLight.Position": [5, 4],
                    "u_PointLight.Range": [6, 4],
                    "u_PointLight.Attenuation": [7, 4],
                    "u_PointLight.Diffuse": [8, 4],
                    "u_SpotLight.Position": [9, 4],
                    "u_SpotLight.Direction": [10, 4],
                    "u_SpotLight.Range": [12, 4],
                    "u_SpotLight.Spot": [11, 4],
                    "u_SpotLight.Attenuation": [13, 4],
                    "u_SpotLight.Diffuse": [14, 4],
                    u_AmbientColor: [21, 4],
                    u_shadowMap1: [18, 4],
                    u_shadowMap2: [19, 4],
                    u_shadowMap3: [20, 4],
                    u_shadowPSSMDistance: [15, 4],
                    u_lightShadowVP: [16, 4],
                    u_shadowPCFoffset: [17, 4]
                };
                var g = Bn.nameKey.add("ExtendTerrain");
                e = "attribute vec4 a_Position;\nattribute vec2 a_Texcoord0;\n\nuniform mat4 u_MvpMatrix;\n\nvarying vec2 v_Texcoord0;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\n\tattribute vec3 a_Normal;\n\tvarying vec3 v_Normal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\tuniform mat4 u_WorldMat;\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#ifdef LIGHTMAP\n\tvarying vec2 v_LightMapUV;\n\tuniform vec4 u_LightmapScaleOffset;\n#endif\n\n#ifdef RECEIVESHADOW\n\tvarying float v_posViewZ;\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n#endif\n\nvoid main()\n{\n\tgl_Position = u_MvpMatrix * a_Position;\n  \n\tv_Texcoord0 = a_Texcoord0;\n  \n\t#ifdef LIGHTMAP\n\t\tv_LightMapUV = vec2(a_Texcoord0.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,(a_Texcoord0.y-1.0)*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n\t#endif\n  \n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tv_Normal = a_Normal;\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\t\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n\t#endif\n\n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}", t = '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#include "LightHelper.glsl";\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\n\tuniform vec3 u_MaterialDiffuse;\n\tuniform vec4 u_MaterialSpecular;\n\tuniform vec3 u_CameraPos;\n\tvarying vec3 v_Normal;\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#ifdef FOG\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\tuniform vec3 u_FogColor;\n#endif\n\n\n#ifdef DIRECTIONLIGHT\n\tuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\n\tuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\n\tuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\nvarying float v_posViewZ;\n\n\nuniform sampler2D u_SplatAlphaTexture;\n\nuniform sampler2D u_DiffuseTexture1;\nuniform sampler2D u_DiffuseTexture2;\nuniform sampler2D u_DiffuseTexture3;\nuniform sampler2D u_DiffuseTexture4;\nuniform sampler2D u_DiffuseTexture5;\n\nuniform vec4 u_DiffuseScaleOffset1;\nuniform vec4 u_DiffuseScaleOffset2;\nuniform vec4 u_DiffuseScaleOffset3;\nuniform vec4 u_DiffuseScaleOffset4;\nuniform vec4 u_DiffuseScaleOffset5;\n\nvarying vec2 v_Texcoord0;\n\nuniform vec3 u_MaterialAmbient;\nuniform vec4 u_MaterialAlbedo;\n\n#ifdef LIGHTMAP\n\tuniform sampler2D u_LightMap;\n\tvarying vec2 v_LightMapUV;\n#endif\n\nvoid main()\n{\n\t#ifdef ExtendTerrain_DETAIL_NUM1\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r;\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM2\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r + color2.xyz * (1.0 - splatAlpha.r);\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM3\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord0 * u_DiffuseScaleOffset3.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r  + color2.xyz * splatAlpha.g + color3.xyz * (1.0 - splatAlpha.r - splatAlpha.g);\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM4\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord0 * u_DiffuseScaleOffset3.xy);\n\t\tvec4 color4 = texture2D(u_DiffuseTexture4, v_Texcoord0 * u_DiffuseScaleOffset4.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r  + color2.xyz * splatAlpha.g + color3.xyz * splatAlpha.b + color4.xyz * (1.0 - splatAlpha.r - splatAlpha.g - splatAlpha.b);\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM5\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord0 * u_DiffuseScaleOffset3.xy);\n\t\tvec4 color4 = texture2D(u_DiffuseTexture4, v_Texcoord0 * u_DiffuseScaleOffset4.xy);\n\t\tvec4 color5 = texture2D(u_DiffuseTexture5, v_Texcoord0 * u_DiffuseScaleOffset5.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r  + color2.xyz * splatAlpha.g + color3.xyz * splatAlpha.b + color4.xyz * splatAlpha.a + color5.xyz * (1.0 - splatAlpha.r - splatAlpha.g - splatAlpha.b - splatAlpha.a);\n\t#endif\n\t\tgl_FragColor.w = splatAlpha.a;\n\t\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n    vec3 normal = v_Normal;\n\tvec3 diffuse = vec3(0.0);\n\tvec3 ambient = vec3(0.0);\n\tvec3 specular= vec3(0.0);\n\tvec3 dif, amb, spe;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\n\tvec3 toEye;\n\t#ifdef FOG\n\t\ttoEye=u_CameraPos-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t#else\n\t\ttoEye=normalize(u_CameraPos-v_PositionWorld);\n\t#endif\n#endif\n\n#ifdef DIRECTIONLIGHT\n\tcomputeDirectionLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_DirectionLight,u_AmbientColor,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n \n#ifdef POINTLIGHT\n\tcomputePointLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_PointLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef SPOTLIGHT\n\tComputeSpotLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_SpotLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef RECEIVESHADOW\n\tfloat shadowValue = 1.0;\n\t#ifdef SHADOWMAP_PSSM3\n\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif\n\t#ifdef SHADOWMAP_PSSM2\n\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif \n\t#ifdef SHADOWMAP_PSSM1\n\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t#endif\n#endif\n\n#ifdef LIGHTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t#else\n\t\t#if defined(RECEIVESHADOW)\t\t\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue);\n\t\t\t//vec3 tColor= u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue + mix(vec3(0.15,0.15,0.15),vec3(0.0),shadowValue);\n\t\t\t//gl_FragColor.rgb*=tColor;\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t\t#endif\n\t#endif\n#endif\n\ngl_FragColor=gl_FragColor*u_MaterialAlbedo;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t#ifdef RECEIVESHADOW\n\t\tgl_FragColor = vec4( gl_FragColor.rgb*(ambient + diffuse*shadowValue) + specular * shadowValue,gl_FragColor.a);\n\t#else\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse) + specular, gl_FragColor.a);\n\t#endif\n#endif\n\n#ifdef FOG\n\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n#endif\n}\n\n\n\n\n\n';
                var E = un.add(g, e, t, n, i);
                E.addSpriteDefines(ci.shaderDefines), E.addMaterialDefines(Hn.shaderDefines), n = {
                    a_Position: 0,
                    a_OffsetVector: 41,
                    a_Texcoord0X: 38,
                    a_Texcoord0Y: 40,
                    a_BirthTime: 33
                }, i = {
                    u_MvpMatrix: [1, 2],
                    u_VMatrix: [1, 3],
                    u_PMatrix: [2, 3],
                    u_TilingOffset: [3, 1],
                    u_MainTexture: [1, 1],
                    u_MainColor: [2, 1],
                    u_CurTime: [3, 2],
                    u_LifeTime: [4, 2],
                    u_WidthCurve: [5, 2],
                    u_WidthCurveKeyLength: [6, 2],
                    u_GradientColorkey: [7, 2],
                    u_GradientAlphakey: [8, 2]
                };
                var S = Bn.nameKey.add("Trail");
                e = "attribute vec3 a_Position;\nattribute vec3 a_OffsetVector;\nattribute vec4 a_Color;\nattribute float a_Texcoord0X;\nattribute float a_Texcoord0Y;\nattribute float a_BirthTime;\n\nuniform mat4 u_VMatrix;\nuniform mat4 u_PMatrix;\n\nuniform vec4 u_TilingOffset;\n\nuniform float u_CurTime;\nuniform float u_LifeTime;\nuniform vec4 u_WidthCurve[10];\nuniform int u_WidthCurveKeyLength;\n\nuniform vec4 u_GradientColorkey[10];\nuniform vec2 u_GradientAlphakey[10];\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nfloat hermiteInterpolate(float t, float outTangent, float inTangent, float duration, float value1, float value2)\n{\n\tfloat t2 = t * t;\n\tfloat t3 = t2 * t;\n\tfloat a = 2.0 * t3 - 3.0 * t2 + 1.0;\n\tfloat b = t3 - 2.0 * t2 + t;\n\tfloat c = t3 - t2;\n\tfloat d = -2.0 * t3 + 3.0 * t2;\n\treturn a * value1 + b * outTangent * duration + c * inTangent * duration + d * value2;\n}\n\nfloat getCurWidth(in float normalizeTime)\n{\n\tif(normalizeTime == 0.0){\n\t\treturn u_WidthCurve[0].w;\n\t}\n\telse if(normalizeTime >= 1.0){\n\t\treturn u_WidthCurve[u_WidthCurveKeyLength - 1].w;\n\t}\n\telse{\n\t\tfor(int i = 0; i < 10; i ++ )\n\t\t{\n\t\t\tif(normalizeTime == u_WidthCurve[i].x)\n\t\t\t{\n\t\t\t\treturn u_WidthCurve[i].w;\n\t\t\t}\n\t\t\t\n\t\t\tvec4 lastFrame = u_WidthCurve[i];\n\t\t\tvec4 nextFrame = u_WidthCurve[i + 1];\n\t\t\tif(normalizeTime > lastFrame.x && normalizeTime < nextFrame.x)\n\t\t\t{\n\t\t\t\tfloat duration = nextFrame.x - lastFrame.x;\n\t\t\t\tfloat t = (normalizeTime - lastFrame.x) / duration;\n\t\t\t\tfloat outTangent = lastFrame.z;\n\t\t\t\tfloat inTangent = nextFrame.y;\n\t\t\t\tfloat value1 = lastFrame.w;\n\t\t\t\tfloat value2 = nextFrame.w;\n\t\t\t\treturn hermiteInterpolate(t, outTangent, inTangent, duration, value1, value2);\n\t\t\t}\n\t\t}\t\n\t}\n}\t\n\nvec4 getColorFromGradientByBlend(in vec4 gradientColors[10], in vec2 gradientAlphas[10], in float normalizeTime)\n{\n\tvec4 color;\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec4 gradientColor = gradientColors[i];\n\t\tfloat colorKey = gradientColor.w;\n\t\tif(colorKey >= normalizeTime)\n\t\t{\n\t\t\tvec4 lastGradientColor = gradientColors[i-1];\n\t\t\tfloat lastColorKey = lastGradientColor.w;\n\t\t\tfloat age = (normalizeTime - lastColorKey) / (colorKey - lastColorKey);\n\t\t\tcolor.rgb = mix(gradientColors[i-1].xyz, gradientColor.xyz, age);\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec2 gradientAlpha = gradientAlphas[i];\n\t\tfloat alphaKey = gradientAlpha.y;\n\t\tif(alphaKey >= normalizeTime)\n\t\t{\n\t\t\tvec2 lastGradientAlpha = gradientAlphas[i-1];\n\t\t\tfloat lastAlphaKey = lastGradientAlpha.y;\n\t\t\tfloat age = (normalizeTime - lastAlphaKey) / (alphaKey - lastAlphaKey);\n\t\t\tcolor.a = mix(lastGradientAlpha.x, gradientAlpha.x, age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn color;\n}\n\nvec4 getColorFromGradientByFixed(in vec4 gradientColors[10], in vec2 gradientAlphas[10], in float normalizeTime)\n{\n\tvec4 color;\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec4 gradientColor = gradientColors[i];\n\t\tif(gradientColor.w >= normalizeTime)\n\t\t{\n\t\t\tcolor.rgb = gradientColor.xyz;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec2 gradientAlpha = gradientAlphas[i];\n\t\tif(gradientAlpha.y >= normalizeTime)\n\t\t{\n\t\t\tcolor.a = gradientAlpha.x;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn color;\n}\n\nvoid main()\n{\n\tfloat normalizeTime = (u_CurTime - a_BirthTime) / u_LifeTime;\n\t\n\tgl_Position = u_PMatrix * u_VMatrix * vec4(a_Position + a_OffsetVector * getCurWidth(normalizeTime),1.0);\n\t\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0 = (vec2(a_Texcoord0X, a_Texcoord0Y) * u_TilingOffset.xy) + u_TilingOffset.zw;\n\t#else\n\t\tv_Texcoord0 = vec2(a_Texcoord0X, a_Texcoord0Y);\n\t#endif\n\t\n\t#ifdef GRADIENTMODE_BLEND\n\t\tv_Color = getColorFromGradientByBlend(u_GradientColorkey, u_GradientAlphakey, normalizeTime);\n\t#else\n\t\tv_Color = getColorFromGradientByFixed(u_GradientColorkey, u_GradientAlphakey, normalizeTime);\n\t#endif\n}\n\n\n\n", t = "#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nuniform sampler2D u_MainTexture;\nuniform vec4 u_MainColor;\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nvoid main()\n{\t\n\tvec4 color = 2.0 * u_MainColor * v_Color;\n\t#ifdef DIFFUSETEXTURE\n\t\tvec4 mainTextureColor = texture2D(u_MainTexture, v_Texcoord0);\n\t\tcolor *= mainTextureColor;\n\t#endif\n\tgl_FragColor = color;\n}\n\n";
                var D = un.add(S, e, t, n, i);
                Qn.SHADERDEFINE_DIFFUSETEXTURE = D.registerMaterialDefine("DIFFUSETEXTURE"), Qn.SHADERDEFINE_TILINGOFFSET = D.registerSpriteDefine("TILINGOFFSET"), Si.SHADERDEFINE_GRADIENTMODE_BLEND = D.registerSpriteDefine("GRADIENTMODE_BLEND")
            }, e
        }(),
        Ht = function() {
            function e() {
                this._data = null, this._data = []
            }
            m(e, "t_tl.d3.shader.ValusArray");
            var t = e.prototype;
            return t.setValue = function(e, t) {
                this._data[e] = t
            }, g(0, t, "data", function() {
                return this._data
            }), e
        }(),
        Gt = function() {
            function v() {
                this._currentPSSM = -1, this._numberOfPSSM = 3, this._maxDistance = 200, this._ratioOfDistance = 1 / this._numberOfPSSM, this._statesDirty = !0, this._lightCulling = null, this._renderTarget = null, this._lightVPMatrix = null, this._lightCameras = null, this._shadowQuenes = null, this._shadowMapTextureSize = 1024, this._scene = null, this._PCFType = 0, this._shaderValueLightVP = null, this._shaderValueVPs = null, this._spiltDistance = new Array(4), this._globalParallelLightDir = new Vt(0, -1, 0), this._boundingSphere = new Array(4), this._boundingBox = new Array(4), this._frustumPos = new Array(16), this._uniformDistance = new Array(4), this._logDistance = new Array(4), this._dimension = new Array(4), this._tempLookAt3 = new Vt, this._tempLookAt4 = new Pt, this._tempValue = new Pt, this._tempPos = new Vt, this._tempLightUp = new Vt, this._tempMin = new Pt, this._tempMax = new Pt, this._tempMatrix44 = new At, this._splitFrustumCulling = new Dt(At.DEFAULT), this._tempScaleMatrix44 = new At, this._shadowPCFOffset = new Ot(1 / 1024, 1 / 1024), this._shaderValueDistance = new Pt;
                var e = 0;
                for (e = 0; e < this._spiltDistance.length; e++) this._spiltDistance[e] = 0;
                for (e = 0; e < this._dimension.length; e++) this._dimension[e] = new Ot;
                for (e = 0; e < this._frustumPos.length; e++) this._frustumPos[e] = new Vt;
                for (e = 0; e < this._boundingBox.length; e++) this._boundingBox[e] = new St(new Vt, new Vt);
                for (e = 0; e < this._boundingSphere.length; e++) this._boundingSphere[e] = new Tt(new Vt, 0);
                At.createScaling(new Vt(.5, .5, 1), this._tempScaleMatrix44), this._tempScaleMatrix44.elements[12] = .5, this._tempScaleMatrix44.elements[13] = .5
            }
            m(v, "t_tl.d3.shadowMap.ParallelSplitShadowMap");
            var e = v.prototype;
            return e.setInfo = function(e, t, n, i, r, a) {
                3 < r && (this._numberOfPSSM = 3), this._scene = e, this._maxDistance = t, this.PSSMNum = r, this._globalParallelLightDir = n, this._ratioOfDistance = 1 / this._numberOfPSSM;
                for (var o = 0; o < this._spiltDistance.length; o++) this._spiltDistance[o] = 0;
                this._shadowMapTextureSize = i, this._shadowPCFOffset.x = 1 / this._shadowMapTextureSize, this._shadowPCFOffset.y = 1 / this._shadowMapTextureSize, this.setPCFType(a), this._statesDirty = !0
            }, e.setPCFType = function(e) {
                switch (this._PCFType = e, this._PCFType) {
                    case 0:
                        this._scene.addShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF_NO), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF1), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF2), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF3);
                        break;
                    case 1:
                        this._scene.addShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF1), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF_NO), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF2), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF3);
                        break;
                    case 2:
                        this._scene.addShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF2), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF_NO), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF1), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF3);
                        break;
                    case 3:
                        this._scene.addShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF3), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF_NO), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF1), this._scene.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF2)
                }
            }, e.getPCFType = function() {
                return this._PCFType
            }, e.setFarDistance = function(e) {
                this._maxDistance != e && (this._maxDistance = e, this._statesDirty = !0)
            }, e.getFarDistance = function() {
                return this._maxDistance
            }, e._setGlobalParallelLightDir = function(e) {
                this._globalParallelLightDir = e
            }, e.getGlobalParallelLightDir = function() {
                return this._globalParallelLightDir
            }, e.getCurrentPSSM = function() {
                return this._currentPSSM
            }, e.getLightCamera = function(e) {
                return this._lightCameras[e]
            }, e._beginSampler = function(e, t) {
                if (e < 0 || e > this._numberOfPSSM) throw new Error("ParallelSplitShadowMap: beginSample invalid index");
                this._currentPSSM = e, this._update(t)
            }, e.endSampler = function(e) {
                this._currentPSSM = -1
            }, e._calcAllLightCameraInfo = function(e) {
                if (1 === this._numberOfPSSM) this._beginSampler(0, e), this.endSampler(e);
                else
                    for (var t = 0, n = this._numberOfPSSM + 1; t < n; t++) this._beginSampler(t, e), this.endSampler(e)
            }, e._recalculate = function(e, t, n) {
                this._calcSplitDistance(e), this._calcBoundingBox(t, n), this._rebuildRenderInfo()
            }, e._update = function(e) {
                var t = e.nearPlane,
                    n = e.fieldOfView,
                    i = e.aspectRatio;
                (this._statesDirty || this.lastNearPlane !== t || this.lastFieldOfView !== n || this.lastAspectRatio !== i) && (this._recalculate(t, n, i), this._uploadShaderValue(), this._statesDirty = !1, this.lastNearPlane = t, this.lastFieldOfView = n, this.lastAspectRatio = i), this._calcLightViewProject(e)
            }, e._uploadShaderValue = function() {
                var e = this._scene;
                switch (this._numberOfPSSM) {
                    case 1:
                        e.addShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM1), e.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM2), e.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM3);
                        break;
                    case 2:
                        e.addShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM2), e.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM1), e.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM3);
                        break;
                    case 3:
                        e.addShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM3), e.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM1), e.removeShaderDefine(t_tl.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM2)
                }
                var t = e._shaderValues;
                switch (t.setValue(15, this._shaderValueDistance.elements), t.setValue(16, this._shaderValueLightVP), t.setValue(17, this._shadowPCFOffset.elements), this._numberOfPSSM) {
                    case 3:
                        t.setValue(18, this.getRenderTarget(1)), t.setValue(19, this.getRenderTarget(2)), t.setValue(20, this.getRenderTarget(3));
                        break;
                    case 2:
                        t.setValue(18, this.getRenderTarget(1)), t.setValue(19, this.getRenderTarget(2));
                        break;
                    case 1:
                        t.setValue(18, this.getRenderTarget(1))
                }
            }, e._calcSplitDistance = function(e) {
                var t = this._maxDistance,
                    n = 1 / this._numberOfPSSM,
                    i = 0;
                for (i = 0; i <= this._numberOfPSSM; i++) this._uniformDistance[i] = e + (t - e) * i * n;
                var r = t / e;
                for (i = 0; i <= this._numberOfPSSM; i++) {
                    var a = Math.pow(r, i * n);
                    this._logDistance[i] = e * a
                }
                for (i = 0; i <= this._numberOfPSSM; i++) this._spiltDistance[i] = this._uniformDistance[i] * this._ratioOfDistance + this._logDistance[i] * (1 - this._ratioOfDistance);
                this._shaderValueDistance.x = this._spiltDistance[1], this._shaderValueDistance.y = this._spiltDistance[2], this._shaderValueDistance.z = this._spiltDistance[3], this._shaderValueDistance.w = this._spiltDistance[4]
            }, e._calcBoundingBox = function(e, t) {
                var n, i, r, a, o = 3.1415926 * e / 180,
                    s = Math.tan(o / 2),
                    l = NaN,
                    h = NaN,
                    _ = NaN,
                    u = 0;
                for (u = 0; u <= this._numberOfPSSM; u++) {
                    h = (l = (_ = this._spiltDistance[u]) * s) * t;
                    var c = this._frustumPos[4 * u + 0].elements;
                    c[0] = -h, c[1] = -l, c[2] = -_, (c = this._frustumPos[4 * u + 1].elements)[0] = h, c[1] = -l, c[2] = -_, (c = this._frustumPos[4 * u + 2].elements)[0] = -h, c[1] = l, c[2] = -_, (c = this._frustumPos[4 * u + 3].elements)[0] = h, c[1] = l, c[2] = -_, (c = this._dimension[u].elements)[0] = h, c[1] = l
                }
                for (u = 1; u <= this._numberOfPSSM; u++) n = this._dimension[u].elements, (i = this._boundingBox[u].min.elements)[0] = -n[0], i[1] = -n[1], i[2] = -this._spiltDistance[u], (r = this._boundingBox[u].max.elements)[0] = n[0], r[1] = n[1], r[2] = -this._spiltDistance[u - 1], (a = this._boundingSphere[u].center.elements)[0] = .5 * (i[0] + r[0]), a[1] = .5 * (i[1] + r[1]), a[2] = .5 * (i[2] + r[2]), this._boundingSphere[u].radius = .5 * Math.sqrt(Math.pow(r[0] - i[0], 2) + Math.pow(r[1] - i[1], 2) + Math.pow(r[2] - i[2], 2));
                i = this._boundingBox[0].min.elements, n = this._dimension[this._numberOfPSSM].elements, i[0] = -n[0], i[1] = -n[1], i[2] = -this._spiltDistance[this._numberOfPSSM], (r = this._boundingBox[0].max.elements)[0] = n[0], r[1] = n[1], r[2] = -this._spiltDistance[0], (a = this._boundingSphere[0].center.elements)[0] = .5 * (i[0] + r[0]), a[1] = .5 * (i[1] + r[1]), a[2] = .5 * (i[2] + r[2]), this._boundingSphere[0].radius = .5 * Math.sqrt(Math.pow(r[0] - i[0], 2) + Math.pow(r[1] - i[1], 2) + Math.pow(r[2] - i[2], 2))
            }, e.calcSplitFrustum = function(e) {
                0 < this._currentPSSM ? At.createPerspective(3.1416 * e.fieldOfView / 180, e.aspectRatio, this._spiltDistance[this._currentPSSM - 1], this._spiltDistance[this._currentPSSM], this._tempMatrix44) : At.createPerspective(3.1416 * e.fieldOfView / 180, e.aspectRatio, this._spiltDistance[0], this._spiltDistance[this._numberOfPSSM], this._tempMatrix44), At.multiply(this._tempMatrix44, e.viewMatrix, this._tempMatrix44), this._splitFrustumCulling.matrix = this._tempMatrix44
            }, e._rebuildRenderInfo = function() {
                var e = this._numberOfPSSM + 1,
                    t = 0;
                if (null == this._renderTarget)
                    for (this._renderTarget = M(e), this._renderTarget[0] = null, t = 1; t < e; t++) this._renderTarget[t] = new ai(this._shadowMapTextureSize, this._shadowMapTextureSize, 6408, 5121, 33189, !1, !1, 9728, 9728);
                else if (this._renderTarget.length != e)
                    for (this.disposeAllRenderTarget(), this._renderTarget.length = e, this._renderTarget[0] = null, t = 1; t < e; t++) this._renderTarget[t] = new ai(this._shadowMapTextureSize, this._shadowMapTextureSize, 6408, 5121, 33189, !1, !1, 9728, 9728);
                else
                    for (t = 1; t < e; t++) null != this._renderTarget[t] && this._renderTarget[t].width == this._shadowMapTextureSize && this._renderTarget[t].height == this._shadowMapTextureSize || (null != this._renderTarget[t] && this._renderTarget[t].destroy(), this._renderTarget[t] = new ai(this._shadowMapTextureSize, this._shadowMapTextureSize, 6408, 5121, 33189, !1, !1, 9728, 9728));
                if (null == this._lightCulling || this._lightCulling.length != e)
                    for (this._lightCulling ? this._lightCulling.length = e : this._lightCulling = M(e), t = 0; t < this._lightCulling.length; t++) this._lightCulling[t] = new Dt(At.DEFAULT);
                if (null == this._lightVPMatrix || this._lightVPMatrix.length != e)
                    for (this._lightVPMatrix ? this._lightVPMatrix.length = e : this._lightVPMatrix = M(e), t = 0; t < this._lightVPMatrix.length; t++) this._lightVPMatrix[t] = new At;
                if (null == this._lightCameras || this._lightCameras.length != e)
                    for (this._lightCameras ? this._lightCameras.length = e : this._lightCameras = M(e), t = 0; t < this._lightCameras.length; t++) this._lightCameras[t] = new mi, this._lightCameras[t].name = "lightCamera" + t;
                if (null == this._shadowQuenes || this._shadowQuenes.length != this._numberOfPSSM)
                    for (this._shadowQuenes ? this._shadowQuenes.length = this._numberOfPSSM : this._shadowQuenes = M(this._numberOfPSSM), t = 0; t < this._shadowQuenes.length; t++) this._shadowQuenes[t] = new $(this._scene);
                if (null == this._shaderValueVPs || this._shaderValueVPs.length != e)
                    for (this._shaderValueVPs ? this._shaderValueVPs.length = e : this._shaderValueVPs = M(e), this._shaderValueLightVP = new Float32Array(16 * e), t = 0; t < e; t++) this._shaderValueVPs[t] = new Float32Array(this._shaderValueLightVP.buffer, 64 * t)
            }, e._calcLightViewProject = function(e) {
                var t = this._boundingSphere[this._currentPSSM],
                    n = e.transform.worldMatrix;
                t.radius;
                t.center.cloneTo(this._tempLookAt3), Vt.transformV3ToV4(this._tempLookAt3, n, this._tempLookAt4);
                var i = this._tempLookAt3.elements,
                    r = this._tempLookAt4.elements;
                i[0] = r[0], i[1] = r[1], i[2] = r[2];
                var a = this._tempLightUp.elements,
                    o = e.forward.elements;
                a[0] = o[0], a[1] = 1, a[2] = o[2], Vt.normalize(this._tempLightUp, this._tempLightUp), Vt.scale(this._globalParallelLightDir, 4 * t.radius, this._tempPos), Vt.subtract(this._tempLookAt3, this._tempPos, this._tempPos);
                var s = this._lightCameras[this._currentPSSM];
                s.transform.position = this._tempPos, s.transform.lookAt(this._tempLookAt3, this._tempLightUp, !1);
                var l = this._tempMax.elements,
                    h = this._tempMin.elements;
                l[0] = l[1] = l[2] = -1e5, l[3] = 1, h[0] = h[1] = h[2] = 1e5, h[3] = 1, At.multiply(s.viewMatrix, n, this._tempMatrix44);
                var _ = this._tempValue.elements,
                    u = [];
                u.length = 8, this._boundingBox[this._currentPSSM].getCorners(u);
                for (var c = 0; c < 8; c++) {
                    var d = u[c].elements;
                    _[0] = d[0], _[1] = d[1], _[2] = d[2], _[3] = 1, Pt.transformByM4x4(this._tempValue, this._tempMatrix44, this._tempValue), h[0] = _[0] < h[0] ? _[0] : h[0], h[1] = _[1] < h[1] ? _[1] : h[1], h[2] = _[2] < h[2] ? _[2] : h[2], l[0] = _[0] > l[0] ? _[0] : l[0], l[1] = _[1] > l[1] ? _[1] : l[1], l[2] = _[2] > l[2] ? _[2] : l[2]
                }
                Pt.add(this._tempMax, this._tempMin, this._tempValue), _[0] *= .5, _[1] *= .5, _[2] *= .5, _[3] = 1, Pt.transformByM4x4(this._tempValue, s.transform.worldMatrix, this._tempValue);
                var f = Math.abs(-this._tempMax.z),
                    m = f > this._maxDistance ? f : this._maxDistance;
                Vt.scale(this._globalParallelLightDir, m, this._tempPos);
                var p = this._tempPos.elements;
                p[0] = _[0] - p[0], p[1] = _[1] - p[1], p[2] = _[2] - p[2], s.transform.position = this._tempPos, s.transform.lookAt(this._tempLookAt3, this._tempLightUp, !1), At.createOrthoOffCenterRH(h[0], l[0], h[1], l[1], 1, m + .5 * (l[2] - h[2]), s.projectionMatrix), s.projectionViewMatrix.cloneTo(this._lightVPMatrix[this._currentPSSM]), this._lightCulling[this._currentPSSM].matrix = this._lightVPMatrix[this._currentPSSM], v.multiplyMatrixOutFloat32Array(this._tempScaleMatrix44, this._lightVPMatrix[this._currentPSSM], this._shaderValueVPs[this._currentPSSM])
            }, e.getLightFrustumCulling = function(e) {
                return this._lightCulling[e]
            }, e.getSplitFrustumCulling = function() {
                return this._splitFrustumCulling
            }, e.getSplitDistance = function(e) {
                return this._spiltDistance[e]
            }, e.setShadowMapTextureSize = function(e) {
                e !== this._shadowMapTextureSize && (this._shadowMapTextureSize = e, this._shadowPCFOffset.x = 1 / this._shadowMapTextureSize, this._shadowPCFOffset.y = 1 / this._shadowMapTextureSize, this._statesDirty = !0)
            }, e.getShadowMapTextureSize = function() {
                return this._shadowMapTextureSize
            }, e.beginRenderTarget = function(e) {
                this._renderTarget[e].start()
            }, e.endRenderTarget = function(e) {
                this._renderTarget[e].end()
            }, e.getRenderTarget = function(e) {
                return this._renderTarget[e]
            }, e.disposeAllRenderTarget = function() {
                for (var e = 0, t = this._numberOfPSSM + 1; e < t; e++) this._renderTarget[e] && (this._renderTarget[e].destroy(), this._renderTarget[e] = null)
            }, g(0, e, "PSSMNum", function() {
                return this._numberOfPSSM
            }, function(e) {
                e = (e = 0 < e ? e : 1) <= 3 ? e : 3, this._numberOfPSSM != e && (this._numberOfPSSM = e, this._ratioOfDistance = 1 / this._numberOfPSSM, this._statesDirty = !0)
            }), v.multiplyMatrixOutFloat32Array = function(e, t, n) {
                var i, r, a, o, s, l, h;
                for (r = e.elements, a = t.elements, i = 0; i < 4; i++) o = r[i], s = r[i + 4], l = r[i + 8], h = r[i + 12], n[i] = o * a[0] + s * a[1] + l * a[2] + h * a[3], n[i + 4] = o * a[4] + s * a[5] + l * a[6] + h * a[7], n[i + 8] = o * a[8] + s * a[9] + l * a[10] + h * a[11], n[i + 12] = o * a[12] + s * a[13] + l * a[14] + h * a[15]
            }, v.SHADERDEFINE_RECEIVE_SHADOW = 1, v.SHADERDEFINE_CAST_SHADOW = 512, v.SHADERDEFINE_SHADOW_PSSM1 = 1024, v.SHADERDEFINE_SHADOW_PSSM2 = 2048, v.SHADERDEFINE_SHADOW_PSSM3 = 4096, v.SHADERDEFINE_SHADOW_PCF_NO = 8192, v.SHADERDEFINE_SHADOW_PCF1 = 16384, v.SHADERDEFINE_SHADOW_PCF2 = 32768, v.SHADERDEFINE_SHADOW_PCF3 = 65536, v.MAX_PSSM_COUNT = 3, v
        }(),
        zt = function() {
            function T() {
                this._boundingSphere = null, this._boundingBox = null, this._sizeOfY = null, this._currentLODLevel = 0, this._lastDistanceToEye = NaN, this._originalBoundingSphere = null, this._originalBoundingBox = null, this._originalBoundingBoxCorners = null, this._bUseStrip = !1, this._gridSize = NaN, this._beginGridX = 0, this._beginGridZ = 0, this._LODError = null, T.__init__(), this._currentLODLevel = 0
            }
            m(T, "t_tl.d3.terrain.TerrainLeaf");
            var e = T.prototype;
            return e.calcVertextNorml = function(e, t, n, i, r, a) {
                var o = 0,
                    s = 0;
                s = -1 * T.getHeightFromTerrainHeightData(e - 1, t - 1, n, i, r), s += -1 * T.getHeightFromTerrainHeightData(e - 1, t, n, i, r), s += -1 * T.getHeightFromTerrainHeightData(e - 1, t + 1, n, i, r), s += 1 * T.getHeightFromTerrainHeightData(e + 1, t - 1, n, i, r), s += 1 * T.getHeightFromTerrainHeightData(e + 1, t, n, i, r), s += 1 * T.getHeightFromTerrainHeightData(e + 1, t + 1, n, i, r), o = -1 * T.getHeightFromTerrainHeightData(e - 1, t - 1, n, i, r), o += -1 * T.getHeightFromTerrainHeightData(e, t - 1, n, i, r), o += -1 * T.getHeightFromTerrainHeightData(e + 1, t - 1, n, i, r), o += 1 * T.getHeightFromTerrainHeightData(e - 1, t + 1, n, i, r), o += 1 * T.getHeightFromTerrainHeightData(e, t + 1, n, i, r), o += 1 * T.getHeightFromTerrainHeightData(e + 1, t + 1, n, i, r), a.x = -s, a.y = 6, a.z = -o, Vt.normalize(a, a)
            }, e.calcVertextNormlUV = function(e, t, n, i, r) {
                r.x = e / n, r.y = t / i, r.z = t / i
            }, e.calcVertextBuffer = function(e, t, n, i, r, a, o, s, l, h, _, u) {
                if (1 == u && !T.__ADAPT_MATRIX__) {
                    T.__ADAPT_MATRIX__ = new At;
                    var c = new At;
                    At.createRotationY(Math.PI, T.__ADAPT_MATRIX__), At.createTranslate(new Vt(0, 0, (_ - 1) * r), c), At.multiply(c, T.__ADAPT_MATRIX__, T.__ADAPT_MATRIX__), T.__ADAPT_MATRIX_INV__ = new At, T.__ADAPT_MATRIX__.invert(T.__ADAPT_MATRIX_INV__)
                }
                this._gridSize = r, this._beginGridX = e * T.CHUNK_GRID_NUM + n, this._beginGridZ = t * T.CHUNK_GRID_NUM + i;
                for (var d = o * s, f = 2147483647, m = -2147483648, p = new Vt, v = 0, g = T.LEAF_GRID_NUM + 1; v < g; v++)
                    for (var E = 0, S = T.LEAF_GRID_NUM + 1; E < S; E++) T.__VECTOR3__.x = (this._beginGridX + E) * this._gridSize, T.__VECTOR3__.z = (this._beginGridZ + v) * this._gridSize, T.__VECTOR3__.y = l[(this._beginGridZ + v) * h + (this._beginGridX + E)], f = T.__VECTOR3__.y < f ? T.__VECTOR3__.y : f, m = T.__VECTOR3__.y > m ? T.__VECTOR3__.y : m, T.__ADAPT_MATRIX__ && Vt.transformV3ToV3(T.__VECTOR3__, T.__ADAPT_MATRIX__, T.__VECTOR3__), a[d] = T.__VECTOR3__.x, a[++d] = T.__VECTOR3__.y, a[++d] = T.__VECTOR3__.z, d++, this.calcVertextNormlUV(this._beginGridX + E, this._beginGridZ + v, h, _, p), a[d] = p.x, a[++d] = p.y, a[++d] = p.z, a[++d] = (n + E) / T.CHUNK_GRID_NUM, a[++d] = (i + v) / T.CHUNK_GRID_NUM, a[++d] = this._beginGridX + E, a[++d] = this._beginGridZ + v, d++;
                this._sizeOfY = new Ot(f - 1, m + 1), this.calcLODErrors(l, h, _), this.calcOriginalBoudingBoxAndSphere()
            }, e.calcSkirtVertextBuffer = function(e, t, n, i, r, a, o, s, l, h, _) {
                this._gridSize = r, this._beginGridX = e * T.CHUNK_GRID_NUM + n, this._beginGridZ = t * T.CHUNK_GRID_NUM + i;
                var u = o * s,
                    c = 0,
                    d = 0,
                    f = T.LEAF_GRID_NUM + 1,
                    m = new Vt,
                    p = 0,
                    v = 0;
                for (c = 0; c < 2; c++)
                    for (d = 0; d < f; d++) T.__VECTOR3__.x = (this._beginGridX + d) * this._gridSize, T.__VECTOR3__.y = 1 == c ? l[this._beginGridZ * h + (this._beginGridX + d)] : -this._gridSize, T.__VECTOR3__.z = (this._beginGridZ + 0) * this._gridSize, T.__ADAPT_MATRIX__ && Vt.transformV3ToV3(T.__VECTOR3__, T.__ADAPT_MATRIX__, T.__VECTOR3__), a[u] = T.__VECTOR3__.x, a[++u] = T.__VECTOR3__.y, a[++u] = T.__VECTOR3__.z, u++, p = 0 == c ? this._beginGridZ - 1 : this._beginGridZ, this.calcVertextNormlUV(this._beginGridX + d, p, h, _, m), a[u] = m.x, a[++u] = m.y, a[++u] = m.z, a[++u] = (n + d) / T.CHUNK_GRID_NUM, a[++u] = (i + 0) / T.CHUNK_GRID_NUM, a[++u] = this._beginGridX + d, a[++u] = p, u++;
                for (c = 0; c < 2; c++)
                    for (d = 0; d < f; d++) T.__VECTOR3__.x = (this._beginGridX + d) * this._gridSize, T.__VECTOR3__.y = 0 == c ? l[(this._beginGridZ + T.LEAF_GRID_NUM) * h + (this._beginGridX + d)] : -this._gridSize, T.__VECTOR3__.z = (this._beginGridZ + T.LEAF_GRID_NUM) * this._gridSize, T.__ADAPT_MATRIX__ && Vt.transformV3ToV3(T.__VECTOR3__, T.__ADAPT_MATRIX__, T.__VECTOR3__), a[u] = T.__VECTOR3__.x, a[++u] = T.__VECTOR3__.y, a[++u] = T.__VECTOR3__.z, u++, p = 0 == c ? this._beginGridZ + T.LEAF_GRID_NUM : this._beginGridZ + T.LEAF_GRID_NUM + 1, this.calcVertextNormlUV(this._beginGridX + d, p, h, _, m), a[u] = m.x, a[++u] = m.y, a[++u] = m.z, a[++u] = (n + d) / T.CHUNK_GRID_NUM, a[++u] = (i + T.LEAF_GRID_NUM) / T.CHUNK_GRID_NUM, a[++u] = this._beginGridX + d, a[++u] = p, u++;
                for (c = 0; c < 2; c++)
                    for (d = 0; d < f; d++) T.__VECTOR3__.x = (this._beginGridX + 0) * this._gridSize, T.__VECTOR3__.y = 0 == c ? l[(this._beginGridZ + d) * h + (this._beginGridX + 0)] : -this._gridSize, T.__VECTOR3__.z = (this._beginGridZ + d) * this._gridSize, T.__ADAPT_MATRIX__ && Vt.transformV3ToV3(T.__VECTOR3__, T.__ADAPT_MATRIX__, T.__VECTOR3__), a[u] = T.__VECTOR3__.x, a[++u] = T.__VECTOR3__.y, a[++u] = T.__VECTOR3__.z, u++, v = 0 == c ? this._beginGridX : this._beginGridX - 1, this.calcVertextNormlUV(v, this._beginGridZ + d, h, _, m), a[u] = m.x, a[++u] = m.y, a[++u] = m.z, a[++u] = (n + 0) / T.CHUNK_GRID_NUM, a[++u] = (i + d) / T.CHUNK_GRID_NUM, a[++u] = v, a[++u] = this._beginGridZ + d, u++;
                for (c = 0; c < 2; c++)
                    for (d = 0; d < f; d++) T.__VECTOR3__.x = (this._beginGridX + T.LEAF_GRID_NUM) * this._gridSize, T.__VECTOR3__.y = 1 == c ? l[(this._beginGridZ + d) * h + (this._beginGridX + T.LEAF_GRID_NUM)] : -this._gridSize, T.__VECTOR3__.z = (this._beginGridZ + d) * this._gridSize, T.__ADAPT_MATRIX__ && Vt.transformV3ToV3(T.__VECTOR3__, T.__ADAPT_MATRIX__, T.__VECTOR3__), a[u] = T.__VECTOR3__.x, a[++u] = T.__VECTOR3__.y, a[++u] = T.__VECTOR3__.z, u++, v = 0 == c ? this._beginGridX + T.LEAF_GRID_NUM + 1 : this._beginGridX + T.LEAF_GRID_NUM, this.calcVertextNormlUV(v, this._beginGridZ + d, h, _, m), a[u] = m.x, a[++u] = m.y, a[++u] = m.z, a[++u] = (n + T.LEAF_GRID_NUM) / T.CHUNK_GRID_NUM, a[++u] = (i + d) / T.CHUNK_GRID_NUM, a[++u] = v, a[++u] = this._beginGridZ + d, u++
            }, e.calcOriginalBoudingBoxAndSphere = function() {
                var e = new Vt(this._beginGridX * this._gridSize, this._sizeOfY.x, this._beginGridZ * this._gridSize),
                    t = new Vt((this._beginGridX + T.LEAF_GRID_NUM) * this._gridSize, this._sizeOfY.y, (this._beginGridZ + T.LEAF_GRID_NUM) * this._gridSize);
                T.__ADAPT_MATRIX__ && (Vt.transformV3ToV3(e, T.__ADAPT_MATRIX__, e), Vt.transformV3ToV3(t, T.__ADAPT_MATRIX__, t)), this._originalBoundingBox = new St(e, t);
                var n = new Vt;
                Vt.subtract(t, e, n), Vt.scale(n, .5, n);
                var i = new Vt;
                Vt.add(e, n, i), this._originalBoundingSphere = new Tt(i, Vt.scalarLength(n)), this._originalBoundingBoxCorners = M(8, null), this._originalBoundingBox.getCorners(this._originalBoundingBoxCorners), this._boundingBox = new St(new Vt(-.5, -.5, -.5), new Vt(.5, .5, .5)), this._boundingSphere = new Tt(new Vt(0, 0, 0), 1)
            }, e.calcLeafBoudingBox = function(e) {
                for (var t = 0; t < 8; t++) Vt.transformCoordinate(this._originalBoundingBoxCorners[t], e, tn._tempBoundBoxCorners[t]);
                St.createfromPoints(tn._tempBoundBoxCorners, this._boundingBox)
            }, e.calcLeafBoudingSphere = function(e, t) {
                Vt.transformCoordinate(this._originalBoundingSphere.center, e, this._boundingSphere.center), this._boundingSphere.radius = this._originalBoundingSphere.radius * t
            }, e.calcLODErrors = function(e, t, n) {
                this._LODError = new Float32Array(T._maxLODLevel + 1);
                for (var i = 1, r = 0, a = T._maxLODLevel + 1; r < a; r++) {
                    for (var o = 0, s = 0, l = T.LEAF_GRID_NUM; s < l; s += i)
                        for (var h = 0, _ = T.LEAF_GRID_NUM; h < _; h += i)
                            for (var u = e[(this._beginGridZ + s) * t + (this._beginGridX + h)], c = e[(this._beginGridZ + s) * t + (this._beginGridX + h) + i], d = e[(this._beginGridZ + s + i) * t + (this._beginGridX + h)], f = e[(this._beginGridZ + s + i) * t + (this._beginGridX + h) + i], m = 0; m < i; m++)
                                for (var p = m / i, v = 0; v < i; v++) {
                                    var g = v / i,
                                        E = e[(this._beginGridZ + s + m) * t + (this._beginGridX + h) + v],
                                        S = g + p <= 1 ? u + (c - u) * g + (d - u) * p : f + (d - f) * (1 - g) + (c - f) * (1 - p),
                                        D = Math.abs(S - E);
                                    o = Math.max(o, D)
                                }
                    i *= 2, this._LODError[r] = o
                }
            }, e.determineLod = function(e, t, n, i) {
                var r = Vt.distance(e, this._boundingSphere.center),
                    a = T._maxLODLevel;
                if (!i) {
                    if (this._lastDistanceToEye == r) return this._currentLODLevel;
                    this._lastDistanceToEye > r && (a = this._currentLODLevel)
                }
                for (var o = a; 1 <= o; o--)
                    if (fi.LOD_DISTANCE_FACTOR * this._LODError[o] / r * t < n) {
                        this._currentLODLevel = o;
                        break
                    }
                return this._lastDistanceToEye = r, this._currentLODLevel
            }, T.__init__ = function() {
                if (!T._bInit) {
                    var e = T.CHUNK_GRID_NUM / T.LEAF_GRID_NUM * (T.CHUNK_GRID_NUM / T.LEAF_GRID_NUM);
                    T._planeLODIndex = M(e);
                    var t = 0,
                        n = 0,
                        i = 0,
                        r = 0,
                        a = 0,
                        o = 0,
                        s = null,
                        l = null;
                    for (t = 0; t < e; t++) T._planeLODIndex[t] = new Array(T._maxLODLevel + 1);
                    for (t = 0, r = T._maxLODLevel + 1; t < r; t++) T._planeLODIndex[0][t] = T.calcPlaneLODIndex(t);
                    for (t = 1; t < e; t++)
                        for (o = t * T.LEAF_PLANE_VERTEXT_COUNT, n = 0, a = T._maxLODLevel + 1; n < a; n++) {
                            for (s = T._planeLODIndex[0][n], l = new Uint16Array(s.length), i = 0; i < s.length; i++) l[i] = s[i] + o;
                            T._planeLODIndex[t][n] = l
                        }
                    for (T._skirtLODIndex = M(e), t = 0; t < e; t++) T._skirtLODIndex[t] = new Array(T._maxLODLevel + 1);
                    for (t = 0, r = T._maxLODLevel + 1; t < r; t++) T._skirtLODIndex[0][t] = T.calcSkirtLODIndex(t);
                    for (t = 1; t < e; t++)
                        for (o = t * T.LEAF_SKIRT_VERTEXT_COUNT, n = 0, a = T._maxLODLevel + 1; n < a; n++) {
                            for (s = T._skirtLODIndex[0][n], l = new Uint16Array(s.length), i = 0; i < s.length; i++) l[i] = s[i] + o;
                            T._skirtLODIndex[t][n] = l
                        }
                    T._bInit = !0
                }
            }, T.getPlaneLODIndex = function(e, t) {
                return T._planeLODIndex[e][t]
            }, T.getSkirtLODIndex = function(e, t) {
                return T._skirtLODIndex[e][t]
            }, T.calcPlaneLODIndex = function(e) {
                T._maxLODLevel < e && (e = T._maxLODLevel);
                var t = T.LEAF_GRID_NUM + 1,
                    n = 0,
                    i = null,
                    r = t_tl.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / Math.pow(2, e);
                i = new Uint16Array(r * r * 6);
                for (var a = t_tl.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / r, o = 0; o < T.LEAF_GRID_NUM; o += a)
                    for (var s = 0; s < T.LEAF_GRID_NUM; s += a) i[n] = (o + a) * t + s, i[++n] = o * t + s, i[++n] = o * t + s + a, i[++n] = o * t + s + a, i[++n] = (o + a) * t + s + a, i[++n] = (o + a) * t + s, n++;
                return i
            }, T.calcSkirtLODIndex = function(e) {
                T._maxLODLevel < e && (e = T._maxLODLevel);
                var t = T.CHUNK_GRID_NUM / T.LEAF_GRID_NUM * (T.CHUNK_GRID_NUM / T.LEAF_GRID_NUM) * T.LEAF_PLANE_VERTEXT_COUNT,
                    n = T.LEAF_GRID_NUM + 1,
                    i = 0,
                    r = null,
                    a = t_tl.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / Math.pow(2, e);
                r = new Uint16Array(4 * a * 6);
                for (var o = t_tl.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / a, s = 0; s < 4; s++) {
                    for (var l = 0; l < T.LEAF_GRID_NUM; l += o) r[i] = t + n + l, r[++i] = t + l, r[++i] = t + l + o, r[++i] = t + l + o, r[++i] = t + n + l + o, r[++i] = t + n + l, i++;
                    t += 2 * n
                }
                return r
            }, T.getHeightFromTerrainHeightData = function(e, t, n, i, r) {
                return n[(t = r <= (t = t < 0 ? 0 : t) ? r - 1 : t) * i + (e = i <= (e = e < 0 ? 0 : e) ? i - 1 : e)]
            }, T.CHUNK_GRID_NUM = 64, T.LEAF_GRID_NUM = 32, T.__ADAPT_MATRIX__ = null, T.__ADAPT_MATRIX_INV__ = null, T._planeLODIndex = null, T._skirtLODIndex = null, T._bInit = !1, u(T, ["LEAF_PLANE_VERTEXT_COUNT", function() {
                return this.LEAF_PLANE_VERTEXT_COUNT = (T.LEAF_GRID_NUM + 1) * (T.LEAF_GRID_NUM + 1)
            }, "LEAF_SKIRT_VERTEXT_COUNT", function() {
                return this.LEAF_SKIRT_VERTEXT_COUNT = 2 * (T.LEAF_GRID_NUM + 1) * 4
            }, "LEAF_VERTEXT_COUNT", function() {
                return this.LEAF_VERTEXT_COUNT = T.LEAF_PLANE_VERTEXT_COUNT + T.LEAF_SKIRT_VERTEXT_COUNT
            }, "LEAF_PLANE_MAX_INDEX_COUNT", function() {
                return this.LEAF_PLANE_MAX_INDEX_COUNT = T.LEAF_GRID_NUM * T.LEAF_GRID_NUM * 6
            }, "LEAF_SKIRT_MAX_INDEX_COUNT", function() {
                return this.LEAF_SKIRT_MAX_INDEX_COUNT = 4 * T.LEAF_GRID_NUM * 6
            }, "LEAF_MAX_INDEX_COUNT", function() {
                return this.LEAF_MAX_INDEX_COUNT = T.LEAF_PLANE_MAX_INDEX_COUNT + T.LEAF_SKIRT_MAX_INDEX_COUNT
            }, "__VECTOR3__", function() {
                return this.__VECTOR3__ = new Vt
            }, "_maxLODLevel", function() {
                return this._maxLODLevel = Math.log2(T.LEAF_GRID_NUM)
            }]), T
        }(),
        kt = function() {
            function e() {
                this.alphaMap = null, this.detailID = null, this.normalMap = null
            }
            return m(e, "t_tl.d3.terrain.unit.ChunkInfo"), e
        }(),
        Wt = function() {
            function e() {
                this.diffuseTexture = null, this.normalTexture = null, this.scale = null, this.offset = null
            }
            return m(e, "t_tl.d3.terrain.unit.DetailTextureInfo"), e
        }(),
        Xt = function() {
            function e() {
                this.ambientColor = null, this.diffuseColor = null, this.specularColor = null
            }
            return m(e, "t_tl.d3.terrain.unit.MaterialInfo"), e
        }(),
        Zt = function() {
            function c() {}
            return m(c, "t_tl.d3.utils.Physics"), c.__init__ = function() {
                c._layerCollsionMatrix.length = 31;
                for (var e = 0; e < 31; e++) {
                    var t = [],
                        n = 31 - e;
                    t.length = n;
                    for (var i = 0; i < n; i++) t[i] = i === n - 1;
                    c._layerCollsionMatrix[e] = t
                }
            }, c.setLayerCollision = function(e, t, n) {
                c._layerCollsionMatrix[e.number][30 - t.number] = n
            }, c.getLayerCollision = function(e, t) {
                return c._layerCollsionMatrix[e.number][30 - t.number]
            }, c.setColliderCollision = function(e, t, n) {
                n ? (delete e._ignoreCollisonMap[t.id], delete t._ignoreCollisonMap[e.id]) : (e._ignoreCollisonMap[t.id] = t)._ignoreCollisonMap[e.id] = e
            }, c.getIColliderCollision = function(e, t) {
                return !!e._ignoreCollisonMap[t.id]
            }, c.rayCast = function(e, t, n, i) {
                void 0 === n && (n = 179e306), void 0 === i && (i = 0), c._outHitAllInfo.length = 0;
                for (var r = F.getLayerByNumber(i)._colliders, a = 0, o = r.length; a < o; a++) {
                    var s = r[a];
                    if (s.enable && (s.raycast(e, c._outHitInfo, n), -1 !== c._outHitInfo.distance && c._outHitInfo.distance <= n)) {
                        var l = new jt;
                        c._outHitInfo.cloneTo(l), c._outHitAllInfo.push(l)
                    }
                }
                if (0 == c._outHitAllInfo.length) return t.sprite3D = null, void(t.distance = -1);
                for (var h = Number.MAX_VALUE, _ = 0, u = 0; u < c._outHitAllInfo.length; u++) c._outHitAllInfo[u].distance < h && (h = c._outHitAllInfo[u].distance, _ = u);
                c._outHitAllInfo[_].cloneTo(t)
            }, c.rayCastAll = function(e, t, n, i) {
                void 0 === n && (n = 179e306), void 0 === i && (i = 0), t.length = 0;
                for (var r = F.getLayerByNumber(i)._colliders, a = 0, o = r.length; a < o; a++) {
                    var s = r[a];
                    if (s.enable && (c._outHitInfo.distance = -1, c._outHitInfo.sprite3D = null, s.raycast(e, c._outHitInfo, n), -1 !== c._outHitInfo.distance && c._outHitInfo.distance <= n)) {
                        var l = new jt;
                        c._outHitInfo.cloneTo(l), t.push(l)
                    }
                }
            }, c._outHitAllInfo = [], c._layerCollsionMatrix = [], u(c, ["_outHitInfo", function() {
                return this._outHitInfo = new jt
            }, "collisionManager", function() {
                return this.collisionManager = new rn
            }, "gravity", function() {
                return this.gravity = new Vt(0, -9.81, 0)
            }]), c
        }(),
        Yt = function() {
            function Y() {}
            return m(Y, "t_tl.d3.utils.Picker"), Y.calculateCursorRay = function(e, t, n, i, r, a) {
                var o = e.elements[0],
                    s = e.elements[1],
                    l = Y._tempVector30,
                    h = l.elements;
                h[0] = o, h[1] = s, h[2] = t.minDepth;
                var _ = Y._tempVector31,
                    u = _.elements;
                u[0] = o, u[1] = s, u[2] = t.maxDepth;
                var c = a.origin,
                    d = Y._tempVector32;
                t.unprojectFromWVP(l, n, i, r, c), t.unprojectFromWVP(_, n, i, r, d);
                var f = a.direction.elements;
                f[0] = d.x - c.x, f[1] = d.y - c.y, f[2] = d.z - c.z, Vt.normalize(a.direction, a.direction)
            }, Y.rayIntersectsPositionsAndIndices = function(e, t, n, i, r) {
                for (var a = n.vertexStride / 4, o = n.getVertexElementByUsage(0).offset / 4, s = Number.MAX_VALUE, l = -1, h = -1, _ = -1, u = 0; u < i.length; u += 3) {
                    var c = Y._tempVector35,
                        d = c.elements,
                        f = i[u] * a,
                        m = f + o;
                    d[0] = t[m], d[1] = t[m + 1], d[2] = t[m + 2];
                    var p = Y._tempVector36,
                        v = p.elements,
                        g = i[u + 1] * a,
                        E = g + o;
                    v[0] = t[E], v[1] = t[E + 1], v[2] = t[E + 2];
                    var S = Y._tempVector37,
                        D = S.elements,
                        T = i[u + 2] * a,
                        x = T + o;
                    D[0] = t[x], D[1] = t[x + 1], D[2] = t[x + 2];
                    var M = t_tl.d3.utils.Picker.rayIntersectsTriangle(e, c, p, S);
                    !isNaN(M) && M < s && (s = M, l = f, h = g, _ = T)
                }
                if (s !== Number.MAX_VALUE) {
                    r.distance = s, Vt.scale(e.direction, s, r.position), Vt.add(e.origin, r.position, r.position);
                    var R = r.trianglePositions,
                        A = R[0],
                        I = R[1],
                        y = R[2],
                        C = A.elements,
                        N = I.elements,
                        w = y.elements,
                        O = l + o;
                    C[0] = t[O], C[1] = t[O + 1], C[2] = t[O + 2];
                    var V = h + o;
                    N[0] = t[V], N[1] = t[V + 1], N[2] = t[V + 2];
                    var P = _ + o;
                    w[0] = t[P], w[1] = t[P + 1], w[2] = t[P + 2];
                    var L = n.getVertexElementByUsage(3);
                    if (L) {
                        var b = L.offset / 4,
                            F = r.triangleNormals,
                            B = F[0],
                            U = F[1],
                            H = F[2],
                            G = B.elements,
                            z = U.elements,
                            k = H.elements,
                            W = l + b;
                        G[0] = t[W], G[1] = t[W + 1], G[2] = t[W + 2];
                        var X = h + b;
                        z[0] = t[X], z[1] = t[X + 1], z[2] = t[X + 2];
                        var Z = _ + b;
                        k[0] = t[Z], k[1] = t[Z + 1], k[2] = t[Z + 2]
                    }
                    return !0
                }
                return r.position.toDefault(), r.distance = Number.MAX_VALUE, r.trianglePositions[0].toDefault(), r.trianglePositions[1].toDefault(), r.trianglePositions[2].toDefault(), r.triangleNormals[0].toDefault(), r.triangleNormals[1].toDefault(), r.triangleNormals[2].toDefault(), !1
            }, Y.rayIntersectsTriangle = function(e, t, n, i) {
                var r = Y._tempVector30,
                    a = Y._tempVector31;
                Vt.subtract(n, t, r), Vt.subtract(i, t, a);
                var o, s = Y._tempVector32;
                if (Vt.cross(e.direction, a, s), (o = Vt.dot(r, s)) > -Number.MIN_VALUE && o < Number.MIN_VALUE) return Number.NaN;
                var l, h = 1 / o,
                    _ = Y._tempVector33;
                if (Vt.subtract(e.origin, t, _), l = Vt.dot(_, s), (l *= h) < 0 || 1 < l) return Number.NaN;
                var u, c, d = Y._tempVector34;
                return Vt.cross(_, r, d), u = Vt.dot(e.direction, d), (u *= h) < 0 || 1 < l + u ? Number.NaN : (c = Vt.dot(a, d), (c *= h) < 0 ? Number.NaN : c)
            }, u(Y, ["_tempVector30", function() {
                return this._tempVector30 = new Vt
            }, "_tempVector31", function() {
                return this._tempVector31 = new Vt
            }, "_tempVector32", function() {
                return this._tempVector32 = new Vt
            }, "_tempVector33", function() {
                return this._tempVector33 = new Vt
            }, "_tempVector34", function() {
                return this._tempVector34 = new Vt
            }, "_tempVector35", function() {
                return this._tempVector35 = new Vt
            }, "_tempVector36", function() {
                return this._tempVector36 = new Vt
            }, "_tempVector37", function() {
                return this._tempVector37 = new Vt
            }]), Y
        }(),
        jt = function() {
            function e() {
                this.distance = NaN, this.trianglePositions = null, this.triangleNormals = null, this.position = null, this.sprite3D = null, this.distance = -1, this.trianglePositions = [new Vt, new Vt, new Vt], this.trianglePositions.length = 3, this.triangleNormals = [new Vt, new Vt, new Vt], this.triangleNormals.length = 3, this.position = new Vt
            }
            return m(e, "t_tl.d3.utils.RaycastHit"), e.prototype.cloneTo = function(e) {
                e.distance = this.distance, this.trianglePositions[0].cloneTo(e.trianglePositions[0]), this.trianglePositions[1].cloneTo(e.trianglePositions[1]), this.trianglePositions[2].cloneTo(e.trianglePositions[2]), this.triangleNormals[0].cloneTo(e.triangleNormals[0]), this.triangleNormals[1].cloneTo(e.triangleNormals[1]), this.triangleNormals[2].cloneTo(e.triangleNormals[2]), this.position.cloneTo(e.position), e.sprite3D = this.sprite3D
            }, e
        }(),
        Kt = function() {
            function e(e, t) {
                this._width = 0, this._height = 0, this._width = e, this._height = t
            }
            m(e, "t_tl.d3.utils.Size");
            var t = e.prototype;
            return g(0, t, "width", function() {
                return -1 === this._width ? J.clientWidth : this._width
            }), g(0, t, "height", function() {
                return -1 === this._height ? J.clientHeight : this._height
            }), g(1, e, "fullScreen", function() {
                return new e(-1, -1)
            }), e
        }(),
        qt = function() {
            function O() {}
            return m(O, "t_tl.d3.utils.Utils3D"), O._rotationTransformScaleSkinAnimation = function(e, t, n, i, r, a, o, s, l, h, _, u) {
                var c, d, f, m, p, v = O._tempArray16_0,
                    g = O._tempArray16_1,
                    E = O._tempArray16_2,
                    S = i + i,
                    D = r + r,
                    T = a + a,
                    x = i * S,
                    M = r * S,
                    R = r * D,
                    A = a * S,
                    I = a * D,
                    y = a * T,
                    C = o * S,
                    N = o * D,
                    w = o * T;
                for (v[15] = 1, v[0] = 1 - R - y, v[1] = M + w, v[2] = A - N, v[4] = M - w, v[5] = 1 - x - y, v[6] = I + C, v[8] = A + N, v[9] = I - C, v[10] = 1 - x - R, g[15] = 1, g[0] = s, g[5] = l, g[10] = h, c = 0; c < 4; c++) d = v[c], f = v[c + 4], m = v[c + 8], p = v[c + 12], E[c] = d, E[c + 4] = f, E[c + 8] = m, E[c + 12] = d * e + f * t + m * n + p;
                for (c = 0; c < 4; c++) d = E[c], f = E[c + 4], m = E[c + 8], p = E[c + 12], _[c + u] = d * g[0] + f * g[1] + m * g[2] + p * g[3], _[c + u + 4] = d * g[4] + f * g[5] + m * g[6] + p * g[7], _[c + u + 8] = d * g[8] + f * g[9] + m * g[10] + p * g[11], _[c + u + 12] = d * g[12] + f * g[13] + m * g[14] + p * g[15]
            }, O._createNodeByJson = function(e, t, n, i) {
                if (!n) switch (t.type) {
                    case "Sprite3D":
                        n = new Fn;
                        break;
                    case "MeshSprite3D":
                        n = new vi;
                        break;
                    case "SkinnedMeshSprite3D":
                        n = new Ei;
                        break;
                    case "ShuriKenParticle3D":
                        n = new gi;
                        break;
                    case "TrailSprite3D":
                        n = new Si;
                        break;
                    case "Terrain":
                        n = new fi;
                        break;
                    case "Camera":
                        n = new mi;
                        break;
                    case "DirectionLight":
                        n = new pi;
                        break;
                    default:
                        throw new Error("Utils3D:unidentified class type in (.lh) file.")
                }
                var r = t.props;
                if (r)
                    for (var a in r) n[a] = r[a];
                var o = t.customProps;
                o && (n instanceof t_tl.d3.core.Sprite3D ? (n._parseBaseCustomProps(o), n._parseCustomProps(e, i, o, t), n._parseCustomComponent(e, i, t.components)) : n._parseCustomProps(e, i, o, t));
                var s = t.child;
                if (s)
                    for (var l = 0, h = s.length; l < h; l++) {
                        var _ = O._createNodeByJson(e, s[l], null, i);
                        n.addChild(_)
                    }
                return n
            }, O._computeBoneAndAnimationDatasByBindPoseMatrxix = function(e, t, n, i, r, a) {
                var o, s, l = 0,
                    h = 0,
                    _ = e.length;
                for (o = 0; o < _; l += e[o].keyframeWidth, h += 16, o++) t_tl.d3.utils.Utils3D._rotationTransformScaleSkinAnimation(t[l + 0], t[l + 1], t[l + 2], t[l + 3], t[l + 4], t[l + 5], t[l + 6], t[l + 7], t[l + 8], t[l + 9], i, h), 0 != o && (s = 16 * e[o].parentIndex, t_tl.d3.utils.Utils3D.mulMatrixByArray(i, s, i, h, i, h));
                var u = n.length;
                for (o = 0; o < u; o++) t_tl.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(i, 16 * a[o], n[o], r, 16 * o)
            }, O._computeAnimationDatasByArrayAndMatrixFast = function(e, t, n, i) {
                for (var r = 0, a = e.length; r < a; r++) t_tl.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(t, 16 * i[r], e[r], n, 16 * r)
            }, O._computeBoneAndAnimationDatasByBindPoseMatrxixOld = function(e, t, n, i, r) {
                var a, o, s = 0,
                    l = 0,
                    h = e.length;
                for (a = 0; a < h; s += e[a].keyframeWidth, l += 16, a++) t_tl.d3.utils.Utils3D._rotationTransformScaleSkinAnimation(t[s + 7], t[s + 8], t[s + 9], t[s + 3], t[s + 4], t[s + 5], t[s + 6], t[s + 0], t[s + 1], t[s + 2], i, l), 0 != a && (o = 16 * e[a].parentIndex, t_tl.d3.utils.Utils3D.mulMatrixByArray(i, o, i, l, i, l));
                var _ = n.length;
                for (a = 0; a < _; a++) {
                    var u = 16 * a;
                    t_tl.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(i, u, n[a], r, u)
                }
            }, O._computeAnimationDatasByArrayAndMatrixFastOld = function(e, t, n) {
                for (var i = e.length, r = 0; r < i; r++) {
                    var a = 16 * r;
                    t_tl.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(t, a, e[r], n, a)
                }
            }, O._computeRootAnimationData = function(e, t, n) {
                for (var i = 0, r = 0, a = 0, o = e.length; i < o; r += e[i].keyframeWidth, a += 16, i++) t_tl.d3.utils.Utils3D.createAffineTransformationArray(t[r + 0], t[r + 1], t[r + 2], t[r + 3], t[r + 4], t[r + 5], t[r + 6], t[r + 7], t[r + 8], t[r + 9], n, a)
            }, O.transformVector3ArrayByQuat = function(e, t, n, i, r) {
                var a = n.elements,
                    o = e[t],
                    s = e[t + 1],
                    l = e[t + 2],
                    h = a[0],
                    _ = a[1],
                    u = a[2],
                    c = a[3],
                    d = c * o + _ * l - u * s,
                    f = c * s + u * o - h * l,
                    m = c * l + h * s - _ * o,
                    p = -h * o - _ * s - u * l;
                i[r] = d * c + p * -h + f * -u - m * -_, i[r + 1] = f * c + p * -_ + m * -h - d * -u, i[r + 2] = m * c + p * -u + d * -_ - f * -h
            }, O.mulMatrixByArray = function(e, t, n, i, r, a) {
                var o, s, l, h, _;
                if (r === n) {
                    for (n = O._tempArray16_3, o = 0; o < 16; ++o) n[o] = r[a + o];
                    i = 0
                }
                for (o = 0; o < 4; o++) s = e[t + o], l = e[t + o + 4], h = e[t + o + 8], _ = e[t + o + 12], r[a + o] = s * n[i + 0] + l * n[i + 1] + h * n[i + 2] + _ * n[i + 3], r[a + o + 4] = s * n[i + 4] + l * n[i + 5] + h * n[i + 6] + _ * n[i + 7], r[a + o + 8] = s * n[i + 8] + l * n[i + 9] + h * n[i + 10] + _ * n[i + 11], r[a + o + 12] = s * n[i + 12] + l * n[i + 13] + h * n[i + 14] + _ * n[i + 15]
            }, O.mulMatrixByArrayFast = function(e, t, n, i, r, a) {
                var o, s, l, h, _;
                for (o = 0; o < 4; o++) s = e[t + o], l = e[t + o + 4], h = e[t + o + 8], _ = e[t + o + 12], r[a + o] = s * n[i + 0] + l * n[i + 1] + h * n[i + 2] + _ * n[i + 3], r[a + o + 4] = s * n[i + 4] + l * n[i + 5] + h * n[i + 6] + _ * n[i + 7], r[a + o + 8] = s * n[i + 8] + l * n[i + 9] + h * n[i + 10] + _ * n[i + 11], r[a + o + 12] = s * n[i + 12] + l * n[i + 13] + h * n[i + 14] + _ * n[i + 15]
            }, O.mulMatrixByArrayAndMatrixFast = function(e, t, n, i, r) {
                var a, o, s, l, h, _ = n.elements,
                    u = _[0],
                    c = _[1],
                    d = _[2],
                    f = _[3],
                    m = _[4],
                    p = _[5],
                    v = _[6],
                    g = _[7],
                    E = _[8],
                    S = _[9],
                    D = _[10],
                    T = _[11],
                    x = _[12],
                    M = _[13],
                    R = _[14],
                    A = _[15],
                    I = t,
                    y = t + 4,
                    C = t + 8,
                    N = t + 12,
                    w = r,
                    O = r + 4,
                    V = r + 8,
                    P = r + 12;
                for (a = 0; a < 4; a++) o = e[I + a], s = e[y + a], l = e[C + a], h = e[N + a], i[w + a] = o * u + s * c + l * d + h * f, i[O + a] = o * m + s * p + l * v + h * g, i[V + a] = o * E + s * S + l * D + h * T, i[P + a] = o * x + s * M + l * R + h * A
            }, O.createAffineTransformationArray = function(e, t, n, i, r, a, o, s, l, h, _, u) {
                var c = i + i,
                    d = r + r,
                    f = a + a,
                    m = i * c,
                    p = i * d,
                    v = i * f,
                    g = r * d,
                    E = r * f,
                    S = a * f,
                    D = o * c,
                    T = o * d,
                    x = o * f;
                _[u + 0] = (1 - (g + S)) * s, _[u + 1] = (p + x) * s, _[u + 2] = (v - T) * s, _[u + 3] = 0, _[u + 4] = (p - x) * l, _[u + 5] = (1 - (m + S)) * l, _[u + 6] = (E + D) * l, _[u + 7] = 0, _[u + 8] = (v + T) * h, _[u + 9] = (E - D) * h, _[u + 10] = (1 - (m + g)) * h, _[u + 11] = 0, _[u + 12] = e, _[u + 13] = t, _[u + 14] = n, _[u + 15] = 1
            }, O.transformVector3ArrayToVector3ArrayCoordinate = function(e, t, n, i, r) {
                var a = O._tempArray4_0,
                    o = e[t + 0],
                    s = e[t + 1],
                    l = e[t + 2],
                    h = n.elements;
                a[0] = o * h[0] + s * h[4] + l * h[8] + h[12], a[1] = o * h[1] + s * h[5] + l * h[9] + h[13], a[2] = o * h[2] + s * h[6] + l * h[10] + h[14], a[3] = 1 / (o * h[3] + s * h[7] + l * h[11] + h[15]), i[r + 0] = a[0] * a[3], i[r + 1] = a[1] * a[3], i[r + 2] = a[2] * a[3]
            }, O.transformLightingMapTexcoordByUV0Array = function(e, t, n, i, r) {
                var a = n.elements;
                i[r + 0] = e[t + 0] * a[0] + a[2], i[r + 1] = (e[t + 1] - 1) * a[1] + a[3]
            }, O.transformLightingMapTexcoordByUV1Array = function(e, t, n, i, r) {
                var a = n.elements;
                i[r + 0] = e[t + 0] * a[0] + a[2], i[r + 1] = 1 + e[t + 1] * a[1] + a[3]
            }, O.getURLVerion = function(e) {
                var t = e.indexOf("?");
                return 0 <= t ? e.substr(t) : null
            }, O._quaternionCreateFromYawPitchRollArray = function(e, t, n, i) {
                var r = .5 * n,
                    a = .5 * t,
                    o = .5 * e,
                    s = Math.sin(r),
                    l = Math.cos(r),
                    h = Math.sin(a),
                    _ = Math.cos(a),
                    u = Math.sin(o),
                    c = Math.cos(o);
                i[0] = c * h * l + u * _ * s, i[1] = u * _ * l - c * h * s, i[2] = c * _ * s - u * h * l, i[3] = c * _ * l + u * h * s
            }, O._createAffineTransformationArray = function(e, t, n, i) {
                var r = t[0],
                    a = t[1],
                    o = t[2],
                    s = t[3],
                    l = r + r,
                    h = a + a,
                    _ = o + o,
                    u = r * l,
                    c = r * h,
                    d = r * _,
                    f = a * h,
                    m = a * _,
                    p = o * _,
                    v = s * l,
                    g = s * h,
                    E = s * _,
                    S = n[0],
                    D = n[1],
                    T = n[2];
                i[0] = (1 - (f + p)) * S, i[1] = (c + E) * S, i[2] = (d - g) * S, i[3] = 0, i[4] = (c - E) * D, i[5] = (1 - (u + p)) * D, i[6] = (m + v) * D, i[7] = 0, i[8] = (d + g) * T, i[9] = (m - v) * T, i[10] = (1 - (u + f)) * T, i[11] = 0, i[12] = e[0], i[13] = e[1], i[14] = e[2], i[15] = 1
            }, O._mulMatrixArray = function(e, t, n, i) {
                var r, a, o, s, l, h = t.elements,
                    _ = h[0],
                    u = h[1],
                    c = h[2],
                    d = h[3],
                    f = h[4],
                    m = h[5],
                    p = h[6],
                    v = h[7],
                    g = h[8],
                    E = h[9],
                    S = h[10],
                    D = h[11],
                    T = h[12],
                    x = h[13],
                    M = h[14],
                    R = h[15],
                    A = i,
                    I = i + 4,
                    y = i + 8,
                    C = i + 12;
                for (r = 0; r < 4; r++) a = e[r], o = e[r + 4], s = e[r + 8], l = e[r + 12], n[A + r] = a * _ + o * u + s * c + l * d, n[I + r] = a * f + o * m + s * p + l * v, n[y + r] = a * g + o * E + s * S + l * D, n[C + r] = a * T + o * x + s * M + l * R
            }, O.getYawPitchRoll = function(e, t) {
                O.transformQuat(Vt.ForwardRH, e, Ct.TEMPVector31), O.transformQuat(Vt.Up, e, Ct.TEMPVector32);
                var n = Ct.TEMPVector32.elements;
                O.angleTo(Vt.ZERO, Ct.TEMPVector31, Ct.TEMPVector33);
                var i = Ct.TEMPVector33.elements;
                i[0] == Math.PI / 2 ? (i[1] = O.arcTanAngle(n[2], n[0]), i[2] = 0) : i[0] == -Math.PI / 2 ? (i[1] = O.arcTanAngle(-n[2], -n[0]), i[2] = 0) : (At.createRotationY(-i[1], Ct.TEMPMatrix0), At.createRotationX(-i[0], Ct.TEMPMatrix1), Vt.transformCoordinate(Ct.TEMPVector32, Ct.TEMPMatrix0, Ct.TEMPVector32), Vt.transformCoordinate(Ct.TEMPVector32, Ct.TEMPMatrix1, Ct.TEMPVector32), i[2] = O.arcTanAngle(n[1], -n[0])), i[1] <= -Math.PI && (i[1] = Math.PI), i[2] <= -Math.PI && (i[2] = Math.PI), i[1] >= Math.PI && i[2] >= Math.PI && (i[1] = 0, i[2] = 0, i[0] = Math.PI - i[0]), t[0] = i[1], t[1] = i[0], t[2] = i[2]
            }, O.arcTanAngle = function(e, t) {
                return 0 == e ? 1 == t ? Math.PI / 2 : -Math.PI / 2 : 0 < e ? Math.atan(t / e) : e < 0 ? 0 < t ? Math.atan(t / e) + Math.PI : Math.atan(t / e) - Math.PI : 0
            }, O.angleTo = function(e, t, n) {
                Vt.subtract(t, e, Ct.TEMPVector30), Vt.normalize(Ct.TEMPVector30, Ct.TEMPVector30), n.elements[0] = Math.asin(Ct.TEMPVector30.y), n.elements[1] = O.arcTanAngle(-Ct.TEMPVector30.z, -Ct.TEMPVector30.x)
            }, O.transformQuat = function(e, t, n) {
                var i = n.elements,
                    r = e.elements,
                    a = t,
                    o = r[0],
                    s = r[1],
                    l = r[2],
                    h = a[0],
                    _ = a[1],
                    u = a[2],
                    c = a[3],
                    d = c * o + _ * l - u * s,
                    f = c * s + u * o - h * l,
                    m = c * l + h * s - _ * o,
                    p = -h * o - _ * s - u * l;
                i[0] = d * c + p * -h + f * -u - m * -_, i[1] = f * c + p * -_ + m * -h - d * -u, i[2] = m * c + p * -u + d * -_ - f * -h
            }, O.quaterionNormalize = function(e, t) {
                var n = e[0],
                    i = e[1],
                    r = e[2],
                    a = e[3],
                    o = n * n + i * i + r * r + a * a;
                0 < o && (o = 1 / Math.sqrt(o), t[0] = n * o, t[1] = i * o, t[2] = r * o, t[3] = a * o)
            }, O.matrix4x4MultiplyFFF = function(e, t, n) {
                var i, r, a, o, s;
                if (n === t)
                    for (t = new Float32Array(16), i = 0; i < 16; ++i) t[i] = n[i];
                for (i = 0; i < 4; i++) r = e[i], a = e[i + 4], o = e[i + 8], s = e[i + 12], n[i] = r * t[0] + a * t[1] + o * t[2] + s * t[3], n[i + 4] = r * t[4] + a * t[5] + o * t[6] + s * t[7], n[i + 8] = r * t[8] + a * t[9] + o * t[10] + s * t[11], n[i + 12] = r * t[12] + a * t[13] + o * t[14] + s * t[15]
            }, O.matrix4x4MultiplyMFM = function(e, t, n) {
                O.matrix4x4MultiplyFFF(e.elements, t, n.elements)
            }, u(O, ["_typeToFunO", function() {
                return this._typeToFunO = {
                    INT16: "writeInt16",
                    SHORT: "writeInt16",
                    UINT16: "writeUint16",
                    UINT32: "writeUint32",
                    FLOAT32: "writeFloat32",
                    INT: "writeInt32",
                    UINT: "writeUint32",
                    BYTE: "writeByte",
                    STRING: "writeUTFString"
                }
            }, "_tempVector3_0", function() {
                return this._tempVector3_0 = new Vt
            }, "_tempVector3_1", function() {
                return this._tempVector3_1 = new Vt
            }, "_tempVector3_2", function() {
                return this._tempVector3_2 = new Vt
            }, "_tempVector3_3", function() {
                return this._tempVector3_3 = new Vt
            }, "_tempVector3_4", function() {
                return this._tempVector3_4 = new Vt
            }, "_tempVector3_5", function() {
                return this._tempVector3_5 = new Vt
            }, "_tempVector3_6", function() {
                return this._tempVector3_6 = new Vt
            }, "_tempArray4_0", function() {
                return this._tempArray4_0 = new Float32Array(4)
            }, "_tempArray16_0", function() {
                return this._tempArray16_0 = new Float32Array(16)
            }, "_tempArray16_1", function() {
                return this._tempArray16_1 = new Float32Array(16)
            }, "_tempArray16_2", function() {
                return this._tempArray16_2 = new Float32Array(16)
            }, "_tempArray16_3", function() {
                return this._tempArray16_3 = new Float32Array(16)
            }]), O
        }(),
        Qt = function() {
            function y() {}
            return m(y, "t_td"), y._cancelLoadByUrl = function(e) {
                x.loader.cancelLoadByUrl(e), y._innerFirstLevelLoaderManager.cancelLoadByUrl(e), y._innerSecondLevelLoaderManager.cancelLoadByUrl(e), y._innerThirdLevelLoaderManager.cancelLoadByUrl(e), y._innerFourthLevelLoaderManager.cancelLoadByUrl(e)
            }, y._changeWebGLSize = function(e, t) {
                w.onStageResize(e, t), J.clientWidth = e, J.clientHeight = t
            }, y.__init__ = function() {
                var e = t.createMap;
                e.lh = [Fn, "SPRITE3DHIERARCHY"], e.ls = [bn, "SPRITE3DHIERARCHY"], e.lm = [ri, "MESH"], e.lmat = [Xn, "MATERIAL"], e.lpbr = [zn, "MATERIAL"], e.ltc = [hi, "TEXTURECUBE"], e.jpg = [li, "nativeimage"], e.jpeg = [li, "nativeimage"], e.png = [li, "nativeimage"], e.pkm = [li, "arraybuffer"], e.lsani = [r, "arraybuffer"], e.lrani = [r, "arraybuffer"], e.raw = [ni, "arraybuffer"], e.mipmaps = [ni, "arraybuffer"], e.thdata = [Sn, "arraybuffer"], e.lt = [Dn, "TERRAIN"], e.lani = [mn, "arraybuffer"], e.lav = [pn, "json"], e.ani = [r, "arraybuffer"], Ae.parserMap.SPRITE3DHIERARCHY = y._loadHierarchy, Ae.parserMap.MESH = y._loadMesh, Ae.parserMap.MATERIAL = y._loadMaterial, Ae.parserMap.TEXTURECUBE = y._loadTextureCube, Ae.parserMap.TERRAIN = y._loadTerrain, y._innerFirstLevelLoaderManager.on("error", null, y._eventLoadManagerError), y._innerSecondLevelLoaderManager.on("error", null, y._eventLoadManagerError), y._innerThirdLevelLoaderManager.on("error", null, y._eventLoadManagerError), y._innerFourthLevelLoaderManager.on("error", null, y._eventLoadManagerError)
            }, y.READ_BLOCK = function() {
                return y._readData.pos += 4, !0
            }, y.READ_DATA = function() {
                return y._DATA.offset = y._readData.getUint32(), y._DATA.size = y._readData.getUint32(), !0
            }, y.READ_STRINGS = function() {
                var e = [],
                    t = {
                        offset: 0,
                        size: 0
                    };
                t.offset = y._readData.getUint16(), t.size = y._readData.getUint16();
                y._readData.pos;
                y._readData.pos = t.offset + y._DATA.offset;
                for (var n = 0; n < t.size; n++) {
                    var i = y._readData.readUTFString(); - 1 === i.lastIndexOf(".lmat") && -1 === i.lastIndexOf(".lpbr") || e.push(i)
                }
                return e
            }, y.formatRelativePath = function(e, t) {
                var n;
                if ("." === t.charAt(0)) {
                    for (var i = (e + t).split("/"), r = 0, a = i.length; r < a; r++)
                        if (".." == i[r]) {
                            var o = r - 1;
                            0 < o && ".." !== i[o] && (i.splice(o, 2), r -= 2)
                        }
                    n = i.join("/")
                } else n = e + t;
                return null != N.customFormat && (n = N.customFormat(n, null)), n
            }, y._eventLoadManagerError = function(e) {
                x.loader.event("error", e)
            }, y._addHierarchyInnerUrls = function(e, t, n, i, r, a) {
                var o = y.formatRelativePath(i, r);
                n && (o += n), e.push({
                    url: o,
                    clas: a
                }), t[r] = o
            }, y._getSprite3DHierarchyInnerUrls = function(e, t, n, i, r, a, o) {
                var s, l = 0,
                    h = 0;
                switch (e.type) {
                    case "Scene":
                        var _ = e.customProps.lightmaps;
                        for (l = 0, h = _.length; l < h; l++) {
                            var u = _[l].replace(".exr", ".png");
                            y._addHierarchyInnerUrls(i, r, a, o, u, li)
                        }
                        break;
                    case "MeshSprite3D":
                    case "TrailSprite3D":
                    case "LineSprite3D":
                    case "SkinnedMeshSprite3D":
                        var c;
                        if (e.instanceParams)(c = e.instanceParams.loadPath) && y._addHierarchyInnerUrls(t, r, a, o, c, ri);
                        else {
                            (c = (s = e.customProps).meshPath) && y._addHierarchyInnerUrls(t, r, a, o, c, ri);
                            var d = s.materials;
                            if (d)
                                for (l = 0, h = d.length; l < h; l++) {
                                    var f = d[l],
                                        m = f.type.split("."),
                                        p = C.window;
                                    if (m.forEach(function(e) {
                                            p = p[e]
                                        }), "function" != typeof p) throw "_getSprite3DHierarchyInnerUrls 错误: " + f.type + " 不是类";
                                    y._addHierarchyInnerUrls(n, r, a, o, f.path, p)
                                }
                        }
                        break;
                    case "ShuriKenParticle3D":
                        var v = (s = e.customProps).meshPath;
                        v && y._addHierarchyInnerUrls(t, r, a, o, v, ri);
                        var g = s.material;
                        if (g) m = g.type.split("."), p = C.window, m.forEach(function(e) {
                            p = p[e]
                        }), y._addHierarchyInnerUrls(n, r, a, o, g.path, p);
                        else {
                            var E = s.materialPath;
                            if (E) y._addHierarchyInnerUrls(n, r, a, o, E, qn);
                            else {
                                var S = s.texturePath;
                                S && y._addHierarchyInnerUrls(i, r, a, o, S, li)
                            }
                        }
                        break;
                    case "Terrain":
                        y._addHierarchyInnerUrls(i, r, a, o, e.customProps.dataPath, Dn)
                }
                var D = e.components;
                for (var T in D) {
                    var x = D[T];
                    switch (T) {
                        case "Animator":
                            var M = x.avatarPath;
                            if (M) y._addHierarchyInnerUrls(i, r, a, o, M, pn);
                            else {
                                var R = x.avatar;
                                R && y._addHierarchyInnerUrls(i, r, a, o, R.path, pn)
                            }
                            var A = x.clipPaths;
                            for (l = 0, h = A.length; l < h; l++) y._addHierarchyInnerUrls(i, r, a, o, A[l], mn)
                    }
                }
                var I = e.child;
                for (l = 0, h = I.length; l < h; l++) y._getSprite3DHierarchyInnerUrls(I[l], t, n, i, r, a, o)
            }, y._loadHierarchy = function(e) {
                e.on("loaded", null, y._onHierarchylhLoaded, [e, e._class._getGroup()]), e.load(e.url, "json", !1, null, !0)
            }, y._onHierarchylhLoaded = function(e, t, n) {
                if (e._class.destroyed) e.endLoad();
                else {
                    var i = e.url,
                        r = qt.getURLVerion(i),
                        a = N.getPath(i),
                        o = [],
                        s = [],
                        l = [],
                        h = {};
                    y._getSprite3DHierarchyInnerUrls(n, o, s, l, h, r, a);
                    var _ = o.length + s.length + l.length,
                        u = _ + 1,
                        c = 1 / u;
                    if (y._onProcessChange(e, 0, c, 1), 0 < l.length) {
                        var d = _ / u,
                            f = I.create(null, y._onProcessChange, [e, c, d], !1);
                        y._innerFourthLevelLoaderManager.create(l, I.create(null, y._onHierarchyInnerForthLevResouLoaded, [e, t, f, n, h, o, s, c + d * l.length, d]), f, null, null, 1, !0, t)
                    } else y._onHierarchyInnerForthLevResouLoaded(e, t, null, n, h, o, s, c, d)
                }
            }, y._onHierarchyInnerForthLevResouLoaded = function(e, t, n, i, r, a, o, s, l) {
                if (e._class.destroyed) e.endLoad();
                else if (n && n.recover(), 0 < o.length) {
                    var h = I.create(null, y._onProcessChange, [e, s, l], !1);
                    y._innerSecondLevelLoaderManager.create(o, I.create(null, y._onHierarchyInnerSecondLevResouLoaded, [e, t, h, i, r, a, s + l * o.length, l]), n, null, null, 1, !0, t)
                } else y._onHierarchyInnerSecondLevResouLoaded(e, t, null, i, r, a, s, l)
            }, y._onHierarchyInnerSecondLevResouLoaded = function(e, t, n, i, r, a, o, s) {
                if (e._class.destroyed) e.endLoad();
                else if (n && n.recover(), 0 < a.length) {
                    var l = I.create(null, y._onProcessChange, [e, o, s], !1);
                    y._innerFirstLevelLoaderManager.create(a, I.create(null, y._onHierarchyInnerFirstLevResouLoaded, [e, l, i, r]), n, null, null, 1, !0, t)
                } else y._onHierarchyInnerFirstLevResouLoaded(e, null, i, r)
            }, y._onHierarchyInnerFirstLevResouLoaded = function(e, t, n, i) {
                t && t.recover(), e.endLoad([n, i])
            }, y._loadTerrain = function(e) {
                e.on("loaded", null, y._onTerrainLtLoaded, [e, e._class._getGroup()]), e.load(e.url, "json", !1, null, !0)
            }, y._onTerrainLtLoaded = function(e, t, n) {
                if (e._class.destroyed) e.endLoad();
                else {
                    var i, r, a = e.url,
                        o = qt.getURLVerion(a),
                        s = N.getPath(a),
                        l = [],
                        h = {},
                        _ = 0,
                        u = 0,
                        c = n.heightData;
                    i = c.url, r = y.formatRelativePath(s, i), o && (r += o), i = h[i] = r;
                    var d = n.detailTexture;
                    for (_ = 0, u = d.length; _ < u; _++) l.push({
                        url: d[_].diffuse
                    });
                    var f = n.normalMap;
                    for (_ = 0, u = f.length; _ < u; _++) l.push({
                        url: f[_]
                    });
                    var m = n.alphaMap;
                    for (_ = 0, u = m.length; _ < u; _++) l.push({
                        url: m[_],
                        params: [!1, !1, 6408, !0]
                    });
                    for (_ = 0, u = l.length; _ < u; _++) {
                        var p = l[_].url;
                        r = y.formatRelativePath(s, p), o && (r += o), l[_].url = r, h[p] = r
                    }
                    var v = l.length,
                        g = v + 2,
                        E = 1 / g;
                    y._onProcessChange(e, 0, E, 1);
                    var S = {
                            heightMapLoaded: !1,
                            texturesLoaded: !1
                        },
                        D = I.create(null, y._onProcessChange, [e, E, E], !1);
                    y._innerFourthLevelLoaderManager.create(i, I.create(null, y._onTerrainHeightMapLoaded, [e, D, n, h, S]), D, null, [c.numX, c.numZ, c.bitType, c.value], 1, !0, t);
                    var T = I.create(null, y._onProcessChange, [e, 2 * E, v / g], !1);
                    y._innerFourthLevelLoaderManager.create(l, I.create(null, y._onTerrainTexturesLoaded, [e, T, n, h, S]), T, null, null, 1, !0, t)
                }
            }, y._onTerrainHeightMapLoaded = function(e, t, n, i, r) {
                r.heightMapLoaded = !0, r.texturesLoaded && (e.endLoad([n, i]), t.recover())
            }, y._onTerrainTexturesLoaded = function(e, t, n, i, r) {
                r.texturesLoaded = !0, r.heightMapLoaded && (e.endLoad([n, i]), t.recover())
            }, y._loadMesh = function(e) {
                e.on("loaded", null, y._onMeshLmLoaded, [e, e._class._getGroup()]), e.load(e.url, "arraybuffer", !1, null, !0)
            }, y._onMeshLmLoaded = function(e, t, n) {
                if (e._class.destroyed) e.endLoad();
                else {
                    var i, r, a, o = e.url,
                        s = qt.getURLVerion(o),
                        l = N.getPath(o),
                        h = {},
                        _ = 0,
                        u = 0;
                    switch ((y._readData = new S(n)).pos = 0, y._readData.readUTFString()) {
                        case "LAYAMODEL:02":
                        case "LAYAMODEL:03":
                        case "LAYAMODEL:0301":
                            var c = y._readData.getUint32();
                            y._readData.pos = y._readData.pos + 4, u = y._readData.getUint16(), y._readData.pos = y._readData.pos + 8 * u;
                            var d = y._readData.getUint32();
                            for (u = y._readData.getUint16(), y._readData.pos = c + d, i = [], _ = 0; _ < u; _++) {
                                var f = y._readData.readUTFString(); - 1 !== f.lastIndexOf(".lmat") && i.push(f)
                            }
                            break;
                        default:
                            for (y.READ_BLOCK(), _ = 0; _ < 2; _++) {
                                var m = y._readData.getUint16(),
                                    p = y._strings[m],
                                    v = y["READ_" + p];
                                if (null == v) throw new Error("model file err,no this function:" + m + " " + p);
                                1 === _ ? i = v.call() : v.call()
                            }
                    }
                    for (_ = 0, a = i.length; _ < a; _++) {
                        var g = i[_];
                        r = y.formatRelativePath(l, g), s && (r += s), i[_] = r, h[g] = r
                    }
                    if (0 < i.length) {
                        y._onProcessChange(e, 0, .5, 1);
                        var E = I.create(null, y._onProcessChange, [e, .5, .5], !1);
                        y._innerSecondLevelLoaderManager.create(i, I.create(null, y._onMeshMateialLoaded, [e, E, n, h]), E, null, null, 1, !0, t)
                    } else e.endLoad([n, h])
                }
            }, y._onMeshMateialLoaded = function(e, t, n, i) {
                e.endLoad([n, i]), t.recover()
            }, y._getMaterialTexturePath = function(e, t, n) {
                var i = e.length - 4;
                return e.indexOf(".dds") != i && e.indexOf(".tga") != i && e.indexOf(".exr") != i && e.indexOf(".DDS") != i && e.indexOf(".TGA") != i && e.indexOf(".EXR") != i || (e = e.substr(0, i) + ".png"), e = y.formatRelativePath(n, e), t && (e += t), e
            }, y._loadMaterial = function(e) {
                e.on("loaded", null, y._onMaterilLmatLoaded, [e, e._class._getGroup()]), e.load(e.url, "json", !1, null, !0)
            }, y._onMaterilLmatLoaded = function(e, t, n) {
                if (e._class.destroyed) e.endLoad();
                else {
                    var i, r = e.url,
                        a = qt.getURLVerion(r),
                        o = N.getPath(r),
                        s = [],
                        l = {},
                        h = n.customProps,
                        _ = n.version;
                    if (_) switch (_) {
                        case "LAYAMATERIAL:01":
                        case "LAYAMATERIAL:02":
                            for (var u = n.props.textures, c = 0, d = u.length; c < d; c++) {
                                var f = u[c],
                                    m = f.path;
                                if (m) {
                                    var p = m.length - 4;
                                    m.indexOf(".exr") != p && m.indexOf(".EXR") != p || (m = m.substr(0, p) + ".png"), i = y.formatRelativePath(o, m), a && (i += a), s.push({
                                        url: i,
                                        params: f.params
                                    }), l[m] = i
                                }
                            }
                            break;
                        default:
                            throw new Error("t_td:unkonwn version.")
                    } else {
                        var v = h.diffuseTexture.texture2D;
                        if (v && (i = y._getMaterialTexturePath(v, a, o), s.push(i), l[v] = i), h.normalTexture) {
                            var g = h.normalTexture.texture2D;
                            g && (i = y._getMaterialTexturePath(g, a, o), s.push(i), l[g] = i)
                        }
                        if (h.specularTexture) {
                            var E = h.specularTexture.texture2D;
                            E && (i = y._getMaterialTexturePath(E, a, o), s.push(i), l[E] = i)
                        }
                        if (h.emissiveTexture) {
                            var S = h.emissiveTexture.texture2D;
                            S && (i = y._getMaterialTexturePath(S, a, o), s.push(i), l[S] = i)
                        }
                        if (h.ambientTexture) {
                            var D = h.ambientTexture.texture2D;
                            D && (i = y._getMaterialTexturePath(D, a, o), s.push(i), l[D] = i)
                        }
                        if (h.reflectTexture) {
                            var T = h.reflectTexture.texture2D;
                            T && (i = y._getMaterialTexturePath(T, a, o), s.push(i), l[T] = i)
                        }
                    }
                    var x = s.length,
                        M = x + 1,
                        R = 1 / M;
                    if (y._onProcessChange(e, 0, R, 1), 0 < x) {
                        var A = I.create(null, y._onProcessChange, [e, R, x / M], !1);
                        y._innerFourthLevelLoaderManager.create(s, I.create(null, y._onMateialTexturesLoaded, [e, A, n, l]), A, li, null, 1, !0, t)
                    } else y._onMateialTexturesLoaded(e, null, n, null)
                }
            }, y._onMateialTexturesLoaded = function(e, t, n, i) {
                e.endLoad([n, i]), t && t.recover()
            }, y._loadTextureCube = function(e) {
                e.on("loaded", null, y._onTextureCubeLtcLoaded, [e]), e.load(e.url, "json", !1, null, !0)
            }, y._onTextureCubeLtcLoaded = function(e, t) {
                if (e._class.destroyed) e.endLoad();
                else {
                    var n = N.getPath(e.url),
                        i = [y.formatRelativePath(n, t.px), y.formatRelativePath(n, t.nx), y.formatRelativePath(n, t.py), y.formatRelativePath(n, t.ny), y.formatRelativePath(n, t.pz), y.formatRelativePath(n, t.nz)];
                    y._onProcessChange(e, 0, 1 / 7, 1);
                    var r = I.create(null, y._onProcessChange, [e, 1 / 7, 6 / 7], !1);
                    y._innerFourthLevelLoaderManager.load(i, I.create(null, y._onTextureCubeImagesLoaded, [e, i, r]), r, "nativeimage")
                }
            }, y._onTextureCubeImagesLoaded = function(e, t, n) {
                var i = [];
                i.length = 6;
                for (var r = 0; r < 6; r++) {
                    var a = t[r];
                    i[r] = Ae.getRes(a), Ae.clearRes(a)
                }
                e.endLoad(i), n.recover()
            }, y._onProcessChange = function(e, t, n, i) {
                (i = t + i * n) < 1 && e.event("progress", i)
            }, y.init = function(e, t, n, i, r, a) {
                void 0 === n && (n = !1), void 0 === i && (i = !1), void 0 === r && (r = !0), void 0 === a && (a = !0), E.update3DLoop = function() {
                    rn._triggerCollision()
                }, E.cancelLoadByUrl = function(e) {
                    y._cancelLoadByUrl(e)
                }, h.isAntialias = n, h.isAlpha = i, h.premultipliedAlpha = r, h.isStencil = a, w.enable() ? (E.changeWebGLSize = y._changeWebGLSize, d.is3DMode = !0, x.init(e, t), F.__init__(), Zt.__init__(), Hn.__init__(), Ut.__init__(), vi.__init__(), G.__init__(), y.__init__(), o.maxTextureCount = 2, (y.debugMode || ee.debugMode) && (y._debugPhasorSprite = new q)) : alert("t_td init error,must support webGL!")
            }, y.HIERARCHY = "SPRITE3DHIERARCHY", y.MESH = "MESH", y.MATERIAL = "MATERIAL", y.PBRMATERIAL = "PBRMTL", y.TEXTURECUBE = "TEXTURECUBE", y.TERRAIN = "TERRAIN", y._readData = null, y._debugPhasorSprite = null, y.debugMode = !1, u(y, ["_DATA", function() {
                return this._DATA = {
                    offset: 0,
                    size: 0
                }
            }, "_strings", function() {
                return this._strings = ["BLOCK", "DATA", "STRINGS"]
            }, "_innerFirstLevelLoaderManager", function() {
                return this._innerFirstLevelLoaderManager = new t
            }, "_innerSecondLevelLoaderManager", function() {
                return this._innerSecondLevelLoaderManager = new t
            }, "_innerThirdLevelLoaderManager", function() {
                return this._innerThirdLevelLoaderManager = new t
            }, "_innerFourthLevelLoaderManager", function() {
                return this._innerFourthLevelLoaderManager = new t
            }]), y
        }(),
        $t = function(e) {
            function r(e) {
                r.__super.call(this), this._owner = e, this._childs = [], this._localMatrix = new Float32Array(16), this._localQuaternionUpdate = !1, this._locaEulerlUpdate = !1, this._localUpdate = !1, this._worldUpdate = !0
            }
            m(r, "t_tl.d3.animation.AnimationTransform3D", a);
            var t = r.prototype;
            return t._getlocalMatrix = function() {
                return this._localUpdate && (qt._createAffineTransformationArray(this._localPosition, this._localRotation, this._localScale, this._localMatrix), this._localUpdate = !1), this._localMatrix
            }, t._onWorldTransform = function() {
                if (!this._worldUpdate) {
                    this._worldUpdate = !0;
                    for (var e = 0, t = this._childs.length; e < t; e++) this._childs[e]._onWorldTransform()
                }
            }, t._setWorldMatrixAndUpdate = function(e) {
                if (this._worldMatrix = e, null == this._parent) throw new Error("don't need to set worldMatrix to root Node.");
                if (null == this._parent._parent)
                    for (var t = this._getlocalMatrix(), n = 0; n < 16; ++n) this._worldMatrix[n] = t[n];
                else qt.matrix4x4MultiplyFFF(this._parent.getWorldMatrix(), this._getlocalMatrix(), this._worldMatrix);
                this._worldUpdate = !1
            }, t._setWorldMatrixNoUpdate = function(e) {
                this._worldMatrix = e
            }, t._setWorldMatrixIgnoreUpdate = function(e) {
                this._worldMatrix = e, this._worldUpdate = !1
            }, t.getLocalPosition = function() {
                return this._localPosition
            }, t.setLocalPosition = function(e) {
                if (this._parent) this._localPosition = e, this._localUpdate = !0, this._onWorldTransform();
                else {
                    var t = this._entity.owner._transform,
                        n = this._entity.localPosition,
                        i = n.elements;
                    i[0] = e[0], i[1] = e[1], i[2] = e[2], t.localPosition = n
                }
            }, t.getLocalRotation = function() {
                if (this._localQuaternionUpdate) {
                    var e = this._localRotationEuler;
                    qt._quaternionCreateFromYawPitchRollArray(e[1] / r._angleToRandin, e[0] / r._angleToRandin, e[2] / r._angleToRandin, this._localRotation), this._localQuaternionUpdate = !1
                }
                return this._localRotation
            }, t.setLocalRotation = function(e) {
                if (this._parent) this._localRotation = e, qt.quaterionNormalize(this._localRotation, this._localRotation), this._locaEulerlUpdate = !0, this._localQuaternionUpdate = !1, this._localUpdate = !0, this._onWorldTransform();
                else {
                    var t = this._entity.owner._transform,
                        n = this._entity.localRotation,
                        i = n.elements;
                    i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], t.localRotation = n
                }
            }, t.getLocalScale = function() {
                return this._localScale
            }, t.setLocalScale = function(e) {
                if (this._parent) this._localScale = e, this._localUpdate = !0, this._onWorldTransform();
                else {
                    var t = this._entity.owner._transform,
                        n = this._entity.localScale,
                        i = n.elements;
                    i[0] = e[0], i[1] = e[1], i[2] = e[2], t.localScale = n
                }
            }, t.getLocalRotationEuler = function() {
                if (this._locaEulerlUpdate) {
                    qt.getYawPitchRoll(this._localRotation, r._tempVector3);
                    var e = r._tempVector3,
                        t = this._localRotationEuler;
                    t[0] = e[1] * r._angleToRandin, t[1] = e[0] * r._angleToRandin, t[2] = e[2] * r._angleToRandin, this._locaEulerlUpdate = !1
                }
                return this._localRotationEuler
            }, t.setLocalRotationEuler = function(e) {
                if (this._parent) qt._quaternionCreateFromYawPitchRollArray(e[1] / r._angleToRandin, e[0] / r._angleToRandin, e[2] / r._angleToRandin, this._localRotation), this._localRotationEuler = e, this._locaEulerlUpdate = !1, this._localQuaternionUpdate = !1, this._localUpdate = !0, this._onWorldTransform();
                else {
                    var t = this._entity.owner._transform,
                        n = this._entity.localRotationEuler,
                        i = n.elements;
                    i[0] = e[0], i[1] = e[1], i[2] = e[2], t.localRotationEuler = n
                }
            }, t.getWorldMatrix = function() {
                if (this._worldUpdate) {
                    if (null != this._parent._parent) qt.matrix4x4MultiplyFFF(this._parent.getWorldMatrix(), this._getlocalMatrix(), this._worldMatrix);
                    else
                        for (var e = this._getlocalMatrix(), t = 0; t < 16; ++t) this._worldMatrix[t] = e[t];
                    this._worldUpdate = !1
                }
                return this._worldMatrix
            }, t.setParent = function(e) {
                if (this._parent !== e) {
                    if (this._parent) {
                        var t = this._parent._childs,
                            n = t.indexOf(this);
                        t.splice(n, 1)
                    }
                    e && (e._childs.push(this), e && this._onWorldTransform()), this._parent = e
                }
            }, u(r, ["_tempVector3", function() {
                return this._tempVector3 = new Float32Array(3)
            }, "_angleToRandin", function() {
                return this._angleToRandin = 180 / Math.PI
            }]), r
        }(),
        Jt = function(e) {
            function t() {
                this._destroyed = !1, this._id = 0, this._enable = !1, this._owner = null, this.started = !1, t.__super.call(this), this._destroyed = !1, this._id = t._uniqueIDCounter, t._uniqueIDCounter++
            }
            m(t, "t_tl.d3.component.Component3D", a);
            var n = t.prototype;
            return x.imps(n, {
                "t_tl.d3.core.render.IUpdate": !0,
                "t_tl.resource.IDestroy": !0
            }), n._initialize = function(e) {
                this._owner = e, this._enable = !0, this.started = !1, this._load(e)
            }, n._destroy = function() {
                this._unload(this._owner), this._owner = null, this._destroyed = !0
            }, n._load = function(e) {}, n._start = function(e) {}, n._update = function(e) {}, n._lateUpdate = function(e) {}, n._preRenderUpdate = function(e) {}, n._postRenderUpdate = function(e) {}, n._unload = function(e) {
                this.offAll()
            }, n._cloneTo = function(e) {}, g(0, n, "id", function() {
                return this._id
            }), g(0, n, "destroyed", function() {
                return this._destroyed
            }), g(0, n, "owner", function() {
                return this._owner
            }), g(0, n, "enable", function() {
                return this._enable
            }, function(e) {
                this._enable !== e && (this._enable = e, this.event("enablechanged", this._enable))
            }), g(0, n, "isSingleton", function() {
                return t._isSingleton
            }), t._isSingleton = !0, t._uniqueIDCounter = 1, t
        }(),
        en = function(e) {
            function t() {
                this._destroyed = !1, t.__super.call(this), this._destroyed = !1
            }
            m(t, "t_tl.d3.core.GeometryFilter", a);
            var n = t.prototype;
            return x.imps(n, {
                "t_tl.resource.IDestroy": !0
            }), n._destroy = function() {
                this.offAll(), this._destroyed = !0
            }, g(0, n, "_isAsyncLoaded", function() {
                return !0
            }), g(0, n, "_originalBoundingBoxCorners", function() {
                throw new Error("BaseRender: must override it.")
            }), g(0, n, "_originalBoundingSphere", function() {
                throw new Error("BaseRender: must override it.")
            }), g(0, n, "_originalBoundingBox", function() {
                throw new Error("BaseRender: must override it.")
            }), g(0, n, "destroyed", function() {
                return this._destroyed
            }), t
        }(),
        tn = function(e) {
            function i(e) {
                i.__super.call(this), this._id = ++i._uniqueIDCounter, this._indexInSceneFrustumCullingObjects = -1, this._boundingBox = new St(new Vt, new Vt), this._boundingBoxCenter = new Vt, this._boundingSphere = new Tt(new Vt, 0), this._boundingSphereNeedChange = !0, this._boundingBoxNeedChange = !0, this._boundingBoxCenterNeedChange = !0, this._octreeNodeNeedChange = !0, this._materials = [], this._renderElements = [], this._isPartOfStaticBatch = !1, this._destroyed = !1, this._owner = e, this._enable = !0, this._materialsInstance = [], this.lightmapIndex = -1, this.castShadow = !1, this.receiveShadow = !1, this.sortingFudge = 0, this._owner.transform.on("worldmatrixneedchanged", this, this._onWorldMatNeedChange)
            }
            m(i, "t_tl.d3.core.render.BaseRender", a);
            var t = i.prototype;
            return x.imps(t, {
                "t_tl.resource.IDestroy": !0
            }), t._changeMaterialReference = function(e, t) {
                e && e._removeReference(), t._addReference()
            }, t._getInstanceMaterial = function(e, t) {
                var n = new e.constructor;
                return e.cloneTo(n), n.name = n.name + "(Instance)", this._materialsInstance[t] = !0, this._changeMaterialReference(this._materials[t], n), this._materials[t] = n
            }, t._setShaderValuelightMap = function(e) {
                this._setShaderValueTexture(3, e)
            }, t._onWorldMatNeedChange = function() {
                this._boundingSphereNeedChange = !0, this._boundingBoxNeedChange = !0, this._boundingBoxCenterNeedChange = !0, this._octreeNodeNeedChange = !0
            }, t._renderRenderableBoundBox = function() {
                var e = Qt._debugPhasorSprite,
                    t = this.boundingBox,
                    n = i._tempBoundBoxCorners;
                t.getCorners(n), e.line(n[0], i._greenColor, n[1], i._greenColor), e.line(n[2], i._greenColor, n[3], i._greenColor), e.line(n[4], i._greenColor, n[5], i._greenColor), e.line(n[6], i._greenColor, n[7], i._greenColor), e.line(n[0], i._greenColor, n[3], i._greenColor), e.line(n[1], i._greenColor, n[2], i._greenColor), e.line(n[2], i._greenColor, n[6], i._greenColor), e.line(n[3], i._greenColor, n[7], i._greenColor), e.line(n[0], i._greenColor, n[4], i._greenColor), e.line(n[1], i._greenColor, n[5], i._greenColor), e.line(n[4], i._greenColor, n[7], i._greenColor), e.line(n[5], i._greenColor, n[6], i._greenColor)
            }, t._calculateBoundingSphere = function() {
                throw "BaseRender: must override it."
            }, t._calculateBoundingBox = function() {
                throw "BaseRender: must override it."
            }, t._setShaderValueTexture = function(e, t) {
                this._owner._shaderValues.setValue(e, t)
            }, t._setShaderValueMatrix4x4 = function(e, t) {
                this._owner._shaderValues.setValue(e, t ? t.elements : null)
            }, t._setShaderValueColor = function(e, t) {
                this._owner._shaderValues.setValue(e, t ? t.elements : null)
            }, t._setShaderValueBuffer = function(e, t) {
                this._owner._shaderValues.setValue(e, t)
            }, t._setShaderValueInt = function(e, t) {
                this._owner._shaderValues.setValue(e, t)
            }, t._setShaderValueBool = function(e, t) {
                this._owner._shaderValues.setValue(e, t)
            }, t._setShaderValueNumber = function(e, t) {
                this._owner._shaderValues.setValue(e, t)
            }, t._setShaderValueVector2 = function(e, t) {
                this._owner._shaderValues.setValue(e, t ? t.elements : null)
            }, t._addShaderDefine = function(e) {
                this._owner._shaderDefineValue |= e
            }, t._removeShaderDefine = function(e) {
                this._owner._shaderDefineValue &= ~e
            }, t._renderUpdate = function(e) {
                return !0
            }, t._applyLightMapParams = function() {
                if (0 <= this._lightmapIndex) {
                    var e = this._owner.scene;
                    if (e) {
                        var t = e.getlightmaps()[this._lightmapIndex];
                        t ? (this._addShaderDefine(ci.SAHDERDEFINE_LIGHTMAP), t.loaded ? this._setShaderValuelightMap(t) : t.once("loaded", this, this._setShaderValuelightMap)) : this._removeShaderDefine(ci.SAHDERDEFINE_LIGHTMAP)
                    } else this._removeShaderDefine(ci.SAHDERDEFINE_LIGHTMAP)
                } else this._removeShaderDefine(ci.SAHDERDEFINE_LIGHTMAP)
            }, t._updateOctreeNode = function() {
                var e = this._treeNode;
                e && this._octreeNodeNeedChange && (e.updateObject(this), this._octreeNodeNeedChange = !1)
            }, t._destroy = function() {
                this.offAll();
                var e = 0,
                    t = 0;
                for (e = 0, t = this._renderElements.length; e < t; e++) this._renderElements[e]._destroy();
                for (e = 0, t = this._materials.length; e < t; e++) this._materials[e]._removeReference();
                this._renderElements = null, this._owner = null, this._materials = null, this._boundingBox = null, this._boundingBoxCenter = null, this._boundingSphere = null, this._lightmapScaleOffset = null, this._destroyed = !0
            }, g(0, t, "boundingSphere", function() {
                return this._boundingSphereNeedChange && (this._calculateBoundingSphere(), this._boundingSphereNeedChange = !1), this._boundingSphere
            }), g(0, t, "id", function() {
                return this._id
            }), g(0, t, "material", function() {
                var e = this._materials[0];
                if (e && !this._materialsInstance[0]) {
                    var t = this._getInstanceMaterial(e, 0);
                    this.event("materialchanged", [this, 0, t])
                }
                return this._materials[0]
            }, function(e) {
                this.sharedMaterial = e
            }), g(0, t, "sharedMaterial", function() {
                return this._materials[0]
            }, function(e) {
                var t = this._materials[0];
                t !== e && (this._materials[0] = e, this._materialsInstance[0] = !1, this._changeMaterialReference(t, e), this.event("materialchanged", [this, 0, e]))
            }), g(0, t, "lightmapIndex", function() {
                return this._lightmapIndex
            }, function(e) {
                this._lightmapIndex = e, this._applyLightMapParams()
            }), g(0, t, "lightmapScaleOffset", function() {
                return this._lightmapScaleOffset
            }, function(e) {
                this._lightmapScaleOffset = e, this._setShaderValueColor(2, e), this._addShaderDefine(ci.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV)
            }), g(0, t, "enable", function() {
                return this._enable
            }, function(e) {
                this._enable = e, this.event("enablechanged", [this, e])
            }), g(0, t, "materials", function() {
                for (var e = 0, t = this._materials.length; e < t; e++)
                    if (!this._materialsInstance[e]) {
                        var n = this._getInstanceMaterial(this._materials[e], e);
                        this.event("materialchanged", [this, e, n])
                    }
                return this._materials.slice()
            }, function(e) {
                this.sharedMaterials = e
            }), g(0, t, "sharedMaterials", function() {
                return this._materials.slice()
            }, function(e) {
                if (!e) throw new Error("MeshRender: shadredMaterials value can't be null.");
                var t = e.length;
                this._materialsInstance.length = t;
                for (var n = 0; n < t; n++) {
                    var i = this._materials[n];
                    i !== e[n] && (this._materialsInstance[n] = !1, this._changeMaterialReference(i, e[n]), this.event("materialchanged", [this, n, e[n]]))
                }
                this._materials = e
            }), g(0, t, "boundingBox", function() {
                return this._boundingBoxNeedChange && (this._calculateBoundingBox(), this._boundingBoxNeedChange = !1), this._boundingBox
            }), g(0, t, "boundingBoxCenter", function() {
                if (this._boundingBoxCenterNeedChange) {
                    var e = this.boundingBox;
                    Vt.add(e.min, e.max, this._boundingBoxCenter), Vt.scale(this._boundingBoxCenter, .5, this._boundingBoxCenter), this._boundingBoxCenterNeedChange = !1
                }
                return this._boundingBoxCenter
            }), g(0, t, "receiveShadow", function() {
                return this._receiveShadow
            }, function(e) {
                this._receiveShadow !== e && ((this._receiveShadow = e) ? this._addShaderDefine(Gt.SHADERDEFINE_RECEIVE_SHADOW) : this._removeShaderDefine(Gt.SHADERDEFINE_RECEIVE_SHADOW))
            }), g(0, t, "destroyed", function() {
                return this._destroyed
            }), i._uniqueIDCounter = 0, u(i, ["_tempBoundBoxCorners", function() {
                return this._tempBoundBoxCorners = [new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt]
            }, "_greenColor", function() {
                return this._greenColor = new Pt(0, 1, 0, 1)
            }]), i
        }(),
        nn = function(e) {
            function s(e) {
                this._owner = null, this._localQuaternionUpdate = !1, this._locaEulerlUpdate = !1, this._localUpdate = !1, this._worldUpdate = !0, this._positionUpdate = !0, this._rotationUpdate = !0, this._scaleUpdate = !0, this._parent = null, this._childs = null, this._dummy = null, this.pivot = null, s.__super.call(this), this._localPosition = new Vt, this._localRotation = new Ct(0, 0, 0, 1), this._localScale = new Vt(1, 1, 1), this._localRotationEuler = new Vt, this._localMatrix = new At, this._position = new Vt, this._rotation = new Ct(0, 0, 0, 1), this._scale = new Vt(1, 1, 1), this._worldMatrix = new At, this._forward = new Vt, this._up = new Vt, this._right = new Vt, this._owner = e, this._childs = []
            }
            m(s, "t_tl.d3.core.Transform3D", a);
            var t = s.prototype;
            return t._updateLocalMatrix = function() {
                if (!this.pivot || 0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z) At.createAffineTransformation(this._localPosition, this.localRotation, this._localScale, this._localMatrix);
                else {
                    var e = s._tempVector30;
                    Vt.multiply(this.pivot, this._localScale, e);
                    var t = s._tempVector31;
                    Vt.subtract(e, this.pivot, t);
                    var n = s._tempVector32,
                        i = this.localRotation;
                    Vt.transformQuat(e, i, n), Vt.subtract(n, e, n);
                    var r = s._tempVector33;
                    Vt.subtract(this._localPosition, t, r), Vt.subtract(r, n, r), At.createAffineTransformation(r, i, this._localScale, this._localMatrix)
                }
            }, t._onWorldPositionRotationTransform = function() {
                if (!this._worldUpdate || !this._positionUpdate || !this._rotationUpdate) {
                    this._worldUpdate = this._positionUpdate = this._rotationUpdate = !0, this.event("worldmatrixneedchanged");
                    for (var e = 0, t = this._childs.length; e < t; e++) this._childs[e]._onWorldPositionRotationTransform()
                }
            }, t._onWorldPositionScaleTransform = function() {
                if (!this._worldUpdate || !this._positionUpdate || !this._scaleUpdate) {
                    this._worldUpdate = this._positionUpdate = this._scaleUpdate = !0, this.event("worldmatrixneedchanged");
                    for (var e = 0, t = this._childs.length; e < t; e++) this._childs[e]._onWorldPositionScaleTransform()
                }
            }, t._onWorldPositionTransform = function() {
                if (!this._worldUpdate || !this._positionUpdate) {
                    this._worldUpdate = this._positionUpdate = !0, this.event("worldmatrixneedchanged");
                    for (var e = 0, t = this._childs.length; e < t; e++) this._childs[e]._onWorldPositionTransform()
                }
            }, t._onWorldRotationTransform = function() {
                if (!this._worldUpdate || !this._rotationUpdate) {
                    this._worldUpdate = this._rotationUpdate = !0, this.event("worldmatrixneedchanged");
                    for (var e = 0, t = this._childs.length; e < t; e++) this._childs[e]._onWorldPositionRotationTransform()
                }
            }, t._onWorldScaleTransform = function() {
                if (!this._worldUpdate || !this._scaleUpdate) {
                    this._worldUpdate = this._scaleUpdate = !0, this.event("worldmatrixneedchanged");
                    for (var e = 0, t = this._childs.length; e < t; e++) this._childs[e]._onWorldPositionScaleTransform()
                }
            }, t._onWorldTransform = function() {
                if (!(this._worldUpdate && this._positionUpdate && this._rotationUpdate && this._scaleUpdate)) {
                    this._worldUpdate = this._positionUpdate = this._rotationUpdate = this._scaleUpdate = !0, this.event("worldmatrixneedchanged");
                    for (var e = 0, t = this._childs.length; e < t; e++) this._childs[e]._onWorldTransform()
                }
            }, t.translate = function(e, t) {
                void 0 === t && (t = !0), t ? (At.createFromQuaternion(this.localRotation, s._tempMatrix0), Vt.transformCoordinate(e, s._tempMatrix0, s._tempVector30), Vt.add(this.localPosition, s._tempVector30, this._localPosition), this.localPosition = this._localPosition) : (Vt.add(this.position, e, this._position), this.position = this._position)
            }, t.rotate = function(e, t, n) {
                var i;
                void 0 === t && (t = !0), void 0 === n && (n = !0), n ? i = e : (Vt.scale(e, Math.PI / 180, s._tempVector30), i = s._tempVector30), Ct.createFromYawPitchRoll(i.y, i.x, i.z, s._tempQuaternion0), t ? (Ct.multiply(this._localRotation, s._tempQuaternion0, this._localRotation), this.localRotation = this._localRotation) : (Ct.multiply(s._tempQuaternion0, this.rotation, this._rotation), this.rotation = this._rotation)
            }, t.lookAt = function(e, t, n) {
                void 0 === n && (n = !1);
                var i, r = e.elements;
                if (n) {
                    if (i = this._localPosition.elements, Math.abs(i[0] - r[0]) < Mt.zeroTolerance && Math.abs(i[1] - r[1]) < Mt.zeroTolerance && Math.abs(i[2] - r[2]) < Mt.zeroTolerance) return;
                    Ct.lookAt(this._localPosition, e, t, this._localRotation), this._localRotation.invert(this._localRotation), this.localRotation = this._localRotation
                } else {
                    var a = this.position;
                    if (i = a.elements, Math.abs(i[0] - r[0]) < Mt.zeroTolerance && Math.abs(i[1] - r[1]) < Mt.zeroTolerance && Math.abs(i[2] - r[2]) < Mt.zeroTolerance) return;
                    Ct.lookAt(a, e, t, this._rotation), this._rotation.invert(this._rotation), this.rotation = this._rotation
                }
            }, g(0, t, "_isFrontFaceInvert", function() {
                var e = this.scale,
                    t = e.x < 0;
                return e.y < 0 && (t = !t), e.z < 0 && (t = !t), t
            }), g(0, t, "owner", function() {
                return this._owner
            }), g(0, t, "localRotation", function() {
                if (this._localQuaternionUpdate) {
                    var e = this._localRotationEuler.elements;
                    Ct.createFromYawPitchRoll(e[1] / s._angleToRandin, e[0] / s._angleToRandin, e[2] / s._angleToRandin, this._localRotation)
                }
                return this._localRotation
            }, function(e) {
                this._localRotation = e, this._localRotation.normalize(this._localRotation), this._locaEulerlUpdate = !0, this._localQuaternionUpdate = !1, this._localUpdate = !0, !this.pivot || 0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z ? this._onWorldRotationTransform() : this._onWorldPositionRotationTransform()
            }), g(0, t, "worldMatrix", function() {
                return this._worldUpdate && (null != this._parent ? At.multiply(this._parent.worldMatrix, this.localMatrix, this._worldMatrix) : this.localMatrix.cloneTo(this._worldMatrix), this._worldUpdate = !1), this._worldMatrix
            }, function(e) {
                null === this._parent ? e.cloneTo(this._localMatrix) : (this._parent.worldMatrix.invert(this._localMatrix), At.multiply(this._localMatrix, e, this._localMatrix)), this.localMatrix = this._localMatrix, this._worldMatrix = e, this._worldUpdate = !1
            }), g(0, t, "worldNeedUpdate", function() {
                return this._worldUpdate
            }), g(0, t, "localMatrix", function() {
                return this._localUpdate && (this._updateLocalMatrix(), this._localUpdate = !1), this._localMatrix
            }, function(e) {
                this._localMatrix = e, this._localMatrix.decomposeTransRotScale(this._localPosition, this._localRotation, this._localScale), this._localUpdate = !1, this._onWorldTransform()
            }), g(0, t, "dummy", function() {
                return this._dummy
            }, function(e) {
                this._dummy !== e && (this._dummy && (this._dummy._entity = null), e && (e._entity = this), this._dummy = e)
            }), g(0, t, "localPosition", function() {
                return this._localPosition
            }, function(e) {
                this._localPosition = e, this._localUpdate = !0, this._onWorldPositionTransform()
            }), g(0, t, "position", function() {
                if (this._positionUpdate) {
                    if (null != this._parent) {
                        var e = this._parent.position;
                        Vt.multiply(this._localPosition, this._parent.scale, s._tempVector30), Vt.transformQuat(s._tempVector30, this._parent.rotation, s._tempVector30), Vt.add(e, s._tempVector30, this._position)
                    } else this._localPosition.cloneTo(this._position);
                    this._positionUpdate = !1
                }
                return this._position
            }, function(e) {
                if (null != this._parent) {
                    Vt.subtract(e, this._parent.position, this._localPosition);
                    var t = this._parent.scale.elements,
                        n = t[0],
                        i = t[1],
                        r = t[2];
                    if (1 !== n || 1 !== i || 1 !== r) {
                        var a = s._tempVector30,
                            o = a.elements;
                        o[0] = 1 / n, o[1] = 1 / i, o[2] = 1 / r, Vt.multiply(this._localPosition, a, this._localPosition)
                    }
                    this._parent.rotation.invert(s._tempQuaternion0), Vt.transformQuat(this._localPosition, s._tempQuaternion0, this._localPosition)
                } else e.cloneTo(this._localPosition);
                this.localPosition = this._localPosition, this._position = e, this._positionUpdate = !1
            }), g(0, t, "localScale", function() {
                return this._localScale
            }, function(e) {
                this._localScale = e, this._localUpdate = !0, !this.pivot || 0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z ? this._onWorldScaleTransform() : this._onWorldPositionScaleTransform()
            }), g(0, t, "localRotationEuler", function() {
                if (this._locaEulerlUpdate) {
                    this._localRotation.getYawPitchRoll(s._tempVector30);
                    var e = s._tempVector30.elements,
                        t = this._localRotationEuler.elements;
                    t[0] = e[1] * s._angleToRandin, t[1] = e[0] * s._angleToRandin, t[2] = e[2] * s._angleToRandin
                }
                return this._localRotationEuler
            }, function(e) {
                this._localRotationEuler = e, this._locaEulerlUpdate = !1, this._localQuaternionUpdate = !0, this._localUpdate = !0, !this.pivot || 0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z ? this._onWorldRotationTransform() : this._onWorldPositionRotationTransform()
            }), g(0, t, "rotation", function() {
                return this._rotationUpdate && (null != this._parent ? Ct.multiply(this._parent.rotation, this.localRotation, this._rotation) : this.localRotation.cloneTo(this._rotation), this._rotationUpdate = !1), this._rotation
            }, function(e) {
                null != this._parent ? (this._parent.rotation.invert(s._tempQuaternion0), Ct.multiply(e, s._tempQuaternion0, this._localRotation)) : e.cloneTo(this._localRotation), this.localRotation = this._localRotation, this._rotation = e, this._rotationUpdate = !1
            }), g(0, t, "scale", function() {
                return this._scaleUpdate && (null !== this._parent ? Vt.multiply(this._parent.scale, this._localScale, this._scale) : this._localScale.cloneTo(this._scale), this._scaleUpdate = !1), this._scale
            }, function(e) {
                if (null !== this._parent) {
                    var t = this._parent.scale.elements,
                        n = s._tempVector30.elements;
                    n[0] = 1 / t[0], n[1] = 1 / t[1], n[2] = 1 / t[2], Vt.multiply(e, s._tempVector30, this._localScale)
                } else e.cloneTo(this._localScale);
                this.localScale = this._localScale, this._scale = e, this._scaleUpdate = !1
            }), g(0, t, "rotationEuler", null, function(e) {
                Ct.createFromYawPitchRoll(e.y, e.x, e.z, this._rotation), this.rotation = this._rotation
            }), g(0, t, "forward", function() {
                var e = this.worldMatrix.elements;
                return this._forward.elements[0] = -e[8], this._forward.elements[1] = -e[9], this._forward.elements[2] = -e[10], this._forward
            }), g(0, t, "up", function() {
                var e = this.worldMatrix.elements;
                return this._up.elements[0] = e[4], this._up.elements[1] = e[5], this._up.elements[2] = e[6], this._up
            }), g(0, t, "right", function() {
                var e = this.worldMatrix.elements;
                return this._right.elements[0] = e[0], this._right.elements[1] = e[1], this._right.elements[2] = e[2], this._right
            }), g(0, t, "parent", function() {
                return this._parent
            }, function(e) {
                if (this._parent !== e) {
                    if (this._parent) {
                        var t = this._parent._childs,
                            n = t.indexOf(this);
                        t.splice(n, 1)
                    }
                    e && (e._childs.push(this), e && this._onWorldTransform()), this._parent = e
                }
            }), u(s, ["_tempVector30", function() {
                return this._tempVector30 = new Vt
            }, "_tempVector31", function() {
                return this._tempVector31 = new Vt
            }, "_tempVector32", function() {
                return this._tempVector32 = new Vt
            }, "_tempVector33", function() {
                return this._tempVector33 = new Vt
            }, "_tempQuaternion0", function() {
                return this._tempQuaternion0 = new Ct
            }, "_tempMatrix0", function() {
                return this._tempMatrix0 = new At
            }, "_angleToRandin", function() {
                return this._angleToRandin = 180 / Math.PI
            }]), s
        }(),
        rn = (function(e) {
            function t() {
                this._rotation = 0, this._matNeedUpdte = !1, t.__super.call(this), this._matrix = new At, this._offset = new Ot, this._tiling = new Ot(1, 1)
            }
            m(t, "t_tl.d3.core.TransformUV", a);
            var n = t.prototype;
            x.imps(n, {
                "t_tl.d3.core.IClone": !0
            }), n._updateMatrix = function() {
                t._tempOffsetV3.elements[0] = this._offset.x, t._tempOffsetV3.elements[1] = this._offset.y, Ct.createFromYawPitchRoll(0, 0, this._rotation, t._tempRotationQua), t._tempTitlingV3.elements[0] = this._tiling.x, t._tempTitlingV3.elements[1] = this._tiling.y, At.createAffineTransformation(t._tempOffsetV3, t._tempRotationQua, t._tempTitlingV3, this._matrix)
            }, n.cloneTo = function(e) {
                e._matrix = this._matrix.clone(), e._offset = this._offset.clone(), e._rotation = this._rotation, e._tiling = this._tiling.clone()
            }, n.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, n, "matrix", function() {
                return this._matNeedUpdte && (this._updateMatrix(), this._matNeedUpdte = !1), this._matrix
            }), g(0, n, "tiling", function() {
                return this._tiling
            }, function(e) {
                this._tiling = e, this._matNeedUpdte = !0
            }), g(0, n, "offset", function() {
                return this._offset
            }, function(e) {
                this._offset = e, this._matNeedUpdte = !0
            }), g(0, n, "rotation", function() {
                return this._rotation
            }, function(e) {
                this._rotation = e, this._matNeedUpdte = !0
            }), u(t, ["_tempOffsetV3", function() {
                return this._tempOffsetV3 = new Vt(0, 0, 0)
            }, "_tempRotationQua", function() {
                return this._tempRotationQua = new Ct
            }, "_tempTitlingV3", function() {
                return this._tempTitlingV3 = new Vt(1, 1, 1)
            }])
        }(), function(e) {
            function S() {
                S.__super.call(this)
            }
            return m(S, "t_tl.d3.utils.CollisionManager", a), S._onTrigger = function(e, t, n, i, r) {
                var a = 0,
                    o = 0,
                    s = e.id,
                    l = t.id;
                if (!e._ignoreCollisonMap[l]) {
                    var h = Zt.collisionManager,
                        _ = e._runtimeCollisonTestMap[l];
                    if (null != _)
                        if (_)
                            if (e._collisonTo(t))
                                if (e._runtimeCollisonMap[l]) {
                                    for (a = 0, o = n.length; a < o; a++) n[a].onTriggerStay(t);
                                    for (a = 0, o = i.length; a < o; a++) i[a].onTriggerStay(e);
                                    h.event("triggerstay", [e, t])
                                } else {
                                    for (e._runtimeCollisonMap[l] = t, e._runtimeCollisonTestMap[l] = !1, t._runtimeCollisonMap[s] = e, r && (t._runtimeCollisonTestMap[s] = !1), a = 0, o = n.length; a < o; a++) n[a].onTriggerEnter(t);
                                    for (a = 0, o = i.length; a < o; a++) i[a].onTriggerEnter(e);
                                    h.event("triggerenter", [e, t])
                                }
                    else {
                        var u = e._runtimeCollisonMap;
                        if (u[l]) {
                            for (delete u[l], delete e._runtimeCollisonTestMap[l], delete t._runtimeCollisonMap[s], r && delete t._runtimeCollisonTestMap[s], a = 0, o = n.length; a < o; a++) n[a].onTriggerExit(t);
                            for (a = 0, o = i.length; a < o; a++) i[a].onTriggerExit(e);
                            h.event("triggerexit", [e, t])
                        }
                    } else {
                        for (a = 0, o = n.length; a < o; a++) n[a].onTriggerStay(t);
                        for (a = 0, o = i.length; a < o; a++) i[a].onTriggerStay(e);
                        h.event("triggerstay", [e, t])
                    } else if (e._collisonTo(t)) {
                        for (e._runtimeCollisonMap[l] = t, e._runtimeCollisonTestMap[l] = !1, t._runtimeCollisonMap[s] = e, r && (t._runtimeCollisonTestMap[s] = !1), a = 0, o = n.length; a < o; a++) n[a].onTriggerEnter(t);
                        for (a = 0, o = i.length; a < o; a++) i[a].onTriggerEnter(e);
                        h.event("triggerenter", [e, t])
                    }
                }
            }, S._triggerCollision = function() {
                for (var e = F._collsionTestList, t = e.length, n = Zt._layerCollsionMatrix, i = 0; i < t; i++)
                    for (var r = e[i], a = F.getLayerByNumber(r), o = a._colliders, s = a._nonRigidbodyOffset, l = t - 1; i <= l; l--) {
                        var h = e[l];
                        if (n[r][30 - h]) {
                            var _, u, c, d = 0,
                                f = 0,
                                m = 0,
                                p = 0,
                                v = F.getLayerByNumber(h),
                                g = v._colliders,
                                E = v._nonRigidbodyOffset;
                            if (a !== v) {
                                for (d = 0; d < s; d++)
                                    if ((_ = o[d]).enable) {
                                        for (c = _.owner._scripts, m = 0, p = E; m < p; m++)(u = g[m]).enable && S._onTrigger(_, u, c, u.owner._scripts, !0);
                                        for (m = E, p = g.length; m < p; m++)(u = g[m]).enable && S._onTrigger(_, u, c, u.owner._scripts, !1)
                                    }
                                for (d = s, f = o.length; d < f; d++)
                                    if ((_ = o[d]).enable)
                                        for (c = _.owner._scripts, m = 0, p = v._nonRigidbodyOffset; m < p; m++)(u = g[m]).enable && S._onTrigger(u, _, c, u.owner._scripts, !1)
                            } else
                                for (d = 0; d < s; d++)
                                    if ((_ = o[d]).enable) {
                                        for (c = _.owner._scripts, m = d + 1, p = s; m < p; m++)(u = g[m]).enable && S._onTrigger(_, u, c, u.owner._scripts, !0);
                                        for (m = s, p = o.length; m < p; m++)(u = g[m]).enable && S._onTrigger(_, u, c, u.owner._scripts, !1)
                                    }
                        }
                    }
            }, S
        }()),
        an = (function(r) {
            function e() {
                e.__super.call(this)
            }
            m(e, "t_tl.d3.core.glitter.SplineCurvePosition", r);
            var t = e.prototype;
            t._CalcVelocity = function(e, t, n) {
                Vt.subtract(e, t, n), Vt.scale(n, .5, n)
            }, t.Init = function(e, t, n, i) {
                this._CalcVelocity(t, e, this._tempVector30), this._CalcVelocity(i, n, this._tempVector31), r.prototype.Init.call(this, t, this._tempVector30, i, this._tempVector31)
            }
        }(L), function(n) {
            function e() {
                this.x = NaN, this.y = NaN, this.z = NaN, e.__super.call(this), this.x = 1, this.y = 1, this.z = 1, this.randomDirection = !1
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.shape.BoxShape", n);
            var t = e.prototype;
            return t._getShapeBoundBox = function(e) {
                var t = e.min.elements;
                t[0] = .5 * -this.x, t[1] = .5 * -this.y, t[2] = .5 * -this.z;
                var n = e.max.elements;
                n[0] = .5 * this.x, n[1] = .5 * this.y, n[2] = .5 * this.z
            }, t._getSpeedBoundBox = function(e) {
                var t = e.min.elements;
                t[0] = 0, t[1] = 0, t[2] = 0;
                var n = e.max.elements;
                n[0] = 0, n[1] = 1, n[2] = 0
            }, t.generatePositionAndDirection = function(e, t, n, i) {
                var r = e.elements,
                    a = t.elements;
                n ? (n.seed = i[16], j._randomPointInsideHalfUnitBox(e, n), i[16] = n.seed) : j._randomPointInsideHalfUnitBox(e), r[0] = this.x * r[0], r[1] = this.y * r[1], r[2] = this.z * r[2], this.randomDirection ? n ? (n.seed = i[17], j._randomPointUnitSphere(t, n), i[17] = n.seed) : j._randomPointUnitSphere(t) : (a[0] = 0, a[1] = 0, a[2] = 1)
            }, t.cloneTo = function(e) {
                n.prototype.cloneTo.call(this, e);
                var t = e;
                t.x = this.x, t.y = this.y, t.z = this.z, t.randomDirection = this.randomDirection
            }, e
        }(Y)),
        on = function(n) {
            function o() {
                this.radius = NaN, this.arc = NaN, this.emitFromEdge = !1, o.__super.call(this), this.radius = 1, this.arc = 2 * Math.PI, this.emitFromEdge = !1, this.randomDirection = !1
            }
            m(o, "t_tl.d3.core.particleShuriKen.module.shape.CircleShape", n);
            var e = o.prototype;
            return e._getShapeBoundBox = function(e) {
                var t = e.min.elements;
                t[0] = t[2] = -this.radius, t[1] = 0;
                var n = e.max.elements;
                n[0] = n[2] = this.radius, n[1] = 0
            }, e._getSpeedBoundBox = function(e) {
                var t = e.min.elements;
                t[0] = t[1] = -1, t[2] = 0;
                var n = e.max.elements;
                n[0] = n[1] = 1, n[2] = 0
            }, e.generatePositionAndDirection = function(e, t, n, i) {
                var r = e.elements,
                    a = o._tempPositionPoint.elements;
                n ? (n.seed = i[16], this.emitFromEdge ? j._randomPointUnitArcCircle(this.arc, o._tempPositionPoint, n) : j._randomPointInsideUnitArcCircle(this.arc, o._tempPositionPoint, n), i[16] = n.seed) : this.emitFromEdge ? j._randomPointUnitArcCircle(this.arc, o._tempPositionPoint) : j._randomPointInsideUnitArcCircle(this.arc, o._tempPositionPoint), r[0] = -a[0], r[1] = a[1], r[2] = 0, Vt.scale(e, this.radius, e), this.randomDirection ? n ? (n.seed = i[17], j._randomPointUnitSphere(t, n), i[17] = n.seed) : j._randomPointUnitSphere(t) : e.cloneTo(t)
            }, e.cloneTo = function(e) {
                n.prototype.cloneTo.call(this, e);
                var t = e;
                t.radius = this.radius, t.arc = this.arc, t.emitFromEdge = this.emitFromEdge, t.randomDirection = this.randomDirection
            }, u(o, ["_tempPositionPoint", function() {
                return this._tempPositionPoint = new Ot
            }]), o
        }(Y),
        sn = function(n) {
            function c() {
                this.angle = NaN, this.radius = NaN, this.length = NaN, this.emitType = 0, c.__super.call(this), this.angle = 25 / 180 * Math.PI, this.radius = 1, this.length = 5, this.emitType = 0, this.randomDirection = !1
            }
            m(c, "t_tl.d3.core.particleShuriKen.module.shape.ConeShape", n);
            var e = c.prototype;
            return e._getShapeBoundBox = function(e) {
                var t = this.radius + this.length * Math.sin(this.angle),
                    n = this.length * Math.cos(this.angle),
                    i = e.min.elements;
                i[0] = i[1] = -t, i[2] = 0;
                var r = e.max.elements;
                r[0] = r[1] = t, r[2] = n
            }, e._getSpeedBoundBox = function(e) {
                var t = Math.sin(this.angle),
                    n = e.min.elements;
                n[0] = n[1] = -t, n[2] = 0;
                var i = e.max.elements;
                i[0] = n[1] = t, i[2] = 1
            }, e.generatePositionAndDirection = function(e, t, n, i) {
                var r, a = e.elements,
                    o = t.elements,
                    s = c._tempPositionPoint.elements,
                    l = NaN,
                    h = NaN,
                    _ = Math.cos(this.angle),
                    u = Math.sin(this.angle);
                switch (this.emitType) {
                    case 0:
                        n ? (n.seed = i[16], j._randomPointInsideUnitCircle(c._tempPositionPoint, n), i[16] = n.seed) : j._randomPointInsideUnitCircle(c._tempPositionPoint), l = s[0], h = s[1], a[0] = l * this.radius, a[1] = h * this.radius, a[2] = 0, this.randomDirection ? (n ? (n.seed = i[17], j._randomPointInsideUnitCircle(c._tempDirectionPoint, n), i[17] = n.seed) : j._randomPointInsideUnitCircle(c._tempDirectionPoint), r = c._tempDirectionPoint.elements, o[0] = r[0] * u, o[1] = r[1] * u) : (o[0] = l * u, o[1] = h * u), o[2] = _;
                        break;
                    case 1:
                        n ? (n.seed = i[16], j._randomPointUnitCircle(c._tempPositionPoint, n), i[16] = n.seed) : j._randomPointUnitCircle(c._tempPositionPoint), l = s[0], h = s[1], a[0] = l * this.radius, a[1] = h * this.radius, a[2] = 0, this.randomDirection ? (n ? (n.seed = i[17], j._randomPointInsideUnitCircle(c._tempDirectionPoint, n), i[17] = n.seed) : j._randomPointInsideUnitCircle(c._tempDirectionPoint), r = c._tempDirectionPoint.elements, o[0] = r[0] * u, o[1] = r[1] * u) : (o[0] = l * u, o[1] = h * u), o[2] = _;
                        break;
                    case 2:
                        n ? (n.seed = i[16], j._randomPointInsideUnitCircle(c._tempPositionPoint, n)) : j._randomPointInsideUnitCircle(c._tempPositionPoint), l = s[0], h = s[1], a[0] = l * this.radius, a[1] = h * this.radius, o[a[2] = 0] = l * u, o[1] = h * u, o[2] = _, Vt.normalize(t, t), n ? (Vt.scale(t, this.length * n.getFloat(), t), i[16] = n.seed) : Vt.scale(t, this.length * Math.random(), t), Vt.add(e, t, e), this.randomDirection && (n ? (n.seed = i[17], j._randomPointUnitSphere(t, n), i[17] = n.seed) : j._randomPointUnitSphere(t));
                        break;
                    case 3:
                        n ? (n.seed = i[16], j._randomPointUnitCircle(c._tempPositionPoint, n)) : j._randomPointUnitCircle(c._tempPositionPoint), l = s[0], h = s[1], a[0] = l * this.radius, a[1] = h * this.radius, o[a[2] = 0] = l * u, o[1] = h * u, o[2] = _, Vt.normalize(t, t), n ? (Vt.scale(t, this.length * n.getFloat(), t), i[16] = n.seed) : Vt.scale(t, this.length * Math.random(), t), Vt.add(e, t, e), this.randomDirection && (n ? (n.seed = i[17], j._randomPointUnitSphere(t, n), i[17] = n.seed) : j._randomPointUnitSphere(t));
                        break;
                    default:
                        throw new Error("ConeShape:emitType is invalid.")
                }
            }, e.cloneTo = function(e) {
                n.prototype.cloneTo.call(this, e);
                var t = e;
                t.angle = this.angle, t.radius = this.radius, t.length = this.length, t.emitType = this.emitType, t.randomDirection = this.randomDirection
            }, u(c, ["_tempPositionPoint", function() {
                return this._tempPositionPoint = new Ot
            }, "_tempDirectionPoint", function() {
                return this._tempDirectionPoint = new Ot
            }]), c
        }(Y),
        ln = function(n) {
            function e() {
                this.radius = NaN, this.emitFromShell = !1, e.__super.call(this), this.radius = 1, this.emitFromShell = !1, this.randomDirection = !1
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.shape.HemisphereShape", n);
            var t = e.prototype;
            return t._getShapeBoundBox = function(e) {
                var t = e.min.elements;
                t[0] = t[1] = t[2] = -this.radius;
                var n = e.max.elements;
                n[0] = n[1] = this.radius, n[2] = 0
            }, t._getSpeedBoundBox = function(e) {
                var t = e.min.elements;
                t[0] = t[1] = -1, t[2] = 0;
                var n = e.max.elements;
                n[0] = n[1] = n[2] = 1
            }, t.generatePositionAndDirection = function(e, t, n, i) {
                var r = e.elements;
                n ? (n.seed = i[16], this.emitFromShell ? j._randomPointUnitSphere(e, n) : j._randomPointInsideUnitSphere(e, n), i[16] = n.seed) : this.emitFromShell ? j._randomPointUnitSphere(e) : j._randomPointInsideUnitSphere(e), Vt.scale(e, this.radius, e);
                var a = r[2];
                a < 0 && (r[2] = -1 * a), this.randomDirection ? n ? (n.seed = i[17], j._randomPointUnitSphere(t, n), i[17] = n.seed) : j._randomPointUnitSphere(t) : e.cloneTo(t)
            }, t.cloneTo = function(e) {
                n.prototype.cloneTo.call(this, e);
                var t = e;
                t.radius = this.radius, t.emitFromShell = this.emitFromShell, t.randomDirection = this.randomDirection
            }, e
        }(Y),
        hn = function(n) {
            function e() {
                this.radius = NaN, this.emitFromShell = !1, e.__super.call(this), this.radius = 1, this.emitFromShell = !1, this.randomDirection = !1
            }
            m(e, "t_tl.d3.core.particleShuriKen.module.shape.SphereShape", n);
            var t = e.prototype;
            return t._getShapeBoundBox = function(e) {
                var t = e.min.elements;
                t[0] = t[1] = t[2] = -this.radius;
                var n = e.max.elements;
                n[0] = n[1] = n[2] = this.radius
            }, t._getSpeedBoundBox = function(e) {
                var t = e.min.elements;
                t[0] = t[1] = t[2] = -1;
                var n = e.max.elements;
                n[0] = n[1] = n[2] = 1
            }, t.generatePositionAndDirection = function(e, t, n, i) {
                n ? (n.seed = i[16], this.emitFromShell ? j._randomPointUnitSphere(e, n) : j._randomPointInsideUnitSphere(e, n), i[16] = n.seed) : this.emitFromShell ? j._randomPointUnitSphere(e) : j._randomPointInsideUnitSphere(e), Vt.scale(e, this.radius, e), this.randomDirection ? n ? (n.seed = i[17], j._randomPointUnitSphere(t, n), i[17] = n.seed) : j._randomPointUnitSphere(t) : e.cloneTo(t)
            }, t.cloneTo = function(e) {
                n.prototype.cloneTo.call(this, e);
                var t = e;
                t.radius = this.radius, t.emitFromShell = this.emitFromShell, t.randomDirection = this.randomDirection
            }, e
        }(Y),
        _n = function(e) {
            function t() {
                this._batchIndexStart = 0, this._batchIndexEnd = 0, this._skinAnimationDatas = null, t.__super.call(this)
            }
            return m(t, "t_tl.d3.core.render.SubMeshRenderElement", Q), t
        }(),
        un = function(e) {
            function v(e, t, n, i, r, a) {
                this._name = NaN, this._attributeMap = null, this._renderElementUniformMap = null, this._materialUniformMap = null, this._spriteUniformMap = null, this._cameraUniformMap = null, this._sceneUniformMap = null, this.sharders = null, this._spriteDefineCounter = 3, this._spriteInt2name = [], this._spriteName2Int = {}, this._materialDefineCounter = 1, this._materialInt2name = [], this._materialName2Int = {}, this._conchShader = null, this._name = e, this._renderElementUniformMap = {}, this._materialUniformMap = {}, this._spriteUniformMap = {}, this._cameraUniformMap = {}, this._sceneUniformMap = {}, this.sharders = [], this._spriteInt2name[Gt.SHADERDEFINE_RECEIVE_SHADOW] = "RECEIVESHADOW", this._spriteInt2name[ci.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV] = "SCALEOFFSETLIGHTINGMAPUV", this._spriteInt2name[ci.SAHDERDEFINE_LIGHTMAP] = "LIGHTMAP", this._spriteInt2name[Ei.SHADERDEFINE_BONE] = "BONE", this._materialInt2name[vn.SHADERDEFINE_ALPHATEST] = "ALPHATEST";
                v.__super.call(this, e, t, n, null, {}), this._attributeMap = i;
                var o;
                for (o in r) {
                    var s = r[o];
                    switch (s[1]) {
                        case 0:
                            this._renderElementUniformMap[o] = s[0];
                            break;
                        case 1:
                            this._materialUniformMap[o] = s[0];
                            break;
                        case 2:
                            this._spriteUniformMap[o] = s[0];
                            break;
                        case 3:
                            this._cameraUniformMap[o] = s[0];
                            break;
                        case 4:
                            this._sceneUniformMap[o] = s[0];
                            break;
                        default:
                            throw new Error("ShaderCompile3D: period is unkonw.")
                    }
                }
            }
            m(v, "t_tl.d3.shader.ShaderCompile3D", D);
            var t = v.prototype;
            return t._definesToNameDic = function(e, t) {
                for (var n = {}, i = 1, r = 0; r < 32 && !(e < (i = 1 << r)); r++)
                    if (e & i) {
                        var a = t[i];
                        a && (n[a] = "")
                    }
                return n
            }, t.withCompile = function(e, t, n) {
                var i, r, a;
                if (r = this.sharders[e])
                    if (a = r[t]) {
                        if (i = a[n]) return i
                    } else a = r[t] = [];
                else a = (r = this.sharders[e] = [])[t] = [];
                var o, s = this._definesToNameDic(e, v._globalInt2name),
                    l = this._definesToNameDic(t, this._spriteInt2name),
                    h = this._definesToNameDic(n, this._materialInt2name);
                if (t_tl.d3.shader.ShaderCompile3D.debugMode) {
                    var _ = "";
                    for (o in s) _ += o + " ";
                    var u = "";
                    for (o in l) u += o + " ";
                    var c = "";
                    for (o in h) c += o + " ";
                    console.log("ShaderCompile3DDebugMode---(Name:" + Bn.nameKey.getName(this._name) + " PublicDefine:" + e + " SpriteDefine:" + t + " MaterialDefine:" + n + " PublicDefineGroup:" + _ + " SpriteDefineGroup:" + u + "MaterialDefineGroup: " + c + ")---ShaderCompile3DDebugMode")
                }
                var d = {},
                    f = "";
                if (s)
                    for (o in s) f += "#define " + o + "\n", d[o] = !0;
                if (l)
                    for (o in l) f += "#define " + o + "\n", d[o] = !0;
                if (h)
                    for (o in h) f += "#define " + o + "\n", d[o] = !0;
                var m = this._VS.toscript(d, []),
                    p = this._PS.toscript(d, []);
                return i = Bn.create(f + m.join("\n"), f + p.join("\n"), this._attributeMap, this._sceneUniformMap, this._cameraUniformMap, this._spriteUniformMap, this._materialUniformMap, this._renderElementUniformMap), a[n] = i
            }, t.precompileShaderWithShaderDefine = function(e, t, n) {
                this.withCompile(e, t, n)
            }, t.addMaterialDefines = function(e) {
                var t = e.defines;
                for (var n in t) {
                    var i = t[n],
                        r = parseInt(n);
                    this._materialInt2name[r] = i, this._materialName2Int[i] = r
                }
            }, t.addSpriteDefines = function(e) {
                var t = e.defines;
                for (var n in t) {
                    var i = t[n],
                        r = parseInt(n);
                    this._spriteInt2name[r] = i, this._spriteName2Int[i] = r
                }
            }, t.getMaterialDefineByName = function(e) {
                return this._materialName2Int[e]
            }, t.registerMaterialDefine = function(e) {
                var t = Math.pow(2, this._materialDefineCounter++);
                return this._materialInt2name[t] = e, this._materialName2Int[e] = t
            }, t.registerSpriteDefine = function(e) {
                var t = Math.pow(2, this._spriteDefineCounter++);
                return this._spriteInt2name[t] = e, this._spriteName2Int[e] = t
            }, v._globalRegDefine = function(e, t) {
                v._globalInt2name[t] = e
            }, v.add = function(e, t, n, i, r) {
                return t_tl.d3.shader.ShaderCompile3D._preCompileShader[e] = new v(e, t, n, i, r, D.includes)
            }, v.get = function(e) {
                return t_tl.d3.shader.ShaderCompile3D._preCompileShader[Bn.nameKey.getID(e)]
            }, v._preCompileShader = {}, v._globalInt2name = [], v.debugMode = !1, v.SHADERDEFINE_HIGHPRECISION = 1, v.SHADERDEFINE_FOG = 4, v.SHADERDEFINE_DIRECTIONLIGHT = 8, v.SHADERDEFINE_POINTLIGHT = 16, v.SHADERDEFINE_SPOTLIGHT = 32, v.SHADERDEFINE_UV0 = 64, v.SHADERDEFINE_COLOR = 128, v.SHADERDEFINE_UV1 = 256, v.SAHDERDEFINE_DEPTHFOG = 131072, v
        }(),
        cn = function(e) {
            function f() {
                f.__super.call(this)
            }
            m(f, "t_tl.d3.graphics.MeshSprite3DStaticBatchManager", ue);
            var t = f.prototype;
            return t._getStaticBatch = function(e, t, n, i) {
                var r, a;
                return a = e ? e.id.toString() + n.id.toString() + t.id.toString() + i.toString() : n.id.toString() + t.id.toString() + i.toString(), this._staticBatches[a] ? r = this._staticBatches[a] : this._staticBatches[a] = r = new dn(a, this, e, t, n), r
            }, t._initStaticBatchs = function(e) {
                var t, n;
                this._initBatchRenderElements.sort(f._sortPrepareStaticBatch);
                for (var i, r = !1, a = 0, o = 0, s = this._initBatchRenderElements.length; o < s; o++) {
                    var l, h = this._initBatchRenderElements[o],
                        _ = h.renderObj._getVertexBuffer(0);
                    h._sprite3D;
                    if (n === _.vertexDeclaration && t === h._material)
                        if (r) i._addCombineBatchRenderObjTest(h) ? (l = h._staticBatch) !== i && (l && l._deleteCombineBatchRenderObj(h), i._addCombineBatchRenderObj(h)) : (r = !1, a++);
                        else {
                            var u = this._initBatchRenderElements[o - 1],
                                c = u.renderObj,
                                d = h.renderObj;
                            65535 < c._getVertexBuffer().vertexCount + d._getVertexBuffer().vertexCount ? r = !1 : (i = this._getStaticBatch(e, n, t, a), (l = u._staticBatch) !== i && (l && l._deleteCombineBatchRenderObj(u), i._addCombineBatchRenderObj(u)), (l = h._staticBatch) !== i && (l && l._deleteCombineBatchRenderObj(h), i._addCombineBatchRenderObj(h)), r = !0)
                        }
                    else r = !1, a = 0;
                    t = h._material, n = _.vertexDeclaration
                }
            }, f._sortPrepareStaticBatch = function(e, t) {
                var n = e._render,
                    i = t._render,
                    r = n.lightmapIndex - i.lightmapIndex;
                if (0 === r) {
                    var a = n.receiveShadow - i.receiveShadow;
                    if (0 === a) {
                        var o = e._mainSortID - t._mainSortID;
                        return 0 === o ? e.renderObj.triangleCount - t.renderObj.triangleCount : o
                    }
                    return a
                }
                return r
            }, f
        }(),
        dn = function(e) {
            function a(e, t, n, i, r) {
                this._batchOwnerIndices = null, this._batchOwners = null, this._needFinishCombine = !1, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0, this._vertexDeclaration = null, this._vertexBuffer = null, this._indexBuffer = null, a.__super.call(this, e, t, n), this._batchOwnerIndices = [], this._batchOwners = [], this._needFinishCombine = !1, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0, this._vertexDeclaration = i, this._material = r
            }
            m(a, "t_tl.d3.graphics.SubMeshStaticBatch", ce);
            var t = a.prototype;
            return t._compareBatchRenderElement = function(e, t) {
                return e._batchIndexStart > t._batchIndexStart
            }, t._addCombineBatchRenderObjTest = function(e) {
                var t = e.renderObj._vertexCount;
                return !(65535 < (0 < t ? this._currentCombineVertexCount + t : this._currentCombineVertexCount + e.renderObj._getVertexBuffer().vertexCount))
            }, t._addCombineBatchRenderObj = function(e) {
                var t = e.renderObj,
                    n = t._vertexCount;
                this._initBatchRenderElements.push(e), e._staticBatch = this, 0 < n ? (this._currentCombineIndexCount += t._indexCount, this._currentCombineVertexCount += n) : (this._currentCombineIndexCount = this._currentCombineIndexCount + t._getIndexBuffer().indexCount, this._currentCombineVertexCount = this._currentCombineVertexCount + t._getVertexBuffer().vertexCount), this._needFinishCombine = !0
            }, t._deleteCombineBatchRenderObj = function(e) {
                var t = e.renderObj,
                    n = this._initBatchRenderElements.indexOf(e);
                if (-1 !== n) {
                    this._initBatchRenderElements.splice(n, 1), e._staticBatch = null;
                    var i = t._vertexCount;
                    0 < i ? (this._currentCombineIndexCount = this._currentCombineIndexCount - t._indexCount, this._currentCombineVertexCount = this._currentCombineVertexCount - i) : (this._currentCombineIndexCount = this._currentCombineIndexCount - t._getIndexBuffer().indexCount, this._currentCombineVertexCount = this._currentCombineVertexCount - t._getVertexBuffer().vertexCount), this._needFinishCombine = !0
                }
            }, t._finishInit = function() {
                if (this._needFinishCombine) {
                    var e = 0,
                        t = 0;
                    0 <= this._initBatchRenderElements[0]._sprite3D._render.lightmapIndex ? this._vertexDeclaration = this._getVertexDecLightMap(this._vertexDeclaration) : this._material instanceof t_tl.d3.core.material.StandardMaterial && this._material.ambientTexture && (this._vertexDeclaration = this._getVertexDecLightMap(this._vertexDeclaration));
                    var n = new Float32Array(this._vertexDeclaration.vertexStride / 4 * this._currentCombineVertexCount),
                        i = new Uint16Array(this._currentCombineIndexCount);
                    this._vertexBuffer && (this._vertexBuffer.destroy(), this._indexBuffer.destroy()), this._vertexBuffer = Kn.create(this._vertexDeclaration, this._currentCombineVertexCount, 35044), this._indexBuffer = jn.create("ushort", this._currentCombineIndexCount, 35044);
                    for (var r = 0, a = this._initBatchRenderElements.length; r < a; r++) {
                        var o = this._initBatchRenderElements[r],
                            s = o.renderObj,
                            l = s._getStaticBatchBakedVertexs(this._rootOwner ? this._rootOwner._transform : null, o._sprite3D),
                            h = s.getIndices(),
                            _ = o._sprite3D.transform._isFrontFaceInvert,
                            u = e / (this._vertexDeclaration.vertexStride / 4) - s._vertexStart,
                            c = t,
                            d = c + h.length;
                        o._batchIndexStart = c, o._batchIndexEnd = d, i.set(h, t);
                        var f = 0;
                        if (_)
                            for (f = c; f < d; f += 3) {
                                i[f] = u + i[f];
                                var m = i[f + 1],
                                    p = i[f + 2];
                                i[f + 1] = u + p, i[f + 2] = u + m
                            } else
                                for (f = c; f < d; f += 3) i[f] = u + i[f], i[f + 1] = u + i[f + 1], i[f + 2] = u + i[f + 2];
                        t += h.length, n.set(l, e), e += l.length
                    }
                    this._vertexBuffer.setData(n), this._indexBuffer.setData(i), this._needFinishCombine = !1
                }
            }, t._getCombineRenderElementFromPool = function() {
                return this._combineRenderElementPool[this._combineRenderElementPoolIndex++] || (this._combineRenderElementPool[this._combineRenderElementPoolIndex - 1] = new _n)
            }, t._getRenderElement = function(e, t, n) {
                for (var i, r, a = this._batchRenderElements.length, o = !0, s = 0; s < a; s++) {
                    var l, h, _ = (r = this._batchRenderElements[s])._sprite3D._render;
                    if (0 !== s && (o = (l = (i = this._batchRenderElements[s - 1])._sprite3D._render).lightmapIndex !== _.lightmapIndex || l.receiveShadow !== _.receiveShadow || i._batchIndexEnd !== r._batchIndexStart), o) {
                        (h = this._getCombineRenderElementFromPool()).renderObj = this, h._material = this._material, h._batchIndexStart = r._batchIndexStart, h._batchIndexEnd = r._batchIndexEnd;
                        var u = _.lightmapIndex,
                            c = u + 1,
                            d = this._batchOwnerIndices[c];
                        d || (d = this._batchOwnerIndices[c] = []);
                        var f, m = d[r._render.receiveShadow ? 1 : 0];
                        void 0 === m ? (d[_.receiveShadow ? 1 : 0] = this._batchOwners.length, (f = new vi(null, "StaticBatchMeshSprite3D"))._scene = t, f._transform = this._rootOwner ? this._rootOwner._transform : null, f._render.lightmapIndex = u, f._render.receiveShadow = r._render.receiveShadow, this._batchOwners.push(f)) : f = this._batchOwners[m], f._render._renderUpdate(n), h._sprite3D = f, e.push(h)
                    } else h._batchIndexEnd = r._batchIndexEnd
                }
            }, t._beforeRender = function(e) {
                return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0
            }, t._render = function(e) {
                var t = e.renderElement,
                    n = t._batchIndexStart,
                    i = t._batchIndexEnd - n;
                w.mainContext.drawElements(4, i, 5123, 2 * n), R.drawCall++, R.trianglesFaces += i / 3
            }, t.dispose = function() {
                this._batchOwnerIndices = null, this._batchOwners = null, this._vertexDeclaration = null, this._vertexBuffer.destroy(), this._indexBuffer.destroy()
            }, t._getVertexBuffer = function(e) {
                return void 0 === e && (e = 0), this._vertexBuffer
            }, a
        }(),
        fn = (function(e) {
            function d() {
                d.__super.call(this), d._nameNumber++, this.loadShaderParams(), this.createResource(), this.alphaBlending = 1, this.colorIntensity = 1
            }
            m(d, "t_tl.d3.resource.models.SkyBox", e);
            var t = d.prototype;
            t._getShader = function(e) {
                var t = e.scene._shaderDefineValue;
                return this._shader = this._shaderCompile.withCompile(t, 0, 0), this._shader
            }, t.createResource = function() {
                this._numberVertices = 36, this._numberIndices = 36;
                var e = new Uint16Array(this._numberIndices),
                    t = d._vertexDeclaration.vertexStride / 4,
                    n = new Float32Array(this._numberVertices * t),
                    i = new Vt(-.5, .5, .5),
                    r = new Vt(-.5, -.5, .5),
                    a = new Vt(.5, .5, .5),
                    o = new Vt(.5, -.5, .5),
                    s = new Vt(-.5, .5, -.5),
                    l = new Vt(.5, .5, -.5),
                    h = new Vt(-.5, -.5, -.5),
                    _ = new Vt(.5, -.5, -.5),
                    u = 0;
                u = this._addVertex(n, u, i), u = this._addVertex(n, u, r), u = this._addVertex(n, u, a), u = this._addVertex(n, u, r), u = this._addVertex(n, u, o), u = this._addVertex(n, u, a), u = this._addVertex(n, u, s), u = this._addVertex(n, u, l), u = this._addVertex(n, u, h), u = this._addVertex(n, u, h), u = this._addVertex(n, u, l), u = this._addVertex(n, u, _), u = this._addVertex(n, u, i), u = this._addVertex(n, u, l), u = this._addVertex(n, u, s), u = this._addVertex(n, u, i), u = this._addVertex(n, u, a), u = this._addVertex(n, u, l), u = this._addVertex(n, u, r), u = this._addVertex(n, u, h), u = this._addVertex(n, u, _), u = this._addVertex(n, u, r), u = this._addVertex(n, u, _), u = this._addVertex(n, u, o), u = this._addVertex(n, u, i), u = this._addVertex(n, u, h), u = this._addVertex(n, u, r), u = this._addVertex(n, u, s), u = this._addVertex(n, u, h), u = this._addVertex(n, u, i), u = this._addVertex(n, u, a), u = this._addVertex(n, u, o), u = this._addVertex(n, u, _), u = this._addVertex(n, u, l), u = this._addVertex(n, u, a), u = this._addVertex(n, u, _);
                for (var c = 0; c < 36; c++) e[c] = c;
                this._vertexBuffer = new Kn(d._vertexDeclaration, this._numberVertices, 35044, !0), this._indexBuffer = new jn("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(n), this._indexBuffer.setData(e)
            }, t._addVertex = function(e, t, n) {
                var i = n.elements;
                return e[t + 0] = i[0], e[t + 1] = i[1], e[t + 2] = i[2], t + 3
            }, t.loadShaderParams = function() {
                this._sharderNameID = Bn.nameKey.getID("SkyBox"), this._shaderCompile = un._preCompileShader[this._sharderNameID]
            }, t._render = function(e) {
                this._textureCube && this._textureCube.loaded && (this._vertexBuffer._bind(), this._indexBuffer._bind(), this._shader = this._getShader(e), this._shader.bind(), e.camera.transform.worldMatrix.cloneTo(d._tempMatrix4x40), d._tempMatrix4x40.transpose(), At.multiply(e._projectionMatrix, d._tempMatrix4x40, d._tempMatrix4x41), e.camera._shaderValues.setValue(4, d._tempMatrix4x41.elements), this._shader.uploadCameraUniforms(e.camera._shaderValues.data), this._shaderValue.setValue(1, this._colorIntensity), this._shaderValue.setValue(2, this._alphaBlending), this._shaderValue.setValue(3, this.textureCube), this._shader.uploadAttributes(d._vertexDeclaration.shaderValues.data, null), this._shader.uploadMaterialUniforms(this._shaderValue.data), w.mainContext.drawElements(4, 36, 5123, 0), R.trianglesFaces += 12, R.drawCall++)
            }, t.destroy = function() {
                e.prototype.destroy.call(this), this._textureCube && (this._textureCube._removeReference(), this._textureCube = null)
            }, g(0, t, "textureCube", function() {
                return this._textureCube
            }, function(e) {
                this._textureCube !== e && (this._textureCube && this._textureCube._removeReference(), (this._textureCube = e) && e._addReference())
            }), d._nameNumber = 1, u(d, ["_tempMatrix4x40", function() {
                return this._tempMatrix4x40 = new At
            }, "_tempMatrix4x41", function() {
                return this._tempMatrix4x41 = new At
            }, "_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(12, [new fe(0, "vector3", 0)])
            }])
        }(bt), function(e) {
            function f() {
                this._stacks = 16, this._slices = 16, this._radius = 1, f.__super.call(this), f._nameNumber++, this.loadShaderParams(), this.recreateResource(), this.alphaBlending = 1, this.colorIntensity = 1
            }
            m(f, "t_tl.d3.resource.models.SkyDome", e);
            var t = f.prototype;
            t._getShader = function(e) {
                var t = e.scene._shaderDefineValue;
                return this._shader = this._shaderCompile.withCompile(t, 0, 0), this._shader
            }, t.recreateResource = function() {
                this._numberVertices = (this._stacks + 1) * (this._slices + 1), this._numberIndices = 3 * this._stacks * (this._slices + 1) * 2;
                for (var e = new Uint16Array(this._numberIndices), t = f._vertexDeclaration.vertexStride / 4, n = new Float32Array(this._numberVertices * t), i = Math.PI / this._stacks, r = 2 * Math.PI / this._slices, a = 0, o = 0, s = 0, l = 0; l < this._stacks + 1; l++)
                    for (var h = Math.sin(l * i), _ = Math.cos(l * i), u = 0; u < this._slices + 1; u++) {
                        var c = h * Math.sin(u * r),
                            d = h * Math.cos(u * r);
                        n[o + 0] = c * this._radius, n[o + 1] = _ * this._radius, n[o + 2] = d * this._radius, n[o + 3] = -u / this._slices + .75, n[o + 4] = l / this._stacks, o += t, l != this._stacks - 1 && (e[s++] = a + 1, e[s++] = a, e[s++] = a + (this._slices + 1), e[s++] = a + (this._slices + 1), e[s++] = a, e[s++] = a + this._slices, a++)
                    }
                this._vertexBuffer = new Kn(f._vertexDeclaration, this._numberVertices, 35044), this._indexBuffer = new jn("ushort", this._numberIndices, 35044), this._vertexBuffer.setData(n), this._indexBuffer.setData(e)
            }, t.loadShaderParams = function() {
                this._sharderNameID = Bn.nameKey.getID("SkyDome"), this._shaderCompile = un._preCompileShader[this._sharderNameID]
            }, t._render = function(e) {
                this._texture && this._texture.loaded && (this._vertexBuffer._bind(), this._indexBuffer._bind(), this._shader = this._getShader(e), this._shader.bind(), e.camera.transform.worldMatrix.cloneTo(f._tempMatrix4x40), f._tempMatrix4x40.transpose(), At.multiply(e._projectionMatrix, f._tempMatrix4x40, f._tempMatrix4x41), e.camera._shaderValues.setValue(4, f._tempMatrix4x41.elements), this._shader.uploadCameraUniforms(e.camera._shaderValues.data), this._shaderValue.setValue(1, this._colorIntensity), this._shaderValue.setValue(2, this._alphaBlending), this._shaderValue.setValue(3, this.texture), this._shader.uploadAttributes(f._vertexDeclaration.shaderValues.data, null), this._shader.uploadMaterialUniforms(this._shaderValue.data), w.mainContext.drawElements(4, this._indexBuffer.indexCount, 5123, 0), R.trianglesFaces += this._numberIndices / 3, R.drawCall++)
            }, t.onEnvDescLoaded = function(e) {
                var t = "",
                    n = Math.max(e.lastIndexOf("/"), e.lastIndexOf("\\"));
                0 < n && (t = e.substr(0, n + 1));
                var i = x.loader.getRes(e);
                null != i.ev && this.__ownerCamera ? this.__ownerCamera._shaderValues.setValue(13, Math.pow(2, i.ev)) : this.__ownerCamera._shaderValues.setValue(13, Math.pow(2, 0)), this.texture = li.load(t + i.skytex), this.environmentSpecular = ni.load(t + i.prefiltedEnv);
                var r = new Float32Array(i.IrradianceMat);
                this.envDiffuseSHRed = r.slice(0, 16), this.envDiffuseSHGreen = r.slice(16, 32), this.envDiffuseSHBlue = r.slice(32, 48)
            }, t.loadEnvInfo = function(e) {
                x.loader.load(e, I.create(this, this.onEnvDescLoaded, [e]))
            }, t.destroy = function() {
                e.prototype.destroy.call(this), this._texture && (this._texture._removeReference(), this._texture = null)
            }, g(0, t, "texture", function() {
                return this._texture
            }, function(e) {
                this._texture !== e && (this._texture && this._texture._removeReference(), (this._texture = e) && e._addReference())
            }), f._nameNumber = 1, u(f, ["_tempMatrix4x40", function() {
                return this._tempMatrix4x40 = new At
            }, "_tempMatrix4x41", function() {
                return this._tempMatrix4x41 = new At
            }, "_vertexDeclaration", function() {
                return this._vertexDeclaration = new de(20, [new fe(0, "vector3", 0), new fe(12, "vector2", 2)])
            }])
        }(bt), function(e) {
            function t() {
                this._componentsMap = null, this._typeComponentsIndices = null, this._components = null, this._scripts = null, t.__super.call(this), this._componentsMap = [], this._typeComponentsIndices = [], this._components = [], this._scripts = []
            }
            m(t, "t_tl.d3.core.ComponentNode", _);
            var n = t.prototype;
            return n.addComponent = function(e) {
                var t, n = this._componentsMap.indexOf(e);
                if (-1 === n) t = [], this._componentsMap.push(e), this._typeComponentsIndices.push(t);
                else if (t = this._typeComponentsIndices[n], this._components[t[0]].isSingleton) throw new Error("无法单实例创建" + e + "组件，" + e + "组件已存在！");
                var i = l.getInstance(e);
                return t.push(this._components.length), this._components.push(i), i instanceof t_tl.d3.component.Script && this._scripts.push(i), i._initialize(this), i
            }, n._removeComponent = function(e, t) {
                var n = this._typeComponentsIndices[e],
                    i = n[t],
                    r = this._components[i];
                this._components.splice(i, 1), r instanceof t_tl.d3.component.Script && this._scripts.splice(this._scripts.indexOf(r), 1), n.splice(t, 1), 0 === n.length && (this._typeComponentsIndices.splice(e, 1), this._componentsMap.splice(e, 1));
                for (var a = 0, o = this._componentsMap.length; a < o; a++)
                    for (var s = (n = this._typeComponentsIndices[a]).length - 1; 0 <= s; s--) {
                        var l = n[s];
                        if (!(i < l)) break;
                        n[s] = --l
                    }
                r._destroy()
            }, n.getComponentByType = function(e, t) {
                void 0 === t && (t = 0);
                var n = this._componentsMap.indexOf(e);
                return -1 === n ? null : this._components[this._typeComponentsIndices[n][t]]
            }, n.getComponentsByType = function(e, t) {
                var n = this._componentsMap.indexOf(e);
                if (-1 !== n) {
                    var i = this._typeComponentsIndices[n],
                        r = i.length;
                    t.length = r;
                    for (var a = 0; a < r; a++) t[a] = this._components[i[a]]
                } else t.length = 0
            }, n.getComponentByIndex = function(e) {
                return this._components[e]
            }, n.removeComponentByType = function(e, t) {
                void 0 === t && (t = 0);
                var n = this._componentsMap.indexOf(e); - 1 !== n && this._removeComponent(n, t)
            }, n.removeComponentsByType = function(e) {
                var t = this._componentsMap.indexOf(e);
                if (-1 !== t)
                    for (var n = this._typeComponentsIndices[t], i = 0, r = n.length; i < r; n.length < r ? r-- : i++) this._removeComponent(t, i)
            }, n.removeAllComponent = function() {
                for (var e = 0, t = this._componentsMap.length; e < t; this._componentsMap.length < t ? t-- : e++) this.removeComponentsByType(this._componentsMap[e])
            }, n._updateComponents = function(e) {
                for (var t = 0, n = this._components.length; t < n; t++) {
                    var i = this._components[t];
                    !i.started && (i._start(e), i.started = !0), i.enable && i._update(e)
                }
            }, n._lateUpdateComponents = function(e) {
                for (var t = 0; t < this._components.length; t++) {
                    var n = this._components[t];
                    !n.started && (n._start(e), n.started = !0), n.enable && n._lateUpdate(e)
                }
            }, n._preRenderUpdateComponents = function(e) {
                for (var t = 0; t < this._components.length; t++) {
                    var n = this._components[t];
                    !n.started && (n._start(e), n.started = !0), n.enable && n._preRenderUpdate(e)
                }
            }, n._postRenderUpdateComponents = function(e) {
                for (var t = 0; t < this._components.length; t++) {
                    var n = this._components[t];
                    !n.started && (n._start(e), n.started = !0), n.enable && n._postRenderUpdate(e)
                }
            }, t
        }()),
        mn = function(e) {
            function t() {
                this._realTimeCurrentFrameIndexes = null, this._realTimeCurrentTimes = null, this._fullKeyframeIndicesCache = null, this._animationDatasCache = null, this._avatarDatasCache = null, this._skinnedDatasCache = null, this._version = null, this._nodes = null, this._nodesMap = null, this._cachePropertyMap = null, this._nodeToCachePropertyMap = null, this._unCachePropertyMap = null, this._duration = NaN, this._frameRate = 0, this._animationEvents = null, this._publicClipDatas = null, this.islooping = !1, t.__super.call(this), this._fullKeyframeIndicesCache = {}, this._animationDatasCache = [], this._avatarDatasCache = [], this._skinnedDatasCache = [], this._animationEvents = []
            }
            m(t, "t_tl.d3.animation.AnimationClip", v);
            var n = t.prototype;
            return n.duration = function() {
                return this._duration
            }, n._hermiteInterpolate = function(e, t, n, i) {
                for (var r = e.data, a = e.outTangent, o = e.next, s = o.data, l = o.inTangent, h = !1, _ = NaN, u = NaN, c = NaN, d = NaN, f = 0, m = i.length; f < m; f++) {
                    var p = a[f],
                        v = l[f];
                    if (Number.isFinite(p) && Number.isFinite(v)) {
                        if (!h) {
                            var g = t * t,
                                E = g * t;
                            _ = 2 * E - 3 * g + 1, u = E - 2 * g + t, c = E - g, d = -2 * E + 3 * g, h = !0
                        }
                        i[f] = _ * r[f] + u * p * n + c * v * n + d * s[f]
                    } else i[f] = r[f]
                }
            }, n._getFullKeyframeIndicesWithCache = function(e) {
                return this._fullKeyframeIndicesCache[e]
            }, n._cacheFullKeyframeIndices = function(e, t) {
                this._fullKeyframeIndicesCache[e] = t
            }, n._getAnimationDataWithCache = function(e, t) {
                var n = this._animationDatasCache[e];
                return n ? n[t] : null
            }, n._cacheAnimationData = function(e, t, n) {
                (this._animationDatasCache[e] || (this._animationDatasCache[e] = []))[t] = n
            }, n._getAvatarDataWithCache = function(e, t, n) {
                var i = this._avatarDatasCache[e.id];
                if (i) {
                    var r = i[t];
                    return r ? r[n] : null
                }
                return null
            }, n._cacheAvatarData = function(e, t, n, i) {
                var r = this._avatarDatasCache[e.id] || (this._avatarDatasCache[e.id] = []);
                (r[t] || (r[t] = []))[n] = i
            }, n._evaluateAnimationlDatasCacheMode = function(e, t, n, i, r) {
                for (var a = 0, o = 0, s = 0, l = r ? r.length : this._nodes.length; s < l; s++) {
                    var h = r ? r[s] : s,
                        _ = this._nodes[h],
                        u = _._cacheProperty;
                    if (e[h]) {
                        var c, d = t[h],
                            f = d[n.currentFrameIndex],
                            m = 0;
                        if (-1 !== f) {
                            var p = _.keyFrames[f];
                            if (p.next) {
                                r && !u ? (c = i[h]) || (c = i[h] = new Float32Array(_.keyFrameWidth)) : (c = new Float32Array(_.keyFrameWidth), i[s] = c);
                                var v = NaN,
                                    g = p.duration;
                                v = 0 !== g ? (n.currentFrameTime - p.startTime) / g : 0, this._hermiteInterpolate(p, v, g, c)
                            } else {
                                if (r && !u)(c = i[h]) || (c = i[h] = new Float32Array(_.keyFrameWidth));
                                else {
                                    if (-1 !== (m = n._lastFrameIndex) && d[m] === f) continue;
                                    c = new Float32Array(_.keyFrameWidth), i[s] = c
                                }
                                var E = p.data;
                                for (a = 0, o = c.length; a < o; a++) c[a] = E[a]
                            }
                        } else {
                            if (r && !u)(c = i[h]) || (c = i[h] = new Float32Array(_.keyFrameWidth));
                            else {
                                if (-1 !== (m = n._lastFrameIndex) && d[m] === f) continue;
                                c = new Float32Array(_.keyFrameWidth), i[s] = c
                            }
                            var S = _.keyFrames[0].data;
                            for (a = 0, o = c.length; a < o; a++) c[a] = S[a]
                        }
                    }
                }
            }, n._evaluateAnimationlDatasRealTime = function(e, t, n, i) {
                var r = 0,
                    a = 0,
                    o = this._nodes;
                if (!this._realTimeCurrentFrameIndexes) {
                    for (this._realTimeCurrentFrameIndexes = new Int32Array(o.length), r = 0, a = o.length; r < a; r++) this._realTimeCurrentFrameIndexes[r] = -1;
                    this._realTimeCurrentTimes = new Float32Array(o.length)
                }
                for (r = 0, a = i ? i.length : this._nodes.length; r < a; r++) {
                    var s = i ? i[r] : r,
                        l = o[s];
                    t < this._realTimeCurrentTimes[s] && (this._realTimeCurrentFrameIndexes[s] = -1), this._realTimeCurrentTimes[s] = t;
                    for (var h = this._realTimeCurrentFrameIndexes[s] + 1, _ = l.keyFrames, u = _.length; h < u;) {
                        if (_[h].startTime > t) {
                            this._realTimeCurrentFrameIndexes[s] = h - 1;
                            break
                        }
                        h++
                    }
                    h === u && (this._realTimeCurrentFrameIndexes[s] = u - 1);
                    var c = 0,
                        d = 0,
                        f = n[s];
                    f || (f = n[s] = new Float32Array(l.keyFrameWidth));
                    var m = _[this._realTimeCurrentFrameIndexes[s]];
                    if (m) {
                        if (m.next) {
                            var p = m.duration,
                                v = NaN;
                            v = 0 !== p ? (t - m.startTime) / p : 0, this._hermiteInterpolate(m, v, p, f)
                        } else {
                            var g = m.data;
                            for (c = 0, d = f.length; c < d; c++) f[c] = g[c]
                        }
                    } else {
                        var E = l.keyFrames[0].data;
                        for (c = 0, d = f.length; c < d; c++) f[c] = E[c]
                    }
                    var S = e[s];
                    S && (i ? G._propertySetFuncs[l.propertyNameID](S, null, f) : G._propertySetFuncs[l.propertyNameID](null, S, f))
                }
            }, n._binarySearchEventIndex = function(e) {
                for (var t = 0, n = this._animationEvents.length - 1, i = 0; t <= n;) {
                    i = Math.floor((t + n) / 2);
                    var r = this._animationEvents[i].time;
                    if (r == e) return i;
                    e < r ? n = i - 1 : t = i + 1
                }
                return t
            }, n.addEvent = function(e) {
                var t = this._binarySearchEventIndex(e.time);
                this._animationEvents.splice(t, 0, e)
            }, n.onAsynLoaded = function(e, t, n) {
                var i = new S(t);
                switch (this._version = i.readUTFString(), this._version) {
                    case "LAYAANIMATION:01":
                        V.parse(this, i);
                        break;
                    case "LAYAANIMATION:02":
                        P.parse(this, i)
                }
                this.completeCreate(), this._endLoaded()
            }, n.disposeResource = function() {
                this._realTimeCurrentFrameIndexes = null, this._realTimeCurrentTimes = null, this._fullKeyframeIndicesCache = null, this._animationDatasCache = null, this._avatarDatasCache = null, this._skinnedDatasCache = null, this._version = null, this._nodes = null, this._nodesMap = null, this._cachePropertyMap = null, this._nodeToCachePropertyMap = null, this._unCachePropertyMap = null, this._publicClipDatas = null
            }, t.load = function(e) {
                return x.loader.create(e, null, null, t)
            }, t
        }(),
        pn = function(e) {
            function t() {
                t.__super.call(this)
            }
            m(t, "t_tl.d3.core.Avatar", v);
            var n = t.prototype;
            return x.imps(n, {
                "t_tl.d3.core.IClone": !0
            }), n._initCloneToAnimator = function(e, t) {
                t._avatarNodeMap[e.name] = e, t._avatarNodes.push(e);
                for (var n = 0, i = e.getChildCount(); n < i; n++) this._initCloneToAnimator(e.getChildByIndex(n), t)
            }, n._parseNode = function(e, t) {
                var n = e.props.name;
                if (t.name = n, t._parent) {
                    var i = e.customProps,
                        r = t.transform;
                    r._localRotationEuler = new Float32Array(3), r.setLocalPosition(new Float32Array(i.translate)), r.setLocalRotation(new Float32Array(i.rotation)), r.setLocalScale(new Float32Array(i.scale)), r._setWorldMatrixAndUpdate(new Float32Array(16))
                }
                for (var a = e.child, o = 0, s = a.length; o < s; o++) {
                    var l = a[o],
                        h = new G;
                    t.addChild(h), this._parseNode(l, h)
                }
            }, n.onAsynLoaded = function(e, t, n) {
                if (this._rootNode = new G, t.version) {
                    this._version = t.version;
                    var i = t.rootNode;
                    i && this._parseNode(i, this._rootNode)
                } else this._parseNode(t, this._rootNode);
                this._endLoaded()
            }, n._cloneDatasToAnimator = function(e) {
                var t = this._rootNode.clone();
                t.transform._setWorldMatrixIgnoreUpdate(null);
                e._avatarNodeMap = {}, e._avatarNodes = [], this._initCloneToAnimator(t, e)
            }, n.cloneTo = function(e) {
                var t = e,
                    n = this._rootNode.clone();
                t._rootNode = n
            }, n.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, t.load = function(e) {
                return x.loader.create(e, null, null, t)
            }, t
        }(),
        vn = function(i) {
            function e() {
                e.__super.call(this), this._shaderDefineValue = 0, this._disablePublicShaderDefine = 0, this._shaderValues = new Ht, this._values = [], this.renderQueue = 2e3, this._alphaTest = !1, this.cull = 2, this.blend = 0, this.srcBlend = 1, this.dstBlend = 0, this.srcBlendRGB = 1, this.dstBlendRGB = 0, this.srcBlendAlpha = 1, this.dstBlendAlpha = 0, this.blendConstColor = new Pt(1, 1, 1, 1), this.blendEquation = 0, this.blendEquationRGB = 0, this.blendEquationAlpha = 0, this.depthTest = 513, this.depthWrite = !0
            }
            m(e, "t_tl.d3.core.material.BaseMaterial", i);
            var t = e.prototype;
            return x.imps(t, {
                "t_tl.d3.core.IClone": !0
            }), t._addShaderDefine = function(e) {
                this._shaderDefineValue |= e
            }, t._removeShaderDefine = function(e) {
                this._shaderDefineValue &= ~e
            }, t._addDisablePublicShaderDefine = function(e) {
                this._disablePublicShaderDefine |= e
            }, t._removeDisablePublicShaderDefine = function(e) {
                this._disablePublicShaderDefine &= ~e
            }, t._setBuffer = function(e, t) {
                this._shaderValues.setValue(e, t), this._values[e] = t
            }, t._getBuffer = function(e) {
                return this._values[e]
            }, t._setMatrix4x4 = function(e, t) {
                this._shaderValues.setValue(e, t ? t.elements : null), this._values[e] = t
            }, t._getMatrix4x4 = function(e) {
                return this._values[e]
            }, t._setInt = function(e, t) {
                this._shaderValues.setValue(e, t), this._values[e] = t
            }, t._getInt = function(e) {
                return this._values[e]
            }, t._setNumber = function(e, t) {
                this._shaderValues.setValue(e, t), this._values[e] = t
            }, t._getNumber = function(e) {
                return this._values[e]
            }, t._setBool = function(e, t) {
                this._shaderValues.setValue(e, t), this._values[e] = t
            }, t._getBool = function(e) {
                return this._values[e]
            }, t._setVector2 = function(e, t) {
                this._shaderValues.setValue(e, t ? t.elements : null), this._values[e] = t
            }, t._getVector2 = function(e) {
                return this._values[e]
            }, t._setColor = function(e, t) {
                this._shaderValues.setValue(e, t ? t.elements : null), this._values[e] = t
            }, t._getColor = function(e) {
                return this._values[e]
            }, t._setTexture = function(e, t) {
                var n = this._values[e];
                this._values[e] = t, this._shaderValues.setValue(e, t), 0 < this.referenceCount && (n && n._removeReference(), t && t._addReference())
            }, t._getTexture = function(e) {
                return this._values[e]
            }, t._upload = function() {
                this._shader.uploadMaterialUniforms(this._shaderValues.data)
            }, t._getShader = function(e, t, n) {
                var i = (e | t) & ~this._disablePublicShaderDefine;
                return this._shader = this._shaderCompile.withCompile(i, n, this._shaderDefineValue), this._shader
            }, t._setRenderStateBlendDepth = function() {
                var e = w.mainContext;
                switch (O.setDepthMask(e, this.depthWrite), 0 === this.depthTest ? O.setDepthTest(e, !1) : (O.setDepthTest(e, !0), O.setDepthFunc(e, this.depthTest)), this.blend) {
                    case 0:
                        O.setBlend(e, !1);
                        break;
                    case 1:
                        O.setBlend(e, !0), O.setBlendFunc(e, this.srcBlend, this.dstBlend);
                        break;
                    case 2:
                        O.setBlend(e, !0)
                }
            }, t._setRenderStateFrontFace = function(e, t) {
                var n = w.mainContext,
                    i = 0;
                switch (this.cull) {
                    case 0:
                        O.setCullFace(n, !1);
                        break;
                    case 1:
                        O.setCullFace(n, !0), i = e ? t && t._isFrontFaceInvert ? 2305 : 2304 : t && t._isFrontFaceInvert ? 2304 : 2305, O.setFrontFace(n, i);
                        break;
                    case 2:
                        O.setCullFace(n, !0), i = e ? t && t._isFrontFaceInvert ? 2304 : 2305 : t && t._isFrontFaceInvert ? 2305 : 2304, O.setFrontFace(n, i)
                }
            }, t.onAsynLoaded = function(e, t, n) {
                var i = t[0],
                    r = t[1];
                switch (i.version) {
                    case "LAYAMATERIAL:01":
                        var a = 0,
                            o = 0,
                            s = i.props;
                        for (var l in s) switch (l) {
                            case "vectors":
                                var h = s[l];
                                for (a = 0, o = h.length; a < o; a++) {
                                    var _ = h[a],
                                        u = _.value;
                                    switch (u.length) {
                                        case 2:
                                            this[_.name] = new Ot(u[0], u[1]);
                                            break;
                                        case 3:
                                            this[_.name] = new Vt(u[0], u[1], u[2]);
                                            break;
                                        case 4:
                                            this[_.name] = new Pt(u[0], u[1], u[2], u[3]);
                                            break;
                                        default:
                                            throw new Error("BaseMaterial:unkonwn color length.")
                                    }
                                }
                                break;
                            case "textures":
                                var c = s[l];
                                for (a = 0, o = c.length; a < o; a++) {
                                    var d = c[a],
                                        f = d.path;
                                    f && (this[d.name] = Ae.getRes(r[f]))
                                }
                                break;
                            case "defines":
                                var m = s[l];
                                for (a = 0, o = m.length; a < o; a++) {
                                    var p = this._shaderCompile.getMaterialDefineByName(m[a]);
                                    this._addShaderDefine(p)
                                }
                                break;
                            case "cull":
                            case "blend":
                            case "srcBlend":
                            case "dstBlend":
                            case "depthWrite":
                                this[l] = s[l];
                                break;
                            case "renderQueue":
                                switch (s[l]) {
                                    case 1:
                                        this.renderQueue = 2e3;
                                        break;
                                    case 2:
                                        this.renderQueue = 3e3
                                }
                                break;
                            default:
                                this[l] = s[l]
                        }
                        break;
                    case "LAYAMATERIAL:02":
                        for (l in s = i.props) switch (l) {
                            case "vectors":
                                for (a = 0, o = (h = s[l]).length; a < o; a++) switch ((u = (_ = h[a]).value).length) {
                                    case 2:
                                        this[_.name] = new Ot(u[0], u[1]);
                                        break;
                                    case 3:
                                        this[_.name] = new Vt(u[0], u[1], u[2]);
                                        break;
                                    case 4:
                                        this[_.name] = new Pt(u[0], u[1], u[2], u[3]);
                                        break;
                                    default:
                                        throw new Error("BaseMaterial:unkonwn color length.")
                                }
                                break;
                            case "textures":
                                for (a = 0, o = (c = s[l]).length; a < o; a++)(f = (d = c[a]).path) && (this[d.name] = Ae.getRes(r[f]));
                                break;
                            case "defines":
                                for (a = 0, o = (m = s[l]).length; a < o; a++) p = this._shaderCompile.getMaterialDefineByName(m[a]), this._addShaderDefine(p);
                                break;
                            default:
                                this[l] = s[l]
                        }
                        break;
                    default:
                        throw new Error("BaseMaterial:unkonwn version.")
                }
                this._endLoaded()
            }, t._addReference = function() {
                i.prototype._addReference.call(this);
                for (var e = 0, t = this._values.length; e < t; e++) {
                    var n = this._values[e];
                    n && n instanceof t_tl.d3.resource.BaseTexture && n._addReference()
                }
            }, t._removeReference = function() {
                i.prototype._removeReference.call(this);
                for (var e = 0, t = this._values.length; e < t; e++) {
                    var n = this._values[e];
                    n && n instanceof t_tl.d3.resource.BaseTexture && n._removeReference()
                }
            }, t.disposeResource = function() {
                this.blendConstColor = null, this._shader = null, this._shaderValues = null;
                for (var e = 0, t = this._values.length; e < t; e++) {
                    var n = this._values[e];
                    n && n instanceof t_tl.d3.resource.BaseTexture && n._removeReference()
                }
                this._values = null
            }, t.setShaderName = function(e) {
                var t = Bn.nameKey.getID(e);
                if (-1 === t) throw new Error("BaseMaterial: unknown shader name.");
                this._shaderCompile = un._preCompileShader[t]
            }, t.cloneTo = function(e) {
                var t = e;
                t.name = this.name, t.cull = this.cull, t.blend = this.blend, t.srcBlend = this.srcBlend, t.dstBlend = this.dstBlend, t.srcBlendRGB = this.srcBlendRGB, t.dstBlendRGB = this.dstBlendRGB, t.srcBlendAlpha = this.srcBlendAlpha, t.dstBlendAlpha = this.dstBlendAlpha, this.blendConstColor.cloneTo(t.blendConstColor), t.blendEquation = this.blendEquation, t.blendEquationRGB = this.blendEquationRGB, t.blendEquationAlpha = this.blendEquationAlpha, t.depthTest = this.depthTest, t.depthWrite = this.depthWrite, t.renderQueue = this.renderQueue, t._shader = this._shader, t._disablePublicShaderDefine = this._disablePublicShaderDefine, t._shaderDefineValue = this._shaderDefineValue;
                var n, i = 0,
                    r = t._shaderValues;
                t._shaderValues.data.length = this._shaderValues.data.length;
                var a = this._values.length,
                    o = t._values;
                for (i = 0, n = o.length = a; i < n; i++) {
                    var s = this._values[i];
                    if (s)
                        if ("number" == typeof s) o[i] = s, r.data[i] = s;
                        else if ("number" == typeof s && Math.floor(s) == s) o[i] = s, r.data[i] = s;
                    else if ("boolean" == typeof s) o[i] = s, r.data[i] = s;
                    else if (s instanceof t_tl.d3.math.Vector2) {
                        var l = o[i] || (o[i] = new Ot);
                        s.cloneTo(l), r.data[i] = l.elements
                    } else if (s instanceof t_tl.d3.math.Vector3) {
                        var h = o[i] || (o[i] = new Vt);
                        s.cloneTo(h), r.data[i] = h.elements
                    } else if (s instanceof t_tl.d3.math.Vector4) {
                        var _ = o[i] || (o[i] = new Pt);
                        s.cloneTo(_), r.data[i] = _.elements
                    } else if (s instanceof t_tl.d3.math.Matrix4x4) {
                        var u = o[i] || (o[i] = new At);
                        s.cloneTo(u), r.data[i] = u.elements
                    } else s instanceof t_tl.d3.resource.BaseTexture && (o[i] = s, r.data[i] = s)
                }
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, g(0, t, "alphaTestValue", function() {
                return this._getNumber(0)
            }, function(e) {
                this._setNumber(0, e)
            }), g(0, t, "alphaTest", function() {
                return this._alphaTest
            }, function(e) {
                (this._alphaTest = e) ? this._addShaderDefine(t_tl.d3.core.material.BaseMaterial.SHADERDEFINE_ALPHATEST): this._removeShaderDefine(t_tl.d3.core.material.BaseMaterial.SHADERDEFINE_ALPHATEST)
            }), e.__init__ = function() {
                e.SHADERDEFINE_ALPHATEST = e.shaderDefines.registerDefine("ALPHATEST")
            }, e.RENDERQUEUE_OPAQUE = 2e3, e.RENDERQUEUE_ALPHATEST = 2450, e.RENDERQUEUE_TRANSPARENT = 3e3, e.CULL_NONE = 0, e.CULL_FRONT = 1, e.CULL_BACK = 2, e.BLEND_DISABLE = 0, e.BLEND_ENABLE_ALL = 1, e.BLEND_ENABLE_SEPERATE = 2, e.BLENDPARAM_ZERO = 0, e.BLENDPARAM_ONE = 1, e.BLENDPARAM_SRC_COLOR = 768, e.BLENDPARAM_ONE_MINUS_SRC_COLOR = 769, e.BLENDPARAM_DST_COLOR = 774, e.BLENDPARAM_ONE_MINUS_DST_COLOR = 775, e.BLENDPARAM_SRC_ALPHA = 770, e.BLENDPARAM_ONE_MINUS_SRC_ALPHA = 771, e.BLENDPARAM_DST_ALPHA = 772, e.BLENDPARAM_ONE_MINUS_DST_ALPHA = 773, e.BLENDPARAM_SRC_ALPHA_SATURATE = 776, e.BLENDEQUATION_ADD = 0, e.BLENDEQUATION_SUBTRACT = 1, e.BLENDEQUATION_REVERSE_SUBTRACT = 2, e.DEPTHTEST_OFF = 0, e.DEPTHTEST_NEVER = 512, e.DEPTHTEST_LESS = 513, e.DEPTHTEST_EQUAL = 514, e.DEPTHTEST_LEQUAL = 515, e.DEPTHTEST_GREATER = 516, e.DEPTHTEST_NOTEQUAL = 517, e.DEPTHTEST_GEQUAL = 518, e.DEPTHTEST_ALWAYS = 519, e.SHADERDEFINE_ALPHATEST = 1, e.ALPHATESTVALUE = 0, u(e, ["shaderDefines", function() {
                return this.shaderDefines = new Bt
            }]), e
        }(v),
        gn = function(e) {
            function t() {
                this._type = 0, this._width = 0, this._height = 0, this._size = null, this._repeat = !1, this._mipmap = !1, this._minFifter = 0, this._magFifter = 0, this._format = 0, this._source = null, this._conchTexture = null, this._wrapModeU = 0, this._wrapModeV = 0, t.__super.call(this), this._repeat = !0, this.mipmap = !0, this.minFifter = -1, this.magFifter = -1
            }
            m(t, "t_tl.d3.resource.BaseTexture", v);
            var n = t.prototype;
            return g(0, n, "width", function() {
                return this._width
            }), g(0, n, "repeat", function() {
                return this._repeat
            }, function(e) {
                if (this._repeat !== e && (this._repeat = e, this._source)) {
                    var t = w.mainContext;
                    O.bindTexture(t, this._type, this._source), p.isPOT(this._width, this._height) && this._repeat ? (t.texParameteri(this._type, 10242, 10497), t.texParameteri(this._type, 10243, 10497)) : (t.texParameteri(this._type, 10242, 33071), t.texParameteri(this._type, 10243, 33071))
                }
            }), g(0, n, "height", function() {
                return this._height
            }), g(0, n, "magFifter", function() {
                return this._magFifter
            }, function(e) {
                (this._magFifter = e) != this._magFifter && this._conchTexture && this._conchTexture.setMaxFifter(e)
            }), g(0, n, "wrapModeV", function() {
                return this._wrapModeV
            }), g(0, n, "size", function() {
                return this._size
            }), g(0, n, "wrapModeU", function() {
                return this._wrapModeU
            }), g(0, n, "mipmap", function() {
                return this._mipmap
            }, function(e) {
                this._mipmap = e, this._mipmap != e && this._conchTexture && this._conchTexture.setMipMap(e)
            }), g(0, n, "minFifter", function() {
                return this._minFifter
            }, function(e) {
                this._minFifter = e, this._minFifter != e && this._conchTexture && this._conchTexture.setMinFifter(e)
            }), g(0, n, "format", function() {
                return this._format
            }), g(0, n, "source", function() {
                return this.activeResource(), this._source
            }), g(0, n, "defaulteTexture", function() {
                return oi.grayTexture
            }), t.WARPMODE_REPEAT = 0, t.WARPMODE_CLAMP = 1, t
        }(),
        En = function(e) {
            function t() {
                this._subMeshCount = 0, this._boundingBox = null, this._boundingSphere = null, this._boundingBoxCorners = null, this._positions = null, t.__super.call(this), this._boundingBoxCorners = M(8, null)
            }
            m(t, "t_tl.d3.resource.models.BaseMesh", v);
            var n = t.prototype;
            return n._getPositions = function() {
                throw new Error("未Override,请重载该属性！")
            }, n._generateBoundingObject = function() {
                this._boundingSphere = new Tt(new Vt, 0), Tt.createfromPoints(this._positions, this._boundingSphere), this._boundingBox = new St(new Vt, new Vt), St.createfromPoints(this._positions, this._boundingBox), this._boundingBox.getCorners(this._boundingBoxCorners)
            }, n.getRenderElementsCount = function() {
                throw new Error("未Override,请重载该属性！")
            }, n.getRenderElement = function(e) {
                throw new Error("未Override,请重载该属性！")
            }, g(0, n, "subMeshCount", function() {
                return this._subMeshCount
            }), g(0, n, "boundingBox", function() {
                return this._boundingBox
            }), g(0, n, "boundingBoxCorners", function() {
                return this._boundingBoxCorners
            }), g(0, n, "boundingSphere", function() {
                return this._boundingSphere
            }), t
        }(),
        Sn = function(e) {
            function a() {
                this._terrainHeightData = null, this._width = 0, this._height = 0, this._bitType = 0, this._value = NaN, a.__super.call(this)
            }
            return m(a, "t_tl.d3.terrain.TerrainHeightData", v), a.prototype.onAsynLoaded = function(e, t, n) {
                var i;
                this._width = n[0], this._height = n[1], this._bitType = n[2], this._value = n[3];
                var r = NaN;
                8 == this._bitType ? (i = new Uint8Array(t), r = 1 / 255) : 16 == this._bitType && (i = new Int16Array(t), r = 1 / 32766), this._terrainHeightData = new Float32Array(this._height * this._width);
                for (var a = 0, o = this._height * this._width; a < o; a++) this._terrainHeightData[a] = i[a] * r * this._value / 2;
                this._endLoaded()
            }, a.load = function(e, t, n, i, r) {
                return x.loader.create(e, null, null, a, [t, n, i, r], 1, !1)
            }, a
        }(),
        Dn = function(e) {
            function t() {
                this._version = NaN, this._cameraCoordinateInverse = !1, this._gridSize = NaN, this._chunkNumX = 0, this._chunkNumZ = 0, this._heightDataX = 0, this._heightDataZ = 0, this._heightDataBitType = 0, this._heightDataValue = NaN, this._heightDataUrl = null, this._detailTextureInfos = null, this._chunkInfos = null, this._heightData = null, this._materialInfo = null, this._alphaMaps = null, this._normalMaps = null, t.__super.call(this)
            }
            m(t, "t_tl.d3.terrain.TerrainRes", v);
            var n = t.prototype;
            return n.parseData = function(e) {
                var t = e[0],
                    n = e[1];
                if (this._version = t.version, 1 == this._version) {
                    this._cameraCoordinateInverse = t.cameraCoordinateInverse, this._gridSize = t.gridSize, this._chunkNumX = t.chunkNumX, this._chunkNumZ = t.chunkNumZ;
                    var i = t.heightData;
                    if (this._heightDataX = i.numX, this._heightDataZ = i.numZ, this._heightDataBitType = i.bitType, this._heightDataValue = i.value, this._heightDataUrl = n[i.url], this._materialInfo = new Xt, t.material) {
                        var r = t.material.ambient,
                            a = t.material.diffuse,
                            o = t.material.specular;
                        this._materialInfo.ambientColor = new Vt(r[0], r[1], r[2]), this._materialInfo.diffuseColor = new Vt(a[0], a[1], a[2]), this._materialInfo.specularColor = new Pt(o[0], o[1], o[2], o[3])
                    }
                    var s = t.detailTexture;
                    this._detailTextureInfos = M(s.length);
                    for (var l = 0; l < s.length; l++) {
                        var h = s[l],
                            _ = new Wt;
                        _.diffuseTexture = n[h.diffuse], _.normalTexture = h.normal ? n[h.normal] : null, h.scale ? _.scale = new Ot(h.scale[0], h.scale[1]) : _.scale = new Ot(1, 1), h.offset ? _.offset = new Ot(h.offset[0], h.offset[1]) : _.offset = new Ot(0, 0), this._detailTextureInfos[l] = _
                    }
                    var u = t.alphaMap;
                    for (this._alphaMaps = M(u.length), l = 0; l < this._alphaMaps.length; l++) this._alphaMaps[l] = t.alphaMap[l];
                    var c = t.normalMap;
                    for (this._normalMaps = M(c.length), l = 0; l < this._normalMaps.length; l++) this._normalMaps[l] = t.normalMap[l];
                    var d = t.chunkInfo;
                    if (this._chunkNumX * this._chunkNumZ != d.length) return alert("terrain data error"), !1;
                    for (this._chunkInfos = M(d.length), l = 0; l < d.length; l++) {
                        var f = d[l],
                            m = new kt,
                            p = f.alphaMap.length,
                            v = f.detailID.length;
                        if (p != v) return alert("terrain chunk data error"), !1;
                        m.alphaMap = M(p), m.detailID = M(v), m.normalMap = n[this._normalMaps[f.normalMap]];
                        for (var g = 0; g < p; g++) {
                            m.alphaMap[g] = n[this._alphaMaps[f.alphaMap[g]]];
                            var E = f.detailID[g],
                                S = E.length;
                            m.detailID[g] = new Uint8Array(S);
                            for (var D = 0; D < S; D++) m.detailID[g][D] = E[D]
                        }
                        this._chunkInfos[l] = m
                    }
                    this._heightData = Ae.getRes(this._heightDataUrl), this.onLoadTerrainComplete(this._heightData)
                }
                return !0
            }, n.onLoadTerrainComplete = function(e) {
                this._endLoaded()
            }, n.onAsynLoaded = function(e, t, n) {
                this.parseData(t)
            }, t.load = function(e) {
                return x.loader.create(e, null, null, t, null, 1, !1)
            }, t
        }(),
        Tn = function(t) {
            function e() {
                this._player = null, this._templet = null, e.__super.call(this), this._player = new i
            }
            m(e, "t_tl.d3.component.animation.KeyframeAnimations", t);
            var n = e.prototype;
            return n._updateAnimtionPlayer = function() {
                this._player._update(x.timer.delta)
            }, n._addUpdatePlayerToTimer = function() {
                x.timer.frameLoop(1, this, this._updateAnimtionPlayer)
            }, n._removeUpdatePlayerToTimer = function() {
                x.timer.clear(this, this._updateAnimtionPlayer)
            }, n._onOwnerActiveHierarchyChanged = function(e) {
                this._owner.displayedInStage && (e ? this._addUpdatePlayerToTimer() : this._removeUpdatePlayerToTimer())
            }, n._load = function(e) {
                e.activeInHierarchy && this._addUpdatePlayerToTimer(), e.on("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged)
            }, n._unload = function(e) {
                t.prototype._unload.call(this, e), e.activeInHierarchy && this._removeUpdatePlayerToTimer(), e.off("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged), this._player._destroy(), this._player = null, this._templet = null
            }, g(0, n, "url", null, function(e) {
                console.log("Warning: discard property,please use templet property instead.");
                var t = x.loader.create(e, null, null, r);
                this._templet !== t && (0 !== this._player.state && this._player.stop(!0), this._templet = t, this._player.templet = t, this.event("animationchanged", this))
            }), g(0, n, "player", function() {
                return this._player
            }), g(0, n, "templet", function() {
                return this._templet
            }, function(e) {
                this._templet !== e && (0 !== this._player.state && this._player.stop(!0), this._templet = e, this._player.templet = e, this.event("animationchanged", this))
            }), g(0, n, "currentFrameIndex", function() {
                return this._player.currentKeyframeIndex
            }), g(0, n, "currentAnimationClipIndex", function() {
                return this._player.currentAnimationClipIndex
            }), g(0, n, "nodeCount", function() {
                return this._templet.getNodeCount(this._player.currentAnimationClipIndex)
            }), e
        }(Jt),
        xn = function(n) {
            function _() {
                _.__super.call(this), this._clipNames = [], this._clips = [], this._playStartFrames = [], this._playEndFrames = [], this._cacheNodesSpriteOwners = [], this._cacheNodesAvatarOwners = [], this._cacheNodesDefaultlValues = [], this._cacheNodesToSpriteMap = [], this._cacheSpriteToNodesMap = [], this._cacheFullFrames = [], this._publicClipsDatas = [], this._playEventIndex = -1, this._updateTransformPropertyLoopCount = -1, this._lastFrameIndex = -1, this._defaultClipIndex = -1, this._cachePlayRate = 1, this._currentPlayClip = null, this._currentFrameIndex = -1, this._currentTime = 0, this._elapsedPlaybackTime = 0, this._startUpdateLoopCount = -1, this.isCache = !0, this.cacheFrameRate = 60, this.playbackRate = 1, this.playOnWake = !0
            }
            m(_, "t_tl.d3.component.Animator", n);
            var e = _.prototype;
            return x.imps(e, {
                "t_tl.resource.IDestroy": !0
            }), e._getAvatarOwnersByClip = function(e) {
                var t = this._clips[e]._nodes,
                    n = t.length,
                    i = this._cacheNodesAvatarOwners[e];
                i.length = n;
                var r = this._cacheNodesDefaultlValues[e];
                r.length = n;
                for (var a = 0; a < n; a++) {
                    for (var o = this._avatarNodes[0], s = t[a], l = s.path, h = 0, _ = l.length; h < _; h++) {
                        var u = l[h];
                        if ("" === u) break;
                        if (!(o = o.getChildByName(u))) break
                    }
                    if (o) {
                        i[a] = o;
                        var c = G._propertyGetFuncs[s.propertyNameID](o);
                        if (c) {
                            var d = new Float32Array(s.keyFrameWidth);
                            for (r[a] = d, h = 0, _ = c.length; h < _; h++) d[h] = c[h]
                        }
                    }
                }
            }, e._handleSpriteOwnersByClip = function(e) {
                var t = this._clips[e]._nodes,
                    n = t.length,
                    i = this._cacheNodesSpriteOwners[e];
                i.length = n;
                var r = this._cacheNodesDefaultlValues[e];
                r.length = n;
                for (var a = 0; a < n; a++) {
                    var o = this._owner,
                        s = t[a],
                        l = s.path,
                        h = 0,
                        _ = 0;
                    for (h = 0, _ = l.length; h < _; h++) {
                        var u = l[h];
                        if ("" === u) break;
                        if (!(o = o.getChildByName(u))) break
                    }
                    if (o) {
                        i[a] = o;
                        var c = G._propertyGetFuncs[s.propertyNameID](null, o);
                        if (c) {
                            var d = new Float32Array(s.keyFrameWidth);
                            for (r[a] = d, h = 0, _ = c.length; h < _; h++) d[h] = c[h]
                        }
                    }
                }
            }, e._offClipAndAvatarRelateEvent = function(e, t) {
                e.loaded ? t.loaded || t.off("loaded", this, this._getAvatarOwnersByClip) : e.off("loaded", this, this._getAvatarOwnersAndInitDatasAsync)
            }, e._getAvatarOwnersByClipAsync = function(e, t) {
                t.loaded ? this._getAvatarOwnersByClip(e) : t.once("loaded", this, this._getAvatarOwnersByClip, [e])
            }, e._offGetSpriteOwnersByClipAsyncEvent = function(e) {
                e.loaded || e.off("loaded", this, this._getSpriteOwnersByClipAsync)
            }, e._getSpriteOwnersByClipAsync = function(e, t) {
                t.loaded ? this._handleSpriteOwnersByClip(e) : t.once("loaded", this, this._handleSpriteOwnersByClip, [e])
            }, e._getAvatarOwnersAndInitDatasAsync = function() {
                for (var e = 0, t = this._clips.length; e < t; e++) this._getAvatarOwnersByClipAsync(e, this._clips[e]);
                for (this._avatar._cloneDatasToAnimator(this), e = 0, t = this._avatarNodes.length; e < t; e++) this._checkAnimationNode(this._avatarNodes[e], this._owner)
            }, e._offGetClipCacheFullKeyframeIndicesEvent = function(e) {
                e.loaded || e.off("loaded", this, this._computeCacheFullKeyframeIndices)
            }, e._computeCacheFullKeyframeIndices = function(e) {
                var t = this._clips[e],
                    n = this._cacheFrameRateInterval * this._cachePlayRate,
                    i = t._getFullKeyframeIndicesWithCache(n);
                if (i) this._cacheFullFrames[e] = i;
                else {
                    i = this._cacheFullFrames[e] = [];
                    var r = t._nodes,
                        a = r.length;
                    i.length = a;
                    for (var o = Math.ceil(t._duration / n - 1e-5) + 1, s = 0; s < a; s++) {
                        var l = r[s],
                            h = new Int32Array(o);
                        h.fill(-1);
                        for (var _ = l.keyFrames, u = 0, c = _.length; u < c; u++)
                            for (var d = _[u], f = d.startTime, m = f + d.duration; f <= m;) {
                                h[Math.ceil(f / n - 1e-5)] = u, f += n
                            }
                        i[s] = h
                    }
                    t._cacheFullKeyframeIndices(n, i)
                }
            }, e._updateAnimtionPlayer = function() {
                this._updatePlayer(x.timer.delta / 1e3)
            }, e._onOwnerActiveHierarchyChanged = function() {
                this._owner.activeInHierarchy ? (x.timer.frameLoop(1, this, this._updateAnimtionPlayer), this.playOnWake && this.clip && this.play()) : (0 !== this.playState && (this._stoped = !0), x.timer.clear(this, this._updateAnimtionPlayer))
            }, e._eventScript = function(e, t) {
                for (var n = this._currentPlayClip._animationEvents, i = n.length; this._playEventIndex < i; this._playEventIndex++) {
                    var r = n[this._playEventIndex],
                        a = r.time;
                    if (!(e <= a && a < t)) break;
                    for (var o = this._owner._scripts, s = 0, l = o.length; s < l; s++) {
                        var h = o[s],
                            _ = h[r.eventName];
                        _ && _.apply(h, r.params)
                    }
                }
            }, e._setPlayParams = function(e, t) {
                var n = this._currentTime;
                this._currentTime = e, this._currentFrameIndex = Math.max(Math.floor(this.currentPlayTime / t - 1e-5), 0), this._currentFrameTime = this._currentFrameIndex * t, this._eventScript(n, e)
            }, e._setPlayParamsWhenStop = function(e, t) {
                var n = this._currentTime;
                this._currentTime = e, this._currentFrameIndex = Math.max(Math.floor(e / t - 1e-5), 0), this._currentFrameTime = this._currentFrameIndex * t, this._eventScript(n, e), this._currentPlayClip = null
            }, e._revertKeyframeNodes = function(e, t) {
                var n = this._cacheNodesDefaultlValues[t],
                    i = e._nodes;
                if (this._avatar)
                    for (var r = this._cacheNodesAvatarOwners[t], a = 0, o = r.length; a < o; a++) {
                        var s = r[a];
                        s && G._propertySetFuncs[i[a].propertyNameID](s, null, n[a])
                    } else {
                        var l = this._cacheNodesSpriteOwners[t];
                        for (a = 0, o = l.length; a < o; a++) {
                            var h = l[a];
                            h && G._propertySetFuncs[i[a].propertyNameID](null, h, n[a])
                        }
                    }
            }, e._onAnimationStop = function() {
                var e, t, n, i = 0,
                    r = 0;
                this._lastFrameIndex = -1;
                var a = this._currentPlayClip._nodes;
                if (this._avatar) {
                    var o = this._cacheNodesAvatarOwners[this._currentPlayClipIndex];
                    for (i = 0, r = o.length; i < r; i++) {
                        var s = o[i];
                        n = (t = (e = a[i]).keyFrames)[t.length - 1].data, s && G._propertySetFuncs[e.propertyNameID](s, null, n)
                    }
                } else {
                    var l = this._cacheNodesSpriteOwners[this._currentPlayClipIndex];
                    for (i = 0, r = l.length; i < r; i++) {
                        var h = l[i];
                        n = (t = (e = a[i]).keyFrames)[t.length - 1].data, h && G._propertySetFuncs[e.propertyNameID](null, h, n)
                    }
                }
            }, e._setAnimationClipPropertyToAnimationNode = function(e, t, n) {
                for (var i = 0, r = t.length; i < r; i++) {
                    var a = t[i],
                        o = e[a];
                    if (o) {
                        var s = this._currentPlayClip._nodes[a],
                            l = n[a];
                        l && G._propertySetFuncs[s.propertyNameID](o, null, l)
                    }
                }
            }, e._setAnimationClipPropertyToSprite3D = function(e, t) {
                for (var n = 0, i = e.length; n < i; n++) {
                    var r = e[n];
                    if (r) {
                        var a = this._currentPlayClip._nodes[n],
                            o = t[n];
                        o && G._propertySetFuncs[a.propertyNameID](null, r, o)
                    }
                }
            }, e._handleSpriteOwnersBySprite = function(e, t, n, i) {
                var r = this._clips[e],
                    a = n.join("/"),
                    o = r._nodesMap[a];
                if (o)
                    for (var s = this._cacheNodesSpriteOwners[e], l = r._nodes, h = this._cacheNodesDefaultlValues[e], _ = 0, u = o.length; _ < u; _++) {
                        var c = o[_],
                            d = l.indexOf(c);
                        if (t) {
                            s[d] = i;
                            var f = G._propertyGetFuncs[c.propertyNameID](null, i);
                            if (f) {
                                var m = h[d];
                                m || (h[d] = m = new Float32Array(c.keyFrameWidth));
                                for (var p = 0, v = f.length; p < v; p++) m[p] = f[p]
                            }
                        } else s[d] = null
                    }
            }, e._evaluateAvatarNodesCacheMode = function(e, t, n, i, r) {
                t._evaluateAnimationlDatasCacheMode(e, this._cacheFullFrames[this._currentPlayClipIndex], this, n, r), this._setAnimationClipPropertyToAnimationNode(e, r, n);
                for (var a = 0, o = this._avatarNodes.length; a < o; a++) {
                    var s = this._avatarNodes[a].transform;
                    if (s._worldUpdate) {
                        var l = new Float32Array(16);
                        i[a] = l, s._setWorldMatrixAndUpdate(l)
                    } else {
                        var h = s.getWorldMatrix();
                        i[a] = h || _.deafaultMatrix
                    }
                }
            }, e._evaluateAvatarNodesRealTime = function(e, t, n, i, r) {
                t._evaluateAnimationlDatasRealTime(e, this.currentPlayTime, n, r), this._setAnimationClipPropertyToAnimationNode(e, r, n);
                for (var a = 0, o = this._avatarNodes.length; a < o; a++) {
                    var s = this._avatarNodes[a].transform;
                    s._worldUpdate ? s._setWorldMatrixNoUpdate(i[a]) : i[a] = _.deafaultMatrix
                }
            }, e._updateAvatarNodesToSpriteCacheMode = function(e, t) {
                for (var n = 0, i = this._cacheSpriteToNodesMap.length; n < i; n++) {
                    var r = this._cacheSpriteToNodesMap[n],
                        a = t[r];
                    if (a !== _.deafaultMatrix) {
                        var o = this._avatarNodes[r].transform._entity,
                            s = o.worldMatrix;
                        qt.matrix4x4MultiplyMFM(this._owner._transform.worldMatrix, a, s), o.worldMatrix = s
                    }
                }
            }, e._updateAvatarNodesToSpriteRealTime = function() {
                for (var e = 0, t = this._cacheSpriteToNodesMap.length; e < t; e++) {
                    var n = this._avatarNodes[this._cacheSpriteToNodesMap[e]],
                        i = n.transform._entity,
                        r = n.transform;
                    if (r._worldUpdate) {
                        var a = _._tempMatrix4x40;
                        r._setWorldMatrixAndUpdate(a);
                        var o = i.worldMatrix;
                        qt.matrix4x4MultiplyMFM(this._owner._transform.worldMatrix, a, o), i.worldMatrix = o
                    }
                }
            }, e._updatePlayer = function(e) {
                if (null != this._currentPlayClip && !this._stoped && this._currentPlayClip.loaded) {
                    var t = this._cacheFrameRateInterval * this._cachePlayRate,
                        n = 0;
                    this._startUpdateLoopCount !== R.loopCount && (n = e * this.playbackRate, this._elapsedPlaybackTime += n);
                    var i = this._currentPlayClip._frameRate,
                        r = this._playStartFrames[this._currentPlayClipIndex] / i,
                        a = Math.min(this._playEndFrames[this._currentPlayClipIndex] / i, this._currentPlayClip._duration) - r;
                    if (!this._currentPlayClip.islooping && this._elapsedPlaybackTime >= a) return this._onAnimationStop(), this._setPlayParamsWhenStop(a, t), void this.event("stopped");
                    if (n += this._currentTime, 0 < a)
                        if (a <= n)
                            for (;
                                (n -= a) < a && (this._setPlayParams(n, t), this.event("complete")), this._playEventIndex = 0, this._eventScript(0, n), a <= n;);
                        else this._setPlayParams(n, t);
                    else this._currentTime = this._currentFrameTime = this._currentFrameIndex = this._playEventIndex = 0, this.event("complete")
                }
            }, e._update = function(e) {
                var t = this._currentPlayClip;
                if (2 === this.playState && t && t.loaded) {
                    var n = this.playbackRate * x.timer.scale,
                        i = this._cachePlayRate;
                    this._canCache = this.isCache && i <= n;
                    var r, a = -1;
                    if (this._canCache) {
                        if (a = this._currentFrameIndex, this._lastFrameIndex === a) return;
                        if (r = t._getAnimationDataWithCache(i, a), this._avatar) {
                            var o = this._cacheNodesAvatarOwners[this._currentPlayClipIndex],
                                s = t._cachePropertyMap,
                                l = s.length;
                            0 < l && (r || ((r = []).length = l, t._cacheAnimationData(i, a, r), t._evaluateAnimationlDatasCacheMode(o, this._cacheFullFrames[this._currentPlayClipIndex], this, r, s)), this._setAnimationClipPropertyToAnimationNode(o, s, r)), this._curAvatarNodeDatas = t._getAvatarDataWithCache(this._avatar, this._cachePlayRate, a), this._curAvatarNodeDatas || (this._curAvatarNodeDatas = [], this._curAvatarNodeDatas.length = this._avatarNodes.length, t._cacheAvatarData(this._avatar, this._cachePlayRate, a, this._curAvatarNodeDatas), this._evaluateAvatarNodesCacheMode(o, t, t._publicClipDatas, this._curAvatarNodeDatas, t._unCachePropertyMap)), this._updateAvatarNodesToSpriteCacheMode(t, this._curAvatarNodeDatas)
                        } else {
                            var h = this._cacheNodesSpriteOwners[this._currentPlayClipIndex];
                            r || ((r = []).length = this._currentPlayClip._nodes.length, t._evaluateAnimationlDatasCacheMode(h, this._cacheFullFrames[this._currentPlayClipIndex], this, r, null), t._cacheAnimationData(i, a, r)), this._setAnimationClipPropertyToSprite3D(h, r)
                        }
                    } else if (r = t._publicClipDatas, this._avatar) {
                        if (t._evaluateAnimationlDatasRealTime(this._cacheNodesAvatarOwners[this._currentPlayClipIndex], this.currentPlayTime, r, t._cachePropertyMap), !this._publicAvatarNodeDatas) {
                            this._publicAvatarNodeDatas = [];
                            var _ = this._avatarNodes.length;
                            this._publicAvatarNodeDatas.length = _;
                            for (var u = 1; u < _; u++) this._publicAvatarNodeDatas[u] = new Float32Array(16)
                        }
                        this._curAvatarNodeDatas = this._publicAvatarNodeDatas, this._evaluateAvatarNodesRealTime(this._cacheNodesAvatarOwners[this._currentPlayClipIndex], t, r, this._curAvatarNodeDatas, t._unCachePropertyMap), this._updateAvatarNodesToSpriteRealTime()
                    } else t._evaluateAnimationlDatasRealTime(this._cacheNodesSpriteOwners[this._currentPlayClipIndex], this.currentPlayTime, r, null);
                    this._lastFrameIndex = a
                }
            }, e._checkAnimationNode = function(e, t) {
                e.name !== t.name || t._transform.dummy || t._isLinkSpriteToAnimationNode(this, e, !0);
                for (var n = 0, i = t._childs.length; n < i; n++) this._checkAnimationNode(e, t.getChildAt(n))
            }, e._load = function(e) {
                e.activeInHierarchy && x.timer.frameLoop(1, this, this._updateAnimtionPlayer), this._owner.on("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged)
            }, e._unload = function(e) {
                n.prototype._unload.call(this, e), e.activeInHierarchy && x.timer.clear(this, this._updateAnimtionPlayer), this._owner.off("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged), this._curAvatarNodeDatas = null
            }, e._destroy = function() {
                n.prototype._destroy.call(this);
                for (var e = 0, t = this._clips.length; e < t; e++) this._clips[e]._removeReference();
                this._currentPlayClip = null, this._clipNames = null, this._cacheNodesSpriteOwners = null, this._cacheNodesAvatarOwners = null, this._cacheNodesDefaultlValues = null, this._clips = null, this._cacheFullFrames = null
            }, e._cloneTo = function(e) {
                var t = e;
                t.avatar = this.avatar;
                this._clips.length;
                for (var n = 0, i = this._clips.length; n < i; n++) t.addClip(this._clips[n]);
                if (this.clip && (t.clip = this.clip), this._linkSpritesData)
                    for (var r in t._linkSpritesData = {}, this._linkSpritesData) t._linkSpritesData[r] = this._linkSpritesData[r].slice()
            }, e.addClip = function(e, t, n, i) {
                void 0 === n && (n = 0), void 0 === i && (i = 4294967295), t = t || e.name;
                var r = this._clipNames.indexOf(t);
                if (-1 !== r) {
                    if (this._clips[r] !== e) throw new Error("Animation:this playName has exist with another clip.")
                } else {
                    var a = this._clips.indexOf(e);
                    if (n < 0 || i < 0) throw new Error("Animator:startFrame and endFrame must large than zero.");
                    if (i < n) throw new Error("Animator:startFrame must less than endFrame.");
                    this._clipNames.push(t), this._clips.push(e), this._playStartFrames.push(n), this._playEndFrames.push(i), this._cacheNodesSpriteOwners.push([]), this._cacheNodesAvatarOwners.push([]), this._cacheNodesDefaultlValues.push([]), this._publicClipsDatas.push([]), e._addReference(), a = this._clips.length - 1, this._avatar ? this._avatar.loaded ? this._getAvatarOwnersByClipAsync(a, e) : this._avatar.once("loaded", this, this._getAvatarOwnersByClipAsync, [a, e]) : this._getSpriteOwnersByClipAsync(a, e), e.loaded ? this._computeCacheFullKeyframeIndices(a) : e.once("loaded", this, this._computeCacheFullKeyframeIndices, [a])
                }
            }, e.removeClip = function(e) {
                var t = this._clips.indexOf(e); - 1 !== t && (this._avatar ? this._offClipAndAvatarRelateEvent(this._avatar, e) : this._offGetSpriteOwnersByClipAsyncEvent(e), this._offGetClipCacheFullKeyframeIndicesEvent(e), this._clipNames.splice(t, 1), this._clips.splice(t, 1), this._playStartFrames.splice(t, 1), this._playEndFrames.splice(t, 1), this._cacheNodesSpriteOwners.splice(t, 1), this._cacheNodesAvatarOwners.splice(t, 1), this._cacheNodesDefaultlValues.splice(t, 1), this._publicClipsDatas.splice(t, 1), e._removeReference())
            }, e.removeClipByName = function(e) {
                var t = this._clipNames.indexOf(e);
                if (-1 !== t) {
                    var n = this._clips[t];
                    this._avatar ? this._offClipAndAvatarRelateEvent(this._avatar, n) : this._offGetSpriteOwnersByClipAsyncEvent(n), this._offGetClipCacheFullKeyframeIndicesEvent(n), this._clipNames.splice(t, 1), this._clips.splice(t, 1), this._playStartFrames.splice(t, 1), this._playEndFrames.splice(t, 1), this._cacheNodesSpriteOwners.splice(t, 1), this._cacheNodesAvatarOwners.splice(t, 1), this._cacheNodesDefaultlValues.splice(t, 1), this._publicClipsDatas.splice(t, 1)
                }
            }, e.getClip = function(e) {
                var t = this._clipNames.indexOf(e);
                return -1 !== t ? this._clips[t] : null
            }, e.getClipCount = function() {
                return this._clips.length
            }, e.play = function(e, t) {
                if (void 0 === t && (t = 1), !e && -1 == this._defaultClipIndex) throw new Error("Animator:must have  default clip value,please set clip property.");
                e ? (this._currentPlayClipIndex = this._clipNames.indexOf(e), this._currentPlayClip = this._clips[this._currentPlayClipIndex]) : (this._currentPlayClipIndex = this._defaultClipIndex, this._currentPlayClip = this._clips[this._defaultClipIndex]), this._currentTime = 0, this._currentFrameTime = 0, this._elapsedPlaybackTime = 0, this._playEventIndex = 0, this.playbackRate = t, this._stoped = !1, this._currentFrameIndex = 0, this._startUpdateLoopCount = R.loopCount, this._lastPlayAnimationClip && this._lastPlayAnimationClip !== this._currentPlayClip && this._revertKeyframeNodes(this._lastPlayAnimationClip, this._lastPlayAnimationClipIndex), this._updatePlayer(0), this._lastPlayAnimationClip = this._currentPlayClip, this._lastPlayAnimationClipIndex = this._currentPlayClipIndex
            }, e.stop = function() {
                0 !== this.playState && (this._stoped = !0, this.event("stopped"))
            }, e._getLinkSpritePath = function(e, t) {
                t.unshift(e.name);
                var n = e._parent;
                n._hierarchyAnimator === this ? this._getLinkSpritePath(n, t) : t.shift()
            }, e.linkSprite3DToAvatarNode = function(e, t) {
                if (t._hierarchyAnimator === this) {
                    if (this._avatar) {
                        var n = this._avatarNodeMap[e];
                        if (n) {
                            this._linkSpritesData = this._linkSpritesData || {};
                            var i = [];
                            return this._getLinkSpritePath(t, i), this._linkSpritesData[e] = i, t._isLinkSpriteToAnimationNode(this, n, !0), !0
                        }
                        return !1
                    }
                    return !1
                }
                throw "Animator:sprite3D must belong to this Animator"
            }, e.unLinkSprite3DToAvatarNode = function(e) {
                if (this._avatar) {
                    var t = e.transform.dummy;
                    if (t) {
                        var n = this._avatarNodeMap[t._owner.name];
                        return e._isLinkSpriteToAnimationNode(this, n, !1), !0
                    }
                    return !1
                }
                return !1
            }, g(0, e, "playState", function() {
                return null == this._currentPlayClip ? 0 : this._stoped ? 0 : 2
            }), g(0, e, "avatar", function() {
                return this._avatar
            }, function(e) {
                if (this._avatar !== e) {
                    var t = this._avatar;
                    this._avatar = e;
                    for (var n = this._clips.length, i = 0; i < n; i++) this._offClipAndAvatarRelateEvent(t, this._clips[i]);
                    e && (e.loaded ? this._getAvatarOwnersAndInitDatasAsync() : e.once("loaded", this, this._getAvatarOwnersAndInitDatasAsync))
                }
            }), g(0, e, "cacheFrameRate", function() {
                return this._cacheFrameRate
            }, function(e) {
                if (this._cacheFrameRate !== e) {
                    this._cacheFrameRate = e, this._cacheFrameRateInterval = 1 / this._cacheFrameRate;
                    for (var t = 0, n = this._clips.length; t < n; t++) this._clips[t].loaded && this._computeCacheFullKeyframeIndices(t)
                }
            }), g(0, e, "clip", function() {
                return this._clips[this._defaultClipIndex]
            }, function(e) {
                var t = e ? this._clips.indexOf(e) : -1;
                this._defaultClipIndex !== t && (-1 !== this._defaultClipIndex && this.removeClip(this._clips[this._defaultClipIndex]), -1 !== t && this.addClip(e, e.name), this._defaultClipIndex = t)
            }), g(0, e, "currentFrameIndex", function() {
                return this._currentFrameIndex
            }), g(0, e, "cachePlayRate", function() {
                return this._cachePlayRate
            }, function(e) {
                if (this._cachePlayRate !== e) {
                    this._cachePlayRate = e;
                    for (var t = 0, n = this._clips.length; t < n; t++) this._clips[t].loaded && this._computeCacheFullKeyframeIndices(t)
                }
            }), g(0, e, "currentFrameTime", function() {
                return this._currentFrameTime
            }), g(0, e, "currentPlayClip", function() {
                return this._currentPlayClip
            }), g(0, e, "currentPlayTime", function() {
                return this._currentTime + this._playStartFrames[this._currentPlayClipIndex] / this._currentPlayClip._frameRate
            }), g(0, e, "playbackTime", null, function(e) {
                if (null != this._currentPlayClip && this._currentPlayClip && this._currentPlayClip.loaded) {
                    this._startUpdateLoopCount = R.loopCount;
                    var t = this._cacheFrameRateInterval * this._cachePlayRate;
                    this._currentTime = e, this._currentFrameIndex = Math.floor(this.currentPlayTime / t), this._currentFrameTime = this._currentFrameIndex * t
                }
            }), g(0, e, "paused", function() {
                return this._stoped
            }, function(e) {
                (this._stoped = e) && this.event("paused")
            }), u(_, ["deafaultMatrix", function() {
                return this.deafaultMatrix = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1])
            }, "_tempMatrix4x40", function() {
                return this._tempMatrix4x40 = new Float32Array(16)
            }]), _
        }(Jt),
        Mn = (function(t) {
            function e() {
                this._attachSkeleton = null, this._extenData = null, this.attachBones = null, this.matrixs = null, e.__super.call(this), this.attachBones = [], this.matrixs = []
            }
            m(e, "t_tl.d3.component.AttachPoint", t);
            var n = e.prototype;
            n._load = function(e) {
                t.prototype._load.call(this, e), this._attachSkeleton = e.getComponentByType($n)
            }, n._update = function(e) {
                if (this._attachSkeleton && !this._attachSkeleton.destroyed && 0 !== this._attachSkeleton.player.state && this._attachSkeleton.curBonesDatas) {
                    var t = this._attachSkeleton.player,
                        n = this._attachSkeleton.templet;
                    this.matrixs.length = this.attachBones.length;
                    for (var i = this._attachSkeleton.curBonesDatas, r = this.owner.transform.worldMatrix, a = 0, o = this.attachBones.length; a < o; a++) {
                        var s = 16 * n.getNodeIndexWithName(t.currentAnimationClipIndex, this.attachBones[a]),
                            l = this.matrixs[a];
                        l || (l = this.matrixs[a] = new At);
                        for (var h = l.elements, _ = 0; _ < 16; _++) h[_] = i[s + _];
                        At.multiply(r, l, l)
                    }
                    this.event("complete")
                }
            }
        }(Jt), function(e) {
            function t() {
                t.__super.call(this), this._isRigidbody = !1, this._runtimeCollisonMap = {}, this._runtimeCollisonTestMap = {}, this._ignoreCollisonMap = {}, this.isTrigger = !0
            }
            m(t, "t_tl.d3.component.physics.Collider", e);
            var n = t.prototype;
            return n._clearCollsionMap = function() {
                for (var e in this._runtimeCollisonMap) {
                    var t = this._runtimeCollisonMap[e];
                    delete t._runtimeCollisonMap[this.id], t._isRigidbody && delete t._runtimeCollisonTestMap[this.id];
                    var n = t.id;
                    delete this._runtimeCollisonMap[n], this._isRigidbody && delete this._runtimeCollisonTestMap[n]
                }
            }, n._unload = function(e) {
                for (var t in this._runtimeCollisonMap) {
                    var n = this._runtimeCollisonMap[t];
                    delete n._runtimeCollisonMap[this.id], n._isRigidbody && delete n._runtimeCollisonTestMap[this.id], delete this._ignoreCollisonMap[t]._ignoreCollisonMap[this.id]
                }
            }, n._setIsRigidbody = function(e) {
                if (this._isRigidbody !== e) {
                    this._isRigidbody = e;
                    var t = this._owner;
                    if (t.displayedInStage) {
                        var n = t.layer;
                        n._removeCollider(this), n._addCollider(this)
                    }
                }
            }, n._getType = function() {
                return -1
            }, n._collisonTo = function(e) {
                return !1
            }, n.raycast = function(e, t, n) {
                throw void 0 === n && (n = 179e306), new Error("Collider:Must override it.")
            }, g(0, n, "enable", e.prototype._$get_enable, function(e) {
                this._enable !== e && (this._owner.displayedInStage && (e || this._clearCollsionMap()), this._enable = e, this.event("enablechanged", this._enable))
            }), g(0, n, "isSingleton", function() {
                return t._isSingleton
            }), t._isSingleton = !1, t
        }(Jt)),
        Rn = function(e) {
            function t() {
                t.__super.call(this)
            }
            return m(t, "t_tl.d3.component.Rigidbody", e), g(0, t.prototype, "enable", e.prototype._$get_enable, function(e) {
                if (this._enable !== e) {
                    for (var t = this._owner._colliders, n = 0, i = t.length; n < i; n++) {
                        var r = t[n];
                        r._setIsRigidbody(e);
                        var a = r._runtimeCollisonMap,
                            o = r._runtimeCollisonTestMap;
                        if (!e)
                            for (var s in a) delete o[s]
                    }
                    this._enable = e, this.event("enablechanged", this._enable)
                }
            }), t
        }(Jt),
        An = (function(e) {
            function t() {
                t.__super.call(this)
            }
            m(t, "t_tl.d3.component.Script", Jt);
            var n = t.prototype;
            n.onTriggerEnter = function(e) {}, n.onTriggerExit = function(e) {}, n.onTriggerStay = function(e) {}, g(0, n, "isSingleton", function() {
                return t._isSingleton
            }), t._isSingleton = !1
        }(), function(e) {
            function t(e) {
                t.__super.call(this, e)
            }
            m(t, "t_tl.d3.core.GlitterRender", tn);
            var n = t.prototype;
            return n._calculateBoundingBox = function() {
                var e = this._boundingBox.min.elements;
                e[0] = -Number.MAX_VALUE, e[1] = -Number.MAX_VALUE, e[2] = -Number.MAX_VALUE;
                var t = this._boundingBox.min.elements;
                t[0] = Number.MAX_VALUE, t[1] = Number.MAX_VALUE, t[2] = Number.MAX_VALUE
            }, n._calculateBoundingSphere = function() {
                var e = this._boundingSphere.center.elements;
                e[0] = 0, e[1] = 0, e[2] = 0, this._boundingSphere.radius = Number.MAX_VALUE
            }, n._renderUpdate = function(e) {
                this._setShaderValueMatrix4x4(0, this._owner.transform.worldMatrix);
                var t = this._owner.getProjectionViewWorldMatrix(e);
                this._setShaderValueMatrix4x4(1, t);
                var n = this._owner.templet;
                return this._setShaderValueNumber(3, n.lifeTime), this._setShaderValueNumber(2, n._currentTime), !0
            }, t
        }()),
        In = function(e) {
            function t(e) {
                this._owner = null, this._sharedMesh = null, t.__super.call(this), this._owner = e
            }
            m(t, "t_tl.d3.core.MeshFilter", e);
            var n = t.prototype;
            return n._sharedMeshLoaded = function() {
                this.event("loaded")
            }, n._destroy = function() {
                e.prototype._destroy.call(this), this._owner = null, this._sharedMesh && (this._sharedMesh._removeReference(), this._sharedMesh = null)
            }, g(0, n, "sharedMesh", function() {
                return this._sharedMesh
            }, function(e) {
                var t = this._sharedMesh;
                t && t._removeReference(), (this._sharedMesh = e)._addReference(), this.event("meshchanged", [this, t, e]), e.loaded || this._sharedMesh.once("loaded", this, this._sharedMeshLoaded)
            }), g(0, n, "_isAsyncLoaded", function() {
                return this._sharedMesh.loaded
            }), g(0, n, "_originalBoundingBoxCorners", function() {
                return this._sharedMesh.boundingBoxCorners
            }), g(0, n, "_originalBoundingSphere", function() {
                return this._sharedMesh.boundingSphere
            }), g(0, n, "_originalBoundingBox", function() {
                return this._sharedMesh.boundingBox
            }), t
        }(en),
        yn = function(e) {
            function t(e) {
                t.__super.call(this, e), e.meshFilter.on("meshchanged", this, this._onMeshChanged)
            }
            m(t, "t_tl.d3.core.MeshRender", tn);
            var n = t.prototype;
            return n._onMeshChanged = function(e, t, n) {
                n.loaded ? this._boundingSphereNeedChange = this._boundingBoxNeedChange = this._boundingBoxCenterNeedChange = this._octreeNodeNeedChange = !0 : n.once("loaded", this, this._onMeshLoaed)
            }, n._onMeshLoaed = function(e, t) {
                this._boundingSphereNeedChange = this._boundingBoxNeedChange = this._boundingBoxCenterNeedChange = this._octreeNodeNeedChange = !0
            }, n._calculateBoundingSphereByInitSphere = function(e) {
                var t = NaN,
                    n = this._owner.transform,
                    i = n.scale.elements,
                    r = Math.abs(i[0]),
                    a = Math.abs(i[1]),
                    o = Math.abs(i[2]);
                t = a <= r && o <= r ? r : o <= a ? a : o, Vt.transformCoordinate(e.center, n.worldMatrix, this._boundingSphere.center), this._boundingSphere.radius = e.radius * t
            }, n._calculateBoundBoxByInitCorners = function(e) {
                for (var t = this._owner.transform.worldMatrix, n = 0; n < 8; n++) Vt.transformCoordinate(e[n], t, tn._tempBoundBoxCorners[n]);
                St.createfromPoints(tn._tempBoundBoxCorners, this._boundingBox)
            }, n._calculateBoundingSphere = function() {
                var e = this._owner.meshFilter.sharedMesh;
                null == e || null == e.boundingSphere ? this._boundingSphere.toDefault() : this._calculateBoundingSphereByInitSphere(e.boundingSphere)
            }, n._calculateBoundingBox = function() {
                var e = this._owner.meshFilter.sharedMesh;
                null == e || null == e.boundingBox ? this._boundingBox.toDefault() : this._calculateBoundBoxByInitCorners(e.boundingBoxCorners)
            }, n._renderUpdate = function(e) {
                var t = this._owner.transform;
                if (t) {
                    this._setShaderValueMatrix4x4(0, t.worldMatrix);
                    var n = this._owner.getProjectionViewWorldMatrix(e);
                    this._setShaderValueMatrix4x4(1, n)
                } else this._setShaderValueMatrix4x4(0, At.DEFAULT), this._setShaderValueMatrix4x4(1, e);
                return Qt.debugMode && this._renderRenderableBoundBox(), !0
            }, t
        }(),
        Cn = function(e) {
            function j(e) {
                j.__super.call(this), this._tempRotationMatrix = new At, this._uvLength = new Ot, this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._owner = e, this._ownerRender = e.particleRender, this._boundingBoxCorners = M(8, null), this._boundingSphere = new Tt(new Vt, Number.MAX_VALUE), this._boundingBox = new St(new Vt(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE), new Vt(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE)), this._currentTime = 0, this._isEmitting = !1, this._isPlaying = !1, this._isPaused = !1, this._burstsIndex = 0, this._frameRateTime = 0, this._emissionTime = 0, this._totalDelayTime = 0, this._simulateUpdate = !1, this._bufferMaxParticles = 1, this.duration = 5, this.looping = !0, this.prewarm = !1, this.startDelayType = 0, this.startDelay = 0, this.startDelayMin = 0, this.startDelayMax = 0, this._startLifetimeType = 0, this._startLifetimeConstant = 5, this._startLifeTimeGradient = new Z, this._startLifetimeConstantMin = 0, this._startLifetimeConstantMax = 5, this._startLifeTimeGradientMin = new Z, this._startLifeTimeGradientMax = new Z, this._maxStartLifetime = 5, this.startSpeedType = 0, this.startSpeedConstant = 5, this.startSpeedConstantMin = 0, this.startSpeedConstantMax = 5, this.threeDStartSize = !1, this.startSizeType = 0, this.startSizeConstant = 1, this.startSizeConstantSeparate = new Vt(1, 1, 1), this.startSizeConstantMin = 0, this.startSizeConstantMax = 1, this.startSizeConstantMinSeparate = new Vt(0, 0, 0), this.startSizeConstantMaxSeparate = new Vt(1, 1, 1), this.threeDStartRotation = !1, this.startRotationType = 0, this.startRotationConstant = 0, this.startRotationConstantSeparate = new Vt(0, 0, 0), this.startRotationConstantMin = 0, this.startRotationConstantMax = 0, this.startRotationConstantMinSeparate = new Vt(0, 0, 0), this.startRotationConstantMaxSeparate = new Vt(0, 0, 0), this.randomizeRotationDirection = 0, this.startColorType = 0, this.startColorConstant = new Pt(1, 1, 1, 1), this.startColorConstantMin = new Pt(1, 1, 1, 1), this.startColorConstantMax = new Pt(1, 1, 1, 1), this.gravityModifier = 0, this.simulationSpace = 1, this.scaleMode = 0, this.playOnAwake = !0, this._rand = new Nt(0), this.autoRandomSeed = !0, this.randomSeed = new Uint32Array(1), this._randomSeeds = new Uint32Array(j._RANDOMOFFSET.length), this.isPerformanceMode = !0, this._emission = new B, this._emission.enbale = !0, this._owner.on("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged)
            }
            m(j, "t_tl.d3.core.particleShuriKen.ShurikenParticleSystem", e);
            var t = j.prototype;
            return x.imps(t, {
                "t_tl.d3.core.render.IRenderable": !0,
                "t_tl.d3.core.IClone": !0
            }), t._getVertexBuffer = function(e) {
                return void 0 === e && (e = 0), 0 === e ? this._vertexBuffer : null
            }, t._getIndexBuffer = function() {
                return this._indexBuffer
            }, t._generateBoundingSphere = function() {
                var e = this._boundingSphere.center.elements;
                e[0] = 0, e[1] = 0, e[2] = 0, this._boundingSphere.radius = Number.MAX_VALUE
            }, t._generateBoundingBox = function() {
                var e = this._owner.particleRender,
                    t = this._boundingBox.min,
                    n = this._boundingBox.max,
                    i = 0,
                    r = 0,
                    a = NaN;
                switch (this.startLifetimeType) {
                    case 0:
                        a = this.startLifetimeConstant;
                        break;
                    case 1:
                        a = -Number.MAX_VALUE;
                        var o = o;
                        for (i = 0, r = o.gradientCount; i < r; i++) a = Math.max(a, o.getValueByIndex(i));
                        break;
                    case 2:
                        a = Math.max(this.startLifetimeConstantMin, this.startLifetimeConstantMax);
                        break;
                    case 3:
                        a = -Number.MAX_VALUE;
                        var s = s;
                        for (i = 0, r = s.gradientCount; i < r; i++) a = Math.max(a, s.getValueByIndex(i));
                        var l = l;
                        for (i = 0, r = l.gradientCount; i < r; i++) a = Math.max(a, l.getValueByIndex(i))
                }
                var h, _, u, c, d = NaN,
                    f = NaN;
                switch (this.startSpeedType) {
                    case 0:
                        d = f = this.startSpeedConstant;
                        break;
                    case 1:
                        break;
                    case 2:
                        d = this.startLifetimeConstantMin, f = this.startLifetimeConstantMax
                }
                this._shape && this._shape.enable || (h = _ = Vt.ZERO, u = Vt.ZERO, c = Vt.UnitZ);
                var m, p, v = new Vt(u.x * d, u.y * d, u.z * d),
                    g = new Vt(c.x * f, c.y * f, c.z * f);
                if (this._velocityOverLifetime && this._velocityOverLifetime.enbale) {
                    var E = this._velocityOverLifetime.velocity;
                    switch (E.type) {
                        case 0:
                            E.constant;
                            break;
                        case 1:
                            new Vt(E.gradientX.getAverageValue(), E.gradientY.getAverageValue(), E.gradientZ.getAverageValue());
                            break;
                        case 2:
                            E.constantMin, E.constantMax;
                            break;
                        case 3:
                            new Vt(E.gradientXMin.getAverageValue(), E.gradientYMin.getAverageValue(), E.gradientZMin.getAverageValue()), new Vt(E.gradientXMax.getAverageValue(), E.gradientYMax.getAverageValue(), E.gradientZMax.getAverageValue())
                    }
                }
                var S, D, T = this._owner.transform,
                    x = T.position,
                    M = j._tempVector39,
                    R = M.elements,
                    A = e.renderMode;
                switch (this.scaleMode) {
                    case 0:
                        var I = T.scale;
                        m = I, R[0] = I.x, R[1] = I.z, R[2] = I.y, 1 === A && (p = I);
                        break;
                    case 1:
                        var y = T.localScale;
                        m = y, R[0] = y.x, R[1] = y.z, R[2] = y.y, 1 === A && (p = y);
                        break;
                    case 2:
                        m = T.scale, R[0] = R[1] = R[2] = 1, 1 === A && (p = Vt.ONE)
                }
                switch (this._velocityOverLifetime && this._velocityOverLifetime.enbale || (S = new Vt(v.x * a, v.y * a, v.z * a), D = new Vt(g.x * a, g.y * a, g.z * a), 2 != this.scaleMode ? (Vt.add(h, S, t), Vt.multiply(m, t, t), Vt.add(_, D, n), Vt.multiply(m, n, n)) : (Vt.multiply(m, h, t), Vt.add(t, S, t), Vt.multiply(m, _, n), Vt.add(n, D, n))), this.simulationSpace) {
                    case 0:
                        break;
                    case 1:
                        Vt.add(t, x, t), Vt.add(n, x, n)
                }
                var C = NaN,
                    N = NaN;
                switch (this.startSizeType) {
                    case 0:
                        if (this.threeDStartSize) {
                            var w = w;
                            C = Math.max(w.x, w.y), 1 === A && (N = w.y)
                        } else C = this.startSizeConstant, 1 === A && (N = this.startSizeConstant);
                        break;
                    case 1:
                        break;
                    case 2:
                        if (this.threeDStartSize) {
                            var O = O;
                            C = Math.max(O.x, O.y), 1 === A && (N = O.y)
                        } else C = this.startSizeConstantMax, 1 === A && (N = this.startSizeConstantMax)
                }
                if (this._sizeOverLifetime && this._sizeOverLifetime.enbale) {
                    this._sizeOverLifetime.size;
                    C *= this._sizeOverLifetime.size.getMaxSizeInGradient()
                }
                var V = j._tempVector30,
                    P = V.elements,
                    L = NaN,
                    b = NaN;
                switch (A) {
                    case 0:
                        L = C * j.halfKSqrtOf2, Vt.scale(M, C, V), Vt.subtract(t, V, t), Vt.add(n, V, n);
                        break;
                    case 1:
                        var F = j._tempVector31,
                            B = j._tempVector32,
                            U = j._tempVector33,
                            H = j._tempVector34;
                        this._velocityOverLifetime && this._velocityOverLifetime.enbale || (Vt.multiply(p, g, B), Vt.multiply(p, v, U));
                        var G = N * e.stretchedBillboardLengthScale,
                            z = Vt.scalarLength(B) * e.stretchedBillboardSpeedScale + G,
                            k = Vt.scalarLength(U) * e.stretchedBillboardSpeedScale + G,
                            W = j._tempVector35,
                            X = j._tempVector36;
                        Vt.normalize(B, W), Vt.scale(W, z, H), Vt.subtract(D, H, H), Vt.normalize(U, X), Vt.scale(X, k, F), Vt.add(S, F, F), L = C * j.halfKSqrtOf2, Vt.scale(M, L, V);
                        var Z = j._tempVector37,
                            Y = j._tempVector38;
                        Vt.scale(W, .5, Z), Vt.scale(X, .5, Y), Vt.multiply(Z, M, Z), Vt.multiply(Y, M, Y), Vt.add(t, Y, t), Vt.min(t, H, t), Vt.subtract(t, V, t), Vt.subtract(n, Z, n), Vt.max(n, F, n), Vt.add(n, V, n);
                        break;
                    case 2:
                        b = .5 * (C *= Math.cos(.7853981633974483)), P[0] = M.x * b, P[1] = M.z * b, Vt.subtract(t, V, t), Vt.add(n, V, n);
                        break;
                    case 3:
                        b = .5 * (C *= Math.cos(.7853981633974483)), Vt.scale(M, b, V), Vt.subtract(t, V, t), Vt.add(n, V, n)
                }
                this._boundingBox.getCorners(this._boundingBoxCorners)
            }, t._updateEmission = function() {
                if (x.stage.isVisibility && this.isAlive)
                    if (this._simulateUpdate) this._simulateUpdate = !1;
                    else {
                        var e = this._startUpdateLoopCount === R.loopCount || this._isPaused ? 0 : x.timer.delta / 1e3;
                        e = Math.min(j._maxElapsedTime, e), this._updateParticles(e)
                    }
            }, t._updateParticles = function(e) {
                (4 !== this._ownerRender.renderMode || this._ownerRender.mesh) && (this._currentTime += e, this._retireActiveParticles(), this._freeRetiredParticles(), this._totalDelayTime += e, this._totalDelayTime < this._playStartDelay || this._emission.enbale && this._isEmitting && !this._isPaused && this._advanceTime(e, this._currentTime))
            }, t._updateParticlesSimulationRestart = function(e) {
                this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._burstsIndex = 0, this._frameRateTime = e, this._emissionTime = 0, this._totalDelayTime = 0;
                var t = this._currentTime = e;
                t < this._playStartDelay ? this._totalDelayTime = t : this._emission.enbale && this._advanceTime(e, e)
            }, t._addUpdateEmissionToTimer = function() {
                x.timer.frameLoop(1, this, this._updateEmission)
            }, t._removeUpdateEmissionToTimer = function() {
                x.timer.clear(this, this._updateEmission)
            }, t._onOwnerActiveHierarchyChanged = function(e) {
                this._owner.displayedInStage && (e ? this._addUpdateEmissionToTimer() : this._removeUpdateEmissionToTimer())
            }, t._retireActiveParticles = function() {
                for (; this._firstActiveElement != this._firstNewElement;) {
                    var e = this._firstActiveElement * this._floatCountPerVertex * this._vertexStride,
                        t = e + this._timeIndex;
                    if (this._currentTime - this._vertices[t] + 1e-4 < this._vertices[e + this._startLifeTimeIndex]) break;
                    this._vertices[t] = this._drawCounter, this._firstActiveElement++, this._firstActiveElement >= this._bufferMaxParticles && (this._firstActiveElement = 0)
                }
            }, t._freeRetiredParticles = function() {
                for (; this._firstRetiredElement != this._firstActiveElement;) {
                    var e = this._drawCounter - this._vertices[this._firstRetiredElement * this._floatCountPerVertex * this._vertexStride + this._timeIndex];
                    if (this.isPerformanceMode && e < 3) break;
                    this._firstRetiredElement++, this._firstRetiredElement >= this._bufferMaxParticles && (this._firstRetiredElement = 0)
                }
            }, t._burst = function(e, t) {
                for (var n = 0, i = this._emission._bursts, r = i.length; this._burstsIndex < r; this._burstsIndex++) {
                    var a = i[this._burstsIndex],
                        o = a.time;
                    if (!(e <= o && o < t)) break;
                    var s = 0;
                    this.autoRandomSeed ? s = H.lerp(a.minCount, a.maxCount, Math.random()) : (this._rand.seed = this._randomSeeds[0], s = H.lerp(a.minCount, a.maxCount, this._rand.getFloat()), this._randomSeeds[0] = this._rand.seed), n += s
                }
                return n
            }, t._advanceTime = function(e, t) {
                var n = 0,
                    i = this._emissionTime;
                this._emissionTime += e;
                var r = 0;
                if (this._emissionTime > this.duration) {
                    if (!this.looping) {
                        for (r = Math.min(this.maxParticles - this.aliveParticleCount, r), n = 0; n < r; n++) this.emit(t);
                        return this._isPlaying = !1, void this.stop()
                    }
                    r += this._burst(i, this._emissionTime), this._emissionTime -= this.duration, this.event("complete"), this._burstsIndex = 0, r += this._burst(0, this._emissionTime)
                } else r += this._burst(i, this._emissionTime);
                for (r = Math.min(this.maxParticles - this.aliveParticleCount, r), n = 0; n < r; n++) this.emit(t);
                var a = this.emission.emissionRate;
                if (0 < a) {
                    var o = 1 / a;
                    for (this._frameRateTime += o, this._frameRateTime = this._currentTime - (this._currentTime - this._frameRateTime) % this._maxStartLifetime; this._frameRateTime <= t && this.emit(this._frameRateTime);) this._frameRateTime += o;
                    this._frameRateTime = Math.floor(t / o) * o
                }
            }, t._initBufferDatas = function() {
                this._vertexBuffer && (this._vertexBuffer.destroy(), this._indexBuffer.destroy());
                var e = this._ownerRender,
                    t = e.renderMode;
                if (-1 !== t && 0 < this.maxParticles) {
                    var n, i, r = 0,
                        a = 0,
                        o = 0,
                        s = 0,
                        l = 0,
                        h = e.mesh;
                    if (4 === t) {
                        if (h) {
                            if (1 < h._vertexBuffers.length) throw new Error("ShurikenParticleSystem: submesh Count mesh be One or all subMeshes have the same vertexDeclaration.");
                            i = mt.vertexDeclaration, this._floatCountPerVertex = i.vertexStride / 4, this._startLifeTimeIndex = 12, this._timeIndex = 16, this._vertexStride = h._vertexBuffers[0].vertexCount;
                            var _ = this._bufferMaxParticles * this._vertexStride,
                                u = _ % 65535;
                            if (1 < Math.floor(_ / 65535) + 1) throw new Error("ShurikenParticleSystem:the maxParticleCount multiply mesh vertexCount is large than 65535.");
                            this._vertexBuffer = Kn.create(i, u, 35048), this._vertices = new Float32Array(this._floatCountPerVertex * u), this._indexStride = h._indexBuffer.indexCount;
                            var c = h._indexBuffer.getData(),
                                d = this._bufferMaxParticles * this._indexStride;
                            for (this._indexBuffer = jn.create("ushort", d, 35044), n = new Uint16Array(d), r = s = 0; r < this._bufferMaxParticles; r++) {
                                var f = r * this._vertexStride;
                                for (a = 0, o = c.length; a < o; a++) n[s++] = f + c[a]
                            }
                            this._indexBuffer.setData(n)
                        }
                    } else {
                        for (i = ft.vertexDeclaration, this._floatCountPerVertex = i.vertexStride / 4, this._startLifeTimeIndex = 7, this._timeIndex = 11, this._vertexStride = 4, this._vertexBuffer = Kn.create(i, this._bufferMaxParticles * this._vertexStride, 35048), this._vertices = new Float32Array(this._floatCountPerVertex * this._bufferMaxParticles * this._vertexStride), r = 0; r < this._bufferMaxParticles; r++) l = r * this._floatCountPerVertex * this._vertexStride, this._vertices[l] = -.5, this._vertices[l + 1] = -.5, this._vertices[l + 2] = 0, this._vertices[l + 3] = 1, l += this._floatCountPerVertex, this._vertices[l] = .5, this._vertices[l + 1] = -.5, this._vertices[l + 2] = 1, this._vertices[l + 3] = 1, l += this._floatCountPerVertex, this._vertices[l] = .5, this._vertices[l + 1] = .5, this._vertices[l + 2] = 1, this._vertices[l + 3] = 0, l += this._floatCountPerVertex, this._vertices[l] = -.5, this._vertices[l + 1] = .5, this._vertices[l + 2] = 0, this._vertices[l + 3] = 0;
                        for (this._indexStride = 6, this._indexBuffer = jn.create("ushort", 6 * this._bufferMaxParticles, 35044), n = new Uint16Array(6 * this._bufferMaxParticles), r = 0; r < this._bufferMaxParticles; r++) {
                            s = 6 * r;
                            var m = r * this._vertexStride,
                                p = m + 2;
                            n[s++] = m, n[s++] = p, n[s++] = m + 1, n[s++] = m, n[s++] = m + 3, n[s++] = p
                        }
                        this._indexBuffer.setData(n)
                    }
                }
            }, t._destroy = function() {
                e.prototype._destroy.call(this), this._owner.activeInHierarchy && this._removeUpdateEmissionToTimer(), this._vertexBuffer.destroy(), this._indexBuffer.destroy(), this._emission._destroy(), this._owner = null, this._vertices = null, this._vertexBuffer = null, this._indexBuffer = null, this._emission = null, this._shape = null, this.startLifeTimeGradient = null, this.startLifeTimeGradientMin = null, this.startLifeTimeGradientMax = null, this.startSizeConstantSeparate = null, this.startSizeConstantMinSeparate = null, this.startSizeConstantMaxSeparate = null, this.startRotationConstantSeparate = null, this.startRotationConstantMinSeparate = null, this.startRotationConstantMaxSeparate = null, this.startColorConstant = null, this.startColorConstantMin = null, this.startColorConstantMax = null, this._velocityOverLifetime = null, this._colorOverLifetime = null, this._sizeOverLifetime = null, this._rotationOverLifetime = null, this._textureSheetAnimation = null
            }, t.emit = function(e) {
                var t = j._tempPosition,
                    n = j._tempDirection;
                if (this._shape && this._shape.enable) this.autoRandomSeed ? this._shape.generatePositionAndDirection(t, n) : this._shape.generatePositionAndDirection(t, n, this._rand, this._randomSeeds);
                else {
                    var i = t.elements,
                        r = n.elements;
                    i[0] = i[1] = i[2] = 0, r[0] = r[1] = 0, r[2] = 1
                }
                return this.addParticle(t, n, e)
            }, t.addParticle = function(e, t, n) {
                Vt.normalize(t, t);
                var i = this._firstFreeElement + 1;
                if (i >= this._bufferMaxParticles && (i = 0), i === this._firstRetiredElement) return !1;
                if (K.create(this, this._ownerRender, this._owner.transform), this._currentTime - n >= K.startLifeTime) return !0;
                var r = NaN,
                    a = NaN,
                    o = NaN,
                    s = NaN,
                    l = NaN,
                    h = NaN,
                    _ = NaN,
                    u = this._velocityOverLifetime && this._velocityOverLifetime.enbale;
                if (u) {
                    var c = this._velocityOverLifetime.velocity.type;
                    2 === c || 3 === c ? this.autoRandomSeed ? (r = Math.random(), a = Math.random(), o = Math.random()) : (this._rand.seed = this._randomSeeds[9], r = this._rand.getFloat(), a = this._rand.getFloat(), o = this._rand.getFloat(), this._randomSeeds[9] = this._rand.seed) : u = !1
                } else u = !1;
                var d = this._colorOverLifetime && this._colorOverLifetime.enbale;
                d ? 3 === this._colorOverLifetime.color.type ? this.autoRandomSeed ? s = Math.random() : (this._rand.seed = this._randomSeeds[10], s = this._rand.getFloat(), this._randomSeeds[10] = this._rand.seed) : d = !1 : d = !1;
                var f = this._sizeOverLifetime && this._sizeOverLifetime.enbale;
                f ? 3 === this._sizeOverLifetime.size.type ? this.autoRandomSeed ? l = Math.random() : (this._rand.seed = this._randomSeeds[11], l = this._rand.getFloat(), this._randomSeeds[11] = this._rand.seed) : f = !1 : f = !1;
                var m = this._rotationOverLifetime && this._rotationOverLifetime.enbale;
                if (m) {
                    var p = this._rotationOverLifetime.angularVelocity.type;
                    2 === p || 3 === p ? this.autoRandomSeed ? h = Math.random() : (this._rand.seed = this._randomSeeds[12], h = this._rand.getFloat(), this._randomSeeds[12] = this._rand.seed) : m = !1
                } else m = !1;
                var v = this._textureSheetAnimation && this._textureSheetAnimation.enable;
                v ? 3 === this._textureSheetAnimation.frame.type ? this.autoRandomSeed ? _ = Math.random() : (this._rand.seed = this._randomSeeds[15], _ = this._rand.getFloat(), this._randomSeeds[15] = this._rand.seed) : v = !1 : v = !1;
                var g, E = this._firstFreeElement * this._floatCountPerVertex * this._vertexStride,
                    S = K.startUVInfo[0],
                    D = K.startUVInfo[1],
                    T = K.startUVInfo[2],
                    x = K.startUVInfo[3],
                    M = e.elements,
                    R = t.elements,
                    A = 0,
                    I = 0,
                    y = 0,
                    C = 0,
                    N = 0,
                    w = this._ownerRender;
                if (4 === w.renderMode) {
                    var O = w.mesh._vertexBuffers[0];
                    g = O.getData();
                    var V = O.vertexDeclaration;
                    I = V.getVertexElementByUsage(0).offset / 4;
                    var P = V.getVertexElementByUsage(1);
                    y = P ? P.offset / 4 : -1;
                    var L = V.getVertexElementByUsage(2);
                    C = L ? L.offset / 4 : -1, A = V.vertexStride / 4, N = 0
                } else {
                    this._vertices[E + 2] = T, this._vertices[E + 3] = x + D;
                    var b = E + this._floatCountPerVertex;
                    this._vertices[b + 2] = T + S, this._vertices[b + 3] = x + D;
                    var F = b + this._floatCountPerVertex;
                    this._vertices[F + 2] = T + S, this._vertices[F + 3] = x;
                    var B = F + this._floatCountPerVertex;
                    this._vertices[B + 2] = T, this._vertices[B + 3] = x
                }
                for (var U = E, H = E + this._floatCountPerVertex * this._vertexStride; U < H; U += this._floatCountPerVertex) {
                    var G = 0;
                    if (4 === w.renderMode) {
                        G = U;
                        var z = A * N++,
                            k = z + I;
                        this._vertices[G++] = g[k++], this._vertices[G++] = g[k++], this._vertices[G++] = g[k], -1 === y ? (this._vertices[G++] = 1, this._vertices[G++] = 1, this._vertices[G++] = 1, this._vertices[G++] = 1) : (k = z + y, this._vertices[G++] = g[k++], this._vertices[G++] = g[k++], this._vertices[G++] = g[k++], this._vertices[G++] = g[k]), -1 === C ? (this._vertices[G++] = 0, this._vertices[G++] = 0) : (k = z + C, this._vertices[G++] = T + g[k++] * S, this._vertices[G++] = x + g[k] * D)
                    } else G = U + 4;
                    switch (this._vertices[G++] = M[0], this._vertices[G++] = M[1], this._vertices[G++] = M[2], this._vertices[G++] = K.startLifeTime, this._vertices[G++] = R[0], this._vertices[G++] = R[1], this._vertices[G++] = R[2], this._vertices[G++] = n, this._vertices[G++] = K.startColor[0], this._vertices[G++] = K.startColor[1], this._vertices[G++] = K.startColor[2], this._vertices[G++] = K.startColor[3], this._vertices[G++] = K.startSize[0], this._vertices[G++] = K.startSize[1], this._vertices[G++] = K.startSize[2], this._vertices[G++] = K.startRotation[0], this._vertices[G++] = K.startRotation[1], this._vertices[G++] = K.startRotation[2], this._vertices[G++] = K.startSpeed, d && (this._vertices[G + 1] = s), f && (this._vertices[G + 2] = l), m && (this._vertices[G + 3] = h), v && (this._vertices[G + 4] = _), u && (this._vertices[G + 5] = r, this._vertices[G + 6] = a, this._vertices[G + 7] = o), this.simulationSpace) {
                        case 0:
                            G += 8, this._vertices[G++] = K.simulationWorldPostion[0], this._vertices[G++] = K.simulationWorldPostion[1], this._vertices[G++] = K.simulationWorldPostion[2], this._vertices[G++] = K.simulationWorldRotation[0], this._vertices[G++] = K.simulationWorldRotation[1], this._vertices[G++] = K.simulationWorldRotation[2], this._vertices[G++] = K.simulationWorldRotation[3];
                            break;
                        case 1:
                            break;
                        default:
                            throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.")
                    }
                }
                return this._firstFreeElement = i, !0
            }, t.addNewParticlesToVertexBuffer = function() {
                var e = 0;
                this._firstNewElement < this._firstFreeElement ? (e = this._firstNewElement * this._vertexStride * this._floatCountPerVertex, this._vertexBuffer.setData(this._vertices, e, e, (this._firstFreeElement - this._firstNewElement) * this._vertexStride * this._floatCountPerVertex)) : (e = this._firstNewElement * this._vertexStride * this._floatCountPerVertex, this._vertexBuffer.setData(this._vertices, e, e, (this._bufferMaxParticles - this._firstNewElement) * this._vertexStride * this._floatCountPerVertex), 0 < this._firstFreeElement && this._vertexBuffer.setData(this._vertices, 0, 0, this._firstFreeElement * this._vertexStride * this._floatCountPerVertex)), this._firstNewElement = this._firstFreeElement
            }, t._beforeRender = function(e) {
                return this._firstNewElement != this._firstFreeElement && this.addNewParticlesToVertexBuffer(), this._drawCounter++, this._firstActiveElement != this._firstFreeElement && (this._vertexBuffer._bind(), this._indexBuffer._bind(), !0)
            }, t._render = function(e) {
                var t = 0,
                    n = w.mainContext;
                this._firstActiveElement < this._firstFreeElement ? (t = (this._firstFreeElement - this._firstActiveElement) * this._indexStride, n.drawElements(4, t, 5123, 2 * this._firstActiveElement * this._indexStride), R.trianglesFaces += t / 3, R.drawCall++) : (t = (this._bufferMaxParticles - this._firstActiveElement) * this._indexStride, n.drawElements(4, t, 5123, 2 * this._firstActiveElement * this._indexStride), R.trianglesFaces += t / 3, R.drawCall++, 0 < this._firstFreeElement && (t = this._firstFreeElement * this._indexStride, n.drawElements(4, t, 5123, 0), R.trianglesFaces += t / 3, R.drawCall++))
            }, t.play = function() {
                if (this._burstsIndex = 0, this._isEmitting = !0, this._isPlaying = !0, this._isPaused = !1, this._emissionTime = 0, this._totalDelayTime = 0, !this.autoRandomSeed)
                    for (var e = 0, t = this._randomSeeds.length; e < t; e++) this._randomSeeds[e] = this.randomSeed[0] + j._RANDOMOFFSET[e];
                switch (this.startDelayType) {
                    case 0:
                        this._playStartDelay = this.startDelay;
                        break;
                    case 1:
                        this.autoRandomSeed ? this._playStartDelay = H.lerp(this.startDelayMin, this.startDelayMax, Math.random()) : (this._rand.seed = this._randomSeeds[2], this._playStartDelay = H.lerp(this.startDelayMin, this.startDelayMax, this._rand.getFloat()), this._randomSeeds[2] = this._rand.seed);
                        break;
                    default:
                        throw new Error("Utils3D: startDelayType is invalid.")
                }
                this._frameRateTime = this._currentTime + this._playStartDelay, this._startUpdateLoopCount = R.loopCount, this.event("played")
            }, t.pause = function() {
                this._isPaused = !0, this.event("paused")
            }, t.simulate = function(e, t) {
                void 0 === t && (t = !0), this._simulateUpdate = !0, t ? this._updateParticlesSimulationRestart(e) : (this._isPaused = !1, this._updateParticles(e)), this.pause()
            }, t.stop = function() {
                this._burstsIndex = 0, this._isEmitting = !1, this._emissionTime = 0, this.event("stopped")
            }, t.cloneTo = function(e) {
                var t = e;
                t.duration = this.duration, t.looping = this.looping, t.prewarm = this.prewarm, t.startDelayType = this.startDelayType, t.startDelay = this.startDelay, t.startDelayMin = this.startDelayMin, t.startDelayMax = this.startDelayMax, t._maxStartLifetime = this._maxStartLifetime, t.startLifetimeType = this.startLifetimeType, t.startLifetimeConstant = this.startLifetimeConstant, this.startLifeTimeGradient.cloneTo(t.startLifeTimeGradient), t.startLifetimeConstantMin = this.startLifetimeConstantMin, t.startLifetimeConstantMax = this.startLifetimeConstantMax, this.startLifeTimeGradientMin.cloneTo(t.startLifeTimeGradientMin), this.startLifeTimeGradientMax.cloneTo(t.startLifeTimeGradientMax), t.startSpeedType = this.startSpeedType, t.startSpeedConstant = this.startSpeedConstant, t.startSpeedConstantMin = this.startSpeedConstantMin, t.startSpeedConstantMax = this.startSpeedConstantMax, t.threeDStartSize = this.threeDStartSize, t.startSizeType = this.startSizeType, t.startSizeConstant = this.startSizeConstant, this.startSizeConstantSeparate.cloneTo(t.startSizeConstantSeparate), t.startSizeConstantMin = this.startSizeConstantMin, t.startSizeConstantMax = this.startSizeConstantMax, this.startSizeConstantMinSeparate.cloneTo(t.startSizeConstantMinSeparate), this.startSizeConstantMaxSeparate.cloneTo(t.startSizeConstantMaxSeparate), t.threeDStartRotation = this.threeDStartRotation, t.startRotationType = this.startRotationType, t.startRotationConstant = this.startRotationConstant, this.startRotationConstantSeparate.cloneTo(t.startRotationConstantSeparate), t.startRotationConstantMin = this.startRotationConstantMin, t.startRotationConstantMax = this.startRotationConstantMax, this.startRotationConstantMinSeparate.cloneTo(t.startRotationConstantMinSeparate), this.startRotationConstantMaxSeparate.cloneTo(t.startRotationConstantMaxSeparate), t.randomizeRotationDirection = this.randomizeRotationDirection, t.startColorType = this.startColorType, this.startColorConstant.cloneTo(t.startColorConstant), this.startColorConstantMin.cloneTo(t.startColorConstantMin), this.startColorConstantMax.cloneTo(t.startColorConstantMax), t.gravityModifier = this.gravityModifier, t.simulationSpace = this.simulationSpace, t.scaleMode = this.scaleMode, t.playOnAwake = this.playOnAwake, t.maxParticles = this.maxParticles, this._emission && (t._emission = this._emission.clone()), this.shape && (t.shape = this.shape.clone()), this.velocityOverLifetime && (t.velocityOverLifetime = this.velocityOverLifetime.clone()), this.colorOverLifetime && (t.colorOverLifetime = this.colorOverLifetime.clone()), this.sizeOverLifetime && (t.sizeOverLifetime = this.sizeOverLifetime.clone()), this.rotationOverLifetime && (t.rotationOverLifetime = this.rotationOverLifetime.clone()), this.textureSheetAnimation && (t.textureSheetAnimation = this.textureSheetAnimation.clone()), t.isPerformanceMode = this.isPerformanceMode, t._isEmitting = this._isEmitting, t._isPlaying = this._isPlaying, t._isPaused = this._isPaused, t._playStartDelay = this._playStartDelay, t._frameRateTime = this._frameRateTime, t._emissionTime = this._emissionTime, t._totalDelayTime = this._totalDelayTime, t._burstsIndex = this._burstsIndex
            }, t.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, t._getVertexBuffers = function() {
                return null
            }, g(0, t, "maxParticles", function() {
                return this._bufferMaxParticles - 1
            }, function(e) {
                var t = e + 1;
                t !== this._bufferMaxParticles && (this._bufferMaxParticles = t, this._initBufferDatas())
            }), g(0, t, "isEmitting", function() {
                return this._isEmitting
            }), g(0, t, "isAlive", function() {
                return !!(this._isPlaying || 0 < this.aliveParticleCount)
            }), g(0, t, "shape", function() {
                return this._shape
            }, function(e) {
                this._shape !== e && (e && e.enable ? this._ownerRender._addShaderDefine(gi.SHADERDEFINE_SHAPE) : this._ownerRender._removeShaderDefine(gi.SHADERDEFINE_SHAPE), this._shape = e)
            }), g(0, t, "rotationOverLifetime", function() {
                return this._rotationOverLifetime
            }, function(e) {
                var t = this._ownerRender;
                if (e) {
                    var n = e.angularVelocity;
                    if (!n) return;
                    var i = n.separateAxes,
                        r = n.type;
                    if (e.enbale) switch (i ? t._addShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE) : t._addShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIME), r) {
                        case 0:
                            t._addShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT);
                            break;
                        case 1:
                            t._addShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE);
                            break;
                        case 2:
                            t._addShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS);
                            break;
                        case 3:
                            t._addShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES)
                    } else t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIME), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);
                    switch (r) {
                        case 0:
                            i ? t._setShaderValueColor(35, n.constantSeparate) : t._setShaderValueNumber(34, n.constant);
                            break;
                        case 1:
                            i ? (t._setShaderValueBuffer(37, n.gradientX._elements), t._setShaderValueBuffer(38, n.gradientY._elements), t._setShaderValueBuffer(39, n.gradientZ._elements), t._setShaderValueBuffer(40, n.gradientW._elements)) : t._setShaderValueBuffer(36, n.gradient._elements);
                            break;
                        case 2:
                            i ? (t._setShaderValueColor(35, n.constantMinSeparate), t._setShaderValueColor(42, n.constantMaxSeparate)) : (t._setShaderValueNumber(34, n.constantMin), t._setShaderValueNumber(41, n.constantMax));
                            break;
                        case 3:
                            i ? (t._setShaderValueBuffer(37, n.gradientXMin._elements), t._setShaderValueBuffer(44, n.gradientXMax._elements), t._setShaderValueBuffer(38, n.gradientYMin._elements), t._setShaderValueBuffer(45, n.gradientYMax._elements), t._setShaderValueBuffer(39, n.gradientZMin._elements), t._setShaderValueBuffer(46, n.gradientZMax._elements), t._setShaderValueBuffer(40, n.gradientWMin._elements), t._setShaderValueBuffer(47, n.gradientWMax._elements)) : (t._setShaderValueBuffer(36, n.gradientMin._elements), t._setShaderValueBuffer(43, n.gradientMax._elements))
                    }
                } else t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIME), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS), t._removeShaderDefine(gi.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES), t._setShaderValueColor(35, null), t._setShaderValueColor(42, null), t._setShaderValueNumber(34, void 0), t._setShaderValueNumber(41, void 0), t._setShaderValueBuffer(37, null), t._setShaderValueBuffer(44, null), t._setShaderValueBuffer(38, null), t._setShaderValueBuffer(45, null), t._setShaderValueBuffer(39, null), t._setShaderValueBuffer(46, null), t._setShaderValueBuffer(40, null), t._setShaderValueBuffer(47, null), t._setShaderValueBuffer(36, null), t._setShaderValueBuffer(43, null);
                this._rotationOverLifetime = e
            }), g(0, t, "emission", function() {
                return this._emission
            }), g(0, t, "emissionTime", function() {
                return this._emissionTime > this.duration ? this.duration : this._emissionTime
            }), g(0, t, "aliveParticleCount", function() {
                return this._firstNewElement >= this._firstRetiredElement ? this._firstNewElement - this._firstRetiredElement : this._bufferMaxParticles - this._firstRetiredElement + this._firstNewElement
            }), g(0, t, "isPlaying", function() {
                return this._isPlaying
            }), g(0, t, "isPaused", function() {
                return this._isPaused
            }), g(0, t, "startLifetimeType", function() {
                return this._startLifetimeType
            }, function(e) {
                var t = 0,
                    n = 0;
                switch (this.startLifetimeType) {
                    case 0:
                        this._maxStartLifetime = this.startLifetimeConstant;
                        break;
                    case 1:
                        this._maxStartLifetime = -Number.MAX_VALUE;
                        var i = i;
                        for (t = 0, n = i.gradientCount; t < n; t++) this._maxStartLifetime = Math.max(this._maxStartLifetime, i.getValueByIndex(t));
                        break;
                    case 2:
                        this._maxStartLifetime = Math.max(this.startLifetimeConstantMin, this.startLifetimeConstantMax);
                        break;
                    case 3:
                        this._maxStartLifetime = -Number.MAX_VALUE;
                        var r = r;
                        for (t = 0, n = r.gradientCount; t < n; t++) this._maxStartLifetime = Math.max(this._maxStartLifetime, r.getValueByIndex(t));
                        var a = a;
                        for (t = 0, n = a.gradientCount; t < n; t++) this._maxStartLifetime = Math.max(this._maxStartLifetime, a.getValueByIndex(t))
                }
                this._startLifetimeType = e
            }), g(0, t, "_originalBoundingSphere", function() {
                return this._boundingSphere
            }), g(0, t, "startLifetimeConstant", function() {
                return this._startLifetimeConstant
            }, function(e) {
                0 === this._startLifetimeType && (this._maxStartLifetime = e), this._startLifetimeConstant = e
            }), g(0, t, "startLifetimeConstantMin", function() {
                return this._startLifetimeConstantMin
            }, function(e) {
                2 === this._startLifetimeType && (this._maxStartLifetime = Math.max(e, this._startLifetimeConstantMax)), this._startLifetimeConstantMin = e
            }), g(0, t, "startLifeTimeGradient", function() {
                return this._startLifeTimeGradient
            }, function(e) {
                if (1 === this._startLifetimeType) {
                    this._maxStartLifetime = -Number.MAX_VALUE;
                    for (var t = 0, n = e.gradientCount; t < n; t++) this._maxStartLifetime = Math.max(this._maxStartLifetime, e.getValueByIndex(t))
                }
                this._startLifeTimeGradient = e
            }), g(0, t, "startLifetimeConstantMax", function() {
                return this._startLifetimeConstantMax
            }, function(e) {
                2 === this._startLifetimeType && (this._maxStartLifetime = Math.max(this._startLifetimeConstantMin, e)), this._startLifetimeConstantMax = e
            }), g(0, t, "startLifeTimeGradientMin", function() {
                return this._startLifeTimeGradientMin
            }, function(e) {
                if (3 === this._startLifetimeType) {
                    var t = 0,
                        n = 0;
                    for (this._maxStartLifetime = -Number.MAX_VALUE, t = 0, n = e.gradientCount; t < n; t++) this._maxStartLifetime = Math.max(this._maxStartLifetime, e.getValueByIndex(t));
                    for (t = 0, n = this._startLifeTimeGradientMax.gradientCount; t < n; t++) this._maxStartLifetime = Math.max(this._maxStartLifetime, this._startLifeTimeGradientMax.getValueByIndex(t))
                }
                this._startLifeTimeGradientMin = e
            }), g(0, t, "startLifeTimeGradientMax", function() {
                return this._startLifeTimeGradientMax
            }, function(e) {
                if (3 === this._startLifetimeType) {
                    var t = 0,
                        n = 0;
                    for (this._maxStartLifetime = -Number.MAX_VALUE, t = 0, n = this._startLifeTimeGradientMin.gradientCount; t < n; t++) this._maxStartLifetime = Math.max(this._maxStartLifetime, this._startLifeTimeGradientMin.getValueByIndex(t));
                    for (t = 0, n = e.gradientCount; t < n; t++) this._maxStartLifetime = Math.max(this._maxStartLifetime, e.getValueByIndex(t))
                }
                this._startLifeTimeGradientMax = e
            }), g(0, t, "velocityOverLifetime", function() {
                return this._velocityOverLifetime
            }, function(e) {
                var t = this._ownerRender;
                if (e) {
                    var n = e.velocity,
                        i = n.type;
                    if (e.enbale) switch (i) {
                        case 0:
                            t._addShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT);
                            break;
                        case 1:
                            t._addShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE);
                            break;
                        case 2:
                            t._addShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT);
                            break;
                        case 3:
                            t._addShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE)
                    } else t._removeShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT), t._removeShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE), t._removeShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT), t._removeShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);
                    switch (i) {
                        case 0:
                            t._setShaderValueColor(13, n.constant);
                            break;
                        case 1:
                            t._setShaderValueBuffer(14, n.gradientX._elements), t._setShaderValueBuffer(15, n.gradientY._elements), t._setShaderValueBuffer(16, n.gradientZ._elements);
                            break;
                        case 2:
                            t._setShaderValueColor(13, n.constantMin), t._setShaderValueColor(17, n.constantMax);
                            break;
                        case 3:
                            t._setShaderValueBuffer(14, n.gradientXMin._elements), t._setShaderValueBuffer(18, n.gradientXMax._elements), t._setShaderValueBuffer(15, n.gradientYMin._elements), t._setShaderValueBuffer(19, n.gradientYMax._elements), t._setShaderValueBuffer(16, n.gradientZMin._elements), t._setShaderValueBuffer(20, n.gradientZMax._elements)
                    }
                    t._setShaderValueInt(21, e.space)
                } else t._removeShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT), t._removeShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE), t._removeShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT), t._removeShaderDefine(gi.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE), t._setShaderValueColor(13, null), t._setShaderValueBuffer(14, null), t._setShaderValueBuffer(15, null), t._setShaderValueBuffer(16, null), t._setShaderValueColor(13, null), t._setShaderValueColor(17, null), t._setShaderValueBuffer(14, null), t._setShaderValueBuffer(18, null), t._setShaderValueBuffer(15, null), t._setShaderValueBuffer(19, null), t._setShaderValueBuffer(16, null), t._setShaderValueBuffer(20, null), t._setShaderValueInt(21, void 0);
                this._velocityOverLifetime = e
            }), g(0, t, "colorOverLifetime", function() {
                return this._colorOverLifetime
            }, function(e) {
                var t = this._ownerRender;
                if (e) {
                    var n = e.color;
                    if (e.enbale) switch (n.type) {
                        case 1:
                            t._addShaderDefine(gi.SHADERDEFINE_COLOROVERLIFETIME);
                            break;
                        case 3:
                            t._addShaderDefine(gi.SHADERDEFINE_RANDOMCOLOROVERLIFETIME)
                    } else t._removeShaderDefine(gi.SHADERDEFINE_COLOROVERLIFETIME), t._removeShaderDefine(gi.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);
                    switch (n.type) {
                        case 1:
                            var i = n.gradient;
                            t._setShaderValueBuffer(22, i._alphaElements), t._setShaderValueBuffer(23, i._rgbElements);
                            break;
                        case 3:
                            var r = n.gradientMin,
                                a = n.gradientMax;
                            t._setShaderValueBuffer(22, r._alphaElements), t._setShaderValueBuffer(23, r._rgbElements), t._setShaderValueBuffer(24, a._alphaElements), t._setShaderValueBuffer(25, a._rgbElements)
                    }
                } else t._removeShaderDefine(gi.SHADERDEFINE_COLOROVERLIFETIME), t._removeShaderDefine(gi.SHADERDEFINE_RANDOMCOLOROVERLIFETIME), t._setShaderValueBuffer(22, i._alphaElements), t._setShaderValueBuffer(23, i._rgbElements), t._setShaderValueBuffer(22, r._alphaElements), t._setShaderValueBuffer(23, r._rgbElements), t._setShaderValueBuffer(24, a._alphaElements), t._setShaderValueBuffer(25, a._rgbElements);
                this._colorOverLifetime = e
            }), g(0, t, "sizeOverLifetime", function() {
                return this._sizeOverLifetime
            }, function(e) {
                var t = this._ownerRender;
                if (e) {
                    var n = e.size,
                        i = n.separateAxes,
                        r = n.type;
                    if (e.enbale) switch (r) {
                        case 0:
                            i ? t._addShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE) : t._addShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMECURVE);
                            break;
                        case 2:
                            i ? t._addShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE) : t._addShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES)
                    } else t._removeShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMECURVE), t._removeShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE), t._removeShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES), t._removeShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE);
                    switch (r) {
                        case 0:
                            i ? (t._setShaderValueBuffer(27, n.gradientX._elements), t._setShaderValueBuffer(28, n.gradientY._elements), t._setShaderValueBuffer(29, n.gradientZ._elements)) : t._setShaderValueBuffer(26, n.gradient._elements);
                            break;
                        case 2:
                            i ? (t._setShaderValueBuffer(27, n.gradientXMin._elements), t._setShaderValueBuffer(31, n.gradientXMax._elements), t._setShaderValueBuffer(28, n.gradientYMin._elements), t._setShaderValueBuffer(32, n.gradientYMax._elements), t._setShaderValueBuffer(29, n.gradientZMin._elements), t._setShaderValueBuffer(33, n.gradientZMax._elements)) : (t._setShaderValueBuffer(26, n.gradientMin._elements), t._setShaderValueBuffer(30, n.gradientMax._elements))
                    }
                } else t._removeShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMECURVE), t._removeShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE), t._removeShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES), t._removeShaderDefine(gi.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE), t._setShaderValueBuffer(27, null), t._setShaderValueBuffer(31, null), t._setShaderValueBuffer(28, null), t._setShaderValueBuffer(32, null), t._setShaderValueBuffer(29, null), t._setShaderValueBuffer(33, null), t._setShaderValueBuffer(26, null), t._setShaderValueBuffer(30, null);
                this._sizeOverLifetime = e
            }), g(0, t, "textureSheetAnimation", function() {
                return this._textureSheetAnimation
            }, function(e) {
                var t = this._ownerRender;
                if (e) {
                    var n = e.frame,
                        i = n.type;
                    if (e.enable) switch (i) {
                        case 1:
                            t._addShaderDefine(gi.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE);
                            break;
                        case 3:
                            t._addShaderDefine(gi.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE)
                    } else t._removeShaderDefine(gi.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE), t._removeShaderDefine(gi.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);
                    if (1 === i || 3 === i) {
                        t._setShaderValueInt(48, e.cycles);
                        var r = e.tiles,
                            a = this._uvLength.elements;
                        a[0] = 1 / r.x, a[1] = 1 / r.y, t._setShaderValueVector2(49, this._uvLength)
                    }
                    switch (i) {
                        case 1:
                            t._setShaderValueBuffer(50, n.frameOverTimeData._elements);
                            break;
                        case 3:
                            t._setShaderValueBuffer(50, n.frameOverTimeDataMin._elements), t._setShaderValueBuffer(51, n.frameOverTimeDataMax._elements)
                    }
                } else t._removeShaderDefine(gi.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE), t._removeShaderDefine(gi.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE), t._setShaderValueInt(48, void 0), t._setShaderValueVector2(49, null), t._setShaderValueBuffer(50, null), t._setShaderValueBuffer(51, null);
                this._textureSheetAnimation = e
            }), g(0, t, "_vertexBufferCount", function() {
                return 1
            }), g(0, t, "triangleCount", function() {
                return this._indexBuffer ? this._indexBuffer.indexCount / 3 : 0
            }), g(0, t, "_originalBoundingBox", function() {
                return this._boundingBox
            }), g(0, t, "_originalBoundingBoxCorners", function() {
                return this._boundingBoxCorners
            }), j.halfKSqrtOf2 = .71, u(j, ["_RANDOMOFFSET", function() {
                return this._RANDOMOFFSET = new Uint32Array([592910910, 3276756734, 322376503, 306581307, 1793934638, 3737431713, 2527743459, 2368504881, 4085612399, 3774601268, 326370691, 1494990940, 1089181156, 3159510623, 2941263940, 2786374529, 271901988, 4233252447])
            }, "_maxElapsedTime", function() {
                return this._maxElapsedTime = 1 / 3
            }, "_tempVector30", function() {
                return this._tempVector30 = new Vt
            }, "_tempVector31", function() {
                return this._tempVector31 = new Vt
            }, "_tempVector32", function() {
                return this._tempVector32 = new Vt
            }, "_tempVector33", function() {
                return this._tempVector33 = new Vt
            }, "_tempVector34", function() {
                return this._tempVector34 = new Vt
            }, "_tempVector35", function() {
                return this._tempVector35 = new Vt
            }, "_tempVector36", function() {
                return this._tempVector36 = new Vt
            }, "_tempVector37", function() {
                return this._tempVector37 = new Vt
            }, "_tempVector38", function() {
                return this._tempVector38 = new Vt
            }, "_tempVector39", function() {
                return this._tempVector39 = new Vt
            }, "_tempPosition", function() {
                return this._tempPosition = new Vt
            }, "_tempDirection", function() {
                return this._tempDirection = new Vt
            }]), j
        }(en),
        Nn = function(e) {
            function t(e) {
                this._finalGravity = new Vt, this._tempRotationMatrix = new At, t.__super.call(this, e), this._defaultBoundBox = new St(new Vt, new Vt), this._renderMode = -1, this.stretchedBillboardCameraSpeedScale = 0, this.stretchedBillboardSpeedScale = 0, this.stretchedBillboardLengthScale = 1
            }
            m(t, "t_tl.d3.core.particleShuriKen.ShurikenParticleRender", e);
            var n = t.prototype;
            return n._calculateBoundingBox = function() {
                var e = this._boundingBox.min.elements;
                e[0] = -Number.MAX_VALUE, e[1] = -Number.MAX_VALUE, e[2] = -Number.MAX_VALUE;
                var t = this._boundingBox.min.elements;
                t[0] = Number.MAX_VALUE, t[1] = Number.MAX_VALUE, t[2] = Number.MAX_VALUE
            }, n._calculateBoundingSphere = function() {
                var e = this._owner.particleSystem._boundingSphere,
                    t = NaN,
                    n = this._owner.transform,
                    i = n.scale.elements,
                    r = Math.abs(i[0]),
                    a = Math.abs(i[1]),
                    o = Math.abs(i[2]);
                t = a <= r && o <= r ? r : o <= a ? a : o, Vt.transformCoordinate(e.center, n.worldMatrix, this._boundingSphere.center), this._boundingSphere.radius = e.radius * t
            }, n._renderUpdate = function(e) {
                var t = this._owner.particleSystem;
                if (!x.stage.isVisibility || !t.isAlive) return !1;
                var n = this._owner.transform;
                switch (t.simulationSpace) {
                    case 0:
                        break;
                    case 1:
                        this._setShaderValueColor(0, n.position), this._setShaderValueColor(1, n.rotation);
                        break;
                    default:
                        throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.")
                }
                switch (t.scaleMode) {
                    case 0:
                        var i = n.scale;
                        this._setShaderValueColor(4, i), this._setShaderValueColor(5, i);
                        break;
                    case 1:
                        var r = n.localScale;
                        this._setShaderValueColor(4, r), this._setShaderValueColor(5, r);
                        break;
                    case 2:
                        this._setShaderValueColor(4, n.scale), this._setShaderValueColor(5, Vt.ONE)
                }
                var a = this._finalGravity.elements,
                    o = Zt.gravity.elements,
                    s = t.gravityModifier;
                return a[0] = o[0] * s, a[1] = o[1] * s, a[2] = o[2] * s, this._setShaderValueBuffer(7, a), this._setShaderValueInt(11, t.simulationSpace), this._setShaderValueBool(8, t.threeDStartRotation), this._setShaderValueInt(6, t.scaleMode), this._setShaderValueInt(9, this.stretchedBillboardLengthScale), this._setShaderValueInt(10, this.stretchedBillboardSpeedScale), this._setShaderValueNumber(12, t._currentTime), Qt.debugMode && this._renderRenderableBoundBox(), !0
            }, n._destroy = function() {
                e.prototype._destroy.call(this), this._mesh && (this._mesh._removeReference(), this._mesh = null)
            }, g(0, n, "boundingBox", function() {
                return this._owner.particleSystem.isAlive ? (this._boundingBoxNeedChange && (this._calculateBoundingBox(), this._boundingBoxNeedChange = !1), this._boundingBox) : this._defaultBoundBox
            }), g(0, n, "renderMode", function() {
                return this._renderMode
            }, function(e) {
                if (this._renderMode !== e) {
                    switch (this._renderMode) {
                        case 0:
                            this._removeShaderDefine(gi.SHADERDEFINE_RENDERMODE_BILLBOARD);
                            break;
                        case 1:
                            this._removeShaderDefine(gi.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);
                            break;
                        case 2:
                            this._removeShaderDefine(gi.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);
                            break;
                        case 3:
                            this._removeShaderDefine(gi.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);
                            break;
                        case 4:
                            this._removeShaderDefine(gi.SHADERDEFINE_RENDERMODE_MESH)
                    }
                    switch (this._renderMode = e) {
                        case 0:
                            this._addShaderDefine(gi.SHADERDEFINE_RENDERMODE_BILLBOARD);
                            break;
                        case 1:
                            this._addShaderDefine(gi.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);
                            break;
                        case 2:
                            this._addShaderDefine(gi.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);
                            break;
                        case 3:
                            this._addShaderDefine(gi.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);
                            break;
                        case 4:
                            this._addShaderDefine(gi.SHADERDEFINE_RENDERMODE_MESH);
                            break;
                        default:
                            throw new Error("ShurikenParticleRender: unknown renderMode Value.")
                    }
                    this._owner.particleSystem._initBufferDatas()
                }
            }), g(0, n, "mesh", function() {
                return this._mesh
            }, function(e) {
                this._mesh !== e && (this._mesh && this._mesh._removeReference(), (this._mesh = e) && e._addReference(), this._owner.particleSystem._initBufferDatas())
            }), t
        }(tn),
        wn = function(t) {
            function n(e) {
                this._owner = null, this._trailRenderElements = null, this._minVertexDistance = NaN, this._widthMultiplier = NaN, this._time = NaN, this._widthCurve = null, this._colorGradient = null, this._textureMode = 0, this._curtime = 0, this._curSubTrailFinishCurTime = 0, this._curSubTrailFinished = !1, this._hasLifeSubTrail = !1, this._trailTotalLength = 0, this._trailSupplementLength = 0, this._trailDeadLength = 0, this._isStart = !1, this._trailRenderElementIndex = 0, n.__super.call(this), this._curSubTrailFinishPosition = new Vt, this._curSubTrailFinishDirection = new Vt, this._owner = e, this._trailRenderElements = [], this.addRenderElement()
            }
            m(n, "t_tl.d3.core.trail.TrailFilter", t);
            var e = n.prototype;
            return e.getRenderElementsCount = function() {
                return this._trailRenderElements.length
            }, e.addRenderElement = function() {
                for (var e = 0; e < this._trailRenderElements.length; e++)
                    if (1 == this._trailRenderElements[e]._isDead) return this._trailRenderElements[e].reActivate(), e;
                var t = new oe(this);
                return this._trailRenderElements.push(t), this._trailRenderElements.length - 1
            }, e.getRenderElement = function(e) {
                return this._trailRenderElements[e]
            }, e._update = function(e) {
                this._curtime += e.elapsedTime / 1e3, this._owner._render._setShaderValueNumber(3, this._curtime), this._curSubTrailFinished && (this._curSubTrailFinished = !1, this._trailRenderElementIndex = this.addRenderElement(), this.event("trailfilterchange", [this._trailRenderElementIndex, this._trailRenderElements[this._trailRenderElementIndex]]))
            }, e.reset = function() {
                for (var e = 0; e < this._trailRenderElements.length; e++) this._trailRenderElements[e].reActivate();
                this._isStart = !1, this._hasLifeSubTrail = !1, this._curSubTrailFinished = !1, this._curSubTrailFinishCurTime = 0, this._trailTotalLength = 0, this._trailSupplementLength = 0, this._trailDeadLength = 0
            }, e._destroy = function() {
                t.prototype._destroy.call(this);
                for (var e = 0; e < this._trailRenderElements.length; e++) this._trailRenderElements[e]._destroy();
                this._trailRenderElements = null, this._widthCurve = null, this._colorGradient = null, this._curSubTrailFinishPosition = null, this._curSubTrailFinishDirection = null
            }, g(0, e, "widthMultiplier", function() {
                return this._widthMultiplier
            }, function(e) {
                this._widthMultiplier = e
            }), g(0, e, "time", function() {
                return this._time
            }, function(e) {
                this._time = e, this._owner._render._setShaderValueNumber(4, e)
            }), g(0, e, "widthCurve", function() {
                return this._widthCurve
            }, function(e) {
                this._widthCurve = e;
                var t, n = new Float32Array(4 * e.length),
                    i = 0,
                    r = 0;
                for (i = 0, t = e.length; i < t; i++) n[r++] = e[i].time, n[r++] = e[i].inTangent, n[r++] = e[i].outTangent, n[r++] = e[i].value;
                this._owner._render._setShaderValueBuffer(5, n), this._owner._render._setShaderValueInt(6, e.length)
            }), g(0, e, "minVertexDistance", function() {
                return this._minVertexDistance
            }, function(e) {
                this._minVertexDistance = e
            }), g(0, e, "colorGradient", function() {
                return this._colorGradient
            }, function(e) {
                this._colorGradient = e, this._owner._render._setShaderValueBuffer(7, e._colorKeyData), this._owner._render._setShaderValueBuffer(8, e._alphaKeyData), 0 == e.mode ? this._owner._render._addShaderDefine(Si.SHADERDEFINE_GRADIENTMODE_BLEND) : this._owner._render._removeShaderDefine(Si.SHADERDEFINE_GRADIENTMODE_BLEND)
            }), g(0, e, "textureMode", function() {
                return this._textureMode
            }, function(e) {
                this._textureMode = e
            }), n
        }(en),
        On = function(e) {
            function t(e) {
                t.__super.call(this, e)
            }
            m(t, "t_tl.d3.core.trail.TrailRenderer", tn);
            var n = t.prototype;
            return n._calculateBoundingBox = function() {
                var e = this._boundingBox.min.elements;
                e[0] = -Number.MAX_VALUE, e[1] = -Number.MAX_VALUE, e[2] = -Number.MAX_VALUE;
                var t = this._boundingBox.min.elements;
                t[0] = Number.MAX_VALUE, t[1] = Number.MAX_VALUE, t[2] = Number.MAX_VALUE
            }, n._calculateBoundingSphere = function() {
                var e = this._boundingSphere.center.elements;
                e[0] = 0, e[1] = 0, e[2] = 0, this._boundingSphere.radius = Number.MAX_VALUE
            }, n._renderUpdate = function(e) {
                return !0
            }, t
        }(),
        Vn = function(e) {
            function t(e) {
                this._floatCountPerVertex = 6, this._owner = null, this._vertices = null, this._vertexBuffer = null, this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._currentTime = NaN, this._drawCounter = 0, this.scLeft = null, this.scRight = null, this._numPositionMode = 0, this._numPositionVelocityMode = 0, this._lastTime = NaN, this._needPatch = !1, this._lastPatchAddPos0 = null, this._lastPatchAddPos1 = null, this._lastPatchAddTime = NaN, this.lifeTime = NaN, this.minSegmentDistance = NaN, this.minInterpDistance = NaN, this.maxSlerpCount = 0, this._maxSegments = 0, t.__super.call(this), this._tempVector0 = new Vt, this._tempVector1 = new Vt, this._tempVector2 = new Vt, this._tempVector3 = new Vt, this._posModeLastPosition0 = new Vt, this._posModeLastPosition1 = new Vt, this._posModePosition0 = new Vt, this._posModePosition1 = new Vt, this._posVelModePosition0 = new Vt, this._posVelModeVelocity0 = new Vt, this._posVelModePosition1 = new Vt, this._posVelModeVelocity1 = new Vt, this._owner = e, this._lastTime = 0, this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._currentTime = 0, this._drawCounter = 0, this._needPatch = !1, this._lastPatchAddPos0 = new Vt, this._lastPatchAddPos1 = new Vt, this.scLeft = new L, this.scRight = new L, this.lifeTime = .5, this.minSegmentDistance = .1, this.minInterpDistance = .6, this.maxSlerpCount = 128, this._maxSegments = 200, this._owner.on("activeinhierarchychanged", this, this._onActiveHierarchyChanged)
            }
            m(t, "t_tl.d3.resource.tempelet.GlitterTemplet", e);
            var n = t.prototype;
            return x.imps(n, {
                "t_tl.d3.core.render.IRenderable": !0
            }), n._getVertexBuffer = function(e) {
                return void 0 === e && (e = 0), 0 === e ? this._vertexBuffer : null
            }, n._getIndexBuffer = function() {
                return null
            }, n._initialize = function() {
                this._vertexBuffer = Kn.create(me.vertexDeclaration, 2 * this.maxSegments, 35048), this._vertices = new Float32Array(this.maxSegments * this._floatCountPerVertex * 2)
            }, n._onActiveHierarchyChanged = function(e) {
                e || (this._numPositionMode = 0, this._numPositionVelocityMode = 0, this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._currentTime = 0, this._drawCounter = 0)
            }, n._updateTextureCoordinates = function() {
                this._firstActiveElement < this._firstFreeElement ? this._updateSubTextureCoordinates(this._firstActiveElement, 2 * (this._firstFreeElement - this._firstActiveElement)) : (this._updateSubTextureCoordinates(this._firstActiveElement, 2 * (this.maxSegments - this._firstActiveElement)), 0 < this._firstFreeElement && this._updateSubTextureCoordinates(0, 2 * this._firstFreeElement))
            }, n._updateSubTextureCoordinates = function(e, t) {
                for (var n = 2 * e, i = 0; i < t; i += 2) {
                    var r = n + i,
                        a = r * this._floatCountPerVertex,
                        o = (r + 1) * this._floatCountPerVertex;
                    this._vertices[a + 3] = this._vertices[o + 3] = (this._vertices[a + 5] - this._currentTime) / this.lifeTime
                }
            }, n._retireActiveGlitter = function() {
                for (var e = this.lifeTime, t = 2 * this._floatCountPerVertex; this._firstActiveElement != this._firstNewElement;) {
                    var n = this._firstActiveElement * t + 5;
                    if (this._currentTime - this._vertices[n] < e) break;
                    this._vertices[n] = this._drawCounter, this._firstActiveElement++, this._firstActiveElement >= this.maxSegments && (this._firstActiveElement = 0)
                }
            }, n._freeRetiredGlitter = function() {
                for (var e = 2 * this._floatCountPerVertex; this._firstRetiredElement != this._firstActiveElement;) {
                    if (this._drawCounter - this._vertices[this._firstRetiredElement * e + 5] < 3) break;
                    this._firstRetiredElement++, this._firstRetiredElement >= this.maxSegments && (this._firstRetiredElement = 0)
                }
            }, n._calcVelocity = function(e, t, n) {
                Vt.subtract(e, t, n), Vt.scale(n, .5, n)
            }, n._addNewGlitterSegementToVertexBuffer = function() {
                var e = 0;
                this._firstActiveElement < this._firstFreeElement ? (e = 2 * this._firstActiveElement * this._floatCountPerVertex, this._vertexBuffer.setData(this._vertices, e, e, 2 * (this._firstFreeElement - this._firstActiveElement) * this._floatCountPerVertex)) : (e = 2 * this._firstActiveElement * this._floatCountPerVertex, this._vertexBuffer.setData(this._vertices, e, e, 2 * (this.maxSegments - this._firstActiveElement) * this._floatCountPerVertex), 0 < this._firstFreeElement && this._vertexBuffer.setData(this._vertices, 0, 0, 2 * this._firstFreeElement * this._floatCountPerVertex)), this._firstNewElement = this._firstFreeElement
            }, n._addGlitter = function(e, t, n) {
                this._needPatch && (this._needPatch = !1, this._addGlitter(this._lastPatchAddPos0, this._lastPatchAddPos1, this._lastPatchAddTime));
                var i = this._firstFreeElement + 1;
                i >= this.maxSegments && (i = 0, e.cloneTo(this._lastPatchAddPos0), t.cloneTo(this._lastPatchAddPos1), this._lastPatchAddTime = n, this._needPatch = !0), i === this._firstRetiredElement && console.log("GlitterTemplet:current segement count have large than maxSegments,please adjust the  value of maxSegments or add Glitter Vertex Frequency.");
                var r = e.elements,
                    a = t.elements,
                    o = 0,
                    s = this._firstFreeElement * this._floatCountPerVertex * 2;
                for (o = 0; o < 3; o++) this._vertices[s + o] = r[o];
                this._vertices[s + 3] = 0, this._vertices[s + 4] = 0, this._vertices[s + 5] = n;
                var l = s + this._floatCountPerVertex;
                for (o = 0; o < 3; o++) this._vertices[l + o] = a[o];
                this._vertices[l + 3] = 0, this._vertices[l + 4] = 1, this._vertices[l + 5] = n, this._firstFreeElement = i
            }, n._update = function(e) {
                this._currentTime += e / 1e3, this._retireActiveGlitter(), this._freeRetiredGlitter(), this._firstActiveElement == this._firstFreeElement && (this._currentTime = 0), this._firstRetiredElement == this._firstActiveElement && (this._drawCounter = 0), this._updateTextureCoordinates()
            }, n._beforeRender = function(e) {
                return this._firstNewElement != this._firstFreeElement && this._addNewGlitterSegementToVertexBuffer(), this._drawCounter++, this._firstActiveElement != this._firstFreeElement && (this._vertexBuffer.bindWithIndexBuffer(null), !0)
            }, n._render = function(e) {
                var t = 0,
                    n = w.mainContext;
                this._firstActiveElement < this._firstFreeElement ? (t = 2 * (this._firstFreeElement - this._firstActiveElement), n.drawArrays(5, 2 * this._firstActiveElement, t), R.trianglesFaces += t - 2, R.drawCall++) : (t = 2 * (this.maxSegments - this._firstActiveElement), n.drawArrays(5, 2 * this._firstActiveElement, t), R.trianglesFaces += t - 2, R.drawCall++, 0 < this._firstFreeElement && (t = 2 * this._firstFreeElement, n.drawArrays(5, 0, t), R.trianglesFaces += t - 2, R.drawCall++))
            }, n.addVertexPosition = function(e, t) {
                if (this._owner.activeInHierarchy)
                    if (this._numPositionMode < 2) 0 === this._numPositionMode ? (e.cloneTo(this._posModeLastPosition0), t.cloneTo(this._posModeLastPosition1)) : (e.cloneTo(this._posModePosition0), t.cloneTo(this._posModePosition1)), this._numPositionMode++;
                    else {
                        var n = this._tempVector2;
                        this._calcVelocity(e, this._posModeLastPosition0, n);
                        var i = this._tempVector3;
                        this._calcVelocity(t, this._posModeLastPosition1, i), this.addVertexPositionVelocity(this._posModePosition0, n, this._posModePosition1, i), this._posModePosition0.cloneTo(this._posModeLastPosition0), this._posModePosition1.cloneTo(this._posModeLastPosition1), e.cloneTo(this._posModePosition0), t.cloneTo(this._posModePosition1)
                    }
            }, n.addVertexPositionVelocity = function(e, t, n, i) {
                if (this._owner.activeInHierarchy) {
                    if (0 === this._numPositionVelocityMode) this._numPositionVelocityMode++;
                    else {
                        var r = this._tempVector0;
                        Vt.subtract(e, this._posVelModePosition0, r);
                        var a = Vt.scalarLength(r);
                        Vt.subtract(n, this._posVelModePosition1, r);
                        var o = Vt.scalarLength(r),
                            s = 0,
                            l = l;
                        if (a < l && o < l) return;
                        if (1 === (s = 1 + Math.floor(Math.max(a, o) / this.minInterpDistance))) this._addGlitter(e, n, this._currentTime);
                        else {
                            s = Math.min(s, this.maxSlerpCount), this.scLeft.Init(this._posVelModePosition0, this._posVelModeVelocity0, e, t), this.scRight.Init(this._posVelModePosition1, this._posVelModeVelocity1, n, i);
                            for (var h = 1 / s, _ = h, u = this._currentTime - this._lastTime, c = 1; c <= s; c++) {
                                var d = this._tempVector0;
                                this.scLeft.Slerp(_, d);
                                var f = this._tempVector1;
                                this.scRight.Slerp(_, f);
                                var m = this._lastTime + u * c / s;
                                this._addGlitter(d, f, m), _ += h
                            }
                        }
                    }
                    this._lastTime = this._currentTime, e.cloneTo(this._posVelModePosition0), t.cloneTo(this._posVelModeVelocity0), n.cloneTo(this._posVelModePosition1), i.cloneTo(this._posVelModeVelocity1)
                }
            }, n._destroy = function() {
                e.prototype._destroy.call(this), this._tempVector0 = null, this._tempVector1 = null, this._tempVector2 = null, this._tempVector3 = null, this._owner = null, this._vertices = null, this._vertexBuffer.destroy(), this._vertexBuffer = null, this.scLeft = null, this.scRight = null, this._posModeLastPosition0 = null, this._posModeLastPosition1 = null, this._posModePosition0 = null, this._posModePosition1 = null, this._posVelModePosition0 = null, this._posVelModeVelocity0 = null, this._posVelModePosition1 = null, this._posVelModeVelocity1 = null, this._lastPatchAddPos0 = null, this._lastPatchAddPos1 = null
            }, n._getVertexBuffers = function() {
                return null
            }, g(0, n, "maxSegments", function() {
                return this._maxSegments - 1
            }, function(e) {
                var t = e + 1;
                t !== this._maxSegments && (this._maxSegments = t, this._vertexBuffer && this._vertexBuffer.destroy(), this._initialize())
            }), g(0, n, "_vertexBufferCount", function() {
                return 1
            }), g(0, n, "triangleCount", function() {
                var e = 0;
                return this._firstActiveElement < this._firstFreeElement ? e = 2 * (this._firstFreeElement - this._firstActiveElement) - 2 : (e = 2 * (this.maxSegments - this._firstActiveElement) - 2, e += 2 * this._firstFreeElement - 2), e
            }), g(0, n, "_originalBoundingSphere", function() {
                return x.superGet(en, this, "_originalBoundingSphere")
            }), g(0, n, "_originalBoundingBox", function() {
                return x.superGet(en, this, "_originalBoundingBox")
            }), t
        }(en),
        Pn = function(e) {
            function h(e, t, n, i, r, a, o, s) {
                this._owner = null, this._gridSize = NaN, this.memorySize = 0, this._numberVertices = 0, this._maxNumberIndices = 0, this._currentNumberIndices = 0, this._numberTriangle = 0, this._vertexBuffer = null, this._indexBuffer = null, this._boundingSphere = null, this._boundingBox = null, this._indexArrayBuffer = null, this._boundingBoxCorners = null, this._leafs = null, this._leafNum = 0, this._terrainHeightData = null, this._terrainHeightDataWidth = 0, this._terrainHeightDataHeight = 0, this._chunkOffsetX = 0, this._chunkOffsetZ = 0, this._cameraCoordinateInverse = !1, this._cameraPos = null, this._currentLOD = 0, this._perspectiveFactor = NaN, this._LODTolerance = 0, h.__super.call(this), this._owner = e, this._cameraPos = new Vt, this._chunkOffsetX = t, this._chunkOffsetZ = n, this._gridSize = i, this._terrainHeightData = r, this._terrainHeightDataWidth = a, this._terrainHeightDataHeight = o, this._leafNum = zt.CHUNK_GRID_NUM / zt.LEAF_GRID_NUM * (zt.CHUNK_GRID_NUM / zt.LEAF_GRID_NUM), this._leafs = M(this._leafNum), this._cameraCoordinateInverse = s;
                for (var l = 0; l < this._leafNum; l++) this._leafs[l] = new zt;
                this.recreateResource()
            }
            m(h, "t_tl.d3.terrain.TerrainFilter", e);
            var t = h.prototype;
            return x.imps(t, {
                "t_tl.d3.core.render.IRenderable": !0
            }), t._destroy = function() {
                e.prototype._destroy.call(this), this._owner = null, this._vertexBuffer && this._vertexBuffer.destroy(), this._indexBuffer && this._indexBuffer.destroy()
            }, t.recreateResource = function() {
                this._currentNumberIndices = 0, this._numberTriangle = 0;
                var e = zt.LEAF_VERTEXT_COUNT,
                    t = zt.LEAF_MAX_INDEX_COUNT;
                this._numberVertices = e * this._leafNum, this._maxNumberIndices = t * this._leafNum, this._indexArrayBuffer = new Uint16Array(this._maxNumberIndices);
                var n = ct.vertexDeclaration,
                    i = n.vertexStride / 4,
                    r = new Float32Array(this._numberVertices * i),
                    a = zt.CHUNK_GRID_NUM / zt.LEAF_GRID_NUM,
                    o = 0,
                    s = 0,
                    l = 0;
                for (o = 0; o < this._leafNum; o++) s = o % a, l = Math.floor(o / a), this._leafs[o].calcVertextBuffer(this._chunkOffsetX, this._chunkOffsetZ, s * zt.LEAF_GRID_NUM, l * zt.LEAF_GRID_NUM, this._gridSize, r, o * zt.LEAF_PLANE_VERTEXT_COUNT, i, this._terrainHeightData, this._terrainHeightDataWidth, this._terrainHeightDataHeight, this._cameraCoordinateInverse);
                for (o = 0; o < this._leafNum; o++) s = o % a, l = Math.floor(o / a), this._leafs[o].calcSkirtVertextBuffer(this._chunkOffsetX, this._chunkOffsetZ, s * zt.LEAF_GRID_NUM, l * zt.LEAF_GRID_NUM, this._gridSize, r, this._leafNum * zt.LEAF_PLANE_VERTEXT_COUNT + o * zt.LEAF_SKIRT_VERTEXT_COUNT, i, this._terrainHeightData, this._terrainHeightDataWidth, this._terrainHeightDataHeight);
                this.assembleIndexInit(), this._vertexBuffer = new Kn(n, this._numberVertices, 35044, !1), this._indexBuffer = new jn("ushort", this._maxNumberIndices, 35044, !1), this._vertexBuffer.setData(r), this._indexBuffer.setData(this._indexArrayBuffer), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.calcOriginalBoudingBoxAndSphere()
            }, t.setLODLevel = function(e) {
                if (4 != e.length) return !0;
                var t = (e[0] + 1 << 24) + (e[1] + 1 << 16) + (e[2] + 1 << 8) + (e[3] + 1);
                return this._currentLOD != t && (this._currentLOD = t, !0)
            }, t.assembleIndexInit = function() {
                this._currentNumberIndices = 0;
                for (var e = this._numberTriangle = 0, t = 0; t < this._leafNum; t++) {
                    var n = zt.getPlaneLODIndex(t, 0);
                    this._indexArrayBuffer.set(n, e), e += n.length;
                    var i = zt.getSkirtLODIndex(t, 0);
                    this._indexArrayBuffer.set(i, e), e += i.length, this._currentNumberIndices += n.length + i.length
                }
                this._numberTriangle = this._currentNumberIndices / 3
            }, t.isNeedAssemble = function(e, t) {
                var n = Math.min(e.viewport.width, e.viewport.height) / (2 * Math.tan(Math.PI * e.fieldOfView / 180));
                return this._perspectiveFactor != n ? (this._perspectiveFactor = n, 1) : this._LODTolerance != fi.LOD_TOLERANCE_VALUE ? (this._LODTolerance = fi.LOD_TOLERANCE_VALUE, 1) : 0 == Vt.equals(t, this._cameraPos) ? (this._cameraPos.x = t.x, this._cameraPos.y = t.y, this._cameraPos.z = t.z, 2) : 0
            }, t.assembleIndex = function(e, t) {
                var n = this.isNeedAssemble(e, t);
                if (0 < n) {
                    for (var i = 0; i < this._leafNum; i++) h._TEMP_ARRAY_BUFFER[i] = this._leafs[i].determineLod(t, this._perspectiveFactor, fi.LOD_TOLERANCE_VALUE, 1 == n);
                    if (this.setLODLevel(h._TEMP_ARRAY_BUFFER)) {
                        this._currentNumberIndices = 0;
                        var r = this._numberTriangle = 0;
                        for (i = 0; i < this._leafNum; i++) {
                            var a = h._TEMP_ARRAY_BUFFER[i],
                                o = zt.getPlaneLODIndex(i, a);
                            this._indexArrayBuffer.set(o, r), r += o.length;
                            var s = zt.getSkirtLODIndex(i, a);
                            this._indexArrayBuffer.set(s, r), r += s.length, this._currentNumberIndices += o.length + s.length
                        }
                        return this._numberTriangle = this._currentNumberIndices / 3, !0
                    }
                }
                return !1
            }, t.calcOriginalBoudingBoxAndSphere = function() {
                for (var e = new Ot(2147483647, -2147483647), t = 0; t < this._leafNum; t++) e.x = this._leafs[t]._sizeOfY.x < e.x ? this._leafs[t]._sizeOfY.x : e.x, e.y = this._leafs[t]._sizeOfY.y > e.y ? this._leafs[t]._sizeOfY.y : e.y;
                var n = new Vt(this._chunkOffsetX * zt.CHUNK_GRID_NUM * this._gridSize, e.x, this._chunkOffsetZ * zt.CHUNK_GRID_NUM * this._gridSize),
                    i = new Vt((this._chunkOffsetX + 1) * zt.CHUNK_GRID_NUM * this._gridSize, e.y, (this._chunkOffsetZ + 1) * zt.CHUNK_GRID_NUM * this._gridSize);
                zt.__ADAPT_MATRIX__ && (Vt.transformV3ToV3(n, zt.__ADAPT_MATRIX__, n), Vt.transformV3ToV3(i, zt.__ADAPT_MATRIX__, i)), this._boundingBox = new St(n, i);
                var r = new Vt;
                Vt.subtract(i, n, r), Vt.scale(r, .5, r);
                var a = new Vt;
                Vt.add(n, r, a), this._boundingSphere = new Tt(a, Vt.scalarLength(r)), this._boundingBoxCorners = M(8, null), this._boundingBox.getCorners(this._boundingBoxCorners)
            }, t.calcLeafBoudingBox = function(e) {
                for (var t = 0; t < this._leafNum; t++) this._leafs[t].calcLeafBoudingBox(e)
            }, t.calcLeafBoudingSphere = function(e, t) {
                for (var n = 0; n < this._leafNum; n++) this._leafs[n].calcLeafBoudingSphere(e, t)
            }, t._getVertexBuffer = function(e) {
                return void 0 === e && (e = 0), 0 == e ? this._vertexBuffer : null
            }, t._getIndexBuffer = function() {
                return this._indexBuffer
            }, t._beforeRender = function(e) {
                if (this._vertexBuffer._bind(), this._indexBuffer._bind(), 0 == e.renderElement._material.blend) {
                    var t = e.camera;
                    this.assembleIndex(t, t.position) && this._indexBuffer.setData(this._indexArrayBuffer)
                }
                return !0
            }, t._getVertexBuffers = function() {
                return null
            }, t._render = function(e) {
                w.mainContext.drawElements(fi.RENDER_LINE_MODEL ? 1 : 4, this._currentNumberIndices, 5123, 0), R.trianglesFaces += this._numberTriangle, R.drawCall++
            }, g(0, t, "_originalBoundingSphere", function() {
                return this._boundingSphere
            }), g(0, t, "_originalBoundingBox", function() {
                return this._boundingBox
            }), g(0, t, "_vertexBufferCount", function() {
                return this._numberVertices
            }), g(0, t, "triangleCount", function() {
                return this._numberTriangle
            }), u(h, ["_TEMP_ARRAY_BUFFER", function() {
                return this._TEMP_ARRAY_BUFFER = new Uint32Array(zt.CHUNK_GRID_NUM / zt.LEAF_GRID_NUM * zt.CHUNK_GRID_NUM / zt.LEAF_GRID_NUM)
            }]), h
        }(en),
        Ln = function(e) {
            function t(e) {
                this._terrainSprite3DOwner = null, t.__super.call(this, e), this._terrainSprite3DOwner = e
            }
            m(t, "t_tl.d3.terrain.TerrainRender", e);
            var n = t.prototype;
            return n._calculateBoundingSphere = function() {
                var e = this._terrainSprite3DOwner.terrainFilter;
                if (null == e) this._boundingSphere.toDefault();
                else {
                    var t = e._originalBoundingSphere,
                        n = NaN,
                        i = this._terrainSprite3DOwner.transform,
                        r = i.scale;
                    n = r.x >= r.y && r.x >= r.z ? r.x : r.y >= r.z ? r.y : r.z, Vt.transformCoordinate(t.center, i.worldMatrix, this._boundingSphere.center), this._boundingSphere.radius = t.radius * n, e.calcLeafBoudingSphere(i.worldMatrix, n)
                }
            }, n._calculateBoundingBox = function() {
                var e = this._terrainSprite3DOwner.terrainFilter;
                if (null == e) this._boundingBox.toDefault();
                else {
                    for (var t = this._terrainSprite3DOwner.transform.worldMatrix, n = e._boundingBoxCorners, i = 0; i < 8; i++) Vt.transformCoordinate(n[i], t, tn._tempBoundBoxCorners[i]);
                    St.createfromPoints(tn._tempBoundBoxCorners, this._boundingBox), e.calcLeafBoudingBox(t)
                }
            }, n._renderUpdate = function(e) {
                this._setShaderValueMatrix4x4(0, this._owner.transform.worldMatrix);
                var t = this._owner.getProjectionViewWorldMatrix(e);
                return this._setShaderValueMatrix4x4(1, t), !0
            }, n._destroy = function() {
                e.prototype._destroy.call(this), this._terrainSprite3DOwner = null
            }, t
        }(tn),
        bn = function(t) {
            function i() {
                this._time = 0, this._enableLightCount = 3, this._customRenderQueneIndex = 11, this.enableLight = !0, i.__super.call(this), this._renderState = new J, this._lights = [], this._quenes = [], this._cameraPool = [], this._renderableSprite3Ds = [], this.__loaded = !0, this._lightmaps = [], this._shaderValues = new Ht, this.parallelSplitShadowMaps = [], this._dynamicBatchManager = new he, this._cullingRenders = [], this._cullingRendersLength = 0, this.enableFog = !1, this.fogStart = 300, this.fogRange = 1e3, this.fogColor = new Vt(.7, .7, .7), this.ambientColor = new Vt(.212, .227, .259), w.shaderHighPrecision && this.addShaderDefine(un.SHADERDEFINE_HIGHPRECISION), this.on("display", this, this._display), this.on("undisplay", this, this._unDisplay), this._componentsMap = [], this._typeComponentsIndices = [], this._components = []
            }
            m(i, "t_tl.d3.core.scene.Scene", t);
            var e = i.prototype;
            return x.imps(e, {
                "t_tl.webgl.submit.ISubmit": !0,
                "t_tl.resource.ICreateResource": !0
            }), e._setUrl = function(e) {
                this._url = e
            }, e._getGroup = function() {
                return this._group
            }, e._setGroup = function(e) {
                this._group = e
            }, e._display = function() {
                x.stage._scenes.push(this), x.stage._scenes.sort(i._sortScenes);
                for (var e = 0, t = this._childs.length; e < t; e++) {
                    var n = this._childs[e];
                    n.active && n._activeHierarchy()
                }
            }, e._unDisplay = function() {
                var e = x.stage._scenes;
                e.splice(e.indexOf(this), 1);
                for (var t = 0, n = this._childs.length; t < n; t++) {
                    var i = this._childs[t];
                    i.active && i._inActiveHierarchy()
                }
            }, e._addChild3D = function(e) {
                e.transform._onWorldTransform(), e._setBelongScene(this), this.displayedInStage && e.active && e._activeHierarchy()
            }, e._removeChild3D = function(e) {
                e.transform.parent = null, this.displayedInStage && e.active && e._inActiveHierarchy(), e._setUnBelongScene()
            }, e.initOctree = function(e, t, n, i, r) {
                void 0 === r && (r = 6), this.treeSize = new Vt(e, t, n), this.treeLevel = r, this.treeRoot = new ee(this, 0), this.treeRoot.init(i, this.treeSize)
            }, e._prepareUpdateToRenderState = function(e, t) {
                t.elapsedTime = this._lastCurrentTime ? this.timer.currTimer - this._lastCurrentTime : 0, this._lastCurrentTime = this.timer.currTimer, t.scene = this
            }, e._prepareSceneToRender = function(e) {
                var t = this._lights.length;
                if (0 < t)
                    for (var n = 0, i = 0; i < t && !(this._lights[i]._prepareToScene(e) && ++n >= this._enableLightCount); i++);
            }, e._updateChilds = function(e) {
                for (var t = 0, n = this._childs.length; t < n; ++t) this._childs[t]._update(e)
            }, e._preRenderScene = function(e, t, n) {
                var i, r = t._viewMatrix,
                    a = t._projectionMatrix,
                    o = t._projectionViewMatrix,
                    s = 0,
                    l = t.camera;
                for (l.useOcclusionCulling ? this.treeRoot ? _e.renderObjectCullingOctree(n, this, l, r, a, o) : _e.renderObjectCulling(n, this, l, r, a, o) : _e.renderObjectCullingNoBoundFrustum(this, l, r, a, o), s = 0, i = this._quenes.length; s < i; s++) this._quenes[s] && this._quenes[s]._preRender(t)
            }, e._clear = function(e, t) {
                var n = t._viewport,
                    i = t.camera,
                    r = n.x,
                    a = i.renderTargetSize.height - n.y - n.height,
                    o = n.width,
                    s = n.height;
                e.viewport(r, a, o, s);
                var l = 256,
                    h = i.renderTarget;
                switch (i.clearFlag) {
                    case 0:
                        var _ = i.clearColor;
                        if (_) {
                            e.enable(3089), e.scissor(r, a, o, s);
                            var u = _.elements;
                            e.clearColor(u[0], u[1], u[2], u[3]), l |= 16384
                        }
                        if (h) switch (_ || (l = 16384), h.depthStencilFormat) {
                            case 33189:
                                l |= 256;
                                break;
                            case 36168:
                                l |= 1024;
                                break;
                            case 34041:
                                l |= 256, l |= 1024
                        }
                        e.clear(l), _ && e.disable(3089);
                        break;
                    case 1:
                    case 2:
                        if (h) switch (l = 16384, h.depthStencilFormat) {
                            case 33189:
                                l |= 256;
                                break;
                            case 36168:
                                l |= 1024;
                                break;
                            case 34041:
                                l |= 256, l |= 1024
                        }
                        e.clear(l);
                        break;
                    case 3:
                        break;
                    default:
                        throw new Error("BaseScene:camera clearFlag invalid.")
                }
            }, e._renderScene = function(e, t) {
                var n, i, r = t.camera,
                    a = 0;
                for (a = 0; a < 2; a++)(i = this._quenes[a]) && (r.renderTarget ? i._render(t, !0) : i._render(t, !1));
                if (1 === r.clearFlag) {
                    var o = r.sky;
                    o && (O.setCullFace(e, !1), O.setDepthFunc(e, 515), O.setDepthMask(e, !1), o._render(t), O.setDepthFunc(e, 513), O.setDepthMask(e, !0))
                }
                for (a = 2, n = this._quenes.length; a < n; a++)(i = this._quenes[a]) && (i._sortAlpha(t.camera.transform.position), r.renderTarget ? i._render(t, !0) : i._render(t, !1))
            }, e._set3DRenderConfig = function(e) {
                e.disable(3042), O._blend = !1, e.blendFunc(770, 771), O._sFactor = 770, O._dFactor = 771, e.disable(2929), O._depthTest = !1, e.enable(2884), O._cullFace = !0, e.depthMask(1), O._depthMask = !0, e.frontFace(2304), O._frontFace = 2304
            }, e._set2DRenderConfig = function(e) {
                O.setBlend(e, !0), O.setBlendFunc(e, 1, 771), O.setDepthTest(e, !1), O.setCullFace(e, !1), O.setDepthMask(e, !0), O.setFrontFace(e, 2305), e.viewport(0, 0, f.width, f.height)
            }, e._parseCustomProps = function(e, t, n, i) {
                var r = i.customProps.lightmaps,
                    a = r.length,
                    o = this._lightmaps;
                o.length = a;
                for (var s = 0; s < a; s++) o[s] = Ae.getRes(t[r[s].replace(".exr", ".png")]);
                this.setlightmaps(o);
                var l = i.customProps.ambientColor;
                l && (this.ambientColor = new Vt(l[0], l[1], l[2]));
                var h = i.customProps.fogColor;
                h && (this.fogColor = new Vt(h[0], h[1], h[2]))
            }, e._addLight = function(e) {
                this._lights.indexOf(e) < 0 && this._lights.push(e)
            }, e._removeLight = function(e) {
                var t = this._lights.indexOf(e);
                0 <= t && this._lights.splice(t, 1)
            }, e._updateScene = function() {
                var e = this._renderState;
                this._prepareUpdateToRenderState(w.mainContext, e), this._updateComponents(e), this._updateChilds(e), this._lateUpdateComponents(e), this._time += e.elapsedTime / 1e3, this._shaderValues.setValue(22, this._time)
            }, e._updateSceneConch = function() {
                var e = this._renderState;
                this._prepareUpdateToRenderState(w.mainContext, e), this._updateComponents(e), this._lateUpdateComponents(e), this._prepareSceneToRender(e);
                for (var t = 0, n = this._cameraPool.length; t < n; t++) {
                    var i = this._cameraPool[t];
                    (e.camera = i)._prepareCameraToRender()
                }
            }, e._preRenderShadow = function(e, t, n, i, r) {
                this.treeRoot ? _e.renderShadowObjectCullingOctree(this, t, n, i, r) : _e.renderShadowObjectCulling(this, t, n, i, r);
                for (var a = 0, o = n.length; a < o; a++) n[a] && n[a]._preRender(e)
            }, e._renderShadowMap = function(e, t, n) {
                var i = this.parallelSplitShadowMaps[0];
                i._calcAllLightCameraInfo(n);
                var r, a, o, s = i.PSSMNum;
                if (this._preRenderShadow(t, i._lightCulling, i._shadowQuenes, i._lightVPMatrix[0], s), this.addShaderDefine(Gt.SHADERDEFINE_CAST_SHADOW), 1 < s)
                    for (var l = 0; l < s; l++) r = i.getRenderTarget(l + 1), i.beginRenderTarget(l + 1), e.clearColor(1, 1, 1, 1), e.clear(16640), e.viewport(0, 0, r.width, r.height), t.camera = o = i.getLightCamera(l), o._prepareCameraToRender(), o._prepareCameraViewProject(o.viewMatrix, o.projectionMatrix), t._projectionViewMatrix = i._lightVPMatrix[l + 1], (a = i._shadowQuenes[l])._preRender(t), a._renderShadow(t, !1), i.endRenderTarget(l + 1);
                else r = i.getRenderTarget(1), i.beginRenderTarget(1), e.clearColor(1, 1, 1, 1), e.clear(16640), e.viewport(0, 0, r.width, r.height), t.camera = o = i.getLightCamera(0), o._prepareCameraToRender(), o._prepareCameraViewProject(o.viewMatrix, o.projectionMatrix), t._projectionViewMatrix = i._lightVPMatrix[0], (a = i._shadowQuenes[0])._preRender(t), a._renderShadow(t, !0), i.endRenderTarget(1);
                this.removeShaderDefine(Gt.SHADERDEFINE_CAST_SHADOW)
            }, e.addTreeNode = function(e) {
                this.treeRoot.addTreeNode(e)
            }, e.removeTreeNode = function(e) {
                this.treeSize && e._treeNode && e._treeNode.removeObject(e)
            }, e.setlightmaps = function(e) {
                this._lightmaps = e;
                for (var t = 0, n = this._renderableSprite3Ds.length; t < n; t++) this._renderableSprite3Ds[t]._render._applyLightMapParams()
            }, e.getlightmaps = function() {
                return this._lightmaps
            }, e.addChildAt = function(e, t) {
                if (!(e instanceof t_tl.d3.core.Sprite3D)) throw new Error("Sprite3D:Node type must Sprite3D.");
                if (!e || this.destroyed || e === this) return e;
                if (e.zOrder && this._set$P("hasZorder", !0), 0 <= t && t <= this._childs.length) {
                    if (e._parent === this) {
                        var n = this.getChildIndex(e);
                        this._childs.splice(n, 1), this._childs.splice(t, 0, e), this.conchModel && (this.conchModel.removeChild(e.conchModel), this.conchModel.addChildAt(e.conchModel, t)), this._childChanged()
                    } else e.parent && e.parent.removeChild(e), this._childs === _.ARRAY_EMPTY && (this._childs = []), this._childs.splice(t, 0, e), this.conchModel && this.conchModel.addChildAt(e.conchModel, t), (e.parent = this)._addChild3D(e);
                    return e
                }
                throw new Error("appendChildAt:The index is out of bounds")
            }, e.addChild = function(e) {
                if (!(e instanceof t_tl.d3.core.Sprite3D)) throw new Error("Sprite3D:Node type must Sprite3D.");
                if (!e || this.destroyed || e === this) return e;
                if (e.zOrder && this._set$P("hasZorder", !0), e._parent === this) {
                    var t = this.getChildIndex(e);
                    t !== this._childs.length - 1 && (this._childs.splice(t, 1), this._childs.push(e), this.conchModel && (this.conchModel.removeChild(e.conchModel), this.conchModel.addChildAt(e.conchModel, this._childs.length - 1)), this._childChanged())
                } else e.parent && e.parent.removeChild(e), this._childs === _.ARRAY_EMPTY && (this._childs = []), this._childs.push(e), this.conchModel && this.conchModel.addChildAt(e.conchModel, this._childs.length - 1), (e.parent = this)._childChanged(), this._addChild3D(e);
                return e
            }, e.removeChildAt = function(e) {
                var t = this.getChildAt(e);
                return t && (this._removeChild3D(t), this._childs.splice(e, 1), this.conchModel && this.conchModel.removeChild(t.conchModel), t.parent = null), t
            }, e.removeChildren = function(e, t) {
                if (void 0 === e && (e = 0), void 0 === t && (t = 2147483647), this._childs && 0 < this._childs.length) {
                    var n = this._childs;
                    if (0 === e && a <= t) {
                        var i = n;
                        this._childs = _.ARRAY_EMPTY
                    } else i = n.splice(e, t - e);
                    for (var r = 0, a = i.length; r < a; r++) this._removeChild3D(i[r]), i[r].parent = null, this.conchModel && this.conchModel.removeChild(i[r].conchModel)
                }
                return this
            }, e.addFrustumCullingObject = function(e) {
                this.treeRoot ? this.addTreeNode(e) : (this._cullingRendersLength === this._cullingRenders.length ? this._cullingRenders.push(e) : this._cullingRenders[this._cullingRendersLength] = e, e._indexInSceneFrustumCullingObjects = this._cullingRendersLength++)
            }, e.removeFrustumCullingObject = function(e) {
                if (this.treeRoot) this.removeTreeNode(e);
                else {
                    this._cullingRendersLength--;
                    var t = e._indexInSceneFrustumCullingObjects;
                    if (t !== this._cullingRendersLength) {
                        var n = this._cullingRenders[this._cullingRendersLength];
                        (this._cullingRenders[t] = n)._indexInSceneFrustumCullingObjects = t, e._indexInSceneFrustumCullingObjects = -1
                    }
                }
            }, e.getRenderQueue = function(e) {
                return e < 3e3 ? this._quenes[1] || (this._quenes[1] = new $(this)) : this._quenes[2] || (this._quenes[2] = new $(this))
            }, e.addRenderQuene = function() {
                this._quenes[this._customRenderQueneIndex++] = new $(this)
            }, e.addShaderDefine = function(e) {
                this._shaderDefineValue |= e
            }, e.removeShaderDefine = function(e) {
                this._shaderDefineValue &= ~e
            }, e.addScript = function(e) {
                return this._addComponent(e)
            }, e.getScriptByType = function(e, t) {
                return void 0 === t && (t = 0), this._getComponentByType(e, t)
            }, e.getScriptsByType = function(e, t) {
                this._getComponentsByType(e, t)
            }, e.getScriptByIndex = function(e) {
                return this._getComponentByIndex(e)
            }, e.removeScriptByType = function(e, t) {
                void 0 === t && (t = 0), this._removeComponentByType(e, t)
            }, e.removeScriptsByType = function(e) {
                this._removeComponentByType(e)
            }, e.removeAllScript = function() {
                this._removeAllComponent()
            }, e.render = function(e, t, n) {
                (d._context.ctx._renderKey = 0) < this._childs.length && e.addRenderObject(this)
            }, e.renderSubmit = function() {
                var e = w.mainContext,
                    t = this._renderState;
                this._set3DRenderConfig(e), this._prepareSceneToRender(this._renderState);
                var n, i = 0,
                    r = 0;
                if (Qt.debugMode || ee.debugMode)
                    for (i = 0, r = this._cameraPool.length; i < r; i++) n = this._cameraPool[i], Qt._debugPhasorSprite.begin(1, n), n.activeInHierarchy && n._renderCamera(e, t, this), Qt._debugPhasorSprite.end();
                else
                    for (i = 0, r = this._cameraPool.length; i < r; i++)(n = this._cameraPool[i]).activeInHierarchy && n._renderCamera(e, t, this);
                return this._set2DRenderConfig(e), 1
            }, e.onAsynLoaded = function(e, t, n) {
                var i = t[0];
                if ("Scene" !== i.type) throw new Error("Scene: the .lh file root type must be Scene,please use other function to  load  this file.");
                var r = t[1];
                qt._createNodeByJson(this, i, this, r), this.event("hierarchyloaded", [this]), this.__loaded = !0
            }, e.destroy = function(e) {
                void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._renderState = null, this._lights = null, this._lightmaps = null, this._renderTargetTexture = null, this._shaderValues = null, this._cullingRenders = null, this._dynamicBatchManager = null, this._quenes = null, this._cameraPool = null, this._renderableSprite3Ds = null, this.treeRoot = null, this.treeSize = null, this.parallelSplitShadowMaps = null, this._typeComponentsIndices = null, this._components = null, Ae.clearRes(this.url), this.loaded || Qt._cancelLoadByUrl(this.url))
            }, e.getRenderType = function() {
                return 0
            }, e.releaseRender = function() {}, e._addComponent = function(e) {
                var t, n = this._componentsMap.indexOf(e);
                if (-1 === n) t = [], this._componentsMap.push(e), this._typeComponentsIndices.push(t);
                else if (t = this._typeComponentsIndices[n], this._components[t[0]].isSingleton) throw new Error("无法单实例创建" + e + "组件，" + e + "组件已存在！");
                var i = l.getInstance(e);
                t.push(this._components.length), this._components.push(i);
                return i._initialize(this), i
            }, e._removeComponent = function(e, t) {
                var n = this._typeComponentsIndices[e],
                    i = n[t],
                    r = this._components[i];
                this._components.splice(i, 1), n.splice(t, 1), 0 === n.length && (this._typeComponentsIndices.splice(e, 1), this._componentsMap.splice(e, 1));
                for (var a = 0, o = this._componentsMap.length; a < o; a++)
                    for (var s = (n = this._typeComponentsIndices[a]).length - 1; 0 <= s; s--) {
                        var l = n[s];
                        if (!(i < l)) break;
                        n[s] = --l
                    }
                r._destroy()
            }, e._getComponentByType = function(e, t) {
                void 0 === t && (t = 0);
                var n = this._componentsMap.indexOf(e);
                return -1 === n ? null : this._components[this._typeComponentsIndices[n][t]]
            }, e._getComponentsByType = function(e, t) {
                var n = this._componentsMap.indexOf(e);
                if (-1 !== n) {
                    var i = this._typeComponentsIndices[n],
                        r = i.length;
                    t.length = r;
                    for (var a = 0; a < r; a++) t[a] = this._components[i[a]]
                } else t.length = 0
            }, e._getComponentByIndex = function(e) {
                return this._components[e]
            }, e._removeComponentByType = function(e, t) {
                void 0 === t && (t = 0);
                var n = this._componentsMap.indexOf(e); - 1 !== n && this._removeComponent(n, t)
            }, e._removeComponentsByType = function(e) {
                var t = this._componentsMap.indexOf(e);
                if (-1 !== t)
                    for (var n = this._typeComponentsIndices[t], i = 0, r = n.length; i < r; n.length < r ? r-- : i++) this._removeComponent(t, i)
            }, e._removeAllComponent = function() {
                for (var e = 0, t = this._componentsMap.length; e < t; this._componentsMap.length < t ? t-- : e++) this._removeComponentsByType(this._componentsMap[e])
            }, e._updateComponents = function(e) {
                for (var t = 0, n = this._components.length; t < n; t++) {
                    var i = this._components[t];
                    !i.started && (i._start(e), i.started = !0), i.enable && i._update(e)
                }
            }, e._lateUpdateComponents = function(e) {
                for (var t = 0; t < this._components.length; t++) {
                    var n = this._components[t];
                    !n.started && (n._start(e), n.started = !0), n.enable && n._lateUpdate(e)
                }
            }, e._preRenderUpdateComponents = function(e) {
                for (var t = 0; t < this._components.length; t++) {
                    var n = this._components[t];
                    !n.started && (n._start(e), n.started = !0), n.enable && n._preRenderUpdate(e)
                }
            }, e._postRenderUpdateComponents = function(e) {
                for (var t = 0; t < this._components.length; t++) {
                    var n = this._components[t];
                    !n.started && (n._start(e), n.started = !0), n.enable && n._postRenderUpdate(e)
                }
            }, g(0, e, "_loaded", null, function(e) {
                this.__loaded = e
            }), g(0, e, "fogColor", function() {
                return this._fogColor
            }, function(e) {
                this._fogColor = e, this._shaderValues.setValue(0, e.elements)
            }), g(0, e, "enableFog", function() {
                return this._enableFog
            }, function(e) {
                this._enableFog !== e && ((this._enableFog = e) ? (this.addShaderDefine(un.SHADERDEFINE_FOG), this.removeShaderDefine(un.SAHDERDEFINE_DEPTHFOG)) : this.removeShaderDefine(un.SHADERDEFINE_FOG))
            }), g(0, e, "url", function() {
                return this._url
            }), g(0, e, "loaded", function() {
                return this.__loaded
            }), g(0, e, "enableDepthFog", function() {
                return this._enableDepthFog
            }, function(e) {
                this._enableDepthFog != e && ((this._enableDepthFog = e) ? (this.addShaderDefine(un.SAHDERDEFINE_DEPTHFOG), this.removeShaderDefine(un.SHADERDEFINE_FOG)) : this.removeShaderDefine(un.SAHDERDEFINE_DEPTHFOG))
            }), g(0, e, "fogStart", function() {
                return this._fogStart
            }, function(e) {
                this._fogStart = e, this._shaderValues.setValue(1, e)
            }), g(0, e, "fogRange", function() {
                return this._fogRange
            }, function(e) {
                this._fogRange = e, this._shaderValues.setValue(2, e)
            }), g(0, e, "ambientColor", function() {
                return this._ambientColor
            }, function(e) {
                this._ambientColor = e, this._shaderValues.setValue(21, e.elements)
            }), g(0, e, "scene", function() {
                return this
            }), g(0, e, "renderableSprite3Ds", function() {
                return this._renderableSprite3Ds.slice()
            }), i._sortScenes = function(e, t) {
                if (e.parent === x.stage && t.parent === x.stage) {
                    var n = x.stage._childs;
                    return n.indexOf(e) - n.indexOf(t)
                }
                return e.parent !== x.stage && t.parent !== x.stage ? i._sortScenes(e.parent, t.parent) : e.parent === x.stage ? -1 : 1
            }, i.load = function(e) {
                return x.loader.create(e, null, null, i)
            }, i.FOGCOLOR = 0, i.FOGSTART = 1, i.FOGRANGE = 2, i.LIGHTDIRECTION = 3, i.LIGHTDIRCOLOR = 4, i.POINTLIGHTPOS = 5, i.POINTLIGHTRANGE = 6, i.POINTLIGHTATTENUATION = 7, i.POINTLIGHTCOLOR = 8, i.SPOTLIGHTPOS = 9, i.SPOTLIGHTDIRECTION = 10, i.SPOTLIGHTSPOT = 11, i.SPOTLIGHTRANGE = 12, i.SPOTLIGHTATTENUATION = 13, i.SPOTLIGHTCOLOR = 14, i.SHADOWDISTANCE = 15, i.SHADOWLIGHTVIEWPROJECT = 16, i.SHADOWMAPPCFOFFSET = 17, i.SHADOWMAPTEXTURE1 = 18, i.SHADOWMAPTEXTURE2 = 19, i.SHADOWMAPTEXTURE3 = 20, i.AMBIENTCOLOR = 21, i.TIME = 22, i
        }(T),
        Fn = function(e) {
            function t(e) {
                t.__super.call(this), this.__loaded = !0, this._projectionViewWorldUpdateLoopCount = -1, this._activeInHierarchy = !1, this._projectionViewWorldMatrix = new At, this._shaderValues = new Ht, this._colliders = [], this._id = ++t._uniqueIDCounter, this._transform = new nn(this), this.name = e || "Sprite3D-" + t._nameNumberCounter++, this.layer = F.currentCreationLayer, this.active = !0
            }
            m(t, "t_tl.d3.core.Sprite3D", fn);
            var n = t.prototype;
            return x.imps(n, {
                "t_tl.d3.core.render.IUpdate": !0,
                "t_tl.resource.ICreateResource": !0,
                "t_tl.d3.core.IClone": !0
            }), n._setUrl = function(e) {
                this._url = e
            }, n._getGroup = function() {
                return this._group
            }, n._setGroup = function(e) {
                this._group = e
            }, n._addChild3D = function(e) {
                e.transform.parent = this.transform, this._hierarchyAnimator && (!e._hierarchyAnimator && e._setHierarchyAnimator(this._hierarchyAnimator, null), this._getAnimatorToLinkSprite3D(e, !0, [e.name])), this._scene && (e._setBelongScene(this._scene), this._activeInHierarchy && e._active && e._activeHierarchy())
            }, n._removeChild3D = function(e) {
                e.transform.parent = null, this._scene && (this._activeInHierarchy && e._active && e._inActiveHierarchy(), e._setUnBelongScene()), this._hierarchyAnimator && (e._hierarchyAnimator == this._hierarchyAnimator && e._clearHierarchyAnimator(this._hierarchyAnimator, null), this._getAnimatorToLinkSprite3D(e, !1, [e.name]))
            }, n._parseBaseCustomProps = function(e) {
                var t = this.transform.localPosition;
                t.fromArray(e.translate), this.transform.localPosition = t;
                var n = this.transform.localRotation;
                n.fromArray(e.rotation), this.transform.localRotation = n;
                var i = this.transform.localScale;
                i.fromArray(e.scale), this.transform.localScale = i;
                var r = e.layer;
                null != r && (this.layer = F.getLayerByNumber(r))
            }, n._parseCustomComponent = function(e, t, n) {
                for (var i in n) {
                    var r = n[i];
                    switch (i) {
                        case "Animator":
                            var a = this.addComponent(xn);
                            if (r.avatarPath) a.avatar = Ae.getRes(t[r.avatarPath]);
                            else {
                                var o = r.avatar;
                                if (o) {
                                    a.avatar = Ae.getRes(t[o.path]);
                                    var s = o.linkSprites;
                                    s && e.once("hierarchyloaded", this, this._onRootNodeHierarchyLoaded, [a, s])
                                }
                            }
                            for (var l = r.clipPaths, h = l.length, _ = 0; _ < h; _++) a.addClip(Ae.getRes(t[l[_]]));
                            a.clip = Ae.getRes(t[l[0]]);
                            var u = r.playOnWake;
                            void 0 !== u && (a.playOnWake = u);
                            break;
                        case "Rigidbody":
                            this.addComponent(Rn);
                            break;
                        case "SphereCollider":
                            var c = this.addComponent(ti);
                            c.isTrigger = r.isTrigger;
                            var d = c.center;
                            d.fromArray(r.center), c.center = d, c.radius = r.radius;
                            break;
                        case "BoxCollider":
                            var f = this.addComponent(Jn);
                            f.isTrigger = r.isTrigger, f.center.fromArray(r.center);
                            var m = f.size;
                            m.fromArray(r.size), f.size = m;
                            break;
                        case "MeshCollider":
                            this.addComponent(ei)
                    }
                }
            }, n._onRootNodeHierarchyLoaded = function(e, t) {
                for (var n in t) {
                    for (var i = this, r = t[n], a = 0, o = r.length; a < o; a++) {
                        var s = r[a];
                        if ("" === s) break;
                        if (!(i = i.getChildByName(s))) break
                    }
                    i && e.linkSprite3DToAvatarNode(n, i)
                }
            }, n._setHierarchyAnimator = function(e, t) {
                this._changeHierarchyAnimator(e);
                for (var n = 0, i = this._childs.length; n < i; n++) {
                    var r = this._childs[n];
                    r._hierarchyAnimator == t && r._setHierarchyAnimator(e, t)
                }
            }, n._clearHierarchyAnimator = function(e, t) {
                this._changeHierarchyAnimator(t);
                for (var n = 0, i = this._childs.length; n < i; n++) {
                    var r = this._childs[n];
                    r._hierarchyAnimator == e && r._clearHierarchyAnimator(e, t)
                }
            }, n._getAnimatorToLinkSprite3D = function(e, t, n) {
                var i = this.getComponentByType(xn);
                if (i && (i.avatar ? i.avatar._version || e._setAnimatorToLinkAvatar(i, t) : e._setAnimatorToLinkSprite3DNoAvatar(i, t, n)), this._parent && this._parent instanceof t_tl.d3.core.Sprite3D) {
                    n.unshift(this._parent.name);
                    var r = this._parent;
                    r._hierarchyAnimator && r._getAnimatorToLinkSprite3D(e, t, n)
                }
            }, n._setAnimatorToLinkSprite3DNoAvatar = function(e, t, n) {
                var i = 0,
                    r = 0;
                for (i = 0, r = e.getClipCount(); i < r; i++) e._handleSpriteOwnersBySprite(i, t, n, this);
                for (i = 0, r = this._childs.length; i < r; i++) {
                    var a = this._childs[i],
                        o = n.length;
                    n.push(a.name), a._setAnimatorToLinkSprite3DNoAvatar(e, t, n), n.splice(o, 1)
                }
            }, n._changeHierarchyAnimator = function(e) {
                this._hierarchyAnimator = e
            }, n._isLinkSpriteToAnimationNode = function(e, t, n) {
                var i = e._avatarNodes.indexOf(t),
                    r = e._cacheSpriteToNodesMap;
                if (n) this._transform.dummy = t.transform, e._cacheNodesToSpriteMap[i] = r.length, r.push(i);
                else {
                    this._transform.dummy = null;
                    var a = e._cacheNodesToSpriteMap[i];
                    e._cacheNodesToSpriteMap[i] = null, r.splice(a, 1)
                }
            }, n._setBelongScene = function(e) {
                this._scene = e;
                for (var t = 0, n = this._childs.length; t < n; t++) this._childs[t]._setBelongScene(e)
            }, n._setUnBelongScene = function() {
                this._scene = null;
                for (var e = 0, t = this._childs.length; e < t; e++) this._childs[e]._setUnBelongScene()
            }, n._activeHierarchy = function() {
                var e = 0,
                    t = 0;
                for (this._activeInHierarchy = !0, this._addSelfRenderObjects(), e = 0, t = this._colliders.length; e < t; e++) this._layer._addCollider(this._colliders[e]);
                for (this.event("activeinhierarchychanged", !0), e = 0, t = this._childs.length; e < t; e++) {
                    var n = this._childs[e];
                    n._active && n._activeHierarchy()
                }
            }, n._inActiveHierarchy = function() {
                var e = 0,
                    t = 0;
                for (this._activeInHierarchy = !1, this._clearSelfRenderObjects(), e = 0, t = this._colliders.length; e < t; e++) {
                    var n = this._colliders[e];
                    n._clearCollsionMap(), this._layer._removeCollider(n)
                }
                for (this.event("activeinhierarchychanged", !1), e = 0, t = this._childs.length; e < t; e++) {
                    var i = this._childs[e];
                    i._active && i._inActiveHierarchy()
                }
            }, n.addComponent = function(e) {
                var t, n = this._componentsMap.indexOf(e);
                if (-1 === n) t = [], this._componentsMap.push(e), this._typeComponentsIndices.push(t);
                else if (t = this._typeComponentsIndices[n], this._components[t[0]].isSingleton) throw new Error("无法单实例创建" + e + "组件，" + e + "组件已存在！");
                var i = l.getInstance(e);
                if (t.push(this._components.length), this._components.push(i), i instanceof t_tl.d3.component.physics.Collider) this.getComponentByType(Rn) && (i._isRigidbody = !0), this._activeInHierarchy && this._layer._addCollider(i), this._colliders.push(i);
                else if (i instanceof t_tl.d3.component.Animator) {
                    var r = i;
                    this._setHierarchyAnimator(r, this._parent ? this._parent._hierarchyAnimator : null), this._setAnimatorToLinkSprite3DNoAvatar(r, !0, [])
                } else if (i instanceof t_tl.d3.component.Rigidbody)
                    for (var a = 0, o = this._colliders.length; a < o; a++) this._colliders[a]._setIsRigidbody(!0);
                return i instanceof t_tl.d3.component.Script && this._scripts.push(i), i._initialize(this), i
            }, n._removeComponent = function(e, t) {
                var n = 0,
                    i = 0,
                    r = this._typeComponentsIndices[e],
                    a = r[t],
                    o = this._components[a];
                if (o instanceof t_tl.d3.component.physics.Collider) {
                    var s = o;
                    this._activeInHierarchy && this._layer._removeCollider(s), this._colliders.splice(this._colliders.indexOf(s), 1)
                } else if (o instanceof t_tl.d3.component.Animator) {
                    var l = o;
                    this._clearHierarchyAnimator(l, this._parent ? this._parent._hierarchyAnimator : null)
                } else if (o instanceof t_tl.d3.component.Rigidbody)
                    for (n = 0, i = this._colliders.length; n < i; n++) {
                        var h = this._colliders[n];
                        h._setIsRigidbody(!1);
                        var _ = h._runtimeCollisonMap,
                            u = h._runtimeCollisonTestMap;
                        for (var c in _) delete u[c]
                    }
                for (this._components.splice(a, 1), o instanceof t_tl.d3.component.Script && this._scripts.splice(this._scripts.indexOf(o), 1), r.splice(t, 1), 0 === r.length && (this._typeComponentsIndices.splice(e, 1), this._componentsMap.splice(e, 1)), n = 0, i = this._componentsMap.length; n < i; n++)
                    for (var d = (r = this._typeComponentsIndices[n]).length - 1; 0 <= d; d--) {
                        var f = r[d];
                        if (!(a < f)) break;
                        r[d] = --f
                    }
                o._destroy()
            }, n._clearSelfRenderObjects = function() {}, n._addSelfRenderObjects = function() {}, n._parseCustomProps = function(e, t, n, i) {}, n._updateChilds = function(e) {
                var t = this._childs.length;
                if (0 !== t)
                    for (var n = 0; n < t; ++n) this._childs[n]._update(e)
            }, n._getSortID = function(e, t) {
                return 1e3 * t.id + e._getVertexBuffer().vertexDeclaration.id
            }, n._update = function(e) {
                (e.owner = this)._activeInHierarchy && (this._updateComponents(e), this._lateUpdateComponents(e), R.spriteCount++, this._childs.length && this._updateChilds(e))
            }, n.getProjectionViewWorldMatrix = function(e) {
                return At.multiply(e, this.transform.worldMatrix, this._projectionViewWorldMatrix), this._projectionViewWorldMatrix
            }, n.loadHierarchy = function(e) {
                this.addChild(t_tl.d3.core.Sprite3D.load(e))
            }, n.addChildAt = function(e, t) {
                if (!(e instanceof t_tl.d3.core.Sprite3D)) throw new Error("Sprite3D:Node type must Sprite3D.");
                if (!e || this.destroyed || e === this) return e;
                if (e.zOrder && this._set$P("hasZorder", !0), 0 <= t && t <= this._childs.length) {
                    if (e._parent === this) {
                        var n = this.getChildIndex(e);
                        this._childs.splice(n, 1), this._childs.splice(t, 0, e), this.conchModel && (this.conchModel.removeChild(e.conchModel), this.conchModel.addChildAt(e.conchModel, t)), this._childChanged()
                    } else e.parent && e.parent.removeChild(e), this._childs === _.ARRAY_EMPTY && (this._childs = []), this._childs.splice(t, 0, e), this.conchModel && this.conchModel.addChildAt(e.conchModel, t), (e.parent = this)._addChild3D(e);
                    return e
                }
                throw new Error("appendChildAt:The index is out of bounds")
            }, n.addChild = function(e) {
                if (!(e instanceof t_tl.d3.core.Sprite3D)) throw new Error("Sprite3D:Node type must Sprite3D.");
                if (!e || this.destroyed || e === this) return e;
                if (e.zOrder && this._set$P("hasZorder", !0), e._parent === this) {
                    var t = this.getChildIndex(e);
                    t !== this._childs.length - 1 && (this._childs.splice(t, 1), this._childs.push(e), this.conchModel && (this.conchModel.removeChild(e.conchModel), this.conchModel.addChildAt(e.conchModel, this._childs.length - 1)), this._childChanged())
                } else e.parent && e.parent.removeChild(e), this._childs === _.ARRAY_EMPTY && (this._childs = []), this._childs.push(e), this.conchModel && this.conchModel.addChildAt(e.conchModel, this._childs.length - 1), (e.parent = this)._childChanged(), this._addChild3D(e);
                return e
            }, n.removeChildAt = function(e) {
                var t = this.getChildAt(e);
                return t && (this._removeChild3D(t), this._childs.splice(e, 1), this.conchModel && this.conchModel.removeChild(t.conchModel), t.parent = null), t
            }, n.removeChildren = function(e, t) {
                if (void 0 === e && (e = 0), void 0 === t && (t = 2147483647), this._childs && 0 < this._childs.length) {
                    var n = this._childs;
                    if (0 === e && a <= t) {
                        var i = n;
                        this._childs = _.ARRAY_EMPTY
                    } else i = n.splice(e, t - e);
                    for (var r = 0, a = i.length; r < a; r++) this._removeChild3D(i[r]), i[r].parent = null, this.conchModel && this.conchModel.removeChild(i[r].conchModel)
                }
                return this
            }, n.onAsynLoaded = function(e, t, n) {
                var i = t[0];
                if ("Sprite3D" !== i.type) throw new Error("Sprite3D: The .lh file root type must be Sprite3D,please use other function to  load  this file.");
                var r = t[1];
                qt._createNodeByJson(this, i, this, r), this.event("hierarchyloaded", [this]), this.__loaded = !0
            }, n.cloneTo = function(e) {
                if (this.destroyed) throw new Error("Sprite3D: Can't be cloned if the Sprite3D has destroyed.");
                var t = e;
                t.name = this.name, t._destroyed = this._destroyed, t.timer = this.timer, t._$P = this._$P, t.active = this._active;
                var n = t.transform.localPosition;
                this.transform.localPosition.cloneTo(n), t.transform.localPosition = n;
                var i = t.transform.localRotation;
                this.transform.localRotation.cloneTo(i), t.transform.localRotation = i;
                var r = t.transform.localScale;
                this.transform.localScale.cloneTo(r), t.transform.localScale = r, t.isStatic = this.isStatic;
                var a = 0,
                    o = 0;
                for (a = 0, o = this._componentsMap.length; a < o; a++) {
                    var s = t.addComponent(this._componentsMap[a]);
                    this._components[a]._cloneTo(s)
                }
                for (a = 0, o = this._childs.length; a < o; a++) t.addChild(this._childs[a].clone());
                var l = t.getComponentByType(xn);
                if (l) {
                    var h = l._linkSpritesData;
                    if (h)
                        for (var _ in h) {
                            for (var u = h[_], c = t, d = 0, f = u.length; d < f && (c = c.getChildByName(u[d])); d++);
                            if (c) {
                                var m = l._avatarNodeMap[_];
                                c._isLinkSpriteToAnimationNode(l, m, !0)
                            }
                        }
                }
            }, n.clone = function() {
                var e = new this.constructor;
                return this.cloneTo(e), e
            }, n.destroy = function(e) {
                if (void 0 === e && (e = !0), !this.destroyed) {
                    t_tl.display.Node.prototype.destroy.call(this, e);
                    var t, n = 0;
                    for (n = 0, t = this._components.length; n < t; n++) this._components[n]._destroy();
                    this._components = null, this._componentsMap = null, this._typeComponentsIndices = null, this._transform = null, this._colliders = null, Ae.clearRes(this.url), this.loaded || Qt._cancelLoadByUrl(this.url)
                }
            }, n._handleSpriteToAvatar = function(e, t) {
                e._avatarNodes;
                var n = e._avatarNodeMap[this.name];
                n && n.name === this.name && !this._transform.dummy && this._isLinkSpriteToAnimationNode(e, n, t)
            }, n._setAnimatorToLinkAvatar = function(e, t) {
                this._handleSpriteToAvatar(e, t);
                for (var n = 0, i = this._childs.length; n < i; n++) {
                    this._childs[n]._setAnimatorToLinkAvatar(e, t)
                }
            }, g(0, n, "activeInHierarchy", function() {
                return this._activeInHierarchy
            }), g(0, n, "_loaded", null, function(e) {
                this.__loaded = e
            }), g(0, n, "active", function() {
                return this._active
            }, function(e) {
                this._active !== e && (this._active = e, this._parent && (this._parent === this._scene && this._parent.displayedInStage || this._parent._activeInHierarchy) && (e ? this._activeHierarchy() : this._inActiveHierarchy()))
            }), g(0, n, "componentsCount", function() {
                return this._components.length
            }), g(0, n, "loaded", function() {
                return this.__loaded
            }), g(0, n, "id", function() {
                return this._id
            }), g(0, n, "url", function() {
                return this._url
            }), g(0, n, "layer", function() {
                return this._layer
            }, function(e) {
                if (this._layer !== e) {
                    if (!e) throw new Error("Layer value can be null.");
                    if (this._activeInHierarchy) {
                        var t = 0,
                            n = this._colliders.length;
                        if (this._layer)
                            for (t = 0; t < n; t++) this._layer._removeCollider(this._colliders[t]);
                        for (t = 0; t < n; t++) e._addCollider(this._colliders[t])
                    }
                    this._layer = e, this.event("layerchanged", e)
                }
            }), g(0, n, "scene", function() {
                return this._scene
            }), g(0, n, "transform", function() {
                return this._transform
            }), t.instantiate = function(e, t, n, i, r) {
                void 0 === n && (n = !0);
                var a = e.clone();
                t && t.addChild(a);
                var o = a.transform;
                if (n) {
                    var s = o.worldMatrix;
                    e.transform.worldMatrix.cloneTo(s), o.worldMatrix = s
                } else i && (o.position = i), r && (o.rotation = r);
                return a
            }, t.load = function(e) {
                return x.loader.create(e, null, null, t)
            }, t.WORLDMATRIX = 0, t.MVPMATRIX = 1, t._uniqueIDCounter = 0, t._nameNumberCounter = 0, t
        }(),
        Bn = function(e) {
            function h(e, t, n, i, r, a, o, s) {
                if (this._curActTexIndex = 0, this._program = null, this._attributeParams = null, this._uniformParams = null, this._attributeParamsMap = [], this._sceneUniformParamsMap = [], this._cameraUniformParamsMap = [], this._spriteUniformParamsMap = [], this._materialUniformParamsMap = [], this._renderElementUniformParamsMap = [], h.__super.call(this), !e || !t) throw "Shader Error";
                this._id = ++h._count, this._vs = e, this._ps = t, this._attributeMap = n, this._sceneUniformMap = i, this._cameraUniformMap = r, this._spriteUniformMap = a, this._materialUniformMap = o, this._renderElementUniformMap = s, this.recreateResource()
            }
            m(h, "t_tl.d3.shader.Shader3D", n);
            var t = h.prototype;
            return t.recreateResource = function() {
                this._compile(), this.completeCreate(), this.memorySize = 0
            }, t.disposeResource = function() {
                w.mainContext.deleteShader(this._vshader), w.mainContext.deleteShader(this._pshader), w.mainContext.deleteProgram(this._program), this._vshader = this._pshader = this._program = null, this._attributeParams = null, this._uniformParams = null, this.memorySize = 0, this._curActTexIndex = 0
            }, t._compile = function() {
                if (this._vs && this._ps && !this._attributeParams && !this._uniformParams) {
                    this._reCompile = !0, this._attributeParams = [], this._uniformParams = [];
                    var e = [this._vs, this._ps],
                        t = w.mainContext;
                    if (this._program = t.createProgram(), this._vshader = h._createShader(t, e[0], 35633), this._pshader = h._createShader(t, e[1], 35632), t.attachShader(this._program, this._vshader), t.attachShader(this._program, this._pshader), t.linkProgram(this._program), !d.isConchApp && un.debugMode && !t.getProgramParameter(this._program, 35714)) throw t.getProgramInfoLog(this._program);
                    var n, i = 0,
                        r = 0,
                        a = 0;
                    for (a = d.isConchApp ? t.getProgramParameterEx(this._vs, this._ps, "", 35721) : t.getProgramParameter(this._program, 35721), i = 0; i < a; i++) {
                        var o = null;
                        n = {
                            vartype: "attribute",
                            ivartype: 0,
                            attrib: o = d.isConchApp ? t.getActiveAttribEx(this._vs, this._ps, "", i) : t.getActiveAttrib(this._program, i),
                            location: t.getAttribLocation(this._program, o.name),
                            name: o.name,
                            type: o.type,
                            isArray: !1,
                            isSame: !1,
                            preValue: null,
                            indexOfParams: 0
                        }, this._attributeParams.push(n)
                    }
                    var s = 0;
                    for (s = d.isConchApp ? t.getProgramParameterEx(this._vs, this._ps, "", 35718) : t.getProgramParameter(this._program, 35718), i = 0; i < s; i++) {
                        var l = null;
                        l = d.isConchApp ? t.getActiveUniformEx(this._vs, this._ps, "", i) : t.getActiveUniform(this._program, i), 0 < (n = {
                            vartype: "uniform",
                            ivartype: 1,
                            attrib: o,
                            location: t.getUniformLocation(this._program, l.name),
                            name: l.name,
                            type: l.type,
                            isArray: !1,
                            isSame: !1,
                            preValue: null,
                            indexOfParams: 0
                        }).name.indexOf("[0]") && (n.name = n.name.substr(0, n.name.length - 3), n.isArray = !0, n.location = t.getUniformLocation(this._program, n.name)), this._uniformParams.push(n)
                    }
                    for (i = 0, r = this._attributeParams.length; i < r; i++)(n = this._attributeParams[i]).indexOfParams = i, n.index = 1, n.value = [n.location, null], n.codename = n.name, n.name = null != this._attributeMap[n.codename] ? this._attributeMap[n.codename] : n.codename, this._attributeParamsMap.push(n.name), this._attributeParamsMap.push(n), n._this = this, n.uploadedValue = [], n.fun = this._attribute;
                    for (i = 0, r = this._uniformParams.length; i < r; i++) switch ((n = this._uniformParams[i]).indexOfParams = i, n.index = 1, n.value = [n.location, null], n.codename = n.name, null != this._sceneUniformMap[n.codename] ? (n.name = this._sceneUniformMap[n.codename], this._sceneUniformParamsMap.push(n.name), this._sceneUniformParamsMap.push(n)) : null != this._cameraUniformMap[n.codename] ? (n.name = this._cameraUniformMap[n.codename], this._cameraUniformParamsMap.push(n.name), this._cameraUniformParamsMap.push(n)) : null != this._spriteUniformMap[n.codename] ? (n.name = this._spriteUniformMap[n.codename], this._spriteUniformParamsMap.push(n.name), this._spriteUniformParamsMap.push(n)) : null != this._materialUniformMap[n.codename] ? (n.name = this._materialUniformMap[n.codename], this._materialUniformParamsMap.push(n.name), this._materialUniformParamsMap.push(n)) : null != this._renderElementUniformMap[n.codename] ? (n.name = this._renderElementUniformMap[n.codename], this._renderElementUniformParamsMap.push(n.name), this._renderElementUniformParamsMap.push(n)) : console.log("Shader:can't find uinform name:" + n.codename + " in shader file."), n._this = this, n.uploadedValue = [], n.type) {
                        case 5124:
                            n.fun = n.isArray ? this._uniform1iv : this._uniform1i;
                            break;
                        case 5126:
                            n.fun = n.isArray ? this._uniform1fv : this._uniform1f;
                            break;
                        case 35664:
                            n.fun = n.isArray ? this._uniform_vec2v : this._uniform_vec2;
                            break;
                        case 35665:
                            n.fun = n.isArray ? this._uniform_vec3v : this._uniform_vec3;
                            break;
                        case 35666:
                            n.fun = n.isArray ? this._uniform_vec4v : this._uniform_vec4;
                            break;
                        case 35678:
                            n.fun = this._uniform_sampler2D;
                            break;
                        case 35680:
                            n.fun = this._uniform_samplerCube;
                            break;
                        case 35676:
                            n.fun = this._uniformMatrix4fv;
                            break;
                        case 35670:
                            n.fun = this._uniform1i;
                            break;
                        case 35674:
                            n.fun = this._uinformMatrix2fv;
                            break;
                        case 35675:
                            n.fun = this._uinformMatrix3fv;
                            break;
                        default:
                            throw new Error("compile shader err!")
                    }
                }
            }, t._attribute = function(e, t) {
                var n = w.mainContext,
                    i = s._enableAtributes,
                    r = e.location;
                return i[r] || n.enableVertexAttribArray(r), n.vertexAttribPointer(r, t[0], t[1], t[2], t[3], t[4]), i[r] = s._bindVertexBuffer, 1
            }, t._uniform1f = function(e, t) {
                var n = e.uploadedValue;
                return n[0] !== t ? (w.mainContext.uniform1f(e.location, n[0] = t), 1) : 0
            }, t._uniform1fv = function(e, t) {
                if (t.length < 4) {
                    var n = e.uploadedValue;
                    return n[0] !== t[0] || n[1] !== t[1] || n[2] !== t[2] || n[3] !== t[3] ? (w.mainContext.uniform1fv(e.location, t), n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], 1) : 0
                }
                return w.mainContext.uniform1fv(e.location, t), 1
            }, t._uniform_vec2 = function(e, t) {
                var n = e.uploadedValue;
                return n[0] !== t[0] || n[1] !== t[1] ? (w.mainContext.uniform2f(e.location, n[0] = t[0], n[1] = t[1]), 1) : 0
            }, t._uniform_vec2v = function(e, t) {
                if (t.length < 2) {
                    var n = e.uploadedValue;
                    return n[0] !== t[0] || n[1] !== t[1] || n[2] !== t[2] || n[3] !== t[3] ? (w.mainContext.uniform2fv(e.location, t), n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], 1) : 0
                }
                return w.mainContext.uniform2fv(e.location, t), 1
            }, t._uniform_vec3 = function(e, t) {
                var n = e.uploadedValue;
                return n[0] !== t[0] || n[1] !== t[1] || n[2] !== t[2] ? (w.mainContext.uniform3f(e.location, n[0] = t[0], n[1] = t[1], n[2] = t[2]), 1) : 0
            }, t._uniform_vec3v = function(e, t) {
                return w.mainContext.uniform3fv(e.location, t), 1
            }, t._uniform_vec4 = function(e, t) {
                var n = e.uploadedValue;
                return n[0] !== t[0] || n[1] !== t[1] || n[2] !== t[2] || n[3] !== t[3] ? (w.mainContext.uniform4f(e.location, n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3]), 1) : 0
            }, t._uniform_vec4v = function(e, t) {
                return w.mainContext.uniform4fv(e.location, t), 1
            }, t._uniformMatrix2fv = function(e, t) {
                return w.mainContext.uniformMatrix2fv(e.location, !1, t), 1
            }, t._uniformMatrix3fv = function(e, t) {
                return w.mainContext.uniformMatrix3fv(e.location, !1, t), 1
            }, t._uniformMatrix4fv = function(e, t) {
                return w.mainContext.uniformMatrix4fv(e.location, !1, t), 1
            }, t._uinformMatrix2fv = function(e, t) {
                return w.mainContext.uniformMatrix2fv(e.location, !1, t), 1
            }, t._uinformMatrix3fv = function(e, t) {
                return w.mainContext.uniformMatrix3fv(e.location, !1, t), 1
            }, t._uniform1i = function(e, t) {
                var n = e.uploadedValue;
                return n[0] !== t ? (w.mainContext.uniform1i(e.location, n[0] = t), 1) : 0
            }, t._uniform1iv = function(e, t) {
                return w.mainContext.uniform1iv(e.location, t), 1
            }, t._uniform_ivec2 = function(e, t) {
                var n = e.uploadedValue;
                return n[0] !== t[0] || n[1] !== t[1] ? (w.mainContext.uniform2i(e.location, n[0] = t[0], n[1] = t[1]), 1) : 0
            }, t._uniform_ivec2v = function(e, t) {
                return w.mainContext.uniform2iv(e.location, t), 1
            }, t._uniform_vec3i = function(e, t) {
                var n = e.uploadedValue;
                return n[0] !== t[0] || n[1] !== t[1] || n[2] !== t[2] ? (w.mainContext.uniform3i(e.location, n[0] = t[0], n[1] = t[1], n[2] = t[2]), 1) : 0
            }, t._uniform_vec3vi = function(e, t) {
                return w.mainContext.uniform3iv(e.location, t), 1
            }, t._uniform_vec4i = function(e, t) {
                var n = e.uploadedValue;
                return n[0] !== t[0] || n[1] !== t[1] || n[2] !== t[2] || n[3] !== t[3] ? (w.mainContext.uniform4i(e.location, n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3]), 1) : 0
            }, t._uniform_vec4vi = function(e, t) {
                return w.mainContext.uniform4iv(e.location, t), 1
            }, t._uniform_sampler2D = function(e, t) {
                var n = t.source || t.defaulteTexture.source,
                    i = w.mainContext,
                    r = e.uploadedValue;
                if (null == r[0]) {
                    if (7 < this._curActTexIndex) throw new Error("Shader3D: shader support textures max count is 8,can't large than it.");
                    return r[0] = this._curActTexIndex, i.uniform1i(e.location, this._curActTexIndex), i.activeTexture(h._TEXTURES[this._curActTexIndex]), n && O.bindTexture(i, 3553, n), this._curActTexIndex++, 1
                }
                return i.activeTexture(h._TEXTURES[r[0]]), n && O.bindTexture(i, 3553, n), 0
            }, t._uniform_samplerCube = function(e, t) {
                var n = t.source || t.defaulteTexture.source,
                    i = w.mainContext,
                    r = e.uploadedValue;
                if (null == r[0]) {
                    if (7 < this._curActTexIndex) throw new Error("Shader3D: shader support textures max count is 8,can't large than it.");
                    return r[0] = this._curActTexIndex, i.uniform1i(e.location, this._curActTexIndex), i.activeTexture(h._TEXTURES[this._curActTexIndex]), n ? O.bindTexture(i, 34067, n) : O.bindTexture(i, 34067, si.grayTexture.source), this._curActTexIndex++, 1
                }
                return i.activeTexture(h._TEXTURES[r[0]]), n ? O.bindTexture(i, 34067, n) : O.bindTexture(i, 34067, si.grayTexture.source), 0
            }, t._noSetValue = function(e) {
                console.log("no....:" + e.name)
            }, t.bind = function() {
                return n.activeShader = this, (n.bindShader = this).activeResource(), O.UseProgram(this._program)
            }, t.uploadAttributes = function(e, t) {
                for (var n, i, r = 0, a = 0, o = this._attributeParamsMap.length; a < o; a += 2) i = this._attributeParamsMap[a + 1], null != (n = e[this._attributeParamsMap[a]]) && (t && t[i.name] && t[i.name].bind(), r += i.fun.call(this, i, n));
                R.shaderCall += r
            }, t.uploadAttributesX = function(e, t) {
                for (var n, i, r = 0, a = 0, o = this._attributeParamsMap.length; a < o; a += 2) i = this._attributeParamsMap[a + 1], null != (n = e[this._attributeParamsMap[a]]) && (t._bind(), r += i.fun.call(this, i, n));
                R.shaderCall += r
            }, t.uploadSceneUniforms = function(e) {
                for (var t, n, i = 0, r = 0, a = this._sceneUniformParamsMap.length; r < a; r += 2) n = this._sceneUniformParamsMap[r + 1], null != (t = e[this._sceneUniformParamsMap[r]]) && (i += n.fun.call(this, n, t));
                R.shaderCall += i
            }, t.uploadCameraUniforms = function(e) {
                for (var t, n, i = 0, r = 0, a = this._cameraUniformParamsMap.length; r < a; r += 2) n = this._cameraUniformParamsMap[r + 1], null != (t = e[this._cameraUniformParamsMap[r]]) && (i += n.fun.call(this, n, t));
                R.shaderCall += i
            }, t.uploadSpriteUniforms = function(e) {
                for (var t, n, i = 0, r = 0, a = this._spriteUniformParamsMap.length; r < a; r += 2) n = this._spriteUniformParamsMap[r + 1], null != (t = e[this._spriteUniformParamsMap[r]]) && (i += n.fun.call(this, n, t));
                R.shaderCall += i
            }, t.uploadMaterialUniforms = function(e) {
                for (var t, n, i = 0, r = 0, a = this._materialUniformParamsMap.length; r < a; r += 2) n = this._materialUniformParamsMap[r + 1], null != (t = e[this._materialUniformParamsMap[r]]) && (i += n.fun.call(this, n, t));
                R.shaderCall += i
            }, t.uploadRenderElementUniforms = function(e) {
                for (var t, n, i = 0, r = 0, a = this._renderElementUniformParamsMap.length; r < a; r += 2) n = this._renderElementUniformParamsMap[r + 1], null != (t = e[this._renderElementUniformParamsMap[r]]) && (i += n.fun.call(this, n, t));
                R.shaderCall += i
            }, h.create = function(e, t, n, i, r, a, o, s) {
                return new h(e, t, n, i, r, a, o, s)
            }, h.addInclude = function(e, t) {
                D.addInclude(e, t)
            }, h._createShader = function(e, t, n) {
                var i = e.createShader(n);
                if (e.shaderSource(i, t), e.compileShader(i), un.debugMode && !e.getShaderParameter(i, 35713)) throw e.getShaderInfoLog(i);
                return i
            }, h.PERIOD_RENDERELEMENT = 0, h.PERIOD_MATERIAL = 1, h.PERIOD_SPRITE = 2, h.PERIOD_CAMERA = 3, h.PERIOD_SCENE = 4, h._TEXTURES = [33984, 33985, 33986, 33987, 33988, 33989, 33990, 33991], h._count = 0, u(h, ["shaderParamsMap", function() {
                return this.shaderParamsMap = {
                    float: 5126,
                    int: 5124,
                    bool: 35670,
                    vec2: 35664,
                    vec3: 35665,
                    vec4: 35666,
                    ivec2: 35667,
                    ivec3: 35668,
                    ivec4: 35669,
                    bvec2: 35671,
                    bvec3: 35672,
                    bvec4: 35673,
                    mat2: 35674,
                    mat3: 35675,
                    mat4: 35676,
                    sampler2D: 35678,
                    samplerCube: 35680
                }
            }, "nameKey", function() {
                return this.nameKey = new A
            }]), h
        }(),
        Un = function(n) {
            function t() {
                t.__super.call(this), this.setShaderName("BLINNPHONG"), this._albedoIntensity = 1, this._albedoColor = new Pt(1, 1, 1, 1), this._setColor(6, new Pt(1, 1, 1, 1)), this._setColor(8, new Vt(1, 1, 1)), this._setNumber(9, .078125), this._setColor(10, new Vt(1, 1, 1)), this._setNumber(0, .5), this._setColor(11, new Pt(1, 1, 0, 0)), this._enableLighting = !0, this.renderMode = 0
            }
            m(t, "t_tl.d3.core.material.BlinnPhongMaterial", n);
            var e = t.prototype;
            return e.disableLight = function() {
                this._addDisablePublicShaderDefine(un.SHADERDEFINE_POINTLIGHT | un.SHADERDEFINE_SPOTLIGHT | un.SHADERDEFINE_DIRECTIONLIGHT)
            }, e.disableFog = function() {
                this._addDisablePublicShaderDefine(un.SHADERDEFINE_FOG)
            }, e.cloneTo = function(e) {
                n.prototype.cloneTo.call(this, e);
                var t = e;
                t._enableLighting = this._enableLighting, t._albedoIntensity = this._albedoIntensity, this._albedoColor.cloneTo(t._albedoColor)
            }, g(0, e, "renderMode", null, function(e) {
                switch (e) {
                    case 0:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1, this.depthTest = 513, this._removeShaderDefine(t.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 1:
                        this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3, this.alphaTest = !0, this.depthTest = 513, this._removeShaderDefine(t.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 2:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this.depthTest = 513, this._removeShaderDefine(t.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 3:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this.depthTest = 513, this._addShaderDefine(t.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    default:
                        throw new Error("Material:renderMode value error.")
                }
                this._conchMaterial && this._conchMaterial.setRenderMode(e)
            }), g(0, e, "normalTexture", function() {
                return this._getTexture(2)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_NORMALMAP) : this._removeShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_NORMALMAP), this._setTexture(2, e)
            }), g(0, e, "reflectColor", function() {
                return this._getColor(10)
            }, function(e) {
                this._setColor(10, e)
            }), g(0, e, "tilingOffset", function() {
                return this._getColor(11)
            }, function(e) {
                if (e) {
                    var t = e.elements;
                    1 != t[0] || 1 != t[1] || 0 != t[2] || 0 != t[3] ? this._addShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_TILINGOFFSET)
                } else this._removeShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_TILINGOFFSET);
                this._setColor(11, e)
            }), g(0, e, "specularColor", function() {
                return this._getColor(8)
            }, function(e) {
                this._setColor(8, e)
            }), g(0, e, "albedoColor", function() {
                return this._albedoColor
            }, function(e) {
                var t = this._getColor(6);
                Pt.scale(e, this._albedoIntensity, t), this._albedoColor = e
            }), g(0, e, "albedoIntensity", function() {
                return this._albedoIntensity
            }, function(e) {
                if (this._albedoIntensity !== e) {
                    var t = this._getColor(6);
                    Pt.scale(this._albedoColor, e, t), this._albedoIntensity = e
                }
            }), g(0, e, "albedoTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP) : this._removeShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP), this._setTexture(1, e)
            }), g(0, e, "shininess", function() {
                return this._getNumber(9)
            }, function(e) {
                e = Math.max(0, Math.min(1, e)), this._setNumber(9, e)
            }), g(0, e, "specularTexture", function() {
                return this._getTexture(3)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP) : this._removeShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP), this._setTexture(3, e)
            }), g(0, e, "reflectTexture", function() {
                return this._getTexture(5)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_REFLECTMAP) : this._removeShaderDefine(t_tl.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_REFLECTMAP), this._setTexture(5, e)
            }), g(0, e, "enableLighting", function() {
                return this._enableLighting
            }, function(e) {
                this._enableLighting !== e && (e ? this._removeDisablePublicShaderDefine(un.SHADERDEFINE_POINTLIGHT | un.SHADERDEFINE_SPOTLIGHT | un.SHADERDEFINE_DIRECTIONLIGHT) : this._addDisablePublicShaderDefine(un.SHADERDEFINE_POINTLIGHT | un.SHADERDEFINE_SPOTLIGHT | un.SHADERDEFINE_DIRECTIONLIGHT), this._enableLighting = e)
            }), t.__init__ = function() {
                t.SHADERDEFINE_DIFFUSEMAP = t.shaderDefines.registerDefine("DIFFUSEMAP"), t.SHADERDEFINE_NORMALMAP = t.shaderDefines.registerDefine("NORMALMAP"), t.SHADERDEFINE_SPECULARMAP = t.shaderDefines.registerDefine("SPECULARMAP"), t.SHADERDEFINE_REFLECTMAP = t.shaderDefines.registerDefine("REFLECTMAP"), t.SHADERDEFINE_TILINGOFFSET = t.shaderDefines.registerDefine("TILINGOFFSET"), t.SHADERDEFINE_ADDTIVEFOG = t.shaderDefines.registerDefine("ADDTIVEFOG")
            }, t.load = function(e) {
                return x.loader.create(e, null, null, t)
            }, t.SPECULARSOURCE_DIFFUSEMAPALPHA = 0, t.SPECULARSOURCE_SPECULARMAP = 0, t.RENDERMODE_OPAQUE = 0, t.RENDERMODE_CUTOUT = 1, t.RENDERMODE_TRANSPARENT = 2, t.RENDERMODE_ADDTIVE = 3, t.SHADERDEFINE_DIFFUSEMAP = 0, t.SHADERDEFINE_NORMALMAP = 0, t.SHADERDEFINE_SPECULARMAP = 0, t.SHADERDEFINE_REFLECTMAP = 0, t.SHADERDEFINE_TILINGOFFSET = 0, t.SHADERDEFINE_ADDTIVEFOG = 0, t.ALBEDOTEXTURE = 1, t.NORMALTEXTURE = 2, t.SPECULARTEXTURE = 3, t.EMISSIVETEXTURE = 4, t.REFLECTTEXTURE = 5, t.ALBEDOCOLOR = 6, t.MATERIALSPECULAR = 8, t.SHININESS = 9, t.MATERIALREFLECT = 10, t.TILINGOFFSET = 11, u(t, ["defaultMaterial", function() {
                return this.defaultMaterial = new t
            }, "shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), t
        }(vn),
        Hn = function(e) {
            function t() {
                t.__super.call(this), this.setShaderName("ExtendTerrain"), this.renderMode = 1
            }
            m(t, "t_tl.d3.core.material.ExtendTerrainMaterial", vn);
            var n = t.prototype;
            return n._setDetailNum = function(e) {
                switch (e) {
                    case 1:
                        this._addShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);
                        break;
                    case 2:
                        this._addShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);
                        break;
                    case 3:
                        this._addShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);
                        break;
                    case 4:
                        this._addShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);
                        break;
                    case 5:
                        this._addShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(t_tl.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4)
                }
            }, n.disableLight = function() {
                this._addDisablePublicShaderDefine(un.SHADERDEFINE_POINTLIGHT | un.SHADERDEFINE_SPOTLIGHT | un.SHADERDEFINE_DIRECTIONLIGHT)
            }, g(0, n, "diffuseScaleOffset2", null, function(e) {
                this._setColor(7, e)
            }), g(0, n, "splatAlphaTexture", function() {
                return this._getTexture(0)
            }, function(e) {
                this._setTexture(0, e)
            }), g(0, n, "diffuseScaleOffset3", null, function(e) {
                this._setColor(8, e)
            }), g(0, n, "diffuseTexture1", null, function(e) {
                this._setTexture(1, e), this._setDetailNum(1)
            }), g(0, n, "renderMode", null, function(e) {
                switch (e) {
                    case 1:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.depthTest = 513;
                        break;
                    case 2:
                        this.renderQueue = 2e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.depthTest = 515;
                        break;
                    default:
                        throw new Error("ExtendTerrainMaterial:renderMode value error.")
                }
                this._conchMaterial && this._conchMaterial.setRenderMode(e)
            }), g(0, n, "diffuseTexture2", function() {
                return this._getTexture(2)
            }, function(e) {
                this._setTexture(2, e), this._setDetailNum(2)
            }), g(0, n, "diffuseScaleOffset1", null, function(e) {
                this._setColor(6, e)
            }), g(0, n, "diffuseTexture3", function() {
                return this._getTexture(3)
            }, function(e) {
                this._setTexture(3, e), this._setDetailNum(3)
            }), g(0, n, "diffuseTexture4", function() {
                return this._getTexture(4)
            }, function(e) {
                this._setTexture(4, e), this._setDetailNum(4)
            }), g(0, n, "diffuseTexture5", function() {
                return this._getTexture(5)
            }, function(e) {
                this._setTexture(5, e), this._setDetailNum(5)
            }), g(0, n, "diffuseScaleOffset4", null, function(e) {
                this._setColor(9, e)
            }), g(0, n, "diffuseScaleOffset5", null, function(e) {
                this._setColor(10, e)
            }), g(0, n, "albedo", function() {
                return this._getColor(14)
            }, function(e) {
                this._setColor(14, e)
            }), g(0, n, "ambientColor", function() {
                return this._getColor(11)
            }, function(e) {
                this._setColor(11, e)
            }), g(0, n, "diffuseColor", function() {
                return this._getColor(12)
            }, function(e) {
                this._setColor(12, e)
            }), g(0, n, "specularColor", function() {
                return this._getColor(13)
            }, function(e) {
                this._setColor(13, e)
            }), t.__init__ = function() {
                t.SHADERDEFINE_DETAIL_NUM1 = t.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM1"), t.SHADERDEFINE_DETAIL_NUM2 = t.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM2"), t.SHADERDEFINE_DETAIL_NUM3 = t.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM3"), t.SHADERDEFINE_DETAIL_NUM4 = t.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM4"), t.SHADERDEFINE_DETAIL_NUM5 = t.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM5")
            }, t.RENDERMODE_OPAQUE = 1, t.RENDERMODE_TRANSPARENT = 2, t.SPLATALPHATEXTURE = 0, t.DIFFUSETEXTURE1 = 1, t.DIFFUSETEXTURE2 = 2, t.DIFFUSETEXTURE3 = 3, t.DIFFUSETEXTURE4 = 4, t.DIFFUSETEXTURE5 = 5, t.DIFFUSESCALEOFFSET1 = 6, t.DIFFUSESCALEOFFSET2 = 7, t.DIFFUSESCALEOFFSET3 = 8, t.DIFFUSESCALEOFFSET4 = 9, t.DIFFUSESCALEOFFSET5 = 10, t.MATERIALAMBIENT = 11, t.MATERIALDIFFUSE = 12, t.MATERIALSPECULAR = 13, t.MATERIALALBEDO = 14, t.SHADERDEFINE_DETAIL_NUM1 = 0, t.SHADERDEFINE_DETAIL_NUM2 = 0, t.SHADERDEFINE_DETAIL_NUM3 = 0, t.SHADERDEFINE_DETAIL_NUM4 = 0, t.SHADERDEFINE_DETAIL_NUM5 = 0, u(t, ["shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), t
        }(),
        Gn = function(t) {
            function n() {
                n.__super.call(this), this.setShaderName("GLITTER"), this.renderMode = 1, this._setColor(3, new Pt(1, 1, 1, 1)), this._setColor(2, new Pt(1, 1, 1, 1))
            }
            m(n, "t_tl.d3.core.material.GlitterMaterial", t);
            var e = n.prototype;
            return e.setShaderName = function(e) {
                t.prototype.setShaderName.call(this, e)
            }, g(0, e, "renderMode", null, function(e) {
                switch (e) {
                    case 1:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0;
                        break;
                    case 2:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0;
                        break;
                    case 13:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
                        break;
                    case 14:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
                        break;
                    case 15:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
                        break;
                    case 16:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
                        break;
                    case 5:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
                        break;
                    case 6:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
                        break;
                    case 7:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
                        break;
                    case 8:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
                        break;
                    case 9:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
                        break;
                    case 10:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
                        break;
                    case 11:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
                        break;
                    case 12:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
                        break;
                    default:
                        throw new Error("Material:renderMode value error.")
                }
                this._conchMaterial && this._conchMaterial.setRenderMode(e)
            }), g(0, e, "diffuseTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                this._setTexture(1, e)
            }), g(0, e, "albedo", function() {
                return this._getColor(2)
            }, function(e) {
                this._setColor(2, e)
            }), g(0, e, "color", function() {
                return this._getColor(3)
            }, function(e) {
                this._setColor(3, e)
            }), n.load = function(e) {
                return x.loader.create(e, null, null, n)
            }, n.RENDERMODE_OPAQUE = 1, n.RENDERMODE_OPAQUEDOUBLEFACE = 2, n.RENDERMODE_TRANSPARENT = 13, n.RENDERMODE_TRANSPARENTDOUBLEFACE = 14, n.RENDERMODE_ADDTIVE = 15, n.RENDERMODE_ADDTIVEDOUBLEFACE = 16, n.RENDERMODE_DEPTHREAD_TRANSPARENT = 5, n.RENDERMODE_DEPTHREAD_TRANSPARENTDOUBLEFACE = 6, n.RENDERMODE_DEPTHREAD_ADDTIVE = 7, n.RENDERMODE_DEPTHREAD_ADDTIVEDOUBLEFACE = 8, n.RENDERMODE_NONDEPTH_TRANSPARENT = 9, n.RENDERMODE_NONDEPTH_TRANSPARENTDOUBLEFACE = 10, n.RENDERMODE_NONDEPTH_ADDTIVE = 11, n.RENDERMODE_NONDEPTH_ADDTIVEDOUBLEFACE = 12, n.DIFFUSETEXTURE = 1, n.ALBEDO = 2, n.UNICOLOR = 3, u(n, ["defaultMaterial", function() {
                return this.defaultMaterial = new n
            }]), n
        }(vn),
        zn = function(i) {
            function n() {
                if (this._transformUV = null, n.__super.call(this), !t_tl.d3.core.material.PBRMaterial.pbrlutTex) {
                    var e = C.window.__pbrlutdata;
                    if (!e) throw alert("no pbr lutdata, need pbrlut.js"), "no pbr lutdata, need pbrlut.js";
                    var t = ni.create(new Uint32Array(e).buffer, 256, 256, 9728, 9728, !1);
                    t_tl.d3.core.material.PBRMaterial.pbrlutTex = t
                }
                this._setTexture(4, t_tl.d3.core.material.PBRMaterial.pbrlutTex), this.setShaderName("PBR"), this._setNumber(0, .5), this.use_groundtruth = !1
            }
            m(n, "t_tl.d3.core.material.PBRMaterial", i);
            var e = n.prototype;
            return e.disableLight = function() {
                this._addDisablePublicShaderDefine(un.SHADERDEFINE_POINTLIGHT | un.SHADERDEFINE_SPOTLIGHT | un.SHADERDEFINE_DIRECTIONLIGHT)
            }, e.disableFog = function() {
                this._addDisablePublicShaderDefine(un.SHADERDEFINE_FOG)
            }, e.onAsynLoaded = function(e, t, n) {
                i.prototype.onAsynLoaded.call(this, e, t, n)
            }, e.radicalInverse_VdC = function(e) {
                var t, n = new Uint32Array(1);
                return t = (16711935 & (t = (252645135 & (t = (858993459 & (t = (1431655765 & (t = (t = e) << 16 | t >>> 16)) << 1 | (2863311530 & t) >>> 1)) << 2 | (3435973836 & t) >>> 2)) << 4 | (4042322160 & t) >>> 4)) << 8 | (4278255360 & t) >>> 8, n[0] = t, 2.3283064365386963e-10 * n[0]
            }, e.createHammersleyTex = function(e, t) {
                var n = new Uint8Array(e * t * 4),
                    i = 0,
                    r = 0;
                for (r = 0; r < e * t; r++) {
                    var a = this.radicalInverse_VdC(r);
                    n[i++] = 255 * a, n[i++] = 0, n[i++] = 0, n[i++] = 255
                }
                return n
            }, g(0, e, "normalTexture", function() {
                return this._getTexture(2)
            }, function(e) {
                this._setTexture(2, e)
            }), g(0, e, "has_tangent", null, function(e) {
                this._addShaderDefine(n.SHADERDEFINE_HAS_TANGENT)
            }), g(0, e, "roughness", function() {
                return this._getNumber(6)
            }, function(e) {
                this._setNumber(6, e), this._addShaderDefine(n.SHADERDEFINE_FIX_ROUGHNESS)
            }), g(0, e, "metaless", function() {
                return this._getNumber(7)
            }, function(e) {
                this._setNumber(7, e), this._addShaderDefine(n.SHADERDEFINE_FIX_METALESS)
            }), g(0, e, "pbrlutTexture", function() {
                return this._getTexture(4)
            }, function(e) {
                this._setTexture(4, e)
            }), g(0, e, "use_groundtruth", null, function(e) {
                if (e) {
                    if (this._addShaderDefine(n.SHADERDEFINE_USE_GROUNDTRUTH), !t_tl.d3.core.material.PBRMaterial.HammersleyNoiseTex) {
                        var t = this.createHammersleyTex(32, 32);
                        t_tl.d3.core.material.PBRMaterial.HammersleyNoiseTex = ni.create(t.buffer, 32, 32, 9728, 9728, !1)
                    }
                    this._setTexture(15, n.HammersleyNoiseTex)
                } else t_tl.d3.core.material.PBRMaterial.HammersleyNoiseTex = null, this._removeShaderDefine(n.SHADERDEFINE_USE_GROUNDTRUTH)
            }), g(0, e, "transformUV", function() {
                return this._transformUV
            }, function(e) {
                this._transformUV = e, this._setMatrix4x4(8, e.matrix), this._conchMaterial && this._conchMaterial.setShaderValue(8, e.matrix.elements, 0)
            }), g(0, e, "diffuseTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                this._setTexture(1, e)
            }), g(0, e, "renderMode", null, function(e) {
                switch (e) {
                    case 1:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1;
                        break;
                    case 2:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !1;
                        break;
                    case 3:
                        this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3;
                        break;
                    case 13:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
                        break;
                    default:
                        throw new Error("PBRMaterial:renderMode value error.")
                }
            }), g(0, e, "pbrInfoTexture", function() {
                return this._getTexture(3)
            }, function(e) {
                this._setTexture(3, e), this._addShaderDefine(n.SHADERDEFINE_HAS_PBRINFO)
            }), g(0, e, "testClipZ", null, function(e) {
                this._addShaderDefine(n.SHADERDEFINE_TEST_CLIPZ)
            }), n.__init__ = function() {
                n.SHADERDEFINE_FIX_METALESS = n.shaderDefines.registerDefine("FIX_METALESS"), n.SHADERDEFINE_FIX_ROUGHNESS = n.shaderDefines.registerDefine("FIX_ROUGHNESS"), n.SHADERDEFINE_HAS_TANGENT = n.shaderDefines.registerDefine("HAS_TANGENT"), n.SHADERDEFINE_HAS_PBRINFO = n.shaderDefines.registerDefine("HAS_PBRINFO"), n.SHADERDEFINE_USE_GROUNDTRUTH = n.shaderDefines.registerDefine("USE_GROUNDTRUTH"), n.SHADERDEFINE_TEST_CLIPZ = n.shaderDefines.registerDefine("CLIPZ")
            }, n.load = function(e) {
                return x.loader.create(e, null, null, n)
            }, n.DIFFUSETEXTURE = 1, n.NORMALTEXTURE = 2, n.PBRINFOTEXTURE = 3, n.PBRLUTTEXTURE = 4, n.UVANIAGE = 5, n.MATERIALROUGHNESS = 6, n.MATERIALMETALESS = 7, n.UVMATRIX = 8, n.UVAGE = 9, n.AOOBJPOS = 14, n.HSNOISETEXTURE = 15, n.SHADERDEFINE_FIX_ROUGHNESS = 0, n.SHADERDEFINE_FIX_METALESS = 0, n.SHADERDEFINE_HAS_TANGENT = 0, n.SHADERDEFINE_TEST_CLIPZ = 0, n.SHADERDEFINE_HAS_PBRINFO = 0, n.SHADERDEFINE_USE_GROUNDTRUTH = 0, n.RENDERMODE_OPAQUE = 1, n.RENDERMODE_OPAQUEDOUBLEFACE = 2, n.RENDERMODE_CUTOUT = 3, n.RENDERMODE_CUTOUTDOUBLEFACE = 4, n.RENDERMODE_TRANSPARENT = 13, n.pbrlutTex = null, n.HammersleyNoiseTex = null, u(n, ["defaultMaterial", function() {
                return this.defaultMaterial = new n
            }, "shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), n
        }(vn),
        kn = function(e) {
            function t() {
                t.__super.call(this), this.setShaderName("PBRSpecular"), this._setColor(7, new Pt(1, 1, 1, 1)), this._setColor(9, new Pt(0, 0, 0, 0)), this._setColor(8, new Pt(.2, .2, .2, .2)), this._setNumber(10, .5), this._setNumber(11, 1), this._setNumber(12, 0), this._setNumber(13, 1), this._setNumber(14, 1), this._setNumber(15, .001), this._setBool(16, !1), this._setNumber(0, .5)
            }
            m(t, "t_tl.d3.core.material.PBRSpecularMaterial", vn);
            var n = t.prototype;
            return g(0, n, "albedoColor", function() {
                return this._getColor(7)
            }, function(e) {
                this._setColor(7, e)
            }), g(0, n, "specularTexture", function() {
                return this._getTexture(2)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_SPECULARTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_SPECULARTEXTURE), this._setTexture(2, e)
            }), g(0, n, "albedoTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_DIFFUSETEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_DIFFUSETEXTURE), this._setTexture(1, e)
            }), g(0, n, "occlusionTexture", function() {
                return this._getTexture(5)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_OCCLUSIONTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_OCCLUSIONTEXTURE), this._setTexture(5, e)
            }), g(0, n, "normalTexture", function() {
                return this._getTexture(3)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_NORMALTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_NORMALTEXTURE), this._setTexture(3, e)
            }), g(0, n, "parallaxTexture", function() {
                return this._getTexture(4)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_PARALLAXTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_PARALLAXTEXTURE), this._setTexture(4, e)
            }), g(0, n, "emissionColor", function() {
                return this._getColor(9)
            }, function(e) {
                this._setColor(9, e)
            }), g(0, n, "normalTextureScale", function() {
                return this._getNumber(14)
            }, function(e) {
                this._setNumber(14, e)
            }), g(0, n, "parallaxTextureScale", function() {
                return this._getNumber(15)
            }, function(e) {
                e = Math.max(.005, Math.min(.08, e)), this._setNumber(15, e)
            }), g(0, n, "occlusionTextureStrength", function() {
                return this._getNumber(13)
            }, function(e) {
                e = Math.max(0, Math.min(1, e)), this._setNumber(13, e)
            }), g(0, n, "specularColor", function() {
                return this._getColor(8)
            }, function(e) {
                this._setColor(8, e)
            }), g(0, n, "smoothness", function() {
                return this._getNumber(10)
            }, function(e) {
                e = Math.max(0, Math.min(1, e)), this._setNumber(10, e)
            }), g(0, n, "smoothnessTextureScale", function() {
                return this._getNumber(11)
            }, function(e) {
                e = Math.max(0, Math.min(1, e)), this._setNumber(11, e)
            }), g(0, n, "smoothnessSource", function() {
                return this._getNumber(12)
            }, function(e) {
                1 == e ? this._addShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA) : (this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA), e = 0), this._setNumber(12, e)
            }), g(0, n, "enableEmission", function() {
                return this._getBool(16)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_EMISSION) : this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_EMISSION), this._setBool(16, e)
            }), g(0, n, "emissionTexture", function() {
                return this._getTexture(6)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_EMISSIONTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_EMISSIONTEXTURE), this._setTexture(6, e)
            }), g(0, n, "tilingOffset", function() {
                return this._getColor(17)
            }, function(e) {
                if (e) {
                    var t = e.elements;
                    1 != t[0] || 1 != t[1] || 0 != t[2] || 0 != t[3] ? this._addShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_TILINGOFFSET)
                } else this._removeShaderDefine(t_tl.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_TILINGOFFSET);
                this._setColor(17, e)
            }), t.__init__ = function() {
                t.SHADERDEFINE_DIFFUSETEXTURE = t.shaderDefines.registerDefine("DIFFUSETEXTURE"), t.SHADERDEFINE_SPECULARTEXTURE = t.shaderDefines.registerDefine("SPECULARTEXTURE"), t.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = t.shaderDefines.registerDefine("SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA"), t.SHADERDEFINE_NORMALTEXTURE = t.shaderDefines.registerDefine("NORMALTEXTURE"), t.SHADERDEFINE_PARALLAXTEXTURE = t.shaderDefines.registerDefine("PARALLAXTEXTURE"), t.SHADERDEFINE_OCCLUSIONTEXTURE = t.shaderDefines.registerDefine("OCCLUSIONTEXTURE"), t.SHADERDEFINE_EMISSION = t.shaderDefines.registerDefine("EMISSION"), t.SHADERDEFINE_EMISSIONTEXTURE = t.shaderDefines.registerDefine("EMISSIONTEXTURE"), t.SHADERDEFINE_TILINGOFFSET = t.shaderDefines.registerDefine("TILINGOFFSET")
            }, t.SmoothnessSource_MetallicGlossTexture_Alpha = 0, t.SmoothnessSource_DiffuseTexture_Alpha = 1, t.SHADERDEFINE_DIFFUSETEXTURE = 0, t.SHADERDEFINE_NORMALTEXTURE = 0, t.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = 0, t.SHADERDEFINE_SPECULARTEXTURE = 0, t.SHADERDEFINE_OCCLUSIONTEXTURE = 0, t.SHADERDEFINE_PARALLAXTEXTURE = 0, t.SHADERDEFINE_EMISSION = 0, t.SHADERDEFINE_EMISSIONTEXTURE = 0, t.SHADERDEFINE_TILINGOFFSET = 0, t.DIFFUSETEXTURE = 1, t.SPECULARTEXTURE = 2, t.NORMALTEXTURE = 3, t.PARALLAXTEXTURE = 4, t.OCCLUSIONTEXTURE = 5, t.EMISSIONTEXTURE = 6, t.DIFFUSECOLOR = 7, t.SPECULARCOLOR = 8, t.EMISSIONCOLOR = 9, t.SMOOTHNESS = 10, t.SMOOTHNESSSCALE = 11, t.SMOOTHNESSSOURCE = 12, t.OCCLUSIONSTRENGTH = 13, t.NORMALSCALE = 14, t.PARALLAXSCALE = 15, t.ENABLEEMISSION = 16, t.TILINGOFFSET = 17, u(t, ["shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), t
        }(),
        Wn = function(e) {
            function t() {
                t.__super.call(this), this.setShaderName("PBRStandard"), this._setColor(7, new Pt(1, 1, 1, 1)), this._setColor(8, new Pt(0, 0, 0, 0)), this._setNumber(9, 0), this._setNumber(10, .5), this._setNumber(11, 1), this._setNumber(12, 0), this._setNumber(13, 1), this._setNumber(14, 1), this._setNumber(15, .001), this._setBool(16, !1), this._setNumber(0, .5)
            }
            m(t, "t_tl.d3.core.material.PBRStandardMaterial", vn);
            var n = t.prototype;
            return g(0, n, "albedoColor", function() {
                return this._getColor(7)
            }, function(e) {
                this._setColor(7, e)
            }), g(0, n, "albedoTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_DIFFUSETEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_DIFFUSETEXTURE), this._setTexture(1, e)
            }), g(0, n, "enableEmission", function() {
                return this._getBool(16)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_EMISSION) : this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_EMISSION), this._setBool(16, e)
            }), g(0, n, "metallicGlossTexture", function() {
                return this._getTexture(2)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE), this._setTexture(2, e)
            }), g(0, n, "occlusionTexture", function() {
                return this._getTexture(5)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_OCCLUSIONTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_OCCLUSIONTEXTURE), this._setTexture(5, e)
            }), g(0, n, "normalTexture", function() {
                return this._getTexture(3)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_NORMALTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_NORMALTEXTURE), this._setTexture(3, e)
            }), g(0, n, "parallaxTexture", function() {
                return this._getTexture(4)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_PARALLAXTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_PARALLAXTEXTURE), this._setTexture(4, e)
            }), g(0, n, "emissionColor", function() {
                return this._getColor(8)
            }, function(e) {
                this._setColor(8, e)
            }), g(0, n, "normalTextureScale", function() {
                return this._getNumber(14)
            }, function(e) {
                this._setNumber(14, e)
            }), g(0, n, "parallaxTextureScale", function() {
                return this._getNumber(15)
            }, function(e) {
                e = Math.max(.005, Math.min(.08, e)), this._setNumber(15, e)
            }), g(0, n, "occlusionTextureStrength", function() {
                return this._getNumber(13)
            }, function(e) {
                e = Math.max(0, Math.min(1, e)), this._setNumber(13, e)
            }), g(0, n, "metallic", function() {
                return this._getNumber(9)
            }, function(e) {
                e = Math.max(0, Math.min(1, e)), this._setNumber(9, e)
            }), g(0, n, "smoothness", function() {
                return this._getNumber(10)
            }, function(e) {
                e = Math.max(0, Math.min(1, e)), this._setNumber(10, e)
            }), g(0, n, "smoothnessTextureScale", function() {
                return this._getNumber(11)
            }, function(e) {
                e = Math.max(0, Math.min(1, e)), this._setNumber(11, e)
            }), g(0, n, "smoothnessSource", function() {
                return this._getNumber(12)
            }, function(e) {
                1 == e ? this._addShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA) : (this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA), e = 0), this._setNumber(12, e)
            }), g(0, n, "emissionTexture", function() {
                return this._getTexture(6)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_EMISSIONTEXTURE) : this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_EMISSIONTEXTURE), this._setTexture(6, e)
            }), g(0, n, "tilingOffset", function() {
                return this._getColor(17)
            }, function(e) {
                if (e) {
                    var t = e.elements;
                    1 != t[0] || 1 != t[1] || 0 != t[2] || 0 != t[3] ? this._addShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_TILINGOFFSET)
                } else this._removeShaderDefine(t_tl.d3.core.material.PBRStandardMaterial.SHADERDEFINE_TILINGOFFSET);
                this._setColor(17, e)
            }), t.__init__ = function() {
                t.SHADERDEFINE_DIFFUSETEXTURE = t.shaderDefines.registerDefine("DIFFUSETEXTURE"), t.SHADERDEFINE_METALLICGLOSSTEXTURE = t.shaderDefines.registerDefine("METALLICGLOSSTEXTURE"), t.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = t.shaderDefines.registerDefine("SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA"), t.SHADERDEFINE_NORMALTEXTURE = t.shaderDefines.registerDefine("NORMALTEXTURE"), t.SHADERDEFINE_PARALLAXTEXTURE = t.shaderDefines.registerDefine("PARALLAXTEXTURE"), t.SHADERDEFINE_OCCLUSIONTEXTURE = t.shaderDefines.registerDefine("OCCLUSIONTEXTURE"), t.SHADERDEFINE_EMISSION = t.shaderDefines.registerDefine("EMISSION"), t.SHADERDEFINE_EMISSIONTEXTURE = t.shaderDefines.registerDefine("EMISSIONTEXTURE"), t.SHADERDEFINE_TILINGOFFSET = t.shaderDefines.registerDefine("TILINGOFFSET")
            }, t.SmoothnessSource_MetallicGlossTexture_Alpha = 0, t.SmoothnessSource_DiffuseTexture_Alpha = 1, t.SHADERDEFINE_DIFFUSETEXTURE = 0, t.SHADERDEFINE_NORMALTEXTURE = 0, t.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = 0, t.SHADERDEFINE_METALLICGLOSSTEXTURE = 0, t.SHADERDEFINE_OCCLUSIONTEXTURE = 0, t.SHADERDEFINE_PARALLAXTEXTURE = 0, t.SHADERDEFINE_EMISSION = 0, t.SHADERDEFINE_EMISSIONTEXTURE = 0, t.SHADERDEFINE_TILINGOFFSET = 0, t.DIFFUSETEXTURE = 1, t.METALLICGLOSSTEXTURE = 2, t.NORMALTEXTURE = 3, t.PARALLAXTEXTURE = 4, t.OCCLUSIONTEXTURE = 5, t.EMISSIONTEXTURE = 6, t.DIFFUSECOLOR = 7, t.EMISSIONCOLOR = 8, t.METALLIC = 9, t.SMOOTHNESS = 10, t.SMOOTHNESSSCALE = 11, t.SMOOTHNESSSOURCE = 12, t.OCCLUSIONSTRENGTH = 13, t.NORMALSCALE = 14, t.PARALLAXSCALE = 15, t.ENABLEEMISSION = 16, t.TILINGOFFSET = 17, u(t, ["shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), t
        }(),
        Xn = function(s) {
            function l() {
                this._transformUV = null, l.__super.call(this), this.setShaderName("SIMPLE"), this._setColor(9, new Vt(.6, .6, .6)), this._setColor(10, new Vt(1, 1, 1)), this._setColor(11, new Pt(1, 1, 1, 8)), this._setColor(12, new Vt(1, 1, 1)), this._setColor(7, new Pt(1, 1, 1, 1)), this._setNumber(0, .5), this._setColor(15, new Pt(1, 1, 0, 0)), this.renderMode = 1
            }
            m(l, "t_tl.d3.core.material.StandardMaterial", s);
            var e = l.prototype;
            return e.disableLight = function() {
                this._addDisablePublicShaderDefine(un.SHADERDEFINE_POINTLIGHT | un.SHADERDEFINE_SPOTLIGHT | un.SHADERDEFINE_DIRECTIONLIGHT)
            }, e.disableFog = function() {
                this._addDisablePublicShaderDefine(un.SHADERDEFINE_FOG)
            }, e.onAsynLoaded = function(e, t, n) {
                var i = t[0];
                if (i.version) s.prototype.onAsynLoaded.call(this, e, t, n);
                else {
                    var r = t[1],
                        a = i.props;
                    for (var o in a) this[o] = a[o];
                    l._parseStandardMaterial(r, this, i), this._endLoaded()
                }
            }, e.cloneTo = function(e) {
                s.prototype.cloneTo.call(this, e);
                var t = e;
                this._transformUV && (t._transformUV = this._transformUV.clone())
            }, g(0, e, "ambientColor", function() {
                return this._getColor(9)
            }, function(e) {
                this._setColor(9, e)
            }), g(0, e, "ambientTexture", function() {
                return this._getTexture(5)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_AMBIENTMAP) : this._removeShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_AMBIENTMAP), this._setTexture(5, e)
            }), g(0, e, "renderMode", null, function(e) {
                switch (e) {
                    case 1:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 2:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 3:
                        this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3, this.alphaTest = !0, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 4:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !0, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 13:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 14:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 15:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 16:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 5:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 6:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 7:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 8:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 9:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 10:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 11:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 12:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    default:
                        throw new Error("Material:renderMode value error.")
                }
                this._conchMaterial && this._conchMaterial.setRenderMode(e)
            }), g(0, e, "reflectColor", function() {
                return this._getColor(12)
            }, function(e) {
                this._setColor(12, e)
            }), g(0, e, "tilingOffset", function() {
                return this._getColor(15)
            }, function(e) {
                if (e) {
                    var t = e.elements;
                    1 != t[0] || 1 != t[1] || 0 != t[2] || 0 != t[3] ? this._addShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_TILINGOFFSET)
                } else this._removeShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_TILINGOFFSET);
                this._setColor(15, e)
            }), g(0, e, "albedo", function() {
                return this._getColor(7)
            }, function(e) {
                this._setColor(7, e)
            }), g(0, e, "diffuseColor", function() {
                return this._getColor(10)
            }, function(e) {
                this._setColor(10, e)
            }), g(0, e, "albedoColor", function() {
                return this._getColor(7)
            }, function(e) {
                this._setColor(7, e)
            }), g(0, e, "specularColor", function() {
                return this._getColor(11)
            }, function(e) {
                this._setColor(11, e)
            }), g(0, e, "diffuseTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_DIFFUSEMAP) : this._removeShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_DIFFUSEMAP), this._setTexture(1, e)
            }), g(0, e, "normalTexture", function() {
                return this._getTexture(2)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_NORMALMAP) : this._removeShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_NORMALMAP), this._setTexture(2, e)
            }), g(0, e, "specularTexture", function() {
                return this._getTexture(3)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_SPECULARMAP) : this._removeShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_SPECULARMAP), this._setTexture(3, e)
            }), g(0, e, "emissiveTexture", function() {
                return this._getTexture(4)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_EMISSIVEMAP) : this._removeShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_EMISSIVEMAP), this._setTexture(4, e)
            }), g(0, e, "reflectTexture", function() {
                return this._getTexture(6)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_REFLECTMAP) : this._removeShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_REFLECTMAP), this._setTexture(6, e)
            }), g(0, e, "transformUV", function() {
                return this._transformUV
            }, function(e) {
                this._transformUV = e, this._setMatrix4x4(13, e.matrix), e ? this._addShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_UVTRANSFORM) : this._removeShaderDefine(t_tl.d3.core.material.StandardMaterial.SHADERDEFINE_UVTRANSFORM), this._conchMaterial && this._conchMaterial.setShaderValue(13, e.matrix.elements, 0)
            }), l.__init__ = function() {
                l.SHADERDEFINE_DIFFUSEMAP = l.shaderDefines.registerDefine("DIFFUSEMAP"), l.SHADERDEFINE_NORMALMAP = l.shaderDefines.registerDefine("NORMALMAP"), l.SHADERDEFINE_SPECULARMAP = l.shaderDefines.registerDefine("SPECULARMAP"), l.SHADERDEFINE_EMISSIVEMAP = l.shaderDefines.registerDefine("EMISSIVEMAP"), l.SHADERDEFINE_AMBIENTMAP = l.shaderDefines.registerDefine("AMBIENTMAP"), l.SHADERDEFINE_REFLECTMAP = l.shaderDefines.registerDefine("REFLECTMAP"), l.SHADERDEFINE_UVTRANSFORM = l.shaderDefines.registerDefine("UVTRANSFORM"), l.SHADERDEFINE_TILINGOFFSET = l.shaderDefines.registerDefine("TILINGOFFSET"), l.SHADERDEFINE_ADDTIVEFOG = l.shaderDefines.registerDefine("ADDTIVEFOG")
            }, l.load = function(e) {
                return x.loader.create(e, null, null, l)
            }, l._parseStandardMaterial = function(e, t, n) {
                var i = n.customProps,
                    r = i.ambientColor;
                t.ambientColor = new Vt(r[0], r[1], r[2]);
                var a = i.diffuseColor;
                t.diffuseColor = new Vt(a[0], a[1], a[2]);
                var o = i.specularColor;
                t.specularColor = new Pt(o[0], o[1], o[2], o[3]);
                var s = i.reflectColor;
                t.reflectColor = new Vt(s[0], s[1], s[2]);
                var l = i.albedoColor;
                l && (t.albedo = new Pt(l[0], l[1], l[2], l[3]));
                var h = i.diffuseTexture.texture2D;
                h && (t.diffuseTexture = Ae.getRes(e[h]));
                var _ = i.normalTexture.texture2D;
                _ && (t.normalTexture = Ae.getRes(e[_]));
                var u = i.specularTexture.texture2D;
                u && (t.specularTexture = Ae.getRes(e[u]));
                var c = i.emissiveTexture.texture2D;
                c && (t.emissiveTexture = Ae.getRes(e[c]));
                var d = i.ambientTexture.texture2D;
                d && (t.ambientTexture = Ae.getRes(e[d]));
                var f = i.reflectTexture.texture2D;
                f && (t.reflectTexture = Ae.getRes(e[f]))
            }, l.RENDERMODE_OPAQUE = 1, l.RENDERMODE_OPAQUEDOUBLEFACE = 2, l.RENDERMODE_CUTOUT = 3, l.RENDERMODE_CUTOUTDOUBLEFACE = 4, l.RENDERMODE_TRANSPARENT = 13, l.RENDERMODE_TRANSPARENTDOUBLEFACE = 14, l.RENDERMODE_ADDTIVE = 15, l.RENDERMODE_ADDTIVEDOUBLEFACE = 16, l.RENDERMODE_DEPTHREAD_TRANSPARENT = 5, l.RENDERMODE_DEPTHREAD_TRANSPARENTDOUBLEFACE = 6, l.RENDERMODE_DEPTHREAD_ADDTIVE = 7, l.RENDERMODE_DEPTHREAD_ADDTIVEDOUBLEFACE = 8, l.RENDERMODE_NONDEPTH_TRANSPARENT = 9, l.RENDERMODE_NONDEPTH_TRANSPARENTDOUBLEFACE = 10, l.RENDERMODE_NONDEPTH_ADDTIVE = 11, l.RENDERMODE_NONDEPTH_ADDTIVEDOUBLEFACE = 12, l.SHADERDEFINE_DIFFUSEMAP = 0, l.SHADERDEFINE_NORMALMAP = 0, l.SHADERDEFINE_SPECULARMAP = 0, l.SHADERDEFINE_EMISSIVEMAP = 0, l.SHADERDEFINE_AMBIENTMAP = 0, l.SHADERDEFINE_REFLECTMAP = 0, l.SHADERDEFINE_UVTRANSFORM = 0, l.SHADERDEFINE_TILINGOFFSET = 0, l.SHADERDEFINE_ADDTIVEFOG = 0, l.DIFFUSETEXTURE = 1, l.NORMALTEXTURE = 2, l.SPECULARTEXTURE = 3, l.EMISSIVETEXTURE = 4, l.AMBIENTTEXTURE = 5, l.REFLECTTEXTURE = 6, l.ALBEDO = 7, l.UVANIAGE = 8, l.MATERIALAMBIENT = 9, l.MATERIALDIFFUSE = 10, l.MATERIALSPECULAR = 11, l.MATERIALREFLECT = 12, l.UVMATRIX = 13, l.UVAGE = 14, l.TILINGOFFSET = 15, u(l, ["defaultMaterial", function() {
                return this.defaultMaterial = new l
            }, "shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), l
        }(vn),
        Zn = function(t) {
            function n() {
                this._diffuseScale1 = null, this._diffuseScale2 = null, this._diffuseScale3 = null, this._diffuseScale4 = null, n.__super.call(this), this.setShaderName("Terrain"), this.renderMode = 1, this._diffuseScale1 = new Ot, this._diffuseScale2 = new Ot, this._diffuseScale3 = new Ot, this._diffuseScale4 = new Ot, this.ambientColor = new Vt(.6, .6, .6), this.diffuseColor = new Vt(1, 1, 1), this.specularColor = new Pt(.2, .2, .2, 32)
            }
            m(n, "t_tl.d3.core.material.TerrainMaterial", t);
            var e = n.prototype;
            return e.setDiffuseScale1 = function(e, t) {
                this._diffuseScale1.x = e, this._diffuseScale1.y = t, this._setColor(6, this._diffuseScale1)
            }, e.setDiffuseScale2 = function(e, t) {
                this._diffuseScale2.x = e, this._diffuseScale2.y = t, this._setColor(7, this._diffuseScale2)
            }, e.setDiffuseScale3 = function(e, t) {
                this._diffuseScale3.x = e, this._diffuseScale3.y = t, this._setColor(8, this._diffuseScale3)
            }, e.setDiffuseScale4 = function(e, t) {
                this._diffuseScale4.x = e, this._diffuseScale4.y = t, this._setColor(9, this._diffuseScale4)
            }, e.setDetailNum = function(e) {
                switch (e) {
                    case 1:
                        this._addShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM4);
                        break;
                    case 2:
                        this._addShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM4);
                        break;
                    case 3:
                        this._addShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM4);
                        break;
                    case 4:
                        this._addShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(t_tl.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM3)
                }
            }, e.disableLight = function() {
                this._addDisablePublicShaderDefine(un.SHADERDEFINE_POINTLIGHT | un.SHADERDEFINE_SPOTLIGHT | un.SHADERDEFINE_DIRECTIONLIGHT)
            }, e.setShaderName = function(e) {
                t.prototype.setShaderName.call(this, e)
            }, g(0, e, "renderMode", null, function(e) {
                switch (e) {
                    case 1:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.depthTest = 513;
                        break;
                    case 2:
                        this.renderQueue = 2e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.depthTest = 515;
                        break;
                    default:
                        throw new Error("TerrainMaterial:renderMode value error.")
                }
                this._conchMaterial && this._conchMaterial.setRenderMode(e)
            }), g(0, e, "diffuseTexture2", function() {
                return this._getTexture(3)
            }, function(e) {
                this._setTexture(3, e)
            }), g(0, e, "ambientColor", function() {
                return this._getColor(10)
            }, function(e) {
                this._setColor(10, e)
            }), g(0, e, "diffuseTexture4", function() {
                return this._getTexture(5)
            }, function(e) {
                this._setTexture(5, e)
            }), g(0, e, "diffuseColor", function() {
                return this._getColor(11)
            }, function(e) {
                this._setColor(11, e)
            }), g(0, e, "diffuseTexture1", function() {
                return this._getTexture(2)
            }, function(e) {
                this._setTexture(2, e)
            }), g(0, e, "specularColor", function() {
                return this._getColor(12)
            }, function(e) {
                this._setColor(12, e)
            }), g(0, e, "diffuseTexture3", function() {
                return this._getTexture(4)
            }, function(e) {
                this._setTexture(4, e)
            }), g(0, e, "splatAlphaTexture", function() {
                return this._getTexture(0)
            }, function(e) {
                this._setTexture(0, e)
            }), g(0, e, "normalTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                this._setTexture(1, e)
            }), n.__init__ = function() {
                n.SHADERDEFINE_DETAIL_NUM1 = n.shaderDefines.registerDefine("DETAIL_NUM1"), n.SHADERDEFINE_DETAIL_NUM2 = n.shaderDefines.registerDefine("DETAIL_NUM2"), n.SHADERDEFINE_DETAIL_NUM4 = n.shaderDefines.registerDefine("DETAIL_NUM4"), n.SHADERDEFINE_DETAIL_NUM3 = n.shaderDefines.registerDefine("DETAIL_NUM3")
            }, n.load = function(e) {
                return x.loader.create(e, null, null, n)
            }, n.RENDERMODE_OPAQUE = 1, n.RENDERMODE_TRANSPARENT = 2, n.SPLATALPHATEXTURE = 0, n.NORMALTEXTURE = 1, n.DIFFUSETEXTURE1 = 2, n.DIFFUSETEXTURE2 = 3, n.DIFFUSETEXTURE3 = 4, n.DIFFUSETEXTURE4 = 5, n.DIFFUSESCALE1 = 6, n.DIFFUSESCALE2 = 7, n.DIFFUSESCALE3 = 8, n.DIFFUSESCALE4 = 9, n.MATERIALAMBIENT = 10, n.MATERIALDIFFUSE = 11, n.MATERIALSPECULAR = 12, n.SHADERDEFINE_DETAIL_NUM1 = 0, n.SHADERDEFINE_DETAIL_NUM2 = 0, n.SHADERDEFINE_DETAIL_NUM3 = 0, n.SHADERDEFINE_DETAIL_NUM4 = 0, u(n, ["defaultMaterial", function() {
                return this.defaultMaterial = new n
            }, "shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), n
        }(vn),
        Yn = function(i) {
            function t() {
                this._useVertexDeep = !1, t.__super.call(this), this.setShaderName("Water")
            }
            m(t, "t_tl.d3.core.material.WaterMaterial", i);
            var e = t.prototype;
            return e.disableFog = function() {
                this._addDisablePublicShaderDefine(un.SHADERDEFINE_FOG)
            }, e.onAsynLoaded = function(e, t, n) {
                i.prototype.onAsynLoaded.call(this, e, t, n)
            }, g(0, e, "diffuseTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                this._setTexture(1, e)
            }), g(0, e, "normalTexture", function() {
                return this._getTexture(2)
            }, function(e) {
                this._setTexture(2, e)
            }), g(0, e, "underWaterTexture", function() {
                return this._getTexture(3)
            }, function(e) {
                this._setTexture(3, e)
            }), g(0, e, "deepColorTexture", function() {
                return this._getTexture(10)
            }, function(e) {
                this._setTexture(10, e)
            }), g(0, e, "useFoam", null, function(e) {
                e ? this._addShaderDefine(t.SHADERDEFINE_USE_FOAM) : this._removeShaderDefine(t.SHADERDEFINE_USE_FOAM)
            }), g(0, e, "skyTexture", function() {
                return this._getTexture(11)
            }, function(e) {
                this._setTexture(11, e)
            }), g(0, e, "deepScale", function() {
                return this._getNumber(20)
            }, function(e) {
                this._setNumber(20, e)
            }), g(0, e, "detailTexture", function() {
                return this._getTexture(9)
            }, function(e) {
                this._setTexture(9, e)
            }), g(0, e, "foamTexture", function() {
                return this._getTexture(17)
            }, function(e) {
                this._setTexture(17, e)
            }), g(0, e, "waterInfoTexture", function() {
                return this._getTexture(16)
            }, function(e) {
                this._setTexture(16, e)
            }), g(0, e, "vertexDispTexture", function() {
                return this._getTexture(4)
            }, function(e) {
                this._setTexture(4, e)
            }), g(0, e, "currentTm", function() {
                return this._getNumber(8)
            }, function(e) {
                this._setNumber(8, e)
            }), g(0, e, "waveInfo", function() {
                return this._getBuffer(12)
            }, function(e) {
                this._setBuffer(12, e)
            }), g(0, e, "waveInfoD", function() {
                return this._getBuffer(13)
            }, function(e) {
                this._setBuffer(13, e)
            }), g(0, e, "waveMainDir", function() {
                return this._getNumber(14)
            }, function(e) {
                this._setNumber(14, e * Math.PI / 180)
            }), g(0, e, "geoWaveUVScale", function() {
                return this._getNumber(18)
            }, function(e) {
                this._setNumber(18, e)
            }), g(0, e, "windSpeed", function() {
                return 0
            }, function(e) {}), g(0, e, "scrsize", null, function(e) {
                this._setBuffer(15, e)
            }), g(0, e, "seaColor", function() {
                return this._getBuffer(19)
            }, function(e) {
                this._setBuffer(19, e)
            }), g(0, e, "useVertexDeep", function() {
                return this._useVertexDeep
            }, function(e) {
                (this._useVertexDeep = e) ? this._addShaderDefine(t.SHADERDEFINE_USEVERTEXHEIGHT): this._removeShaderDefine(t.SHADERDEFINE_USEVERTEXHEIGHT)
            }), g(0, e, "windDir", function() {
                return 0
            }, function(e) {}), g(0, e, "useRefractTexture", null, function(e) {
                e ? this._addShaderDefine(t.SHADERDEFINE_USE_REFRACT_TEX) : this._removeShaderDefine(t.SHADERDEFINE_USE_REFRACT_TEX)
            }), g(0, e, "renderMode", null, function(e) {
                switch (e) {
                    case 1:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1;
                        break;
                    case 2:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !1;
                        break;
                    case 3:
                        this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3;
                        break;
                    case 13:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
                        break;
                    default:
                        throw new Error("PBRMaterial:renderMode value error.")
                }
            }), t.__init__ = function() {
                t.SHADERDEFINE_CUBE_ENV = t.shaderDefines.registerDefine("CUBE_ENV"), t.SHADERDEFINE_HDR_ENV = t.shaderDefines.registerDefine("HDR_ENV"), t.SHADERDEFINE_SHOW_NORMAL = t.shaderDefines.registerDefine("SHOW_NORMAL"), t.SHADERDEFINE_USEVERTEXHEIGHT = t.shaderDefines.registerDefine("USE_VERTEX_DEEPINFO"), t.SHADERDEFINE_USE_FOAM = t.shaderDefines.registerDefine("USE_FOAM"), t.SHADERDEFINE_USE_REFRACT_TEX = t.shaderDefines.registerDefine("USE_REFR_TEX")
            }, t.load = function(e) {
                return x.loader.create(e, null, null, t)
            }, t.DIFFUSETEXTURE = 1, t.NORMALTEXTURE = 2, t.UNDERWATERTEXTURE = 3, t.VERTEXDISPTEXTURE = 4, t.UVANIAGE = 5, t.UVMATRIX = 6, t.UVAGE = 7, t.CURTM = 8, t.DETAILTEXTURE = 9, t.DEEPCOLORTEXTURE = 10, t.SKYTEXTURE = 11, t.WAVEINFO = 12, t.WAVEINFOD = 13, t.WAVEMAINDIR = 14, t.SCRSIZE = 15, t.WATERINFO = 16, t.FOAMTEXTURE = 17, t.GEOWAVE_UV_SCALE = 18, t.SEA_COLOR = 19, t.WAVEINFODEEPSCALE = 20, t.SHADERDEFINE_SHOW_NORMAL = 0, t.SHADERDEFINE_CUBE_ENV = 0, t.SHADERDEFINE_HDR_ENV = 0, t.SHADERDEFINE_USE_FOAM = 0, t.SHADERDEFINE_USE_REFRACT_TEX = 0, t.SHADERDEFINE_USEVERTEXHEIGHT = 0, t.RENDERMODE_OPAQUE = 1, t.RENDERMODE_OPAQUEDOUBLEFACE = 2, t.RENDERMODE_CUTOUT = 3, t.RENDERMODE_CUTOUTDOUBLEFACE = 4, t.RENDERMODE_TRANSPARENT = 13, u(t, ["defaultMaterial", function() {
                return this.defaultMaterial = new t
            }, "shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), t
        }(vn),
        jn = function(e) {
            function a(e, t, n, i) {
                this._indexType = null, this._indexTypeByteCount = 0, this._indexCount = 0, this._canRead = !1, void 0 === n && (n = 35044), void 0 === i && (i = !1), a.__super.call(this), this._indexType = e, this._indexCount = t, this._bufferUsage = n, this._bufferType = 34963, this._canRead = i;
                var r;
                if ("ushort" == e) this._indexTypeByteCount = 2;
                else {
                    if ("ubyte" != e) throw new Error("unidentification index type.");
                    this._indexTypeByteCount = 1
                }
                r = this._indexTypeByteCount * t, this._byteLength = r, this._bind(), s._gl.bufferData(this._bufferType, r, this._bufferUsage), i ? ("ushort" == e ? this._buffer = new Uint16Array(t) : "ubyte" == e && (this._buffer = new Uint8Array(t)), this.memorySize = 2 * r) : this.memorySize = r
            }
            m(a, "t_tl.d3.graphics.IndexBuffer3D", e);
            var t = a.prototype;
            return t.setData = function(e, t, n, i) {
                void 0 === t && (t = 0), void 0 === n && (n = 0), void 0 === i && (i = 4294967295);
                var r = 0;
                if ("ushort" == this._indexType ? (r = 2, 0 === n && 4294967295 === i || (e = new Uint16Array(e.buffer, n * r, i))) : "ubyte" == this._indexType && (r = 1, 0 === n && 4294967295 === i || (e = new Uint8Array(e.buffer, n * r, i))), this._bind(), s._gl.bufferSubData(this._bufferType, t * r, e), this._canRead)
                    if (0 !== t || 0 !== n || 4294967295 !== i) {
                        var a = this._buffer.length - t;
                        a < i && (i = a);
                        for (var o = 0; o < i; o++) this._buffer[t + o] = e[o]
                    } else this._buffer = e
            }, t.getData = function() {
                if (this._canRead) return this._buffer;
                throw new Error("Can't read data from VertexBuffer with only write flag!")
            }, t.disposeResource = function() {
                e.prototype.disposeResource.call(this), this._buffer = null, this.memorySize = 0
            }, g(0, t, "indexType", function() {
                return this._indexType
            }), g(0, t, "indexTypeByteCount", function() {
                return this._indexTypeByteCount
            }), g(0, t, "indexCount", function() {
                return this._indexCount
            }), g(0, t, "canRead", function() {
                return this._canRead
            }), a.INDEXTYPE_UBYTE = "ubyte", a.INDEXTYPE_USHORT = "ushort", a.create = function(e, t, n, i) {
                return void 0 === n && (n = 35044), void 0 === i && (i = !1), new a(e, t, n, i)
            }, a
        }(s),
        Kn = function(a) {
            function r(e, t, n, i) {
                this._vertexDeclaration = null, this._vertexCount = 0, this._canRead = !1, void 0 === i && (i = !1), r.__super.call(this), this._vertexDeclaration = e, this._vertexCount = t, this._bufferUsage = n, this._bufferType = 34962, this._canRead = i, this.memorySize = this._byteLength = this._vertexDeclaration.vertexStride * t, this._bind(), s._gl.bufferData(this._bufferType, this._byteLength, this._bufferUsage), i && (this._buffer = new Float32Array(this._byteLength / 4))
            }
            m(r, "t_tl.d3.graphics.VertexBuffer3D", a);
            var e = r.prototype;
            return e.bindWithIndexBuffer = function(e) {
                e && e._bind(), this._bind()
            }, e.setData = function(e, t, n, i) {
                if (void 0 === t && (t = 0), void 0 === n && (n = 0), void 0 === i && (i = 4294967295), 0 === n && 4294967295 === i || (e = new Float32Array(e.buffer, 4 * n, i)), this._bind(), s._gl.bufferSubData(this._bufferType, 4 * t, e), this._canRead)
                    if (0 !== t || 0 !== n || 4294967295 !== i) {
                        var r = this._buffer.length - t;
                        r < i && (i = r);
                        for (var a = 0; a < i; a++) this._buffer[t + a] = e[a]
                    } else this._buffer = e
            }, e.getData = function() {
                if (this._canRead) return this._buffer;
                throw new Error("Can't read data from VertexBuffer with only write flag!")
            }, e.disposeResource = function() {
                for (var e = w.mainContext, t = this._vertexDeclaration.getVertexElements(), n = s._enableAtributes, i = 0, r = t.length; i < r; i++) n[i] === this._glBuffer && (e.disableVertexAttribArray(i), n[i] = null);
                a.prototype.disposeResource.call(this), this._buffer = null, this._vertexDeclaration = null, this.memorySize = 0
            }, g(0, e, "vertexDeclaration", function() {
                return this._vertexDeclaration
            }), g(0, e, "vertexCount", function() {
                return this._vertexCount
            }), g(0, e, "canRead", function() {
                return this._canRead
            }), r.create = function(e, t, n, i) {
                return void 0 === n && (n = 35044), void 0 === i && (i = !1), new r(e, t, n, i)
            }, r
        }(s),
        qn = function(s) {
            function l() {
                l.__super.call(this), this.setShaderName("PARTICLESHURIKEN"), this.renderMode = 6
            }
            m(l, "t_tl.d3.core.particleShuriKen.ShurikenParticleMaterial", s);
            var e = l.prototype;
            return e.onAsynLoaded = function(e, t, n) {
                var i = t[0];
                if (i.version) s.prototype.onAsynLoaded.call(this, e, t, n);
                else {
                    var r = t[1],
                        a = i.props;
                    for (var o in a) this[o] = a[o];
                    l._parseShurikenParticleMaterial(r, this, i), this._endLoaded()
                }
            }, g(0, e, "renderMode", null, function(e) {
                switch (e) {
                    case 1:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 2:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 3:
                        this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3, this.alphaTest = !0, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 4:
                        this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !0, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 13:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 14:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 15:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 16:
                        this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 5:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 6:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 7:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 8:
                        this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 9:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 10:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 11:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    case 12:
                        this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(l.SHADERDEFINE_ADDTIVEFOG);
                        break;
                    default:
                        throw new Error("Material:renderMode value error.")
                }
                this._conchMaterial && this._conchMaterial.setRenderMode(e)
            }), g(0, e, "tintColor", function() {
                return this._getColor(2)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR) : this._removeShaderDefine(t_tl.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR), this._setColor(2, e)
            }), g(0, e, "tilingOffset", function() {
                return this._getColor(3)
            }, function(e) {
                if (e) {
                    var t = e.elements;
                    1 != t[0] || 1 != t[1] || 0 != t[2] || 0 != t[3] ? this._addShaderDefine(t_tl.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(t_tl.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TILINGOFFSET)
                } else this._removeShaderDefine(t_tl.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TILINGOFFSET);
                this._setColor(3, e)
            }), g(0, e, "diffuseTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP) : this._removeShaderDefine(t_tl.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP), this._setTexture(1, e)
            }), l.__init__ = function() {
                l.SHADERDEFINE_DIFFUSEMAP = l.shaderDefines.registerDefine("DIFFUSEMAP"), l.SHADERDEFINE_TINTCOLOR = l.shaderDefines.registerDefine("TINTCOLOR"), l.SHADERDEFINE_ADDTIVEFOG = l.shaderDefines.registerDefine("ADDTIVEFOG"), l.SHADERDEFINE_TILINGOFFSET = l.shaderDefines.registerDefine("TILINGOFFSET")
            }, l.load = function(e) {
                return x.loader.create(e, null, null, l)
            }, l._parseShurikenParticleMaterial = function(e, t, n) {
                var i = n.customProps,
                    r = i.diffuseTexture.texture2D;
                r && (t.diffuseTexture = Ae.getRes(e[r]));
                var a = i.tintColor;
                a && (t.tintColor = new Pt(a[0], a[1], a[2], a[3]))
            }, l.RENDERMODE_OPAQUE = 1, l.RENDERMODE_OPAQUEDOUBLEFACE = 2, l.RENDERMODE_CUTOUT = 3, l.RENDERMODE_CUTOUTDOUBLEFACE = 4, l.RENDERMODE_TRANSPARENT = 13, l.RENDERMODE_TRANSPARENTDOUBLEFACE = 14, l.RENDERMODE_ADDTIVE = 15, l.RENDERMODE_ADDTIVEDOUBLEFACE = 16, l.RENDERMODE_DEPTHREAD_TRANSPARENT = 5, l.RENDERMODE_DEPTHREAD_TRANSPARENTDOUBLEFACE = 6, l.RENDERMODE_DEPTHREAD_ADDTIVE = 7, l.RENDERMODE_DEPTHREAD_ADDTIVEDOUBLEFACE = 8, l.RENDERMODE_NONDEPTH_TRANSPARENT = 9, l.RENDERMODE_NONDEPTH_TRANSPARENTDOUBLEFACE = 10, l.RENDERMODE_NONDEPTH_ADDTIVE = 11, l.RENDERMODE_NONDEPTH_ADDTIVEDOUBLEFACE = 12, l.SHADERDEFINE_DIFFUSEMAP = 0, l.SHADERDEFINE_TINTCOLOR = 0, l.SHADERDEFINE_TILINGOFFSET = 0, l.SHADERDEFINE_ADDTIVEFOG = 0, l.DIFFUSETEXTURE = 1, l.TINTCOLOR = 2, l.TILINGOFFSET = 3, u(l, ["defaultMaterial", function() {
                return this.defaultMaterial = new l
            }, "shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), l
        }(vn),
        Qn = function(e) {
            function t() {
                t.__super.call(this), this.setShaderName("Trail"), this._setColor(2, new Pt(1, 1, 1, 1))
            }
            m(t, "t_tl.d3.core.trail.TrailMaterial", vn);
            var n = t.prototype;
            return g(0, n, "tintColor", function() {
                return this._getColor(2)
            }, function(e) {
                this._setColor(2, e)
            }), g(0, n, "diffuseTexture", function() {
                return this._getTexture(1)
            }, function(e) {
                e ? this._addShaderDefine(t_tl.d3.core.trail.TrailMaterial.SHADERDEFINE_DIFFUSETEXTURE) : this._removeShaderDefine(t_tl.d3.core.trail.TrailMaterial.SHADERDEFINE_DIFFUSETEXTURE), this._setTexture(1, e)
            }), g(0, n, "tilingOffset", function() {
                return this._getColor(3)
            }, function(e) {
                if (e) {
                    var t = e.elements;
                    1 != t[0] || 1 != t[1] || 0 != t[2] || 0 != t[3] ? this._addShaderDefine(t_tl.d3.core.trail.TrailMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(t_tl.d3.core.trail.TrailMaterial.SHADERDEFINE_TILINGOFFSET)
                } else this._removeShaderDefine(t_tl.d3.core.trail.TrailMaterial.SHADERDEFINE_TILINGOFFSET);
                this._setColor(3, e)
            }), t.__init__ = function() {
                t.SHADERDEFINE_DIFFUSETEXTURE = t.shaderDefines.registerDefine("DIFFUSETEXTURE"), t.SHADERDEFINE_TILINGOFFSET = t.shaderDefines.registerDefine("TILINGOFFSET")
            }, t.load = function(e) {
                return x.loader.create(e, null, null, t)
            }, t.SHADERDEFINE_DIFFUSETEXTURE = 0, t.SHADERDEFINE_TILINGOFFSET = 0, t.DIFFUSETEXTURE = 1, t.TINTCOLOR = 2, t.TILINGOFFSET = 3, u(t, ["defaultMaterial", function() {
                return this.defaultMaterial = new t
            }, "shaderDefines", function() {
                return this.shaderDefines = new Bt(vn.shaderDefines)
            }]), t
        }(),
        $n = (function(t) {
            function e() {
                this._animationSprites = null, this._animationSpritesInitLocalMatrix = null, this._tempCurAnimationData = null, this._curOriginalData = null, this._lastFrameIndex = -1, this._curAnimationDatas = null, e.__super.call(this), this._animationSprites = [], this._animationSpritesInitLocalMatrix = []
            }
            m(e, "t_tl.d3.component.animation.RigidAnimations", t);
            var n = e.prototype;
            n._init = function() {
                for (var e = this._templet.getNodes(this.currentAnimationClipIndex), t = this._owner, n = e.length, i = 0, r = new Uint16Array(this._templet.getPublicExtData()), a = 0; a < n; a++) {
                    var o = r.slice(i + 1, i + 1 + r[i]);
                    i += r[i] + 1;
                    for (var s = 1; s < o.length; s++) {
                        o[s];
                        t = t._childs[o[s]]
                    }
                    var l = t.getChildByName(e[a].name);
                    if (!l) break;
                    this._animationSprites[a] = l;
                    var h = this._animationSpritesInitLocalMatrix[a];
                    h || (h = this._animationSpritesInitLocalMatrix[a] = new At), l.transform.localMatrix.cloneTo(h), t = this._owner
                }
            }, n._animtionPlay = function() {
                this._templet.loaded ? this._init() : this._templet.once("loaded", this, this._init)
            }, n._animtionStop = function() {
                if (this._lastFrameIndex = -1, this._player.returnToZeroStopped) {
                    this._curAnimationDatas = null;
                    for (var e = 0; e < this._animationSprites.length; e++) this._animationSprites[e].transform.localMatrix = this._animationSpritesInitLocalMatrix[e]
                }
            }, n._effectAnimation = function(e) {
                for (var t = 0, n = this._animationSprites.length; t < n; t++) {
                    for (var i = this._animationSprites[t], r = i.transform.localMatrix, a = r.elements, o = 0; o < 16; o++) a[o] = this._curAnimationDatas[16 * t + o];
                    i.transform.localMatrix = r
                }
            }, n._load = function(e) {
                t.prototype._load.call(this, e), this._player.on("stopped", this, this._animtionStop), this._player.on("played", this, this._animtionPlay)
            }, n._update = function(e) {
                if (2 === this._player.state && this._templet && this._templet.loaded) {
                    var t = this._player.playbackRate * x.timer.scale,
                        n = this._player.cachePlayRate,
                        i = this._player.isCache && n <= t,
                        r = i ? this.currentFrameIndex : -1;
                    if (-1 === r || this._lastFrameIndex !== r) {
                        var a = this.currentAnimationClipIndex,
                            o = this._templet.getNodes(a),
                            s = this._templet._animationDatasCache;
                        if (i) {
                            var l = this._templet.getAnimationDataWithCache(n, s, a, r);
                            if (l) return this._curAnimationDatas = l, this._lastFrameIndex = r, void this._effectAnimation(o)
                        }
                        var h = 16 * o.length;
                        i ? this._curAnimationDatas = new Float32Array(h) : (this._tempCurAnimationData || (this._tempCurAnimationData = new Float32Array(h)), this._curAnimationDatas = this._tempCurAnimationData), this._curOriginalData || (this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(a))), i ? this._templet.getOriginalData(a, this._curOriginalData, this._player._fullFrames[a], r, this._player.currentFrameTime) : this._templet.getOriginalDataUnfixedRate(a, this._curOriginalData, this._player.currentPlayTime), qt._computeRootAnimationData(o, this._curOriginalData, this._curAnimationDatas), i && this._templet.setAnimationDataWithCache(n, s, a, r, this._curAnimationDatas), this._lastFrameIndex = r, this._effectAnimation(o)
                    }
                }
            }, n._unload = function(e) {
                t.prototype._unload.call(this, e), this._animationSprites = null, this._animationSpritesInitLocalMatrix = null, this._tempCurAnimationData = null, this._curOriginalData = null, this._curAnimationDatas = null
            }, g(0, n, "url", null, function(e) {
                console.log("Warning: discard property,please use templet property instead.");
                var t = x.loader.create(e, null, null, r);
                this._templet !== t && (0 !== this._player.state && this._player.stop(!0), this._templet = t, this._player.templet = t, this._curOriginalData = null, this._curAnimationDatas = null, this._tempCurAnimationData = null, this._templet._animationDatasCache || (this._templet._animationDatasCache = []), this.event("animationchanged", this))
            }), g(0, n, "templet", t.prototype._$get_templet, function(e) {
                this._templet !== e && (0 !== this._player.state && this._player.stop(!0), this._templet = e, this._player.templet = e, this._curOriginalData = null, this._curAnimationDatas = null, this._tempCurAnimationData = null, this._templet._animationDatasCache || (this._templet._animationDatasCache = []), this.event("animationchanged", this))
            })
        }(Tn), function(n) {
            function T() {
                this._tempCurAnimationData = null, this._tempCurBonesData = null, this._curOriginalData = null, this._lastFrameIndex = -1, this._curMeshAnimationData = null, this._curBonesDatas = null, this._curAnimationDatas = null, this._ownerMesh = null, this._boneIndexToMeshList = null, this._oldVersion = !1, T.__super.call(this), this._boneIndexToMeshList = []
            }
            m(T, "t_tl.d3.component.animation.SkinAnimations", n);
            var e = T.prototype;
            return e._computeBoneIndexToMeshOnTemplet = function() {
                this._templet.loaded ? this._computeBoneIndexToMeshOnMesh() : this._templet.once("loaded", this, this._computeBoneIndexToMeshOnMesh)
            }, e._computeBoneIndexToMeshOnMesh = function() {
                "LAYAANIMATION:02" === this._templet._aniVersion ? this._oldVersion = !1 : this._oldVersion = !0;
                var e = this._owner.meshFilter.sharedMesh;
                e.loaded ? this._computeBoneIndexToMesh(e) : e.on("loaded", this, this._computeBoneIndexToMesh)
            }, e._computeBoneIndexToMesh = function(e) {
                var t = e._boneNames;
                if (t)
                    for (var n = t.length, i = this._templet._anis, r = 0, a = i.length; r < a; r++) {
                        var o = this._boneIndexToMeshList[r];
                        o || (o = this._boneIndexToMeshList[r] = []), o.length = n;
                        for (var s = i[r], l = 0; l < n; l++) o[l] = s.bone3DMap[t[l]]
                    }
            }, e._getAnimationDatasWithCache = function(e, t, n, i, r) {
                var a = n[i];
                if (a) {
                    var o = a[e];
                    if (o) {
                        var s = o[t.id];
                        return s ? s[r] : null
                    }
                    return null
                }
                return null
            }, e._setAnimationDatasWithCache = function(e, t, n, i, r, a) {
                var o = n[i] || (n[i] = {}),
                    s = o[e] || (o[e] = {});
                (s[t.id] || (s[t.id] = []))[r] = a
            }, e._onAnimationPlayMeshLoaded = function() {
                for (var e = this._ownerMesh.meshRender._renderElements, t = 0, n = e.length; t < n; t++) e[t]._canDynamicBatch = !1
            }, e._onAnimationPlay = function() {
                this._ownerMesh._render._addShaderDefine(Ei.SHADERDEFINE_BONE);
                var e = this._ownerMesh.meshFilter.sharedMesh;
                e.loaded ? this._onAnimationPlayMeshLoaded() : e.once("loaded", this, this._onAnimationPlayMeshLoaded)
            }, e._onAnimationStop = function() {
                this._lastFrameIndex = -1, this._player.returnToZeroStopped && (this._curBonesDatas = null, this._curAnimationDatas = null, this._ownerMesh._render._removeShaderDefine(Ei.SHADERDEFINE_BONE));
                for (var e = this._ownerMesh.meshRender._renderElements, t = 0, n = e.length; t < n; t++) e[t]._canDynamicBatch = !0
            }, e._load = function(e) {
                n.prototype._load.call(this, e), this._ownerMesh = e, this._player.on("played", this, this._onAnimationPlay), this._player.on("stopped", this, this._onAnimationStop), this._owner.meshFilter.on("meshchanged", this, this._computeBoneIndexToMeshOnTemplet)
            }, e._update = function(e) {
                var t = this._ownerMesh.meshFilter.sharedMesh;
                if (2 === this._player.state && this._templet && this._templet.loaded && t.loaded) {
                    var n = this._player.playbackRate * x.timer.scale,
                        i = this._player.cachePlayRate,
                        r = this._player.isCache && i <= n,
                        a = r ? this.currentFrameIndex : -1;
                    if (-1 === a || this._lastFrameIndex !== a) {
                        var o = this.currentAnimationClipIndex,
                            s = this._templet._animationDatasCache[0],
                            l = this._templet._animationDatasCache[1];
                        if (r) {
                            var h = this._getAnimationDatasWithCache(i, t, l, o, a);
                            if (h) return this._curAnimationDatas = h, this._curBonesDatas = this._templet.getAnimationDataWithCache(i, s, o, a), void(this._lastFrameIndex = a)
                        }
                        var _ = !1;
                        r && (this._curBonesDatas = this._templet.getAnimationDataWithCache(i, s, o, a), _ = !!this._curBonesDatas);
                        var u = this._templet.getNodes(o),
                            c = 16 * u.length,
                            d = t.InverseAbsoluteBindPoses;
                        this._oldVersion ? this._curMeshAnimationData || (this._curMeshAnimationData = new Float32Array(c)) : this._curMeshAnimationData || (this._curMeshAnimationData = new Float32Array(16 * d.length));
                        var f, m, p = 0,
                            v = 0,
                            g = 0,
                            E = t.getSubMeshCount();
                        if (r) {
                            for (this._curAnimationDatas = [], this._curAnimationDatas.length = E, p = 0; p < E; p++)
                                for (f = this._curAnimationDatas[p] = [], g = (m = t.getSubMesh(p))._boneIndicesList.length, f.length = g, v = 0; v < g; v++) f[v] = new Float32Array(16 * m._boneIndicesList[v].length);
                            _ || (this._curBonesDatas = new Float32Array(c))
                        } else {
                            if (!this._tempCurAnimationData)
                                for (this._tempCurAnimationData = [], this._tempCurAnimationData.length = E, p = 0; p < E; p++)
                                    for (f = this._tempCurAnimationData[p] = [], g = (m = t.getSubMesh(p))._boneIndicesList.length, f.length = g, v = 0; v < g; v++) f[v] = new Float32Array(16 * m._boneIndicesList[v].length);
                            this._tempCurBonesData || (this._tempCurBonesData = new Float32Array(c)), this._curAnimationDatas = this._tempCurAnimationData, this._curBonesDatas = this._tempCurBonesData
                        }
                        if (this._curOriginalData || (this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(o))), r ? this._templet.getOriginalData(o, this._curOriginalData, this._player._fullFrames[o], a, this._player.currentFrameTime) : this._templet.getOriginalDataUnfixedRate(o, this._curOriginalData, this._player.currentPlayTime), this._oldVersion) r && _ ? qt._computeAnimationDatasByArrayAndMatrixFastOld(d, this._curBonesDatas, this._curMeshAnimationData) : qt._computeBoneAndAnimationDatasByBindPoseMatrxixOld(u, this._curOriginalData, d, this._curBonesDatas, this._curMeshAnimationData);
                        else {
                            var S = this._boneIndexToMeshList[o];
                            r && _ ? qt._computeAnimationDatasByArrayAndMatrixFast(d, this._curBonesDatas, this._curMeshAnimationData, S) : qt._computeBoneAndAnimationDatasByBindPoseMatrxix(u, this._curOriginalData, d, this._curBonesDatas, this._curMeshAnimationData, S)
                        }
                        for (p = 0; p < E; p++) {
                            var D = t.getSubMesh(p)._boneIndicesList;
                            for (g = D.length, f = this._curAnimationDatas[p], v = 0; v < g; v++) T._splitAnimationDatas(D[v], this._curMeshAnimationData, f[v])
                        }
                        r && (this._setAnimationDatasWithCache(i, t, l, o, a, this._curAnimationDatas), _ || this._templet.setAnimationDataWithCache(i, s, o, a, this._curBonesDatas)), this._lastFrameIndex = a
                    }
                }
            }, e._preRenderUpdate = function(e) {
                var t = e.renderElement.renderObj;
                this._curAnimationDatas ? t._skinAnimationDatas = this._curAnimationDatas[t._indexInMesh] : t._skinAnimationDatas = null
            }, e._unload = function(e) {
                2 == this.player.state && this._ownerMesh._render._removeShaderDefine(Ei.SHADERDEFINE_BONE), this._templet && !this._templet.loaded && this._templet.off("loaded", this, this._computeBoneIndexToMeshOnMesh);
                var t = this._ownerMesh.meshFilter.sharedMesh;
                t.loaded || t.off("loaded", this, this._onAnimationPlayMeshLoaded), n.prototype._unload.call(this, e), this._tempCurAnimationData = null, this._tempCurBonesData = null, this._curOriginalData = null, this._curMeshAnimationData = null, this._curBonesDatas = null, this._curAnimationDatas = null, this._ownerMesh = null
            }, g(0, e, "curBonesDatas", function() {
                return this._curBonesDatas
            }), g(0, e, "templet", n.prototype._$get_templet, function(e) {
                this._templet !== e && (0 !== this._player.state && this._player.stop(!0), this._templet = e, this._player.templet = e, this._computeBoneIndexToMeshOnTemplet(), this._curOriginalData = null, this._curMeshAnimationData = null, this._tempCurBonesData = null, this._tempCurAnimationData = null, this._templet._animationDatasCache || (this._templet._animationDatasCache = [
                    [],
                    []
                ]), this.event("animationchanged", this))
            }), T._splitAnimationDatas = function(e, t, n) {
                for (var i = 0, r = e.length, a = 0; i < r; i++)
                    for (var o = 0; o < 16; o++, a++) n[a] = t[(e[i] << 4) + o]
            }, T
        }(Tn)),
        Jn = function(e) {
            function l() {
                this._size = null, this._transformOrientedBoundBox = null, this.center = null, l.__super.call(this), this._needUpdate = !1
            }
            m(l, "t_tl.d3.component.physics.BoxCollider", Mn);
            var t = l.prototype;
            return t._updateCollider = function() {
                if (this._needUpdate) {
                    var e = this._transformOrientedBoundBox.transformation,
                        t = this._owner.transform,
                        n = t.rotation,
                        i = t.scale,
                        r = this.center.elements;
                    0 === r[0] && 0 === r[1] && 0 === r[2] ? At.createAffineTransformation(t.position, n, Vt.ONE, e) : (Vt.multiply(this.center, i, l._deviationV3), Vt.transformQuat(l._deviationV3, n, l._deviationV3), Vt.add(t.position, l._deviationV3, l._deviationV3), At.createAffineTransformation(l._deviationV3, n, Vt.ONE, e)), this._transformOrientedBoundBox.transformation = e;
                    var a = this._transformOrientedBoundBox.extents.elements,
                        o = this._size.elements,
                        s = i.elements;
                    a[0] = .5 * o[0] * s[0], a[1] = .5 * o[1] * s[1], a[2] = .5 * o[2] * s[2], this._needUpdate = !1
                }
            }, t._onWorldMatrixChanged = function() {
                for (var e in this._needUpdate = !0, this._runtimeCollisonMap) this._runtimeCollisonTestMap[e] = !0, this._runtimeCollisonMap[e]._runtimeCollisonTestMap[this.id] = !0
            }, t._initialize = function(e) {
                t_tl.d3.component.Component3D.prototype._initialize.call(this, e), this._transformOrientedBoundBox = new It(new Vt, new At), this._size = new Vt, this.center = new Vt, e.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged), this._needUpdate = !0
            }, t._getType = function() {
                return 1
            }, t._collisonTo = function(e) {
                switch (e._getType()) {
                    case 0:
                        return 0 !== this.boundBox.containsSphere(e.boundSphere);
                    case 1:
                        return 0 !== this.boundBox.containsOrientedBoundBox(e.boundBox);
                    case 2:
                        var t = e;
                        if (0 !== this.boundBox.containsBoundBox(t._boundBox)) {
                            for (var n = e.mesh._positions, i = 0, r = n.length; i < r; i++)
                                if (1 === this.boundBox.containsPoint(n[i])) return !0;
                            return !1
                        }
                        return !1;
                    default:
                        throw new Error("BoxCollider:unknown collider type.")
                }
            }, t._cloneTo = function(e) {
                var t = e,
                    n = t.size;
                this.size.cloneTo(n), t.size = n, this.center.cloneTo(t.center)
            }, t.raycast = function(e, t, n) {
                void 0 === n && (n = 179e306), this._updateCollider();
                var i = this._transformOrientedBoundBox.intersectsRay(e, t.position);
                return -1 !== i && i <= n ? (t.distance = i, t.sprite3D = this._owner, !0) : (t.distance = -1, t.sprite3D = null, !1)
            }, t.setFromBoundBox = function(e) {
                It.createByBoundBox(e, this._transformOrientedBoundBox);
                var t = this._transformOrientedBoundBox.extents;
                this._size = new Vt(2 * t.x, 2 * t.y, 2 * t.z), this.center = new Vt, Vt.add(e.min, e.max, this.center), Vt.scale(this.center, .5, this.center), this._needUpdate = !0
            }, g(0, t, "boundBox", function() {
                return this._updateCollider(), this._transformOrientedBoundBox
            }), g(0, t, "size", function() {
                return this._size
            }, function(e) {
                this._size = e, this._needUpdate = !0
            }), u(l, ["_deviationV3", function() {
                return this._deviationV3 = new Vt
            }, "_obbCenterV3", function() {
                return this._obbCenterV3 = new Vt
            }]), l
        }(),
        ei = function(e) {
            function D() {
                this._transformBoundingBox = null, this._mesh = null, D.__super.call(this), this._transformBoundingBox = new St(new Vt, new Vt), this._needUpdate = !1
            }
            m(D, "t_tl.d3.component.physics.MeshCollider", Mn);
            var t = D.prototype;
            return t._updateBoundBoxCollider = function() {
                if (this._needUpdate) {
                    for (var e = this._owner.transform.worldMatrix, t = this._mesh.boundingBoxCorners, n = 0; n < 8; n++) Vt.transformCoordinate(t[n], e, D._tempBoundBoxCorners[n]);
                    St.createfromPoints(D._tempBoundBoxCorners, this._transformBoundingBox), this._needUpdate = !1
                }
            }, t._raycastMesh = function(e, t, n, i) {
                void 0 === i && (i = 179e306);
                var r = t.transform.worldMatrix,
                    a = D._tempMatrix4x40;
                r.invert(a);
                var o = e.origin,
                    s = e.direction,
                    l = D._tempRay0;
                Vt.transformCoordinate(o, a, l.origin), Vt.TransformNormal(s, a, l.direction);
                for (var h = Number.MAX_VALUE, _ = 0, u = this._mesh.getRenderElementsCount(); _ < u; _++) {
                    var c = this._mesh.getRenderElement(_),
                        d = c._getVertexBuffer(0),
                        f = d.getData(),
                        m = c._getIndexBuffer().getData(),
                        p = D._tempRaycastHit;
                    if (Yt.rayIntersectsPositionsAndIndices(l, f, d.vertexDeclaration, m, p)) {
                        Vt.transformCoordinate(p.position, r, p.position);
                        var v = D._tempVector30;
                        Vt.subtract(o, p.position, v);
                        var g = Vt.scalarLength(v);
                        if (g < i && g < h) {
                            p.distance = g, p.sprite3D = t;
                            var E = p.trianglePositions;
                            Vt.transformCoordinate(E[0], r, E[0]), Vt.transformCoordinate(E[1], r, E[1]), Vt.transformCoordinate(E[2], r, E[2]);
                            var S = p.triangleNormals;
                            return Vt.transformCoordinate(S[0], r, S[0]), Vt.transformCoordinate(S[1], r, S[1]), Vt.transformCoordinate(S[2], r, S[2]), h = g, p.cloneTo(n), !0
                        }
                        return !1
                    }
                }
                return !1
            }, t._onWorldMatrixChanged = function() {
                this._needUpdate = !0
            }, t._initialize = function(e) {
                t_tl.d3.component.Component3D.prototype._initialize.call(this, e), e.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged), this._needUpdate = !0
            }, t._getType = function() {
                return 2
            }, t._collisonTo = function(e) {
                var t = 0,
                    n = 0,
                    i = this.mesh._positions;
                switch (e._getType()) {
                    case 0:
                        var r = e;
                        if (0 !== xt.sphereContainsBox(r.boundSphere, this._boundBox)) {
                            for (t = 0, n = i.length; t < n; t++)
                                if (1 === xt.sphereContainsPoint(r.boundSphere, i[t])) return !0;
                            return !1
                        }
                        return !1;
                    case 1:
                        var a = e;
                        if (0 !== a.boundBox.containsBoundBox(this._boundBox)) {
                            for (t = 0, n = i.length; t < n; t++)
                                if (1 === a.boundBox.containsPoint(i[t])) return !0;
                            return !1
                        }
                        return !1;
                    case 2:
                        var o = e;
                        return 1 !== xt.intersectsBoxAndBox(o._boundBox, this._boundBox);
                    default:
                        throw new Error("MeshCollider:unknown collider type.")
                }
            }, t._cloneTo = function(e) {
                e.mesh = this._mesh
            }, t.raycast = function(e, t, n) {
                if (void 0 === n && (n = 179e306), null == this._mesh || !this._mesh.loaded) return !1;
                var i = xt.intersectsRayAndBoxRD(e, this._boundBox);
                return !!(-1 !== i && i <= n && this._raycastMesh(e, this._owner, t, n)) || (t.distance = -1, t.sprite3D = null, !1)
            }, g(0, t, "_boundBox", function() {
                return this._updateBoundBoxCollider(), this._transformBoundingBox
            }), g(0, t, "mesh", function() {
                return this._mesh
            }, function(e) {
                this._mesh = e
            }), u(D, ["_tempRay0", function() {
                return this._tempRay0 = new wt(new Vt, new Vt)
            }, "_tempVector30", function() {
                return this._tempVector30 = new Vt
            }, "_tempMatrix4x40", function() {
                return this._tempMatrix4x40 = new At
            }, "_tempRaycastHit", function() {
                return this._tempRaycastHit = new jt
            }, "_tempBoundBoxCorners", function() {
                return this._tempBoundBoxCorners = [new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt, new Vt]
            }]), D
        }(),
        ti = function(e) {
            function t() {
                this._originalBoundSphere = null, this._transformBoundSphere = null, t.__super.call(this), this._needUpdate = !1
            }
            m(t, "t_tl.d3.component.physics.SphereCollider", Mn);
            var n = t.prototype;
            return n._updateCollider = function() {
                if (this._needUpdate) {
                    var e = NaN,
                        t = this._owner.transform,
                        n = t.scale;
                    e = n.x >= n.y && n.x >= n.z ? n.x : n.y >= n.z ? n.y : n.z, Vt.transformCoordinate(this._originalBoundSphere.center, t.worldMatrix, this._transformBoundSphere.center), this._transformBoundSphere.radius = this._originalBoundSphere.radius * e, this._needUpdate = !1
                }
            }, n._onWorldMatrixChanged = function() {
                for (var e in this._needUpdate = !0, this._runtimeCollisonMap) this._runtimeCollisonTestMap[e] = !0, this._runtimeCollisonMap[e]._runtimeCollisonTestMap[this.id] = !0
            }, n._initialize = function(e) {
                t_tl.d3.component.Component3D.prototype._initialize.call(this, e), this._originalBoundSphere = new Tt(new Vt(0, 0, 0), .5), this._transformBoundSphere = new Tt(new Vt(0, 0, 0), .5), e.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged), this._needUpdate = !0
            }, n._getType = function() {
                return 0
            }, n._collisonTo = function(e) {
                switch (e._getType()) {
                    case 0:
                        return 0 !== xt.sphereContainsSphere(this.boundSphere, e.boundSphere);
                    case 1:
                        return 0 !== e.boundBox.containsSphere(this.boundSphere);
                    case 2:
                        var t = e;
                        if (0 !== xt.sphereContainsBox(this.boundSphere, t._boundBox)) {
                            for (var n = t.mesh._positions, i = 0, r = n.length; i < r; i++)
                                if (1 === xt.sphereContainsPoint(this.boundSphere, n[i])) return !0;
                            return !1
                        }
                        return !1;
                    default:
                        throw new Error("SphereCollider:unknown collider type.")
                }
            }, n._cloneTo = function(e) {
                var t = e;
                t.radius = this.radius;
                var n = t.center;
                this.center.cloneTo(n), t.center = n
            }, n.raycast = function(e, t, n) {
                void 0 === n && (n = 179e306), this._updateCollider();
                var i = this._transformBoundSphere.intersectsRayPoint(e, t.position);
                return -1 !== i && i <= n ? (t.distance = i, t.sprite3D = this._owner, !0) : (t.distance = -1, t.sprite3D = null, !1)
            }, g(0, n, "center", function() {
                return this._originalBoundSphere.center
            }, function(e) {
                this._originalBoundSphere.center = e
            }), g(0, n, "radius", function() {
                return this._originalBoundSphere.radius
            }, function(e) {
                this._originalBoundSphere.radius = e
            }), g(0, n, "boundSphere", function() {
                return this._updateCollider(), this._transformBoundSphere
            }), t
        }(),
        ni = function(e) {
            function f() {
                this.simLodInfo = null, this._src = null, this._buffer = null, this._mipmaps = null, this._recreateLock = !1, this._needReleaseAgain = !1, f.__super.call(this), this._type = 3553
            }
            m(f, "t_tl.d3.resource.DataTexture2D", gn);
            var t = f.prototype;
            return t.genDebugMipmaps = function() {
                var e = [];
                return e.push(new Uint8Array(new Uint32Array(131072).fill(4278190335).buffer)), e.push(new Uint8Array(new Uint32Array(32768).fill(4278223103).buffer)), e.push(new Uint8Array(new Uint32Array(8192).fill(4278255615).buffer)), e.push(new Uint8Array(new Uint32Array(2048).fill(4278255360).buffer)), e.push(new Uint8Array(new Uint32Array(512).fill(4286595072).buffer)), e.push(new Uint8Array(new Uint32Array(128).fill(4294901760).buffer)), e.push(new Uint8Array(new Uint32Array(32).fill(4294901888).buffer)), e.push(new Uint8Array(new Uint32Array(8).fill(0).buffer)), e.push(new Uint8Array(new Uint32Array(2).fill(4286611584).buffer)), e.push(new Uint8Array(new Uint32Array(1).fill(4294967295).buffer)), e
            }, t._onTextureLoaded = function(e) {}, t._createWebGlTexture = function() {
                if (!this._buffer && !this._mipmaps) throw "create GLTextur err:no data";
                var e = w.mainContext;
                e.getExtension("EXT_shader_texture_lod");
                var t = this._source = e.createTexture(),
                    n = this._width,
                    i = this._height,
                    r = O.curBindTexTarget,
                    a = O.curBindTexValue;
                if (O.bindTexture(e, this._type, t), this._mipmaps) {
                    if (t_tl.d3.resource.DataTexture2D.lodasatlas) {
                        var o = 0;
                        e.texImage2D(this._type, 0, 6408, this._width, this._height, 0, 6408, 5121, null);
                        for (var s = 0; s < this._mipmaps.length; s++) {
                            if (this._mipmaps[s].byteLength != l * h * 4) throw "mipmap size error  level:" + s;
                            e.texSubImage2D(this._type, 0, f.simLodRect[o++], f.simLodRect[o++], f.simLodRect[o++], f.simLodRect[o++], 6408, 5121, new Uint8Array(this._mipmaps[s]))
                        }
                        this.minFifter = 9729, this.magFifter = 9729
                    } else {
                        var l = this._width,
                            h = this._height;
                        for (o = 0, e.texImage2D(this._type, 0, 6408, this._width, this._height, 0, 6408, 5121, null), s = 0; s < this._mipmaps.length; s++) {
                            if (this._mipmaps[s].byteLength != l * h * 4) throw "mipmap size error  level:" + s;
                            e.texImage2D(this._type, s, 6408, l, h, 0, 6408, 5121, new Uint8Array(this._mipmaps[s])), (l /= 2) < 1 && (l = 1), (h /= 2) < 1 && (h = 1), this.minFifter = 9987, this.magFifter = 9729
                        }
                    }
                    this.mipmap = !1
                } else e.texImage2D(this._type, 0, 6408, n, i, 0, 6408, 5121, new Uint8Array(this._buffer));
                var _ = this._minFifter,
                    u = this._magFifter,
                    c = this._repeat ? 10497 : 33071,
                    d = p.isPOT(n, i);
                if (!d) throw "data texture must be POT";
                this._mipmap || this._mipmaps ? -1 !== _ || (_ = 9987) : -1 !== _ || (_ = 9729), -1 !== u || (u = 9729), e.texParameteri(this._type, 10241, _), e.texParameteri(this._type, 10240, u), e.texParameteri(this._type, 10242, c), this._mipmaps ? e.texParameteri(this._type, 10243, 33071) : e.texParameteri(this._type, 10243, c), this._mipmap && e.generateMipmap(this._type), r && a && O.bindTexture(e, r, a), this.src && 0 < this.src.length && (this._buffer = null), this.memorySize = d ? n * i * 4 * (1 + 1 / 3) : n * i * 4, this._recreateLock = !1
            }, t.recreateResource = function() {
                if (this._buffer || null != this._src && "" !== this._src)
                    if (this._needReleaseAgain = !1, this._buffer || this._mipmaps) {
                        if (this._recreateLock) return;
                        this._createWebGlTexture(), this.completeCreate()
                    } else {
                        this._recreateLock = !0
                    }
            }, t.onAsynLoaded = function(e, t, n) {
                var i;
                n && (i = n[0].call(this, t)), i && (this._width = i.width, this._height = i.height, this._buffer = i.data), this._src = e, this._size = new Kt(this._width, this._height), this._conchTexture ? alert("怎么给runtime传递datatexture数据") : this.activeResource(), this._endLoaded()
            }, t.getPixels = function() {
                return new Uint8Array(this._buffer)
            }, t.disposeResource = function() {
                this._recreateLock && (this._needReleaseAgain = !0), this._source && (w.mainContext.deleteTexture(this._source), this._source = null, this._buffer = null, this.memorySize = 0)
            }, g(0, t, "src", function() {
                return this._src
            }), f.create = function(e, t, n, i, r, a) {
                if (void 0 === i && (i = 9729), void 0 === r && (r = 9729), void 0 === a && (a = !0), !e || e.byteLength < t * n * 4) throw "DataTexture2D create error";
                var o = new f;
                return o._buffer = e, o._width = t, o._height = n, o._mipmap = a, o._magFifter = i, o._minFifter = r, o._size = new Kt(o._width, o._height), o._conchTexture ? alert("怎么给runtime传递datatexture数据") : o.activeResource(), o
            }, f.load = function(e, t, n, i, r) {
                if (void 0 === t && (t = 0), void 0 === n && (n = 0), void 0 === i && (i = 9729), void 0 === r && (r = 9729), "mipmaps" === y.getFileExtension(e)) {
                    var a = x.loader.create(e, null, null, f, [function(e) {
                        this._mipmaps = [];
                        var t = new Uint32Array(e);
                        this._width = t[0];
                        var n = 512;
                        if (t_tl.d3.resource.DataTexture2D.lodasatlas && (this._width *= 2, n = 1024), this._width != n) throw console.error("现在只支持512x256的环境贴图。当前的是" + t[0]), "现在只支持512x256的环境贴图。当前的是" + t[0];
                        this._height = t[1];
                        for (var i = t_tl.d3.resource.DataTexture2D.lodasatlas ? this._width / 2 : this._width, r = this._height, a = 8;;) {
                            var o = i * r * 4;
                            if (a + o > e.byteLength) throw "load mipmaps data size error ";
                            var s = new Uint8Array(e, a, o);
                            if (this._mipmaps.push(s), a += o, 1 == i && 1 == r) break;
                            (i /= 2) < 1 && (i = 1), (r /= 2) < 1 && (r = 1)
                        }
                        return null
                    }]);
                    if (t_tl.d3.resource.DataTexture2D.lodasatlas) {
                        a.simLodInfo = new Float32Array(40);
                        for (var o = 0; o < a.simLodInfo.length;) a.simLodInfo[o] = (f.simLodRect[o] + .5) / 1024, o++, a.simLodInfo[o] = (f.simLodRect[o] + .5) / 256, o++, a.simLodInfo[o] = Math.max(f.simLodRect[o] - 1, .1) / 1024, o++, a.simLodInfo[o] = Math.max(f.simLodRect[o] - 1.5, .1) / 256, o++
                    }
                    return a
                }
                if ("number" == typeof t) return x.loader.create(e, null, null, f, [function(e) {
                    return this._width = t, this._height = n, this._buffer = e, null
                }]);
                if ("function" == typeof t) return x.loader.create(e, null, null, f, [t]);
                throw new Error("unknown params.")
            }, f.lodasatlas = !1, u(f, ["simLodRect", function() {
                return this.simLodRect = new Uint32Array([0, 0, 512, 256, 512, 0, 256, 128, 768, 0, 128, 64, 896, 0, 64, 32, 960, 0, 32, 16, 992, 0, 16, 8, 1008, 0, 8, 4, 1016, 0, 4, 2, 1020, 0, 2, 1, 1022, 0, 1, 1])
            }]), f
        }(),
        ii = function(e) {
            function t() {
                this._numberVertices = 0, this._numberIndices = 0, this._vertexBuffer = null, this._indexBuffer = null, t.__super.call(this)
            }
            m(t, "t_tl.d3.resource.models.PrimitiveMesh", En);
            var n = t.prototype;
            return x.imps(n, {
                "t_tl.d3.core.render.IRenderable": !0
            }), n._getVertexBuffer = function(e) {
                return void 0 === e && (e = 0), 0 === e ? this._vertexBuffer : null
            }, n._getVertexBuffers = function() {
                return null
            }, n._getIndexBuffer = function() {
                return this._indexBuffer
            }, n._getPositions = function() {
                var e, t = [],
                    n = this._vertexBuffer.vertexDeclaration.getVertexElements(),
                    i = 0;
                for (i = 0; i < n.length; i++) {
                    var r = n[i];
                    if ("vector3" === r.elementFormat && 0 === r.elementUsage) {
                        e = r;
                        break
                    }
                }
                var a = this._vertexBuffer.getData();
                for (i = 0; i < a.length; i += this._vertexBuffer.vertexDeclaration.vertexStride / 4) {
                    var o = i + e.offset / 4,
                        s = new Vt(a[o + 0], a[o + 1], a[o + 2]);
                    t.push(s)
                }
                return t
            }, n.getRenderElement = function(e) {
                return this
            }, n.getRenderElementsCount = function() {
                return 1
            }, n.disposeResource = function() {
                this._vertexBuffer && (this._vertexBuffer.destroy(), this._vertexBuffer = null), this._indexBuffer && (this._indexBuffer.destroy(), this._indexBuffer = null), this.memorySize = 0
            }, n._beforeRender = function(e) {
                return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0
            }, n._render = function(e) {
                w.mainContext.drawElements(4, this._numberIndices, 5123, 0), R.drawCall++, R.trianglesFaces += this._numberIndices / 3
            }, g(0, n, "_vertexBufferCount", function() {
                return 1
            }), g(0, n, "triangleCount", function() {
                return this._indexBuffer.indexCount / 3
            }), t
        }(),
        ri = function(e) {
            function t() {
                this._materials = null, this._subMeshes = null, this._vertexBuffers = null, this._indexBuffer = null, this._boneNames = null, this._inverseBindPoses = null, this._skinnedDatas = null, t.__super.call(this), this._subMeshes = [], this._materials = [], this._vertexBuffers = []
            }
            m(t, "t_tl.d3.resource.models.Mesh", En);
            var n = t.prototype;
            return n._getPositions = function() {
                var e, t, n, i, r, a = [],
                    o = 0,
                    s = 0,
                    l = 0;
                if (0 !== this._vertexBuffers.length) {
                    var h = this._vertexBuffers.length;
                    for (o = 0; o < h; o++) {
                        for (n = (e = this._vertexBuffers[o]).vertexDeclaration.getVertexElements(), s = 0; s < n.length; s++)
                            if ("vector3" === (i = n[s]).elementFormat && 0 === i.elementUsage) {
                                t = i;
                                break
                            }
                        for (r = e.getData(), s = 0; s < r.length; s += e.vertexDeclaration.vertexStride / 4) l = s + t.offset / 4, a.push(new Vt(r[l + 0], r[l + 1], r[l + 2]))
                    }
                } else {
                    var _ = this._subMeshes.length;
                    for (o = 0; o < _; o++) {
                        for (n = (e = this._subMeshes[o]._getVertexBuffer()).vertexDeclaration.getVertexElements(), s = 0; s < n.length; s++)
                            if ("vector3" === (i = n[s]).elementFormat && 0 === i.elementUsage) {
                                t = i;
                                break
                            }
                        for (r = e.getData(), s = 0; s < r.length; s += e.vertexDeclaration.vertexStride / 4) l = s + t.offset / 4, a.push(new Vt(r[l + 0], r[l + 1], r[l + 2]))
                    }
                }
                return a
            }, n._setSubMeshes = function(e) {
                this._subMeshes = e, this._subMeshCount = e.length;
                for (var t = 0; t < this._subMeshCount; t++) e[t]._indexInMesh = t;
                this._positions = this._getPositions(), this._generateBoundingObject()
            }, n.onAsynLoaded = function(e, t, n) {
                var i = t[0],
                    r = t[1];
                Et.read(i, this, this._materials, this._subMeshes, r), this.completeCreate(), this._endLoaded()
            }, n.getSubMesh = function(e) {
                return this._subMeshes[e]
            }, n.getSubMeshCount = function() {
                return this._subMeshes.length
            }, n.getRenderElementsCount = function() {
                return this._subMeshes.length
            }, n.getRenderElement = function(e) {
                return this._subMeshes[e]
            }, n.disposeResource = function() {
                for (var e = 0; e < this._subMeshes.length; e++) this._subMeshes[e].dispose();
                this._materials = null, this._subMeshes = null, this._vertexBuffers = null, this._indexBuffer = null, this._boneNames = null, this._inverseBindPoses = null
            }, g(0, n, "materials", function() {
                return this._materials.slice()
            }), g(0, n, "InverseAbsoluteBindPoses", function() {
                return this._inverseBindPoses
            }), t.load = function(e) {
                return x.loader.create(e, null, null, t)
            }, t
        }(),
        ai = function(e) {
            function h(e, t, n, i, r, a, o, s, l) {
                this._alreadyResolved = !1, this._surfaceFormat = 0, this._surfaceType = 0, this._depthStencilFormat = 0, this._frameBuffer = null, this._depthStencilBuffer = null, void 0 === n && (n = 6408), void 0 === i && (i = 5121), void 0 === r && (r = 33189), void 0 === a && (a = !1), void 0 === o && (o = !1), void 0 === s && (s = -1), void 0 === l && (l = -1), h.__super.call(this), this._type = 3553, this._width = e, this._height = t, this._size = new Kt(e, t), this._surfaceFormat = n, this._surfaceType = i, this._depthStencilFormat = r, this._mipmap = a, this._repeat = o, this._minFifter = s, this._magFifter = l, this.activeResource(), this._alreadyResolved = !0
            }
            m(h, "t_tl.d3.resource.RenderTexture", gn);
            var t = h.prototype;
            return t.recreateResource = function() {
                var e = w.mainContext;
                this._frameBuffer = e.createFramebuffer(), this._source = e.createTexture();
                var t = O.curBindTexTarget,
                    n = O.curBindTexValue;
                O.bindTexture(e, this._type, this._source), e.texImage2D(this._type, 0, 6408, this._width, this._height, 0, this._surfaceFormat, this._surfaceType, null);
                var i = this._minFifter,
                    r = this._magFifter,
                    a = this._repeat ? 10497 : 33071;
                if (p.isPOT(this._width, this._height) ? (this._mipmap ? -1 !== i || (i = 9987) : -1 !== i || (i = 9729), -1 !== r || (r = 9729), e.texParameteri(this._type, 10241, i), e.texParameteri(this._type, 10240, r), e.texParameteri(this._type, 10242, a), e.texParameteri(this._type, 10243, a), this._mipmap && e.generateMipmap(this._type)) : (-1 !== i || (i = 9729), -1 !== r || (r = 9729), e.texParameteri(this._type, 10241, i), e.texParameteri(this._type, 10240, r), e.texParameteri(this._type, 10242, 33071), e.texParameteri(this._type, 10243, 33071)), e.bindFramebuffer(36160, this._frameBuffer), e.framebufferTexture2D(36160, 36064, 3553, this._source, 0), this._depthStencilFormat) switch (this._depthStencilBuffer = e.createRenderbuffer(), e.bindRenderbuffer(36161, this._depthStencilBuffer), e.renderbufferStorage(36161, this._depthStencilFormat, this._width, this._height), this._depthStencilFormat) {
                    case 33189:
                        e.framebufferRenderbuffer(36160, 36096, 36161, this._depthStencilBuffer);
                        break;
                    case 36168:
                        e.framebufferRenderbuffer(36160, 36128, 36161, this._depthStencilBuffer);
                        break;
                    case 34041:
                        e.framebufferRenderbuffer(36160, 33306, 36161, this._depthStencilBuffer)
                }
                e.bindFramebuffer(36160, null), t && n && O.bindTexture(e, t, n), e.bindRenderbuffer(36161, null), this.memorySize = this._width * this._height * 4, this.completeCreate()
            }, t.start = function() {
                w.mainContext.bindFramebuffer(36160, this.frameBuffer), (h._currentRenderTarget = this)._alreadyResolved = !1
            }, t.end = function() {
                w.mainContext.bindFramebuffer(36160, null), h._currentRenderTarget = null, this._alreadyResolved = !0
            }, t.getData = function(e, t, n, i) {
                var r = w.mainContext;
                if (r.bindFramebuffer(36160, this._frameBuffer), !(36053 === r.checkFramebufferStatus(36160))) return r.bindFramebuffer(36160, null), null;
                var a = new Uint8Array(this._width * this._height * 4);
                return r.readPixels(e, t, n, i, this._surfaceFormat, this._surfaceType, a), r.bindFramebuffer(36160, null), a
            }, t.disposeResource = function() {
                if (this._frameBuffer) {
                    var e = w.mainContext;
                    e.deleteTexture(this._source), e.deleteFramebuffer(this._frameBuffer), e.deleteRenderbuffer(this._depthStencilBuffer), this._source = null, this._frameBuffer = null, this._depthStencilBuffer = null, this.memorySize = 0
                }
            }, g(0, t, "surfaceFormat", function() {
                return this._surfaceFormat
            }), g(0, t, "surfaceType", function() {
                return this._surfaceType
            }), g(0, t, "depthStencilFormat", function() {
                return this._depthStencilFormat
            }), g(0, t, "source", function() {
                return this._alreadyResolved ? x.superGet(gn, this, "source") : null
            }), g(0, t, "depthStencilBuffer", function() {
                return this._depthStencilBuffer
            }), g(0, t, "frameBuffer", function() {
                return this._frameBuffer
            }), h._currentRenderTarget = null, h
        }(),
        oi = function(e) {
            function t(e) {
                this._color = null, this._pixels = null, t.__super.call(this), this._type = 3553, this._width = 1, this._height = 1, this._size = new Kt(this.width, this.height), this._color = e, this._pixels = new Uint8Array([255 * e.x, 255 * e.y, 255 * e.z, 255 * e.w])
            }
            m(t, "t_tl.d3.resource.SolidColorTexture2D", gn);
            var n = t.prototype;
            return n._createWebGlTexture = function() {
                var e = w.mainContext,
                    t = this._source = e.createTexture(),
                    n = this._width,
                    i = this._height,
                    r = O.curBindTexTarget,
                    a = O.curBindTexValue;
                O.bindTexture(e, this._type, t), e.texImage2D(this._type, 0, 6408, n, i, 0, 6408, 5121, this._pixels);
                var o = this._minFifter,
                    s = this._magFifter,
                    l = this._repeat ? 10497 : 33071,
                    h = p.isPOT(n, i);
                h ? (this._mipmap ? -1 !== o || (o = 9987) : -1 !== o || (o = 9729), -1 !== s || (s = 9729), e.texParameteri(this._type, 10241, o), e.texParameteri(this._type, 10240, s), e.texParameteri(this._type, 10242, l), e.texParameteri(this._type, 10243, l), this._mipmap && e.generateMipmap(this._type)) : (-1 !== o || (o = 9729), -1 !== s || (s = 9729), e.texParameteri(this._type, 10241, o), e.texParameteri(this._type, 10240, s), e.texParameteri(this._type, 10242, 33071), e.texParameteri(this._type, 10243, 33071)), r && a && O.bindTexture(e, r, a), this.memorySize = h ? n * i * 4 * (1 + 1 / 3) : n * i * 4
            }, n.recreateResource = function() {
                this._createWebGlTexture(), this.completeCreate()
            }, n.disposeResource = function() {
                this._source && (w.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0)
            }, u(t, ["magentaTexture", function() {
                return this.magentaTexture = new t(new Pt(1, 0, 1, 1))
            }, "grayTexture", function() {
                return this.grayTexture = new t(new Pt(.5, .5, .5, 1))
            }]), t
        }(),
        si = function(e) {
            function t(e) {
                this._color = null, this._pixels = null, this._texCount = 6, t.__super.call(this), this._type = 34067, this._width = 1, this._height = 1, this._size = new Kt(this.width, this.height), this._color = e, this._pixels = new Uint8Array([255 * e.x, 255 * e.y, 255 * e.z, 255 * e.w])
            }
            m(t, "t_tl.d3.resource.SolidColorTextureCube", gn);
            var n = t.prototype;
            return n._createWebGlTexture = function() {
                var e = w.mainContext,
                    t = this._source = e.createTexture(),
                    n = this._width,
                    i = this._height,
                    r = O.curBindTexTarget,
                    a = O.curBindTexValue;
                O.bindTexture(e, this._type, t), e.texImage2D(34069, 0, 6408, n, i, 0, 6408, 5121, this._pixels), e.texImage2D(34070, 0, 6408, n, i, 0, 6408, 5121, this._pixels), e.texImage2D(34071, 0, 6408, n, i, 0, 6408, 5121, this._pixels), e.texImage2D(34072, 0, 6408, n, i, 0, 6408, 5121, this._pixels), e.texImage2D(34073, 0, 6408, n, i, 0, 6408, 5121, this._pixels), e.texImage2D(34074, 0, 6408, n, i, 0, 6408, 5121, this._pixels);
                var o = this.minFifter,
                    s = this.magFifter,
                    l = this._repeat ? 10497 : 33071,
                    h = p.isPOT(n, i);
                h ? (this.mipmap ? -1 !== o || (o = 9987) : -1 !== o || (o = 9729), -1 !== s || (s = 9729), e.texParameteri(this._type, 10241, o), e.texParameteri(this._type, 10240, s), e.texParameteri(this._type, 10242, l), e.texParameteri(this._type, 10243, l), this.mipmap && e.generateMipmap(this._type)) : (-1 !== o || (o = 9729), -1 !== s || (s = 9729), e.texParameteri(this._type, 10241, o), e.texParameteri(this._type, 10240, s), e.texParameteri(this._type, 10242, 33071), e.texParameteri(this._type, 10243, 33071)), r && a && O.bindTexture(e, r, a), this.memorySize = h ? n * i * 4 * (1 + 1 / 3) * this._texCount : n * i * 4 * this._texCount
            }, n.recreateResource = function() {
                this._createWebGlTexture(), this.completeCreate()
            }, n.disposeResource = function() {
                this._source && (w.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0)
            }, u(t, ["magentaTexture", function() {
                return this.magentaTexture = new t(new Pt(1, 0, 1, 1))
            }, "grayTexture", function() {
                return this.grayTexture = new t(new Pt(.5, .5, .5, 1))
            }]), t
        }(),
        li = function(e) {
            function r(e, t, n, i) {
                this._canRead = !1, this._image = null, this._pixels = null, void 0 === e && (e = !1), void 0 === t && (t = !0), void 0 === n && (n = 6408), void 0 === i && (i = !0), r.__super.call(this), this._type = 3553, this._repeat = t, this._canRead = e, this._format = n, this._mipmap = i
            }
            m(r, "t_tl.d3.resource.Texture2D", gn);
            var t = r.prototype;
            return t._createWebGlTexture = function() {
                if (!this._image) throw "create GLTextur err:no data:" + this._image;
                var e = w.mainContext,
                    t = this._source = e.createTexture(),
                    n = this._width,
                    i = this._height,
                    r = O.curBindTexTarget,
                    a = O.curBindTexValue;
                switch (O.bindTexture(e, this._type, t), this._format) {
                    case 6407:
                    case 6408:
                        this._canRead ? e.texImage2D(this._type, 0, this._format, n, i, 0, this._format, 5121, this._pixels) : e.texImage2D(this._type, 0, this._format, this._format, 5121, this._image);
                        break;
                    case w.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                        e.compressedTexImage2D(this._type, 0, this._format, this._width, this._height, 0, this._image)
                }
                var o = this._minFifter,
                    s = this._magFifter,
                    l = this._repeat ? 10497 : 33071,
                    h = 0 == this._wrapModeU ? 10497 : 33071,
                    _ = 0 == this._wrapModeV ? 10497 : 33071,
                    u = p.isPOT(n, i);
                u ? (this._mipmap ? -1 !== o || (o = 9987) : -1 !== o || (o = 9729), -1 !== s || (s = 9729), e.texParameteri(this._type, 10241, o), e.texParameteri(this._type, 10240, s), e.texParameteri(this._type, 10242, l), e.texParameteri(this._type, 10243, l), e.texParameteri(this._type, 10242, h), e.texParameteri(this._type, 10243, _), this._mipmap && e.generateMipmap(this._type)) : (-1 !== o || (o = 9729), -1 !== s || (s = 9729), e.texParameteri(this._type, 10241, o), e.texParameteri(this._type, 10240, s), e.texParameteri(this._type, 10242, 33071), e.texParameteri(this._type, 10243, 33071)), r && a && O.bindTexture(e, r, a), this._image.onload = null, this._image = null, this.memorySize = u ? n * i * 4 * (1 + 1 / 3) : n * i * 4
            }, t.recreateResource = function() {
                this._createWebGlTexture(), this.completeCreate()
            }, t.onAsynLoaded = function(e, t, n) {
                if (n) {
                    var i = n[0];
                    void 0 !== i && (this._canRead = i);
                    var r = n[1];
                    void 0 !== r && (this._repeat = r);
                    var a = n[2];
                    void 0 !== a && (this._format = a);
                    var o = n[3];
                    void 0 !== o && (this._mipmap = o);
                    var s = n.wrapModeU;
                    void 0 !== s && (this._wrapModeU = s);
                    var l = n.wrapModeV;
                    void 0 !== l && (this._wrapModeV = l)
                }
                switch (this._format) {
                    case 6407:
                    case 6408:
                        var h = (this._image = t).width,
                            _ = t.height;
                        this._width = h, this._height = _, this._size = new Kt(h, _), this._canRead && (d.isConchApp ? t instanceof c.HTMLElement && (this._pixels = new Uint8Array(t.getImageData(0, 0, h, _))) : (C.canvas.size(h, _), C.canvas.clear(), C.context.drawImage(t, 0, 0, h, _), this._pixels = new Uint8Array(C.context.getImageData(0, 0, h, _).data.buffer)));
                        break;
                    case w.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                        var u = new S(t);
                        u.readUTFBytes(4), u.readUTFBytes(2), u.getInt16();
                        u.endian = "bigEndian", this._width = u.getInt16(), this._height = u.getInt16(), this._size = new Kt(this._width, this._height);
                        u.getInt16(), u.getInt16();
                        this._image = new Uint8Array(t, u.pos)
                }
                this.recreateResource(), this._endLoaded()
            }, t.getPixels = function() {
                if (this._canRead) return this._pixels;
                throw new Error("Texture2D: must set texture canRead is true.")
            }, t.disposeResource = function() {
                this._source && (w.mainContext.deleteTexture(this._source), this._source = null, this._image = null, this.memorySize = 0)
            }, g(0, t, "_src", function() {
                return this.url
            }), g(0, t, "src", function() {
                return this.url
            }), r.load = function(e) {
                return x.loader.create(e, null, null, r)
            }, r
        }(),
        hi = function(e) {
            function t() {
                t.__super.call(this), this._type = 34067
            }
            m(t, "t_tl.d3.resource.TextureCube", gn);
            var n = t.prototype;
            return n._onTextureLoaded = function(e) {
                this._images = e;
                for (var t = 2147483647, n = 2147483647, i = 0; i < 6; i++) {
                    var r = e[i];
                    t = Math.min(t, r.width), n = Math.min(n, r.height)
                }
                this._width = t, this._height = n, this._size = new Kt(t, n)
            }, n._createWebGlTexture = function() {
                var e = 0;
                for (e = 0; e < 6; e++)
                    if (!this._images[e]) throw "create GLTextur err:no data:" + this._images[e];
                var t = w.mainContext,
                    n = this._source = t.createTexture(),
                    i = this._width,
                    r = this._height,
                    a = O.curBindTexTarget,
                    o = O.curBindTexValue;
                O.bindTexture(t, this._type, n), t.texImage2D(34069, 0, 6408, 6408, 5121, this._images[0]), t.texImage2D(34070, 0, 6408, 6408, 5121, this._images[1]), t.texImage2D(34071, 0, 6408, 6408, 5121, this._images[2]), t.texImage2D(34072, 0, 6408, 6408, 5121, this._images[3]), t.texImage2D(34073, 0, 6408, 6408, 5121, this._images[4]), t.texImage2D(34074, 0, 6408, 6408, 5121, this._images[5]);
                var s = this.minFifter,
                    l = this.magFifter,
                    h = this._repeat ? 10497 : 33071,
                    _ = p.isPOT(i, r);
                for (_ ? (this.mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729), -1 !== l || (l = 9729), t.texParameteri(this._type, 10241, s), t.texParameteri(this._type, 10240, l), t.texParameteri(this._type, 10242, h), t.texParameteri(this._type, 10243, h), this.mipmap && t.generateMipmap(this._type)) : (-1 !== s || (s = 9729), -1 !== l || (l = 9729), t.texParameteri(this._type, 10241, s), t.texParameteri(this._type, 10240, l), t.texParameteri(this._type, 10242, 33071), t.texParameteri(this._type, 10243, 33071)), a && o && O.bindTexture(t, a, o), e = 0; e < 6; e++) this._images[e].onload = null, this._images[e] = null;
                this.memorySize = _ ? i * r * 4 * (1 + 1 / 3) * 6 : i * r * 4 * 6
            }, n.recreateResource = function() {
                null != this._url && (this._createWebGlTexture(), this.completeCreate())
            }, n.onAsynLoaded = function(e, t, n) {
                this._onTextureLoaded(t), this.activeResource(), this._endLoaded()
            }, n.disposeResource = function() {
                this._source && (w.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0)
            }, g(0, n, "defaulteTexture", function() {
                return si.grayTexture
            }), t.load = function(e) {
                return x.loader.create(e, null, null, t)
            }, t
        }(),
        _i = function(i) {
            function p(e) {
                this._hasIndependentBound = !0, p.__super.call(this, e), this._owner.transform.off("worldmatrixneedchanged", this, this._onWorldMatNeedChange), this._cacheAnimationNodeIndex = [], this._cacheAnimationNode = [], this._localBoundingBoxCorners = M(8, null), this._owner.meshFilter.on("meshchanged", this, this._$3__onMeshChanged)
            }
            m(p, "t_tl.d3.core.SkinnedMeshRender", i);
            var e = p.prototype;
            return e._getCacheAnimationNodes = function() {
                var e = this._cacheMesh._boneNames,
                    t = e.length;
                this._cacheAnimationNode.length = t, this._cacheAnimationNodeIndex.length = t;
                for (var n = this._cacheAnimator._avatarNodes, i = this._cacheAnimator._avatarNodeMap, r = 0; r < t; r++) {
                    var a = i[e[r]];
                    this._cacheAnimationNode[r] = a, this._cacheAnimationNodeIndex[r] = n.indexOf(a)
                }
            }, e._offComputeBoneIndexToMeshEvent = function(e, t) {
                e.loaded ? t.loaded || t.off("loaded", this, this._getCacheAnimationNodes) : e.off("loaded", this, this._computeBoneIndexToMeshWithAsyncMesh)
            }, e._computeBoneIndexToMeshWithAsyncAvatar = function() {
                this._cacheAvatar.loaded ? this._computeBoneIndexToMeshWithAsyncMesh() : this._cacheAvatar.once("loaded", this, this._computeBoneIndexToMeshWithAsyncMesh)
            }, e._computeBoneIndexToMeshWithAsyncMesh = function() {
                this._cacheMesh.loaded ? this._getCacheAnimationNodes() : this._cacheMesh.on("loaded", this, this._getCacheAnimationNodes)
            }, e._$3__onMeshChanged = function(e, t, n) {
                this._cacheMesh = n, t && !t.loaded && n.off("loaded", this, this._onMeshLoaded), n.loaded ? this._onMeshLoaded(n) : n.on("loaded", this, this._onMeshLoaded), this._cacheAvatar && (t && this._offComputeBoneIndexToMeshEvent(this._cacheAvatar, t), n && this._computeBoneIndexToMeshWithAsyncAvatar())
            }, e._onMeshLoaded = function(e) {
                var t = e.subMeshCount;
                this._subSkinnedDatas = [], this._subSkinnedDatas.length = t;
                for (var n = 0; n < t; n++)
                    for (var i = this._subSkinnedDatas[n] = [], r = e.getSubMesh(n)._boneIndicesList, a = 0, o = r.length; a < o; a++) i[a] = new Float32Array(16 * r[a].length)
            }, e._setCacheAnimator = function(e) {
                this._cacheAnimator = e, this._rootBone && (this._rootIndex = e._avatarNodes.indexOf(e._avatarNodeMap[this._rootBone]))
            }, e._setRootBone = function(e) {
                this._rootBone = e, this._cacheAnimator && (this._rootIndex = this._cacheAnimator._avatarNodes.indexOf(this._cacheAnimator._avatarNodeMap[e]))
            }, e._setCacheAvatar = function(e) {
                this._cacheAvatar !== e && (this._cacheMesh ? (this._cacheAvatar && this._offComputeBoneIndexToMeshEvent(this._cacheAvatar, this._cacheMesh), (this._cacheAvatar = e) && (this._addShaderDefine(Ei.SHADERDEFINE_BONE), this._computeBoneIndexToMeshWithAsyncAvatar())) : this._cacheAvatar = e)
            }, e._calculateBoundingBox = function() {
                if (this._hasIndependentBound) {
                    if (this._cacheAnimator) {
                        var e = this._owner.transform,
                            t = e.worldMatrix;
                        if (this._cacheAnimator._canCache) {
                            var n = this._cacheAnimator._curAvatarNodeDatas;
                            qt.matrix4x4MultiplyMFM(this._cacheAnimator.owner.transform.worldMatrix, n[this._rootIndex], t)
                        } else qt.matrix4x4MultiplyMFM(this._cacheAnimator.owner.transform.worldMatrix, this._cacheAnimator._avatarNodeMap[this._rootBone].transform.getWorldMatrix(), t);
                        e.worldMatrix = t, null == this._cacheAnimator._avatarNodeMap[this._rootBone] || null == this._localBoundBox ? this._boundingBox.toDefault() : this._calculateBoundBoxByInitCorners(this._localBoundingBoxCorners)
                    }
                } else i.prototype._calculateBoundingBox.call(this)
            }, e._calculateBoundingSphere = function() {
                if (this._hasIndependentBound) {
                    if (this._cacheAnimator) {
                        var e = this._owner.transform,
                            t = e.worldMatrix;
                        if (this._cacheAnimator._canCache) {
                            var n = this._cacheAnimator._curAvatarNodeDatas;
                            qt.matrix4x4MultiplyMFM(this._cacheAnimator.owner.transform.worldMatrix, n[this._rootIndex], t)
                        } else qt.matrix4x4MultiplyMFM(this._cacheAnimator.owner.transform.worldMatrix, this._cacheAnimator._avatarNodeMap[this._rootBone].transform.getWorldMatrix(), t);
                        e.worldMatrix = t, null == this._cacheAnimator._avatarNodeMap[this._rootBone] || null == this.localBoundSphere ? this._boundingSphere.toDefault() : this._calculateBoundingSphereByInitSphere(this.localBoundSphere)
                    }
                } else i.prototype._calculateBoundingSphere.call(this)
            }, e._updateOctreeNode = function() {
                var e = this._treeNode;
                e && e.updateObject(this)
            }, e._renderUpdate = function(e) {
                var t, n = this._cacheAnimator,
                    i = this._cacheMesh.subMeshCount,
                    r = this._owner.transform;
                if (n) {
                    var a = n._canCache,
                        o = this._cacheAnimator._curAvatarNodeDatas,
                        s = n.owner;
                    if (this._setShaderValueMatrix4x4(0, s._transform.worldMatrix), t = s.getProjectionViewWorldMatrix(e), this._setShaderValueMatrix4x4(1, t), this._cacheMesh && this._cacheMesh.loaded && this._cacheAvatar && this._cacheAvatar.loaded) {
                        var l = 0,
                            h = 0,
                            _ = this._cacheMesh._inverseBindPoses,
                            u = this._cacheMesh._skinnedDatas;
                        if (a)
                            for (l = 0, h = _.length; l < h; l++) qt._mulMatrixArray(o[this._cacheAnimationNodeIndex[l]], _[l], u, 16 * l);
                        else
                            for (l = 0, h = _.length; l < h; l++) qt._mulMatrixArray(this._cacheAnimationNode[l].transform.getWorldMatrix(), _[l], u, 16 * l);
                        for (l = 0; l < i; l++) {
                            for (var c = this._cacheMesh.getSubMesh(l)._boneIndicesList, d = c.length, f = this._subSkinnedDatas[l], m = 0; m < d; m++) p._splitAnimationDatas(c[m], u, f[m]);
                            this._renderElements[l]._skinAnimationDatas = f
                        }
                    }
                } else this._setShaderValueMatrix4x4(0, r.worldMatrix), t = this._owner.getProjectionViewWorldMatrix(e), this._setShaderValueMatrix4x4(1, t);
                return Qt.debugMode && this._renderRenderableBoundBox(), !0
            }, g(0, e, "localBoundBox", function() {
                return this._localBoundBox
            }, function(e) {
                (this._localBoundBox = e).getCorners(this._localBoundingBoxCorners)
            }), g(0, e, "boundingSphere", function() {
                return this._calculateBoundingSphere(), this._boundingSphere
            }), g(0, e, "boundingBox", function() {
                return this._calculateBoundingBox(), this._boundingBox
            }), g(0, e, "boundingBoxCenter", function() {
                var e = this.boundingBox;
                return Vt.add(e.min, e.max, this._boundingBoxCenter), Vt.scale(this._boundingBoxCenter, .5, this._boundingBoxCenter), this._boundingBoxCenter
            }), p._splitAnimationDatas = function(e, t, n) {
                for (var i = 0, r = e.length, a = 0; i < r; i++)
                    for (var o = e[i] << 4, s = 0; s < 16; s++, a++) n[a] = t[o + s]
            }, p
        }(yn),
        ui = function(t) {
            function n(e, t) {
                n.__super.call(this), void 0 === e && (e = .3), void 0 === t && (t = 1e3), this._tempVector3 = new Vt, this._position = new Vt, this._up = new Vt, this._forward = new Vt, this._right = new Vt, this._fieldOfView = 60, this._useUserProjectionMatrix = !1, this._orthographic = !1, this._viewportExpressedInClipSpace = !0, this._renderTargetSize = Kt.fullScreen, this._orthographicVerticalSize = 10, this.renderingOrder = 0, this._nearPlane = e, this._farPlane = t, this.cullingMask = 2147483647, this.clearFlag = 0, this.useOcclusionCulling = !0, this._calculateProjectionMatrix(), x.stage.on("resize", this, this._onScreenSizeChanged)
            }
            m(n, "t_tl.d3.core.BaseCamera", t);
            var e = n.prototype;
            return e._sortCamerasByRenderingOrder = function() {
                if (this._displayedInStage)
                    for (var e = this.scene._cameraPool, t = e.length - 1, n = 0; n < t; n++)
                        if (e[n].renderingOrder > e[t].renderingOrder) {
                            var i = e[n];
                            e[n] = e[t], e[t] = i
                        }
            }, e._calculateProjectionMatrix = function() {}, e._onScreenSizeChanged = function() {
                this._calculateProjectionMatrix()
            }, e._prepareCameraToRender = function() {
                F._currentCameraCullingMask = this.cullingMask;
                var e = this._shaderValues;
                e.setValue(0, this.transform.position.elements), e.setValue(5, this.forward.elements), e.setValue(6, this.up.elements)
            }, e._prepareCameraViewProject = function(e, t) {
                var n = this._shaderValues;
                n.setValue(1, e.elements), n.setValue(2, t.elements)
            }, e._renderCamera = function(e, t, n) {}, e.addLayer = function(e) {
                29 !== e.number && 30 != e.number && (this.cullingMask = this.cullingMask | e.mask)
            }, e.removeLayer = function(e) {
                29 !== e.number && 30 != e.number && (this.cullingMask = this.cullingMask & ~e.mask)
            }, e.addAllLayers = function() {
                this.cullingMask = 2147483647
            }, e.removeAllLayers = function() {
                this.cullingMask = 0 | F.getLayerByNumber(29).mask | F.getLayerByNumber(30).mask
            }, e.ResetProjectionMatrix = function() {
                this._useUserProjectionMatrix = !1, this._calculateProjectionMatrix()
            }, e.moveForward = function(e) {
                this._tempVector3.elements[0] = this._tempVector3.elements[1] = 0, this._tempVector3.elements[2] = e, this.transform.translate(this._tempVector3)
            }, e.moveRight = function(e) {
                this._tempVector3.elements[1] = this._tempVector3.elements[2] = 0, this._tempVector3.elements[0] = e, this.transform.translate(this._tempVector3)
            }, e.moveVertical = function(e) {
                this._tempVector3.elements[0] = this._tempVector3.elements[2] = 0, this._tempVector3.elements[1] = e, this.transform.translate(this._tempVector3, !1)
            }, e._addSelfRenderObjects = function() {
                var e = this.scene._cameraPool,
                    t = e.length;
                if (0 < t) {
                    for (var n = t - 1; 0 <= n; n--)
                        if (this.renderingOrder <= e[n].renderingOrder) {
                            e.splice(n + 1, 0, this);
                            break
                        }
                } else e.push(this), this.scene.conchModel && this.scene.conchModel.setCurrentCamera(this.conchModel)
            }, e._clearSelfRenderObjects = function() {
                var e = this.scene._cameraPool;
                e.splice(e.indexOf(this), 1)
            }, e.destroy = function(e) {
                void 0 === e && (e = !0), this._sky && this._sky.destroy(), this.renderTarget = null, x.stage.off("resize", this, this._onScreenSizeChanged), t.prototype.destroy.call(this, e)
            }, g(0, e, "sky", function() {
                return this._sky
            }, function(e) {
                (this._sky = e)._ownerCamera = this
            }), g(0, e, "forward", function() {
                var e = this.transform.worldMatrix.elements,
                    t = this._forward.elements;
                return t[0] = -e[8], t[1] = -e[9], t[2] = -e[10], this._forward
            }), g(0, e, "position", function() {
                var e = this.transform.worldMatrix.elements,
                    t = this._position.elements;
                return t[0] = e[12], t[1] = e[13], t[2] = e[14], this._position
            }), g(0, e, "renderTarget", function() {
                return this._renderTarget
            }, function(e) {
                null != (this._renderTarget = e) && (this._renderTargetSize = e.size)
            }), g(0, e, "up", function() {
                var e = this.transform.worldMatrix.elements,
                    t = this._up.elements;
                return t[0] = e[4], t[1] = e[5], t[2] = e[6], this._up
            }), g(0, e, "right", function() {
                var e = this.transform.worldMatrix.elements,
                    t = this._right.elements;
                return t[0] = e[0], t[1] = e[1], t[2] = e[2], this._right
            }), g(0, e, "renderTargetSize", function() {
                return this._renderTargetSize
            }, function(e) {
                null != this.renderTarget && this._renderTargetSize, this._renderTargetSize = e, this._calculateProjectionMatrix()
            }), g(0, e, "fieldOfView", function() {
                return this._fieldOfView
            }, function(e) {
                this._fieldOfView = e, this._calculateProjectionMatrix()
            }), g(0, e, "nearPlane", function() {
                return this._nearPlane
            }, function(e) {
                this._nearPlane = e, this._calculateProjectionMatrix()
            }), g(0, e, "farPlane", function() {
                return this._farPlane
            }, function(e) {
                this._farPlane = e, this._calculateProjectionMatrix()
            }), g(0, e, "orthographic", function() {
                return this._orthographic
            }, function(e) {
                this._orthographic = e, this._calculateProjectionMatrix()
            }), g(0, e, "orthographicVerticalSize", function() {
                return this._orthographicVerticalSize
            }, function(e) {
                this._orthographicVerticalSize = e, this._calculateProjectionMatrix()
            }), g(0, e, "renderingOrder", function() {
                return this._renderingOrder
            }, function(e) {
                this._renderingOrder = e, this._sortCamerasByRenderingOrder()
            }), n.CAMERAPOS = 0, n.VIEWMATRIX = 1, n.PROJECTMATRIX = 2, n.VPMATRIX = 3, n.VPMATRIX_NO_TRANSLATE = 4, n.CAMERADIRECTION = 5, n.CAMERAUP = 6, n.ENVIRONMENTDIFFUSE = 7, n.ENVIRONMENTSPECULAR = 8, n.SIMLODINFO = 9, n.DIFFUSEIRRADMATR = 10, n.DIFFUSEIRRADMATG = 11, n.DIFFUSEIRRADMATB = 12, n.HDREXPOSURE = 13, n.RENDERINGTYPE_DEFERREDLIGHTING = "DEFERREDLIGHTING", n.RENDERINGTYPE_FORWARDRENDERING = "FORWARDRENDERING", n.CLEARFLAG_SOLIDCOLOR = 0, n.CLEARFLAG_SKY = 1, n.CLEARFLAG_DEPTHONLY = 2, n.CLEARFLAG_NONE = 3, u(n, ["_invertYScaleMatrix", function() {
                return this._invertYScaleMatrix = new At(1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }, "_invertYProjectionMatrix", function() {
                return this._invertYProjectionMatrix = new At
            }, "_invertYProjectionViewMatrix", function() {
                return this._invertYProjectionViewMatrix = new At
            }]), n
        }(Fn),
        ci = function(n) {
            function t(e) {
                this._render = null, this._geometryFilter = null, t.__super.call(this, e)
            }
            m(t, "t_tl.d3.core.RenderableSprite3D", n);
            var e = t.prototype;
            return e._addToInitStaticBatchManager = function() {}, e._setBelongScene = function(e) {
                n.prototype._setBelongScene.call(this, e), e._renderableSprite3Ds.push(this), this._render._applyLightMapParams()
            }, e._setUnBelongScene = function() {
                var e = this._scene._renderableSprite3Ds,
                    t = e.indexOf(this);
                e.splice(t, 1), this._render._removeShaderDefine(t_tl.d3.core.RenderableSprite3D.SAHDERDEFINE_LIGHTMAP), n.prototype._setUnBelongScene.call(this)
            }, e._update = function(e) {
                (e.owner = this)._activeInHierarchy && (this._updateComponents(e), this._render._updateOctreeNode(), this._lateUpdateComponents(e), R.spriteCount++, this._childs.length && this._updateChilds(e))
            }, e.destroy = function(e) {
                void 0 === e && (e = !0), n.prototype.destroy.call(this, e), this._render._destroy(), this._render = null
            }, t.__init__ = function() {
                t.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV = t.shaderDefines.registerDefine("SCALEOFFSETLIGHTINGMAPUV"), t.SAHDERDEFINE_LIGHTMAP = t.shaderDefines.registerDefine("LIGHTMAP")
            }, t.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV = 2, t.SAHDERDEFINE_LIGHTMAP = 4, t.LIGHTMAPSCALEOFFSET = 2, t.LIGHTMAP = 3, u(t, ["shaderDefines", function() {
                return this.shaderDefines = new Bt
            }]), t
        }(Fn),
        di = function(e) {
            function t() {
                this._intensityColor = null, this._intensity = NaN, this._shadow = !1, this._shadowFarPlane = 0, this._shadowMapSize = 0, this._shadowMapCount = 0, this._shadowMapPCFType = 0, this._parallelSplitShadowMap = null, this._lightmapBakedType = 0, this.color = null, t.__super.call(this), this._intensity = 1, this._intensityColor = new Vt, this.color = new Vt(1, 1, 1), this._shadow = !1, this._shadowFarPlane = 8, this._shadowMapSize = 512, this._shadowMapCount = 1, this._shadowMapPCFType = 0, this._lightmapBakedType = t.LIGHTMAPBAKEDTYPE_REALTIME
            }
            m(t, "t_tl.d3.core.light.LightSprite", Fn);
            var n = t.prototype;
            return n._parseCustomProps = function(e, t, n, i) {
                var r = n.color,
                    a = this.color.elements;
                a[0] = r[0], a[1] = r[1], a[2] = r[2]
            }, n._addSelfRenderObjects = function() {
                this.lightmapBakedType !== t.LIGHTMAPBAKEDTYPE_BAKED && this._scene._addLight(this)
            }, n._clearSelfRenderObjects = function() {
                this.lightmapBakedType !== t.LIGHTMAPBAKEDTYPE_BAKED && this._scene._removeLight(this)
            }, n._prepareToScene = function(e) {
                return !1
            }, g(0, n, "lightmapBakedType", function() {
                return this._lightmapBakedType
            }, function(e) {
                this._lightmapBakedType !== e && (this._lightmapBakedType = e, this._activeInHierarchy && (e !== t.LIGHTMAPBAKEDTYPE_BAKED ? this._scene._addLight(this) : this._scene._removeLight(this)))
            }), g(0, n, "shadowPCFType", function() {
                return this._shadowMapPCFType
            }, function(e) {
                this._shadowMapPCFType = e, this._parallelSplitShadowMap && this._parallelSplitShadowMap.setPCFType(e)
            }), g(0, n, "intensity", function() {
                return this._intensity
            }, function(e) {
                this._intensity = e
            }), g(0, n, "shadow", function() {
                return this._shadow
            }, function(e) {
                throw new Error("LightSprite: must override it.")
            }), g(0, n, "shadowDistance", function() {
                return this._shadowFarPlane
            }, function(e) {
                this._shadowFarPlane = e, this._parallelSplitShadowMap && this._parallelSplitShadowMap.setFarDistance(e)
            }), g(0, n, "shadowPSSMCount", function() {
                return this._shadowMapCount
            }, function(e) {
                this._shadowMapCount = e, this._parallelSplitShadowMap && (this._parallelSplitShadowMap.PSSMNum = e)
            }), g(0, n, "shadowResolution", function() {
                return this._shadowMapSize
            }, function(e) {
                this._shadowMapSize = e, this._parallelSplitShadowMap && this._parallelSplitShadowMap.setShadowMapTextureSize(e)
            }), g(0, n, "diffuseColor", function() {
                return console.log("LightSprite: discard property,please use color property instead."), this.color
            }, function(e) {
                console.log("LightSprite: discard property,please use color property instead."), this.color = e
            }), t.LIGHTMAPBAKEDTYPE_REALTIME = 0, t.LIGHTMAPBAKEDTYPE_MIXED = 1, t.LIGHTMAPBAKEDTYPE_BAKED = 2, t
        }(),
        fi = function(e) {
            function h(e) {
                this._terrainRes = null, this._lightmapScaleOffset = null, h.__super.call(this), this._lightmapScaleOffset = new Pt(1, 1, 0, 0), e && ((this._terrainRes = e).loaded ? this.buildTerrain(e) : e.once("loaded", this, this.buildTerrain))
            }
            m(h, "t_tl.d3.terrain.Terrain", Fn);
            var t = h.prototype;
            return t._parseCustomProps = function(e, t, n, i) {
                this.terrainRes = Ae.getRes(t[n.dataPath]);
                var r = n.lightmapIndex;
                null != r && this.setLightmapIndex(r);
                var a = n.lightmapScaleOffset;
                a && this.setLightmapScaleOffset(new Pt(a[0], a[1], a[2], a[3]))
            }, t.setLightmapIndex = function(e) {
                for (var t = 0; t < this._childs.length; t++) {
                    this._childs[t].terrainRender.lightmapIndex = e
                }
            }, t.setLightmapScaleOffset = function(e) {
                if (e) {
                    e.cloneTo(this._lightmapScaleOffset);
                    for (var t = 0; t < this._childs.length; t++) {
                        this._childs[t].terrainRender.lightmapScaleOffset = this._lightmapScaleOffset
                    }
                }
            }, t.disableLight = function() {
                for (var e = 0, t = this._childs.length; e < t; e++)
                    for (var n = this._childs[e], i = 0, r = n._render.sharedMaterials.length; i < r; i++) {
                        n._render.sharedMaterials[i].disableLight()
                    }
            }, t.buildTerrain = function(e) {
                for (var t = e._chunkNumX, n = e._chunkNumZ, i = e._heightData, r = 0, a = 0; a < n; a++)
                    for (var o = 0; o < t; o++) {
                        for (var s = new Di(o, a, e._gridSize, i._terrainHeightData, i._width, i._height, e._cameraCoordinateInverse), l = e._chunkInfos[r++], h = 0; h < l.alphaMap.length; h++) {
                            var _ = l.detailID[h].length,
                                u = 0 < _ ? e._detailTextureInfos[l.detailID[h][0]].diffuseTexture : null,
                                c = 1 < _ ? e._detailTextureInfos[l.detailID[h][1]].diffuseTexture : null,
                                d = 2 < _ ? e._detailTextureInfos[l.detailID[h][2]].diffuseTexture : null,
                                f = 3 < _ ? e._detailTextureInfos[l.detailID[h][3]].diffuseTexture : null,
                                m = 0 < _ ? e._detailTextureInfos[l.detailID[h][0]].scale : null,
                                p = 1 < _ ? e._detailTextureInfos[l.detailID[h][1]].scale : null,
                                v = 2 < _ ? e._detailTextureInfos[l.detailID[h][2]].scale : null,
                                g = 3 < _ ? e._detailTextureInfos[l.detailID[h][3]].scale : null;
                            s.buildRenderElementAndMaterial(_, l.normalMap, l.alphaMap[h], u, c, d, f, e._materialInfo.ambientColor, e._materialInfo.diffuseColor, e._materialInfo.specularColor, m ? m.x : 1, m ? m.y : 1, p ? p.x : 1, p ? p.y : 1, v ? v.x : 1, v ? v.y : 1, g ? g.x : 1, g ? g.y : 1)
                        }
                        s.terrainRender.receiveShadow = !0, s.terrainRender.lightmapScaleOffset = this._lightmapScaleOffset, this.addChild(s)
                    }
            }, t.width = function() {
                return this._terrainRes._chunkNumX * zt.CHUNK_GRID_NUM * this._terrainRes._gridSize
            }, t.depth = function() {
                return this._terrainRes._chunkNumZ * zt.CHUNK_GRID_NUM * this._terrainRes._gridSize
            }, t.getHeightXZ = function(e, t) {
                if (!this._terrainRes || !this._terrainRes.loaded) return NaN;
                if (e -= this.transform.position.x, t -= this.transform.position.z, h.__VECTOR3__ || (h.__VECTOR3__ = new Vt), h.__VECTOR3__.elements[0] = e, h.__VECTOR3__.elements[1] = 0, h.__VECTOR3__.elements[2] = t, Vt.transformV3ToV3(h.__VECTOR3__, zt.__ADAPT_MATRIX_INV__, h.__VECTOR3__), e = h.__VECTOR3__.elements[0], t = h.__VECTOR3__.elements[2], e < 0 || e > this.width() || t < 0 || t > this.depth()) return NaN;
                var n = this._terrainRes._gridSize,
                    i = parseInt("" + e / n),
                    r = parseInt("" + t / n),
                    a = e - i * n,
                    o = t - r * n,
                    s = NaN,
                    l = this._terrainRes._heightData;
                return n < a + o ? (s = l._terrainHeightData[(r + 1 - 1) * l._width + i + 1]) + (l._terrainHeightData[(r + 1 - 1) * l._width + i] - s) * ((n - a) / n) + (l._terrainHeightData[(r - 1) * l._width + i + 1] - s) * ((n - o) / n) : (s = l._terrainHeightData[Math.max(0, r - 1) * l._width + i]) + (l._terrainHeightData[Math.min(l._width * l._height - 1, (r + 1 - 1) * l._width + i)] - s) * (o / n) + (l._terrainHeightData[Math.min(l._width * l._height - 1, Math.max(0, r - 1) * l._width + i + 1)] - s) * (a / n)
            }, g(0, t, "terrainRes", null, function(e) {
                e && ((this._terrainRes = e).loaded ? this.buildTerrain(e) : e.once("loaded", this, this.buildTerrain))
            }), h.load = function(e) {
                return x.loader.create(e, null, null, h, null, 1, !1)
            }, h.RENDER_LINE_MODEL = !1, h.LOD_TOLERANCE_VALUE = 4, h.LOD_DISTANCE_FACTOR = 2, h.__VECTOR3__ = null, h
        }(),
        mi = (function(e) {
            function i(e, t, n) {
                this._long = NaN, this._width = NaN, this._height = NaN, void 0 === e && (e = 1), void 0 === t && (t = 1), void 0 === n && (n = 1), i.__super.call(this), this._long = e, this._width = t, this._height = n, this.activeResource(), this._positions = this._getPositions(), this._generateBoundingObject()
            }
            m(i, "t_tl.d3.resource.models.BoxMesh", ii);
            var t = i.prototype;
            t.recreateResource = function() {
                this._numberVertices = 24, this._numberIndices = 36;
                var e = Qe.vertexDeclaration,
                    t = (e.vertexStride, this._long / 2),
                    n = this._height / 2,
                    i = this._width / 2,
                    r = new Float32Array([-t, n, -i, 0, 1, 0, 0, 0, t, n, -i, 0, 1, 0, 1, 0, t, n, i, 0, 1, 0, 1, 1, -t, n, i, 0, 1, 0, 0, 1, -t, -n, -i, 0, -1, 0, 0, 1, t, -n, -i, 0, -1, 0, 1, 1, t, -n, i, 0, -1, 0, 1, 0, -t, -n, i, 0, -1, 0, 0, 0, -t, n, -i, -1, 0, 0, 0, 0, -t, n, i, -1, 0, 0, 1, 0, -t, -n, i, -1, 0, 0, 1, 1, -t, -n, -i, -1, 0, 0, 0, 1, t, n, -i, 1, 0, 0, 1, 0, t, n, i, 1, 0, 0, 0, 0, t, -n, i, 1, 0, 0, 0, 1, t, -n, -i, 1, 0, 0, 1, 1, -t, n, i, 0, 0, 1, 0, 0, t, n, i, 0, 0, 1, 1, 0, t, -n, i, 0, 0, 1, 1, 1, -t, -n, i, 0, 0, 1, 0, 1, -t, n, -i, 0, 0, -1, 1, 0, t, n, -i, 0, 0, -1, 0, 0, t, -n, -i, 0, 0, -1, 0, 1, -t, -n, -i, 0, 0, -1, 1, 1]),
                    a = new Uint16Array([0, 1, 2, 2, 3, 0, 4, 7, 6, 6, 5, 4, 8, 9, 10, 10, 11, 8, 12, 15, 14, 14, 13, 12, 16, 17, 18, 18, 19, 16, 20, 23, 22, 22, 21, 20]);
                this._vertexBuffer = new Kn(e, this._numberVertices, 35044, !0), this._indexBuffer = new jn("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(r), this._indexBuffer.setData(a), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate()
            }, g(0, t, "long", function() {
                return this._long
            }, function(e) {
                this._long !== e && (this._long = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "width", function() {
                return this._width
            }, function(e) {
                this._width !== e && (this._width = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "height", function() {
                return this._height
            }, function(e) {
                this._height !== e && (this._height = e, this.releaseResource(), this.activeResource())
            })
        }(), function(e) {
            function r(e, t, n, i) {
                this._radius = NaN, this._height = NaN, this._slices = 0, void(this._stacks = 0) === e && (e = .5), void 0 === t && (t = 2), void 0 === n && (n = 16), void 0 === i && (i = 32), r.__super.call(this), this._radius = e, this._height = t < 2 * e ? 2 * e : t, this._stacks = n, this._slices = i, this.recreateResource(), this._positions = this._getPositions(), this._generateBoundingObject()
            }
            m(r, "t_tl.d3.resource.models.CapsuleMesh", ii);
            var t = r.prototype;
            t.recreateResource = function() {
                this._numberVertices = (this._stacks + 1) * (this.slices + 1) * 2 + 2 * (this._slices + 1), this._numberIndices = 3 * this._stacks * (this._slices + 1) * 2 * 2 + 2 * this._slices * 3;
                var e = Qe.vertexDeclaration,
                    t = e.vertexStride / 4,
                    n = new Float32Array(this._numberVertices * t),
                    i = new Uint16Array(this._numberIndices),
                    r = Math.PI / 2 / this._stacks,
                    a = 2 * Math.PI / this._slices,
                    o = this._height / 2 - this._radius,
                    s = 0,
                    l = 0,
                    h = 0,
                    _ = 0,
                    u = 0,
                    c = 0,
                    d = 0,
                    f = 0;
                for (d = 0; d <= this._stacks; d++)
                    for (f = 0; f <= this._slices; f++) s = this._radius * Math.cos(d * r) * Math.cos(f * a + Math.PI), l = this._radius * Math.sin(d * r), h = this._radius * Math.cos(d * r) * Math.sin(f * a + Math.PI), n[_++] = s, n[_++] = l + o, n[_++] = h, n[_++] = s, n[_++] = l, n[_++] = h, n[_++] = 1 - f / this._slices, n[_++] = (1 - d / this._stacks) * (Math.PI * this._radius / 2 / (this._height + Math.PI * this._radius)), d < this._stacks && (i[u++] = d * (this._slices + 1) + f + (this._slices + 1), i[u++] = d * (this._slices + 1) + f, i[u++] = d * (this._slices + 1) + f + 1, i[u++] = d * (this._slices + 1) + f + this._slices, i[u++] = d * (this._slices + 1) + f, i[u++] = d * (this._slices + 1) + f + (this._slices + 1));
                for (c += (this._stacks + 1) * (this._slices + 1), d = 0; d <= this._stacks; d++)
                    for (f = 0; f <= this._slices; f++) s = this._radius * Math.cos(d * r) * Math.cos(f * a + Math.PI), l = this._radius * Math.sin(-d * r), h = this._radius * Math.cos(d * r) * Math.sin(f * a + Math.PI), n[_++] = s, n[_++] = l - o, n[_++] = h, n[_++] = s, n[_++] = l, n[_++] = h, n[_++] = 1 - f / this._slices, n[_++] = (d / this._stacks * (Math.PI * this._radius / 2) + (this._height + Math.PI * this._radius / 2)) / (this._height + Math.PI * this._radius), d < this._stacks && (i[u++] = c + d * (this._slices + 1) + f, i[u++] = c + d * (this._slices + 1) + f + (this._slices + 1), i[u++] = c + d * (this._slices + 1) + f + 1, i[u++] = c + d * (this._slices + 1) + f, i[u++] = c + d * (this._slices + 1) + f + this._slices, i[u++] = c + d * (this._slices + 1) + f + (this._slices + 1));
                for (c += (this._stacks + 1) * (this._slices + 1), f = 0; f <= this._slices; f++) s = this._radius * Math.cos(f * a + Math.PI), l = o, h = this._radius * Math.sin(f * a + Math.PI), n[_++] = s, n[_ + 8 * (this._slices + 1) - 1] = s, n[_++] = l, n[_ + 8 * (this._slices + 1) - 1] = -l, n[_++] = h, n[_ + 8 * (this._slices + 1) - 1] = h, n[_++] = s, n[_ + 8 * (this._slices + 1) - 1] = s, n[_++] = 0, n[_ + 8 * (this._slices + 1) - 1] = 0, n[_++] = h, n[_ + 8 * (this._slices + 1) - 1] = h, n[_++] = 1 - 1 * f / this._slices, n[_ + 8 * (this._slices + 1) - 1] = 1 - 1 * f / this._slices, n[_++] = Math.PI * this._radius / 2 / (this._height + Math.PI * this._radius), n[_ + 8 * (this._slices + 1) - 1] = (Math.PI * this._radius / 2 + this._height) / (this._height + Math.PI * this._radius);
                for (f = 0; f < this._slices; f++) i[u++] = f + c + (this._slices + 1), i[u++] = f + c + 1, i[u++] = f + c, i[u++] = f + c + (this._slices + 1), i[u++] = f + c + (this._slices + 1) + 1, i[u++] = f + c + 1;
                c += 2 * (this._slices + 1), this._vertexBuffer = new Kn(e, this._numberVertices, 35044, !0), this._indexBuffer = new jn("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(n), this._indexBuffer.setData(i), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate()
            }, g(0, t, "radius", function() {
                return this._radius
            }, function(e) {
                this._radius !== e && (this._radius = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "height", function() {
                return this._height
            }, function(e) {
                this._height !== e && (this._height = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "stacks", function() {
                return this._stacks
            }, function(e) {
                this._stacks !== e && (this._stacks = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "slices", function() {
                return this._slices
            }, function(e) {
                this._slices !== e && (this._slices = e, this.releaseResource(), this.activeResource())
            })
        }(), function(e) {
            function i(e, t, n) {
                this._radius = NaN, this._height = NaN, void(this._slices = 0) === e && (e = .5), void 0 === t && (t = 2), void 0 === n && (n = 32), i.__super.call(this), this._radius = e, this._height = t, this._slices = n, this.recreateResource(), this._positions = this._getPositions(), this._generateBoundingObject()
            }
            m(i, "t_tl.d3.resource.models.CylinderMesh", ii);
            var t = i.prototype;
            t.recreateResource = function() {
                this._numberVertices = this._slices + 1 + 1 + 2 * (this._slices + 1) + (this._slices + 1 + 1), this._numberIndices = 3 * this._slices + 6 * this._slices + 3 * this._slices;
                for (var e = Qe.vertexDeclaration, t = e.vertexStride / 4, n = new Float32Array(this._numberVertices * t), i = new Uint16Array(this._numberIndices), r = 2 * Math.PI / this._slices, a = this._height / 2, o = 0, s = 0, l = 0, h = 0, _ = 0, u = 0, c = 0, d = 0; d <= this._slices; d++) 0 === d && (n[u++] = 0, n[u++] = a, n[u++] = 0, n[u++] = 0, n[u++] = 1, n[u++] = 0, n[u++] = .5, n[u++] = .5), o = d * r, l = Math.cos(o) * this._radius, h = a, _ = Math.sin(o) * this._radius, n[u++] = l, n[u++] = h, n[u++] = _, n[u++] = 0, n[u++] = 1, n[u++] = 0, n[u++] = .5 + .5 * Math.cos(o), n[u++] = .5 + .5 * Math.sin(o);
                for (var f = 0; f < this._slices; f++) i[c++] = 0, i[c++] = f + 1, i[c++] = f + 2;
                s += this._slices + 1 + 1;
                for (var m = 0; m <= this._slices; m++) o = m * r, l = Math.cos(o + Math.PI) * this._radius, h = a, _ = Math.sin(o + Math.PI) * this._radius, n[u++] = l, n[u + 8 * (this._slices + 1) - 1] = l, n[u++] = h, n[u + 8 * (this._slices + 1) - 1] = -h, n[u++] = _, n[u + 8 * (this._slices + 1) - 1] = _, n[u++] = l, n[u + 8 * (this._slices + 1) - 1] = l, n[u++] = 0, n[u + 8 * (this._slices + 1) - 1] = 0, n[u++] = _, n[u + 8 * (this._slices + 1) - 1] = _, n[u++] = 1 - 1 * m / this._slices, n[u + 8 * (this._slices + 1) - 1] = 1 - 1 * m / this._slices, n[u++] = 0, n[u + 8 * (this._slices + 1) - 1] = 1;
                u += 8 * (this._slices + 1);
                for (var p = 0; p < this._slices; p++) i[c++] = p + s + (this._slices + 1), i[c++] = p + s + 1, i[c++] = p + s, i[c++] = p + s + (this._slices + 1), i[c++] = p + s + (this._slices + 1) + 1, i[c++] = p + s + 1;
                s += 2 * (this._slices + 1);
                for (var v = 0; v <= this._slices; v++) 0 === v && (n[u++] = 0, n[u++] = -a, n[u++] = 0, n[u++] = 0, n[u++] = -1, n[u++] = 0, n[u++] = .5, n[u++] = .5), o = v * r, l = Math.cos(o + Math.PI) * this._radius, h = -a, _ = Math.sin(o + Math.PI) * this._radius, n[u++] = l, n[u++] = h, n[u++] = _, n[u++] = 0, n[u++] = -1, n[u++] = 0, n[u++] = .5 + .5 * Math.cos(o), n[u++] = .5 + .5 * Math.sin(o);
                for (var g = 0; g < this._slices; g++) i[c++] = 0 + s, i[c++] = g + 2 + s, i[c++] = g + 1 + s;
                s += this._slices + 1 + 1, this._vertexBuffer = new Kn(e, this._numberVertices, 35044, !0), this._indexBuffer = new jn("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(n), this._indexBuffer.setData(i), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate()
            }, g(0, t, "radius", function() {
                return this._radius
            }, function(e) {
                this._radius !== e && (this._radius = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "height", function() {
                return this._height
            }, function(e) {
                this._height !== e && (this._height = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "slices", function() {
                return this._slices
            }, function(e) {
                this._slices !== e && (this._slices = e, this.releaseResource(), this.activeResource())
            })
        }(), function(e) {
            function r(e, t, n, i) {
                this._long = NaN, this._width = NaN, this._stacks = 0, void(this._slices = 0) === e && (e = 10), void 0 === t && (t = 10), void 0 === n && (n = 10), void 0 === i && (i = 10), r.__super.call(this), this._long = e, this._width = t, this._stacks = n, this._slices = i, this.activeResource(), this._positions = this._getPositions(), this._generateBoundingObject()
            }
            m(r, "t_tl.d3.resource.models.PlaneMesh", ii);
            var t = r.prototype;
            t.recreateResource = function() {
                this._numberVertices = (this._stacks + 1) * (this._slices + 1), this._numberIndices = this._stacks * this._slices * 2 * 3;
                for (var e = new Uint16Array(this._numberIndices), t = Qe.vertexDeclaration, n = t.vertexStride / 4, i = new Float32Array(this._numberVertices * n), r = this._long / 2, a = this._width / 2, o = this._long / this._stacks, s = this._width / this._slices, l = 0, h = 0; h <= this._slices; h++)
                    for (var _ = 0; _ <= this._stacks; _++) i[l++] = _ * o - r, i[l++] = 0, i[l++] = h * s - a, i[l++] = 0, i[l++] = 1, i[l++] = 0, i[l++] = 1 * _ / this._stacks, i[l++] = 1 * h / this._slices;
                var u = 0;
                for (h = 0; h < this._slices; h++)
                    for (_ = 0; _ < this._stacks; _++) e[u++] = (h + 1) * (this._stacks + 1) + _, e[u++] = h * (this._stacks + 1) + _, e[u++] = (h + 1) * (this._stacks + 1) + _ + 1, e[u++] = h * (this._stacks + 1) + _, e[u++] = h * (this._stacks + 1) + _ + 1, e[u++] = (h + 1) * (this._stacks + 1) + _ + 1;
                this._vertexBuffer = new Kn(t, this._numberVertices, 35044, !0), this._indexBuffer = new jn("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(i), this._indexBuffer.setData(e), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate()
            }, g(0, t, "long", function() {
                return this._long
            }, function(e) {
                this._long !== e && (this._long = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "width", function() {
                return this._width
            }, function(e) {
                this._width !== e && (this._width = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "stacks", function() {
                return this._stacks
            }, function(e) {
                this._stacks !== e && (this._stacks = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "slices", function() {
                return this._slices
            }, function(e) {
                this._slices !== e && (this._slices = e, this.releaseResource(), this.activeResource())
            })
        }(), function(e) {
            function n(e, t) {
                this._long = NaN, this._width = NaN, void 0 === e && (e = 1), void 0 === t && (t = 1), n.__super.call(this), this._long = e, this._width = t, this.activeResource(), this._positions = this._getPositions(), this._generateBoundingObject()
            }
            m(n, "t_tl.d3.resource.models.QuadMesh", ii);
            var t = n.prototype;
            t.recreateResource = function() {
                this._numberVertices = 4, this._numberIndices = 6;
                var e = Qe.vertexDeclaration,
                    t = (e.vertexStride, this._long / 2),
                    n = this._width / 2,
                    i = new Float32Array([-t, n, 0, 0, 0, 1, 0, 0, t, n, 0, 0, 0, 1, 1, 0, -t, -n, 0, 0, 0, 1, 0, 1, t, -n, 0, 0, 0, 1, 1, 1]),
                    r = new Uint16Array([0, 1, 2, 3, 2, 1]);
                this._vertexBuffer = new Kn(e, this._numberVertices, 35044, !0), this._indexBuffer = new jn("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(i), this._indexBuffer.setData(r), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate()
            }, g(0, t, "long", function() {
                return this._long
            }, function(e) {
                this._long !== e && (this._long = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "width", function() {
                return this._width
            }, function(e) {
                this._width !== e && (this._width = e, this.releaseResource(), this.activeResource())
            })
        }(), function(e) {
            function i(e, t, n) {
                this._radius = NaN, this._slices = 0, void(this._stacks = 0) === e && (e = .5), void 0 === t && (t = 32), void 0 === n && (n = 32), i.__super.call(this), this._radius = e, this._stacks = t, this._slices = n, this.activeResource(), this._positions = this._getPositions(), this._generateBoundingObject()
            }
            m(i, "t_tl.d3.resource.models.SphereMesh", ii);
            var t = i.prototype;
            t.recreateResource = function() {
                this._numberVertices = (this._stacks + 1) * (this._slices + 1), this._numberIndices = 3 * this._stacks * (this._slices + 1) * 2;
                for (var e = new Uint16Array(this._numberIndices), t = Qe.vertexDeclaration, n = t.vertexStride / 4, i = new Float32Array(this._numberVertices * n), r = Math.PI / this._stacks, a = 2 * Math.PI / this._slices, o = 0, s = 0, l = 0, h = 0; h < this._stacks + 1; h++)
                    for (var _ = Math.sin(h * r), u = Math.cos(h * r), c = 0; c < this._slices + 1; c++) {
                        var d = _ * Math.sin(c * a + 1 * Math.PI / 2),
                            f = _ * Math.cos(c * a + 1 * Math.PI / 2);
                        i[s + 0] = d * this._radius, i[s + 1] = u * this._radius, i[s + 2] = f * this._radius, i[s + 3] = d, i[s + 4] = u, i[s + 5] = f, i[s + 6] = c / this._slices, i[s + 7] = h / this._stacks, s += n, h != this._stacks - 1 && (e[l++] = o + (this._slices + 1), e[l++] = o, e[l++] = o + 1, e[l++] = o + this._slices, e[l++] = o, e[l++] = o + (this._slices + 1), o++)
                    }
                this._vertexBuffer = new Kn(t, this._numberVertices, 35044, !0), this._indexBuffer = new jn("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(i), this._indexBuffer.setData(e), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate()
            }, g(0, t, "radius", function() {
                return this._radius
            }, function(e) {
                this._radius !== e && (this._radius = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "slices", function() {
                return this._slices
            }, function(e) {
                this._slices !== e && (this._slices = e, this.releaseResource(), this.activeResource())
            }), g(0, t, "stacks", function() {
                return this._stacks
            }, function(e) {
                this._stacks !== e && (this._stacks = e, this.releaseResource(), this.activeResource())
            })
        }(), function(e) {
            function o(e, t, n) {
                void 0 === e && (e = 0), void 0 === t && (t = .3), void 0 === n && (n = 1e3), this._viewMatrix = new At, this._projectionMatrix = new At, this._projectionViewMatrix = new At, this._viewport = new Lt(0, 0, 0, 0), this._normalizedViewport = new Lt(0, 0, 1, 1), this._aspectRatio = e, this._boundFrustumUpdate = !0, this._boundFrustum = new Dt(At.DEFAULT), o.__super.call(this, t, n), this.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged)
            }
            m(o, "t_tl.d3.core.Camera", ui);
            var t = o.prototype;
            return t._onWorldMatrixChanged = function() {
                this._boundFrustumUpdate = !0
            }, t._parseCustomProps = function(e, t, n, i) {
                var r = n.clearColor;
                this.clearColor = new Pt(r[0], r[1], r[2], r[3]);
                var a = n.viewport;
                this.normalizedViewport = new Lt(a[0], a[1], a[2], a[3])
            }, t._calculateProjectionMatrix = function() {
                if (!this._useUserProjectionMatrix)
                    if (this._orthographic) {
                        var e = this.orthographicVerticalSize * this.aspectRatio * .5,
                            t = .5 * this.orthographicVerticalSize;
                        At.createOrthoOffCenterRH(-e, e, -t, t, this.nearPlane, this.farPlane, this._projectionMatrix)
                    } else At.createPerspective(3.1416 * this.fieldOfView / 180, this.aspectRatio, this.nearPlane, this.farPlane, this._projectionMatrix);
                this._boundFrustumUpdate = !0
            }, t._update = function(e) {
                this.conchModel && (this.conchModel.setViewMatrix(this.viewMatrix.elements), this.conchModel.setProjectMatrix(this.projectionMatrix.elements)), t_tl.d3.core.Sprite3D.prototype._update.call(this, e)
            }, t._renderCamera = function(e, t, n) {
                var i, r;
                n.parallelSplitShadowMaps[0] && n._renderShadowMap(e, t, this), (t.camera = this)._prepareCameraToRender(), n._preRenderUpdateComponents(t), i = t._viewMatrix = this.viewMatrix;
                var a = this._renderTarget;
                a ? (a.start(), At.multiply(ui._invertYScaleMatrix, this._projectionMatrix, ui._invertYProjectionMatrix), At.multiply(ui._invertYScaleMatrix, this.projectionViewMatrix, ui._invertYProjectionViewMatrix), r = t._projectionMatrix = ui._invertYProjectionMatrix, t._projectionViewMatrix = ui._invertYProjectionViewMatrix) : (r = t._projectionMatrix = this._projectionMatrix, t._projectionViewMatrix = this.projectionViewMatrix), this._prepareCameraViewProject(i, r), t._viewport = this.viewport, n._preRenderScene(e, t, this.boundFrustum), n._clear(e, t), n._renderScene(e, t), n._postRenderUpdateComponents(t), a && a.end()
            }, t.viewportPointToRay = function(e, t) {
                Yt.calculateCursorRay(e, this.viewport, this._projectionMatrix, this.viewMatrix, null, t)
            }, t.normalizedViewportPointToRay = function(e, t) {
                var n = o._tempVector20,
                    i = this.viewport,
                    r = e.elements,
                    a = n.elements;
                a[0] = r[0] * i.width, a[1] = r[1] * i.height, Yt.calculateCursorRay(n, this.viewport, this._projectionMatrix, this.viewMatrix, null, t)
            }, t.worldToViewportPoint = function(e, t) {
                At.multiply(this._projectionMatrix, this._viewMatrix, this._projectionViewMatrix), this.viewport.project(e, this._projectionViewMatrix, t);
                var n = t.elements;
                n[0] = n[0] / x.stage.clientScaleX, n[1] = n[1] / x.stage.clientScaleY
            }, t.worldToNormalizedViewportPoint = function(e, t) {
                At.multiply(this._projectionMatrix, this._viewMatrix, this._projectionViewMatrix), this.normalizedViewport.project(e, this._projectionViewMatrix, t);
                var n = t.elements;
                n[0] = n[0] / x.stage.clientScaleX, n[1] = n[1] / x.stage.clientScaleY
            }, t.convertScreenCoordToOrthographicCoord = function(e, t) {
                if (this._orthographic) {
                    var n = J.clientWidth,
                        i = J.clientHeight,
                        r = this.orthographicVerticalSize * this.aspectRatio / n,
                        a = this.orthographicVerticalSize / i,
                        o = e.elements,
                        s = t.elements;
                    return s[0] = (-n / 2 + o[0]) * r, s[1] = (i / 2 - o[1]) * a, s[2] = (this.nearPlane - this.farPlane) * (o[2] + 1) / 2 - this.nearPlane, Vt.transformCoordinate(t, this.transform.worldMatrix, t), !0
                }
                return !1
            }, g(0, t, "projectionViewMatrix", function() {
                return At.multiply(this.projectionMatrix, this.viewMatrix, this._projectionViewMatrix), this._projectionViewMatrix
            }), g(0, t, "aspectRatio", function() {
                if (0 === this._aspectRatio) {
                    var e = this.viewport;
                    return e.width / e.height
                }
                return this._aspectRatio
            }, function(e) {
                if (e < 0) throw new Error("Camera: the aspect ratio has to be a positive real number.");
                this._aspectRatio = e, this._calculateProjectionMatrix()
            }), g(0, t, "boundFrustum", function() {
                return this._boundFrustumUpdate && (this._boundFrustum.matrix = this.projectionViewMatrix), this._boundFrustum
            }), g(0, t, "needViewport", function() {
                var e = this.normalizedViewport;
                return 0 === e.x && 0 === e.y && 1 === e.width && 1 === e.height
            }), g(0, t, "viewport", function() {
                if (this._viewportExpressedInClipSpace) {
                    var e = this._normalizedViewport,
                        t = this.renderTargetSize,
                        n = t.width,
                        i = t.height;
                    this._viewport.x = e.x * n, this._viewport.y = e.y * i, this._viewport.width = e.width * n, this._viewport.height = e.height * i
                }
                return this._viewport
            }, function(e) {
                if (null != this.renderTarget && (e.x < 0 || e.y < 0 || 0 == e.width || 0 == e.height)) throw new Error("Camera: viewport size invalid.", "value");
                this._viewportExpressedInClipSpace = !1, this._viewport = e, this._calculateProjectionMatrix()
            }), g(0, t, "normalizedViewport", function() {
                if (!this._viewportExpressedInClipSpace) {
                    var e = this._viewport,
                        t = this.renderTargetSize,
                        n = t.width,
                        i = t.height;
                    this._normalizedViewport.x = e.x / n, this._normalizedViewport.y = e.y / i, this._normalizedViewport.width = e.width / n, this._normalizedViewport.height = e.height / i
                }
                return this._normalizedViewport
            }, function(e) {
                e.x < 0 && (e.x = 0, console.warn("Camera: viewport.x must large than 0.0.")), e.y < 0 && (e.y = 0, console.warn("Camera: viewport.y must large than 0.0.")), 1 < e.x + e.width && (e.width = 1 - e.x, console.warn("Camera: viewport.width + viewport.x must less than 1.0.")), 1 < e.y + e.height && (e.height = 1 - e.y, console.warn("Camera: viewport.height + viewport.y must less than 1.0.")), this._viewportExpressedInClipSpace = !0, this._normalizedViewport = e, this._calculateProjectionMatrix()
            }), g(0, t, "projectionMatrix", function() {
                return this._projectionMatrix
            }, function(e) {
                this._projectionMatrix = e, this._useUserProjectionMatrix = !0
            }), g(0, t, "viewMatrix", function() {
                return this.transform.worldMatrix.invert(this._viewMatrix), this._viewMatrix
            }), u(o, ["_tempVector20", function() {
                return this._tempVector20 = new Ot
            }]), o
        }()),
        pi = (function(t) {
            function n() {
                n.__super.call(this), this._render = new An(this), this._render.on("materialchanged", this, this._onMaterialChanged);
                var e = new Gn;
                this._render.sharedMaterial = e, this._geometryFilter = new Vn(this), e.renderMode = 8, this._changeRenderObject(0)
            }
            m(n, "t_tl.d3.core.glitter.Glitter", t);
            var e = n.prototype;
            e._changeRenderObject = function(e) {
                var t = this._render._renderElements,
                    n = t[e];
                n || (n = t[e] = new Q), n._render = this._render;
                var i = this._render.sharedMaterials[e];
                i || (i = Gn.defaultMaterial);
                var r = this._geometryFilter;
                return n._mainSortID = 0, n._sprite3D = this, n.renderObj = r, n._material = i, n
            }, e._onMaterialChanged = function(e, t, n) {
                t < e._renderElements.length && this._changeRenderObject(t)
            }, e._clearSelfRenderObjects = function() {
                this.scene.removeFrustumCullingObject(this._render)
            }, e._addSelfRenderObjects = function() {
                this.scene.addFrustumCullingObject(this._render)
            }, e._update = function(e) {
                this._geometryFilter._update(e.elapsedTime), t.prototype._update.call(this, e)
            }, e.addGlitterByPositions = function(e, t) {
                this._geometryFilter.addVertexPosition(e, t)
            }, e.addGlitterByPositionsVelocitys = function(e, t, n, i) {
                this._geometryFilter.addVertexPositionVelocity(e, t, n, i)
            }, e.cloneTo = function(e) {
                var t = e,
                    n = t.templet,
                    i = this._geometryFilter;
                n.lifeTime = i.lifeTime, n.minSegmentDistance = i.minSegmentDistance, n.minInterpDistance = i.minInterpDistance, n.maxSlerpCount = i.maxSlerpCount, n._maxSegments = i._maxSegments;
                var r = t._render,
                    a = this._render;
                r.sharedMaterials = a.sharedMaterials, r.enable = a.enable, t_tl.d3.core.Sprite3D.prototype.cloneTo.call(this, e)
            }, e.destroy = function(e) {
                void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy(), this._geometryFilter = null)
            }, g(0, e, "templet", function() {
                return this._geometryFilter
            }), g(0, e, "glitterRender", function() {
                return this._render
            }), n.CURRENTTIME = 2, n.DURATION = 3
        }(ci), function(e) {
            function t() {
                this._direction = null, this._updateDirection = !1, t.__super.call(this), this._updateDirection = !1, this._direction = new Vt, this.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChange)
            }
            m(t, "t_tl.d3.core.light.DirectionLight", e);
            var n = t.prototype;
            return n._initShadow = function() {
                if (this._shadow) this._parallelSplitShadowMap = new Gt, this.scene.parallelSplitShadowMaps.push(this._parallelSplitShadowMap), this.transform.worldMatrix.getForward(this._direction), Vt.normalize(this._direction, this._direction), this._parallelSplitShadowMap.setInfo(this.scene, this._shadowFarPlane, this._direction, this._shadowMapSize, this._shadowMapCount, this._shadowMapPCFType);
                else {
                    var e = this.scene.parallelSplitShadowMaps;
                    e.splice(e.indexOf(this._parallelSplitShadowMap), 1), this._parallelSplitShadowMap.disposeAllRenderTarget(), this._parallelSplitShadowMap = null, this.scene.removeShaderDefine(Gt.SHADERDEFINE_SHADOW_PSSM1), this.scene.removeShaderDefine(Gt.SHADERDEFINE_SHADOW_PSSM2), this.scene.removeShaderDefine(Gt.SHADERDEFINE_SHADOW_PSSM3)
                }
            }, n._addSelfRenderObjects = function() {
                e.prototype._addSelfRenderObjects.call(this), this._shadow && this._initShadow()
            }, n._clearSelfRenderObjects = function() {
                var e = this.scene,
                    t = e._shaderValues;
                t.setValue(4, null), t.setValue(3, null), e.removeShaderDefine(un.SHADERDEFINE_DIRECTIONLIGHT)
            }, n._prepareToScene = function(e) {
                var t = e.scene;
                if (t.enableLight && this._activeInHierarchy) {
                    var n = t._shaderValues;
                    return t.addShaderDefine(un.SHADERDEFINE_DIRECTIONLIGHT), Vt.scale(this.color, this._intensity, this._intensityColor), n.setValue(4, this._intensityColor.elements), this.transform.worldMatrix.getForward(this._direction), Vt.normalize(this._direction, this._direction), n.setValue(3, this._direction.elements), !0
                }
                return t.removeShaderDefine(un.SHADERDEFINE_DIRECTIONLIGHT), !1
            }, n._onWorldMatrixChange = function() {
                this._updateDirection = !0
            }, g(0, n, "shadow", e.prototype._$get_shadow, function(e) {
                this._shadow !== e && (this._shadow = e, this.scene && this._initShadow())
            }), g(0, n, "direction", function() {
                return console.log("Warning: discard property,please use transform's property instead."), this._updateDirection && (this.transform.worldMatrix.getForward(this._direction), Vt.normalize(this._direction, this._direction), this._updateDirection = !1), this._direction
            }, function(e) {
                console.log("Warning: discard property,please use transform's property instead.");
                var t = this.transform.worldMatrix;
                t.setForward(e), this.transform.worldMatrix = t, Vt.normalize(e, e), this._direction = e, this.shadow && this._parallelSplitShadowMap && this._parallelSplitShadowMap._setGlobalParallelLightDir(this._direction)
            }), t
        }(di)),
        vi = (function(e) {
            function t() {
                this._range = NaN, this._attenuation = null, t.__super.call(this), this._range = 6, this._attenuation = new Vt(.6, .6, .6)
            }
            m(t, "t_tl.d3.core.light.PointLight", di);
            var n = t.prototype;
            n._clearSelfRenderObjects = function() {
                var e = this.scene,
                    t = e._shaderValues;
                t.setValue(8, null), t.setValue(5, null), t.setValue(6, null), t.setValue(7, null), e.removeShaderDefine(un.SHADERDEFINE_POINTLIGHT)
            }, n._prepareToScene = function(e) {
                var t = e.scene;
                if (t.enableLight && this._activeInHierarchy) {
                    var n = t._shaderValues;
                    return t.addShaderDefine(un.SHADERDEFINE_POINTLIGHT), Vt.scale(this.color, this._intensity, this._intensityColor), n.setValue(8, this._intensityColor.elements), n.setValue(5, this.transform.position.elements), n.setValue(6, this.range), n.setValue(7, this.attenuation.elements), !0
                }
                return t.removeShaderDefine(un.SHADERDEFINE_POINTLIGHT), !1
            }, g(0, n, "range", function() {
                return this._range
            }, function(e) {
                this._range = e
            }), g(0, n, "attenuation", function() {
                return this._attenuation
            }, function(e) {
                this._attenuation = e
            })
        }(), function(e) {
            function t() {
                this._updateDirection = !1, this._direction = null, this._spot = NaN, this._range = NaN, this._attenuation = null, t.__super.call(this), this._updateDirection = !1, this.direction = new Vt(0, -1, -1), this._attenuation = new Vt(.6, .6, .6), this._spot = 96, this._range = 6, this.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChange)
            }
            m(t, "t_tl.d3.core.light.SpotLight", di);
            var n = t.prototype;
            n._onWorldMatrixChange = function() {
                this._updateDirection = !0
            }, n._clearSelfRenderObjects = function() {
                var e = this.scene,
                    t = e._shaderValues;
                t.setValue(14, null), t.setValue(9, null), t.setValue(10, null), t.setValue(12, null), t.setValue(11, null), t.setValue(13, null), e.removeShaderDefine(un.SHADERDEFINE_SPOTLIGHT)
            }, n._prepareToScene = function(e) {
                var t = e.scene;
                if (t.enableLight && this._activeInHierarchy) {
                    var n = t._shaderValues;
                    return t.addShaderDefine(un.SHADERDEFINE_SPOTLIGHT), Vt.scale(this.color, this._intensity, this._intensityColor), n.setValue(14, this._intensityColor.elements), n.setValue(9, this.transform.position.elements), this.transform.worldMatrix.getForward(this._direction), Vt.normalize(this._direction, this._direction), n.setValue(10, this._direction.elements), n.setValue(12, this.range), n.setValue(11, this.spot), n.setValue(13, this.attenuation.elements), !0
                }
                return t.removeShaderDefine(un.SHADERDEFINE_SPOTLIGHT), !1
            }, g(0, n, "spot", function() {
                return this._spot
            }, function(e) {
                this._spot = e
            }), g(0, n, "direction", function() {
                return console.log("Warning: discard property,please use transform's property instead."), this._updateDirection && (this.transform.worldMatrix.getForward(this._direction), this._updateDirection = !1), this._direction
            }, function(e) {
                console.log("Warning: discard property,please use transform's property instead.");
                var t = this.transform.worldMatrix;
                t.setForward(e), this.transform.worldMatrix = t, this._direction = e
            }), g(0, n, "range", function() {
                return this._range
            }, function(e) {
                this._range = e
            }), g(0, n, "attenuation", function() {
                return this._attenuation
            }, function(e) {
                this._attenuation = e
            })
        }(), function(n) {
            function i(e, t) {
                i.__super.call(this, t), this._geometryFilter = new In(this), this._render = new yn(this), this._geometryFilter.on("meshchanged", this, this._onMeshChanged), this._render.on("materialchanged", this, this._onMaterialChanged), e && (this._geometryFilter.sharedMesh = e) instanceof t_tl.d3.resource.models.Mesh && (e.loaded ? this._render.sharedMaterials = e.materials : e.once("loaded", this, this._applyMeshMaterials))
            }
            m(i, "t_tl.d3.core.MeshSprite3D", n);
            var e = i.prototype;
            return e._changeRenderObjectByMesh = function(e) {
                var t = this._render._renderElements,
                    n = t[e];
                n || (n = t[e] = new _n), n._render = this._render;
                var i = this._render.sharedMaterials[e];
                i || (i = Xn.defaultMaterial);
                var r = this._geometryFilter.sharedMesh.getRenderElement(e);
                return n._mainSortID = this._getSortID(r, i), n._sprite3D = this, n.renderObj = r, n._material = i, n
            }, e._changeRenderObjectByMaterial = function(e, t) {
                var n = this._render._renderElements[e];
                t || (t = Xn.defaultMaterial);
                var i = this._geometryFilter.sharedMesh.getRenderElement(e);
                return n._mainSortID = this._getSortID(i, t), n._sprite3D = this, n.renderObj = i, n._material = t, n
            }, e._changeRenderObjectsByMesh = function() {
                var e = this._geometryFilter.sharedMesh.getRenderElementsCount();
                this._render._renderElements.length = e;
                for (var t = 0; t < e; t++) this._changeRenderObjectByMesh(t)
            }, e._onMeshChanged = function(e) {
                var t = e.sharedMesh;
                t.loaded ? this._changeRenderObjectsByMesh() : t.once("loaded", this, this._onMeshLoaded)
            }, e._onMeshLoaded = function(e) {
                e === this.meshFilter.sharedMesh && this._changeRenderObjectsByMesh()
            }, e._onMaterialChanged = function(e, t, n) {
                t < this._render._renderElements.length && this._changeRenderObjectByMaterial(t, n)
            }, e._clearSelfRenderObjects = function() {
                this.scene.removeFrustumCullingObject(this._render)
            }, e._addSelfRenderObjects = function() {
                this.scene.addFrustumCullingObject(this._render)
            }, e._parseCustomProps = function(e, t, n, i) {
                var r = this.meshRender,
                    a = n.lightmapIndex;
                null != a && (r.lightmapIndex = a);
                var o, s, l = n.lightmapScaleOffset;
                if (l && (r.lightmapScaleOffset = new Pt(l[0], l[1], l[2], l[3])), i.instanceParams)(o = i.instanceParams.loadPath) && (s = Ae.getRes(t[o]), (this.meshFilter.sharedMesh = s).loaded ? r.sharedMaterials = s.materials : s.once("loaded", this, this._applyMeshMaterials));
                else {
                    (o = n.meshPath) && (s = Ae.getRes(t[o]), this.meshFilter.sharedMesh = s);
                    var h = n.materials;
                    if (h) {
                        var _ = r.sharedMaterials,
                            u = h.length;
                        _.length = u;
                        for (var c = 0; c < u; c++) _[c] = Ae.getRes(t[h[c].path]);
                        r.sharedMaterials = _
                    }
                }
            }, e._applyMeshMaterials = function(e) {
                for (var t = this._render.sharedMaterials, n = e.materials, i = 0, r = n.length; i < r; i++) t[i] || (t[i] = n[i]);
                this._render.sharedMaterials = t
            }, e._addToInitStaticBatchManager = function() {
                i._staticBatchManager._addInitBatchSprite(this)
            }, e.cloneTo = function(e) {
                var t = e;
                t._geometryFilter.sharedMesh = this._geometryFilter.sharedMesh;
                var n = this._render,
                    i = t._render;
                i.enable = n.enable, i.sharedMaterials = n.sharedMaterials, i.castShadow = n.castShadow;
                var r = n.lightmapScaleOffset;
                r && (i.lightmapScaleOffset = r.clone()), i.lightmapIndex = n.lightmapIndex, i.receiveShadow = n.receiveShadow, i.sortingFudge = n.sortingFudge, t_tl.d3.core.Sprite3D.prototype.cloneTo.call(this, e)
            }, e.destroy = function(e) {
                if (void 0 === e && (e = !0), !this.destroyed) {
                    var t = this.meshFilter.sharedMesh;
                    t.loaded || t.off("loaded", this, this._applyMeshMaterials), n.prototype.destroy.call(this, e), this._geometryFilter._destroy()
                }
            }, g(0, e, "meshFilter", function() {
                return this._geometryFilter
            }), g(0, e, "meshRender", function() {
                return this._render
            }), i.__init__ = function() {
                ue._staticBatchManagers.push(i._staticBatchManager)
            }, i.load = function(e) {
                return x.loader.create(e, null, null, i)
            }, u(i, ["_staticBatchManager", function() {
                return this._staticBatchManager = new cn
            }]), i
        }(ci)),
        gi = function(t) {
            function Re(e) {
                Re.__super.call(this), this._render = new Nn(this), this._render.on("materialchanged", this, this._onMaterialChanged), this._geometryFilter = new Cn(this), this._createRenderElement(0), e && (this._render.sharedMaterial = e)
            }
            m(Re, "t_tl.d3.core.particleShuriKen.ShuriKenParticle3D", t);
            var e = Re.prototype;
            return e._initParticleVelocity = function(e) {
                for (var t = new Z, n = e.velocitys, i = 0, r = n.length; i < r; i++) {
                    var a = n[i];
                    t.add(a.key, a.value)
                }
                return t
            }, e._initParticleColor = function(e) {
                var t = new W,
                    n = e.alphas,
                    i = 0,
                    r = 0;
                for (i = 0, r = n.length; i < r; i++) {
                    var a = n[i];
                    t.addAlpha(a.key, a.value)
                }
                var o = e.rgbs;
                for (i = 0, r = o.length; i < r; i++) {
                    var s = o[i],
                        l = s.value;
                    t.addRGB(s.key, new Vt(l[0], l[1], l[2]))
                }
                return t
            }, e._initParticleSize = function(e) {
                for (var t = new Z, n = e.sizes, i = 0, r = n.length; i < r; i++) {
                    var a = n[i];
                    t.add(a.key, a.value)
                }
                return t
            }, e._initParticleRotation = function(e) {
                for (var t = new Z, n = e.angularVelocitys, i = 0, r = n.length; i < r; i++) {
                    var a = n[i];
                    t.add(a.key, a.value / 180 * Math.PI)
                }
                return t
            }, e._initParticleFrame = function(e) {
                for (var t = new X, n = e.frames, i = 0, r = n.length; i < r; i++) {
                    var a = n[i];
                    t.add(a.key, a.value)
                }
                return t
            }, e._createRenderElement = function(e) {
                var t = this._render._renderElements[e] = new Q;
                t._render = this._render;
                var n = this._render.sharedMaterials[e];
                n || (n = qn.defaultMaterial);
                var i = this._geometryFilter;
                t._mainSortID = 0, t._sprite3D = this, t.renderObj = i, t._material = n
            }, e._onMaterialChanged = function(e, t, n) {
                var i = e._renderElements;
                t < i.length && (i[t]._material = n || qn.defaultMaterial)
            }, e._clearSelfRenderObjects = function() {
                this.scene.removeFrustumCullingObject(this._render)
            }, e._addSelfRenderObjects = function() {
                this.scene.addFrustumCullingObject(this._render)
            }, e._parseCustomProps = function(e, t, n, i) {
                var r, a = Math.PI / 180,
                    o = 0,
                    s = 0,
                    l = this.particleRender,
                    h = n.material;
                if (h) r = Ae.getRes(t[h.path]);
                else {
                    var _ = n.materialPath;
                    _ ? r = Ae.getRes(t[_]) : (r = new qn).diffuseTexture = t ? Ae.getRes(t[n.texturePath]) : li.load(n.texturePath)
                }
                l.sharedMaterial = r;
                var u = n.meshPath;
                u && (l.mesh = Ae.getRes(t[u])), l.renderMode = n.renderMode, l.stretchedBillboardCameraSpeedScale = n.stretchedBillboardCameraSpeedScale, l.stretchedBillboardSpeedScale = n.stretchedBillboardSpeedScale, l.stretchedBillboardLengthScale = n.stretchedBillboardLengthScale, l.sortingFudge = n.sortingFudge ? n.sortingFudge : 0;
                var c = this.particleSystem;
                c.isPerformanceMode = n.isPerformanceMode, c.duration = n.duration, c.looping = n.looping, c.prewarm = n.prewarm, c.startDelayType = n.startDelayType, c.startDelay = n.startDelay, c.startDelayMin = n.startDelayMin, c.startDelayMax = n.startDelayMax, c.startLifetimeType = n.startLifetimeType, c.startLifetimeConstant = n.startLifetimeConstant, c.startLifeTimeGradient = Re._initStartLife(n.startLifetimeGradient), c.startLifetimeConstantMin = n.startLifetimeConstantMin, c.startLifetimeConstantMax = n.startLifetimeConstantMax, c.startLifeTimeGradientMin = Re._initStartLife(n.startLifetimeGradientMin), c.startLifeTimeGradientMax = Re._initStartLife(n.startLifetimeGradientMax), c.startSpeedType = n.startSpeedType, c.startSpeedConstant = n.startSpeedConstant, c.startSpeedConstantMin = n.startSpeedConstantMin, c.startSpeedConstantMax = n.startSpeedConstantMax, c.threeDStartSize = n.threeDStartSize, c.startSizeType = n.startSizeType, c.startSizeConstant = n.startSizeConstant;
                var d = n.startSizeConstantSeparate,
                    f = c.startSizeConstantSeparate.elements;
                f[0] = d[0], f[1] = d[1], f[2] = d[2], c.startSizeConstantMin = n.startSizeConstantMin, c.startSizeConstantMax = n.startSizeConstantMax;
                var m = n.startSizeConstantMinSeparate,
                    p = c.startSizeConstantMinSeparate.elements;
                p[0] = m[0], p[1] = m[1], p[2] = m[2];
                var v = n.startSizeConstantMaxSeparate,
                    g = c.startSizeConstantMaxSeparate.elements;
                g[0] = v[0], g[1] = v[1], g[2] = v[2], c.threeDStartRotation = n.threeDStartRotation, c.startRotationType = n.startRotationType, c.startRotationConstant = n.startRotationConstant * a;
                var E = n.startRotationConstantSeparate,
                    S = c.startRotationConstantSeparate.elements;
                S[0] = E[0] * a, S[1] = E[1] * a, S[2] = E[2] * a, c.startRotationConstantMin = n.startRotationConstantMin * a, c.startRotationConstantMax = n.startRotationConstantMax * a;
                var D = n.startRotationConstantMinSeparate,
                    T = c.startRotationConstantMinSeparate.elements;
                T[0] = D[0] * a, T[1] = D[1] * a, T[2] = D[2] * a;
                var x = n.startRotationConstantMaxSeparate,
                    M = c.startRotationConstantMaxSeparate.elements;
                M[0] = x[0] * a, M[1] = x[1] * a, M[2] = x[2] * a, c.randomizeRotationDirection = n.randomizeRotationDirection, c.startColorType = n.startColorType;
                var R = n.startColorConstant,
                    A = c.startColorConstant.elements;
                A[0] = R[0], A[1] = R[1], A[2] = R[2], A[3] = R[3];
                var I = n.startColorConstantMin,
                    y = c.startColorConstantMin.elements;
                y[0] = I[0], y[1] = I[1], y[2] = I[2], y[3] = I[3];
                var C = n.startColorConstantMax,
                    N = c.startColorConstantMax.elements;
                N[0] = C[0], N[1] = C[1], N[2] = C[2], N[3] = C[3], c.gravityModifier = n.gravityModifier, c.simulationSpace = n.simulationSpace, c.scaleMode = n.scaleMode, c.playOnAwake = n.playOnAwake, c.maxParticles = n.maxParticles;
                var w = n.autoRandomSeed;
                null != w && (c.autoRandomSeed = w);
                var O = n.randomSeed;
                null != O && (c.randomSeed[0] = O);
                var V = n.emission,
                    P = c.emission;
                if (V) {
                    P.emissionRate = V.emissionRate;
                    var L = V.bursts;
                    if (L)
                        for (o = 0, s = L.length; o < s; o++) {
                            var b = L[o];
                            P.addBurst(new Ie(b.time, b.min, b.max))
                        }
                    P.enbale = V.enable
                } else P.enbale = !1;
                var F = n.shape;
                if (F) {
                    var B;
                    switch (F.shapeType) {
                        case 0:
                            var U;
                            B = U = new hn, U.radius = F.sphereRadius, U.emitFromShell = F.sphereEmitFromShell, U.randomDirection = F.sphereRandomDirection;
                            break;
                        case 1:
                            var H;
                            B = H = new ln, H.radius = F.hemiSphereRadius, H.emitFromShell = F.hemiSphereEmitFromShell, H.randomDirection = F.hemiSphereRandomDirection;
                            break;
                        case 2:
                            var G;
                            B = G = new sn, G.angle = F.coneAngle * a, G.radius = F.coneRadius, G.length = F.coneLength, G.emitType = F.coneEmitType, G.randomDirection = F.coneRandomDirection;
                            break;
                        case 3:
                            var z;
                            B = z = new an, z.x = F.boxX, z.y = F.boxY, z.z = F.boxZ, z.randomDirection = F.boxRandomDirection;
                            break;
                        case 7:
                            var k;
                            B = k = new on, k.radius = F.circleRadius, k.arc = F.circleArc * a, k.emitFromEdge = F.circleEmitFromEdge, k.randomDirection = F.circleRandomDirection;
                            break;
                        default:
                            var W;
                            B = W = new on, W.radius = F.circleRadius, W.arc = F.circleArc * a, W.emitFromEdge = F.circleEmitFromEdge, W.randomDirection = F.circleRandomDirection
                    }
                    B.enable = F.enable, c.shape = B
                }
                var X = n.velocityOverLifetime;
                if (X) {
                    var Z, Y = X.velocity;
                    switch (Y.type) {
                        case 0:
                            var j = Y.constant;
                            Z = Ve.createByConstant(new Vt(j[0], j[1], j[2]));
                            break;
                        case 1:
                            Z = Ve.createByGradient(this._initParticleVelocity(Y.gradientX), this._initParticleVelocity(Y.gradientY), this._initParticleVelocity(Y.gradientZ));
                            break;
                        case 2:
                            var K = Y.constantMin,
                                q = Y.constantMax;
                            Z = Ve.createByRandomTwoConstant(new Vt(K[0], K[1], K[2]), new Vt(q[0], q[1], q[2]));
                            break;
                        case 3:
                            Z = Ve.createByRandomTwoGradient(this._initParticleVelocity(Y.gradientXMin), this._initParticleVelocity(Y.gradientXMax), this._initParticleVelocity(Y.gradientYMin), this._initParticleVelocity(Y.gradientYMax), this._initParticleVelocity(Y.gradientZMin), this._initParticleVelocity(Y.gradientZMax))
                    }
                    var Q = new Be(Z);
                    Q.space = X.space, Q.enbale = X.enable, c.velocityOverLifetime = Q
                }
                var $ = n.colorOverLifetime;
                if ($) {
                    var J, ee = $.color;
                    switch (ee.type) {
                        case 0:
                            var te = ee.constant;
                            J = we.createByConstant(new Pt(te[0], te[1], te[2], te[3]));
                            break;
                        case 1:
                            J = we.createByGradient(this._initParticleColor(ee.gradient));
                            break;
                        case 2:
                            var ne = ee.constantMin,
                                ie = ee.constantMax;
                            J = we.createByRandomTwoConstant(new Pt(ne[0], ne[1], ne[2], ne[3]), new Pt(ie[0], ie[1], ie[2], ie[3]));
                            break;
                        case 3:
                            J = we.createByRandomTwoGradient(this._initParticleColor(ee.gradientMin), this._initParticleColor(ee.gradientMax))
                    }
                    var re = new ye(J);
                    re.enbale = $.enable, c.colorOverLifetime = re
                }
                var ae = n.sizeOverLifetime;
                if (ae) {
                    var oe, se = ae.size;
                    switch (se.type) {
                        case 0:
                            oe = se.separateAxes ? Oe.createByGradientSeparate(this._initParticleSize(se.gradientX), this._initParticleSize(se.gradientY), this._initParticleSize(se.gradientZ)) : Oe.createByGradient(this._initParticleSize(se.gradient));
                            break;
                        case 1:
                            if (se.separateAxes) {
                                var le = se.constantMinSeparate,
                                    he = se.constantMaxSeparate;
                                oe = Oe.createByRandomTwoConstantSeparate(new Vt(le[0], le[1], le[2]), new Vt(he[0], he[1], he[2]))
                            } else oe = Oe.createByRandomTwoConstant(se.constantMin, se.constantMax);
                            break;
                        case 2:
                            oe = se.separateAxes ? Oe.createByRandomTwoGradientSeparate(this._initParticleSize(se.gradientXMin), this._initParticleSize(se.gradientYMin), this._initParticleSize(se.gradientZMin), this._initParticleSize(se.gradientXMax), this._initParticleSize(se.gradientYMax), this._initParticleSize(se.gradientZMax)) : Oe.createByRandomTwoGradient(this._initParticleSize(se.gradientMin), this._initParticleSize(se.gradientMax))
                    }
                    var _e = new Le(oe);
                    _e.enbale = ae.enable, c.sizeOverLifetime = _e
                }
                var ue = n.rotationOverLifetime;
                if (ue) {
                    var ce, de = ue.angularVelocity;
                    switch (de.type) {
                        case 0:
                            de.separateAxes || (ce = Ne.createByConstant(de.constant * a));
                            break;
                        case 1:
                            de.separateAxes || (ce = Ne.createByGradient(this._initParticleRotation(de.gradient)));
                            break;
                        case 2:
                            if (de.separateAxes) {
                                var fe = de.constantMinSeparate,
                                    me = de.constantMaxSeparate;
                                ce = Ne.createByRandomTwoConstantSeparate(new Vt(fe[0] * a, fe[1] * a, fe[2] * a), new Vt(me[0] * a, me[1] * a, me[2] * a))
                            } else ce = Ne.createByRandomTwoConstant(de.constantMin * a, de.constantMax * a);
                            break;
                        case 3:
                            de.separateAxes || (ce = Ne.createByRandomTwoGradient(this._initParticleRotation(de.gradientMin), this._initParticleRotation(de.gradientMax)))
                    }
                    var pe = new Pe(ce);
                    pe.enbale = ue.enable, c.rotationOverLifetime = pe
                }
                var ve = n.textureSheetAnimation;
                if (ve) {
                    var ge, Ee = ve.frame;
                    switch (Ee.type) {
                        case 0:
                            ge = Ce.createByConstant(Ee.constant);
                            break;
                        case 1:
                            ge = Ce.createByOverTime(this._initParticleFrame(Ee.overTime));
                            break;
                        case 2:
                            ge = Ce.createByRandomTwoConstant(Ee.constantMin, Ee.constantMax);
                            break;
                        case 3:
                            ge = Ce.createByRandomTwoOverTime(this._initParticleFrame(Ee.overTimeMin), this._initParticleFrame(Ee.overTimeMax))
                    }
                    var Se, De = ve.startFrame;
                    switch (De.type) {
                        case 0:
                            Se = be.createByConstant(De.constant);
                            break;
                        case 1:
                            Se = be.createByRandomTwoConstant(De.constantMin, De.constantMax)
                    }
                    var Te = new Fe(ge, Se);
                    Te.enable = ve.enable;
                    var xe = ve.tiles;
                    Te.tiles = new Ot(xe[0], xe[1]), Te.type = ve.type, Te.randomRow = ve.randomRow;
                    var Me = ve.rowIndex;
                    void 0 !== Me && (Te.rowIndex = Me), Te.cycles = ve.cycles, c.textureSheetAnimation = Te
                }
            }, e._activeHierarchy = function() {
                t_tl.d3.core.Sprite3D.prototype._activeHierarchy.call(this), this.particleSystem.playOnAwake && this.particleSystem.play()
            }, e._inActiveHierarchy = function() {
                t_tl.d3.core.Sprite3D.prototype._inActiveHierarchy.call(this), this.particleSystem.isAlive && this.particleSystem.simulate(0, !0)
            }, e.cloneTo = function(e) {
                var t = e,
                    n = t._geometryFilter;
                this._geometryFilter.cloneTo(n);
                var i = t._render,
                    r = this._render;
                i.sharedMaterials = r.sharedMaterials, i.enable = r.enable, i.renderMode = r.renderMode, i.mesh = r.mesh, i.stretchedBillboardCameraSpeedScale = r.stretchedBillboardCameraSpeedScale, i.stretchedBillboardSpeedScale = r.stretchedBillboardSpeedScale, i.stretchedBillboardLengthScale = r.stretchedBillboardLengthScale, i.sortingFudge = r.sortingFudge, t_tl.d3.core.Sprite3D.prototype.cloneTo.call(this, e)
            }, e.destroy = function(e) {
                void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy(), this._geometryFilter = null)
            }, g(0, e, "particleSystem", function() {
                return this._geometryFilter
            }), g(0, e, "particleRender", function() {
                return this._render
            }), Re.__init__ = function() {
                Re.SHADERDEFINE_RENDERMODE_BILLBOARD = Re.shaderDefines.registerDefine("SPHERHBILLBOARD"), Re.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = Re.shaderDefines.registerDefine("STRETCHEDBILLBOARD"), Re.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = Re.shaderDefines.registerDefine("HORIZONTALBILLBOARD"), Re.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = Re.shaderDefines.registerDefine("VERTICALBILLBOARD"), Re.SHADERDEFINE_COLOROVERLIFETIME = Re.shaderDefines.registerDefine("COLOROVERLIFETIME"), Re.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = Re.shaderDefines.registerDefine("RANDOMCOLOROVERLIFETIME"), Re.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = Re.shaderDefines.registerDefine("VELOCITYOVERLIFETIMECONSTANT"), Re.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = Re.shaderDefines.registerDefine("VELOCITYOVERLIFETIMECURVE"), Re.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = Re.shaderDefines.registerDefine("VELOCITYOVERLIFETIMERANDOMCONSTANT"), Re.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = Re.shaderDefines.registerDefine("VELOCITYOVERLIFETIMERANDOMCURVE"), Re.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = Re.shaderDefines.registerDefine("TEXTURESHEETANIMATIONCURVE"), Re.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = Re.shaderDefines.registerDefine("TEXTURESHEETANIMATIONRANDOMCURVE"), Re.SHADERDEFINE_ROTATIONOVERLIFETIME = Re.shaderDefines.registerDefine("ROTATIONOVERLIFETIME"), Re.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = Re.shaderDefines.registerDefine("ROTATIONOVERLIFETIMESEPERATE"), Re.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = Re.shaderDefines.registerDefine("ROTATIONOVERLIFETIMECONSTANT"), Re.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = Re.shaderDefines.registerDefine("ROTATIONOVERLIFETIMECURVE"), Re.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = Re.shaderDefines.registerDefine("ROTATIONOVERLIFETIMERANDOMCURVES"), Re.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = Re.shaderDefines.registerDefine("ROTATIONOVERLIFETIMERANDOMCURVES"), Re.SHADERDEFINE_SIZEOVERLIFETIMECURVE = Re.shaderDefines.registerDefine("SIZEOVERLIFETIMECURVE"), Re.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = Re.shaderDefines.registerDefine("SIZEOVERLIFETIMECURVESEPERATE"), Re.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = Re.shaderDefines.registerDefine("SIZEOVERLIFETIMERANDOMCURVES"), Re.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = Re.shaderDefines.registerDefine("SIZEOVERLIFETIMERANDOMCURVESSEPERATE"), Re.SHADERDEFINE_RENDERMODE_MESH = Re.shaderDefines.registerDefine("RENDERMODE_MESH"), Re.SHADERDEFINE_SHAPE = Re.shaderDefines.registerDefine("SHAPE")
            }, Re.load = function(e) {
                return x.loader.create(e, null, null, Re)
            }, Re._initStartLife = function(e) {
                for (var t = new Z, n = e.startLifetimes, i = 0, r = n.length; i < r; i++) {
                    var a = n[i];
                    t.add(a.key, a.value)
                }
                return t
            }, Re.SHADERDEFINE_RENDERMODE_BILLBOARD = 0, Re.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = 0, Re.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = 0, Re.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = 0, Re.SHADERDEFINE_COLOROVERLIFETIME = 0, Re.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = 0, Re.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = 0, Re.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = 0, Re.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = 0, Re.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = 0, Re.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = 0, Re.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = 0, Re.SHADERDEFINE_ROTATIONOVERLIFETIME = 0, Re.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = 0, Re.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = 0, Re.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = 0, Re.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = 0, Re.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = 0, Re.SHADERDEFINE_SIZEOVERLIFETIMECURVE = 0, Re.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = 0, Re.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = 0, Re.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = 0, Re.SHADERDEFINE_RENDERMODE_MESH = 0, Re.SHADERDEFINE_SHAPE = 0, Re.WORLDPOSITION = 0, Re.WORLDROTATION = 1, Re.POSITIONSCALE = 4, Re.SIZESCALE = 5, Re.SCALINGMODE = 6, Re.GRAVITY = 7, Re.THREEDSTARTROTATION = 8, Re.STRETCHEDBILLBOARDLENGTHSCALE = 9, Re.STRETCHEDBILLBOARDSPEEDSCALE = 10, Re.SIMULATIONSPACE = 11, Re.CURRENTTIME = 12, Re.VOLVELOCITYCONST = 13, Re.VOLVELOCITYGRADIENTX = 14, Re.VOLVELOCITYGRADIENTY = 15, Re.VOLVELOCITYGRADIENTZ = 16, Re.VOLVELOCITYCONSTMAX = 17, Re.VOLVELOCITYGRADIENTXMAX = 18, Re.VOLVELOCITYGRADIENTYMAX = 19, Re.VOLVELOCITYGRADIENTZMAX = 20, Re.VOLSPACETYPE = 21, Re.COLOROVERLIFEGRADIENTALPHAS = 22, Re.COLOROVERLIFEGRADIENTCOLORS = 23, Re.MAXCOLOROVERLIFEGRADIENTALPHAS = 24, Re.MAXCOLOROVERLIFEGRADIENTCOLORS = 25, Re.SOLSIZEGRADIENT = 26, Re.SOLSIZEGRADIENTX = 27, Re.SOLSIZEGRADIENTY = 28, Re.SOLSizeGradientZ = 29, Re.SOLSizeGradientMax = 30, Re.SOLSIZEGRADIENTXMAX = 31, Re.SOLSIZEGRADIENTYMAX = 32, Re.SOLSizeGradientZMAX = 33, Re.ROLANGULARVELOCITYCONST = 34, Re.ROLANGULARVELOCITYCONSTSEPRARATE = 35, Re.ROLANGULARVELOCITYGRADIENT = 36, Re.ROLANGULARVELOCITYGRADIENTX = 37, Re.ROLANGULARVELOCITYGRADIENTY = 38, Re.ROLANGULARVELOCITYGRADIENTZ = 39, Re.ROLANGULARVELOCITYGRADIENTW = 40, Re.ROLANGULARVELOCITYCONSTMAX = 41, Re.ROLANGULARVELOCITYCONSTMAXSEPRARATE = 42, Re.ROLANGULARVELOCITYGRADIENTMAX = 43, Re.ROLANGULARVELOCITYGRADIENTXMAX = 44, Re.ROLANGULARVELOCITYGRADIENTYMAX = 45, Re.ROLANGULARVELOCITYGRADIENTZMAX = 46, Re.ROLANGULARVELOCITYGRADIENTWMAX = 47, Re.TEXTURESHEETANIMATIONCYCLES = 48, Re.TEXTURESHEETANIMATIONSUBUVLENGTH = 49, Re.TEXTURESHEETANIMATIONGRADIENTUVS = 50, Re.TEXTURESHEETANIMATIONGRADIENTMAXUVS = 51, u(Re, ["shaderDefines", function() {
                return this.shaderDefines = new Bt(ci.shaderDefines)
            }]), Re
        }(ci),
        Ei = function(t) {
            function n(e, t) {
                this._subMeshOffset = null, n.__super.call(this, t), this._subMeshOffset = [], this._geometryFilter = new In(this), this._render = new _i(this), this._geometryFilter.on("meshchanged", this, this._onMeshChanged), this._render.on("materialchanged", this, this._onMaterialChanged), e && (this._geometryFilter.sharedMesh = e)
            }
            m(n, "t_tl.d3.core.SkinnedMeshSprite3D", t);
            var e = n.prototype;
            return e._changeRenderObjectByMesh = function(e) {
                var t = this._render._renderElements,
                    n = t[e];
                n || (n = t[e] = new _n), n._render = this._render;
                var i = this._render.sharedMaterials[e];
                i || (i = Xn.defaultMaterial);
                var r = this._geometryFilter.sharedMesh.getRenderElement(e);
                return n._mainSortID = this._getSortID(r, i), n._sprite3D = this, n.renderObj = r, n._material = i, n
            }, e._changeRenderObjectByMaterial = function(e, t) {
                var n = this._render._renderElements[e];
                t || (t = Xn.defaultMaterial);
                var i = this._geometryFilter.sharedMesh.getRenderElement(e);
                return n._mainSortID = this._getSortID(i, t), n._sprite3D = this, n.renderObj = i, n._material = t, n
            }, e._changeRenderObjectsByMesh = function() {
                var e = this._geometryFilter.sharedMesh.getRenderElementsCount();
                this._render._renderElements.length = e;
                for (var t = 0; t < e; t++) this._changeRenderObjectByMesh(t)
            }, e._onMeshChanged = function(e) {
                var t = e.sharedMesh;
                t.loaded ? this._changeRenderObjectsByMesh() : t.once("loaded", this, this._changeRenderObjectsByMesh)
            }, e._onMaterialChanged = function(e, t, n) {
                t < this._render._renderElements.length && this._changeRenderObjectByMaterial(t, n)
            }, e._parseCustomProps = function(e, t, n, i) {
                var r = this.skinnedMeshRender,
                    a = n.lightmapIndex;
                null != a && (r.lightmapIndex = a);
                var o, s, l = n.lightmapScaleOffset;
                if (l && (r.lightmapScaleOffset = new Pt(l[0], l[1], l[2], l[3])), i.instanceParams)(o = i.instanceParams.loadPath) && (s = Ae.getRes(t[o]), (this.meshFilter.sharedMesh = s).loaded ? r.sharedMaterials = s.materials : s.once("loaded", this, this._applyMeshMaterials));
                else {
                    (o = n.meshPath) && (s = Ae.getRes(t[o]), this.meshFilter.sharedMesh = s);
                    var h = n.materials;
                    if (h) {
                        var _ = r.sharedMaterials,
                            u = h.length;
                        _.length = u;
                        for (var c = 0; c < u; c++) _[c] = Ae.getRes(t[h[c].path]);
                        r.sharedMaterials = _
                    }
                    var d = n.rootBone;
                    d && r._setRootBone(d);
                    var f = n.boundBox;
                    if (f) {
                        var m = f.min,
                            p = f.max,
                            v = new St(new Vt(m[0], m[1], m[2]), new Vt(p[0], p[1], p[2]));
                        r.localBoundBox = v
                    } else r._hasIndependentBound = !1;
                    var g = n.boundSphere;
                    if (g) {
                        var E = g.center,
                            S = new Tt(new Vt(E[0], E[1], E[2]), g.radius);
                        r.localBoundSphere = S
                    }
                }
            }, e._changeHierarchyAnimator = function(e) {
                if (e) {
                    var t = this.skinnedMeshRender;
                    t._setCacheAnimator(e);
                    var n = e.avatar;
                    n && t._setCacheAvatar(n)
                }
                t_tl.d3.core.Sprite3D.prototype._changeHierarchyAnimator.call(this, e)
            }, e._clearSelfRenderObjects = function() {
                this._scene.removeFrustumCullingObject(this._render)
            }, e._addSelfRenderObjects = function() {
                this._scene.addFrustumCullingObject(this._render)
            }, e._applyMeshMaterials = function(e) {
                for (var t = this._render.sharedMaterials, n = e.materials, i = 0, r = n.length; i < r; i++) t[i] || (t[i] = n[i]);
                this._render.sharedMaterials = t
            }, e.cloneTo = function(e) {
                var t = e;
                t._geometryFilter.sharedMesh = this._geometryFilter.sharedMesh;
                var n = this._render,
                    i = t._render;
                i.enable = n.enable, i.sharedMaterials = n.sharedMaterials, i.castShadow = n.castShadow;
                var r = n.lightmapScaleOffset;
                r && (i.lightmapScaleOffset = r.clone()), i.receiveShadow = n.receiveShadow, i.sortingFudge = n.sortingFudge, i._rootBone = n._rootBone;
                var a = n.localBoundSphere;
                a && (i.localBoundSphere = a.clone());
                var o = n.localBoundBox;
                o && (i.localBoundBox = o.clone()), i._hasIndependentBound = n._hasIndependentBound, t_tl.d3.core.Sprite3D.prototype.cloneTo.call(this, e)
            }, e.destroy = function(e) {
                void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy())
            }, g(0, e, "meshFilter", function() {
                return this._geometryFilter
            }), g(0, e, "skinnedMeshRender", function() {
                return this._render
            }), n.__init__ = function() {
                n.SHADERDEFINE_BONE = n.shaderDefines.registerDefine("BONE")
            }, n.load = function(e) {
                return x.loader.create(e, null, null, n)
            }, n.SHADERDEFINE_BONE = 8, n.BONES = 0, u(n, ["shaderDefines", function() {
                return this.shaderDefines = new Bt(ci.shaderDefines)
            }]), n
        }(ci),
        Si = (function(e) {
            function a(e, t, n, i, r) {
                void 0 === e && (e = .1), void 0 === t && (t = 0), void 0 === n && (n = 0), void 0 === i && (i = .3), void 0 === r && (r = 1e3), this._tempMatrix = new At, this._leftViewMatrix = new At, this._leftProjectionMatrix = new At, this._leftProjectionViewMatrix = new At, this._leftViewport = new Lt(0, 0, 0, 0), this._leftNormalizedViewport = new Lt(0, 0, .5, 1), this._leftAspectRatio = t, this._rightViewMatrix = new At, this._rightProjectionMatrix = new At, this._rightProjectionViewMatrix = new At, this._rightViewport = new Lt(0, 0, 0, 0), this._rightNormalizedViewport = new Lt(.5, 0, .5, 1), this._rightAspectRatio = n, this._pupilDistande = e, this._leftBoundFrustumUpdate = !0, this._leftBoundFrustum = new Dt(At.DEFAULT), this._rightBoundFrustumUpdate = !0, this._rightBoundFrustum = new Dt(At.DEFAULT), a.__super.call(this, i, r), this.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged)
            }
            m(a, "t_tl.d3.core.VRCamera", ui);
            var t = a.prototype;
            t._onWorldMatrixChanged = function() {
                this._leftBoundFrustumUpdate = this._rightBoundFrustumUpdate = !0
            }, t._calculatePupilOffset = function() {
                var e = this._tempVector3;
                return Vt.scale(this.right, this._pupilDistande / 2, e), e.elements
            }, t._calculateLeftProjectionMatrix = function() {
                if (!this._useUserProjectionMatrix)
                    if (this._orthographic) {
                        var e = this.orthographicVerticalSize * this.leftAspectRatio * .5,
                            t = .5 * this.orthographicVerticalSize;
                        At.createOrthoOffCenterRH(-e, e, -t, t, this.nearPlane, this.farPlane, this._leftProjectionMatrix)
                    } else At.createPerspective(3.1416 * this.fieldOfView / 180, this.leftAspectRatio, this.nearPlane, this.farPlane, this._rightProjectionMatrix);
                this._leftBoundFrustumUpdate = !0
            }, t._calculateRightProjectionMatrix = function() {
                if (!this._useUserProjectionMatrix)
                    if (this._orthographic) {
                        var e = this.orthographicVerticalSize * this.rightAspectRatio * .5,
                            t = .5 * this.orthographicVerticalSize;
                        At.createOrthoOffCenterRH(-e, e, t, t, this.nearPlane, this.farPlane, this._rightProjectionMatrix)
                    } else At.createPerspective(3.1416 * this.fieldOfView / 180, this.rightAspectRatio, this.nearPlane, this.farPlane, this._rightProjectionMatrix);
                this._rightBoundFrustumUpdate = !0
            }, t._calculateProjectionMatrix = function() {
                if (!this._useUserProjectionMatrix)
                    if (this._orthographic) {
                        var e = this.orthographicVerticalSize * this.leftAspectRatio * .5,
                            t = .5 * this.orthographicVerticalSize,
                            n = this.orthographicVerticalSize * this.rightAspectRatio * .5,
                            i = .5 * this.orthographicVerticalSize;
                        At.createOrthoOffCenterRH(-e, e, -t, t, this.nearPlane, this.farPlane, this._leftProjectionMatrix), At.createOrthoOffCenterRH(-n, n, i, i, this.nearPlane, this.farPlane, this._rightProjectionMatrix)
                    } else At.createPerspective(3.1416 * this.fieldOfView / 180, this.leftAspectRatio, this.nearPlane, this.farPlane, this._leftProjectionMatrix), At.createPerspective(3.1416 * this.fieldOfView / 180, this.rightAspectRatio, this.nearPlane, this.farPlane, this._rightProjectionMatrix);
                this._leftBoundFrustumUpdate = this._rightBoundFrustumUpdate = !0
            }, t._renderCamera = function(e, t, n) {
                var i, r;
                (t.camera = this)._prepareCameraToRender(), n._preRenderUpdateComponents(t), i = t._viewMatrix = this.leftViewMatrix;
                var a, o, s = this._renderTarget;
                s ? (s.start(), At.multiply(ui._invertYScaleMatrix, this._leftProjectionMatrix, ui._invertYProjectionMatrix), At.multiply(ui._invertYScaleMatrix, this.leftProjectionViewMatrix, ui._invertYProjectionViewMatrix), r = t._projectionMatrix = ui._invertYProjectionMatrix, t._projectionViewMatrix = ui._invertYProjectionViewMatrix) : (r = t._projectionMatrix = this._leftProjectionMatrix, t._projectionViewMatrix = this.leftProjectionViewMatrix), this._prepareCameraViewProject(i, r), t._viewport = this.leftViewport, n._preRenderScene(e, t, this.leftBoundFrustum), n._clear(e, t), n._renderScene(e, t), a = t._viewMatrix = this.rightViewMatrix, s ? (s.start(), At.multiply(ui._invertYScaleMatrix, this._rightProjectionMatrix, ui._invertYProjectionMatrix), At.multiply(ui._invertYScaleMatrix, this.rightProjectionViewMatrix, ui._invertYProjectionViewMatrix), t._projectionMatrix = ui._invertYProjectionMatrix, o = t._projectionViewMatrix = ui._invertYProjectionViewMatrix) : (o = t._projectionMatrix = this._rightProjectionMatrix, t._projectionViewMatrix = this.rightProjectionViewMatrix), this._prepareCameraViewProject(a, o), t._viewport = this.rightViewport, n._preRenderScene(e, t, this.rightBoundFrustum), n._clear(e, t), n._renderScene(e, t), n._postRenderUpdateComponents(t), s && s.end()
            }, g(0, t, "rightBoundFrustum", function() {
                return this._rightBoundFrustumUpdate && (this._rightBoundFrustum.matrix = this.rightProjectionViewMatrix), this._rightBoundFrustum
            }), g(0, t, "leftNormalizedViewport", function() {
                if (!this._viewportExpressedInClipSpace) {
                    var e = this._leftViewport,
                        t = this.renderTargetSize,
                        n = t.width,
                        i = t.height;
                    this._leftNormalizedViewport.x = e.x / n, this._leftNormalizedViewport.y = e.y / i, this._leftNormalizedViewport.width = e.width / n, this._leftNormalizedViewport.height = e.height / i
                }
                return this._leftNormalizedViewport
            }), g(0, t, "rightViewport", function() {
                if (this._viewportExpressedInClipSpace) {
                    var e = this._rightNormalizedViewport,
                        t = this.renderTargetSize,
                        n = t.width,
                        i = t.height;
                    this._rightViewport.x = e.x * n, this._rightViewport.y = e.y * i, this._rightViewport.width = e.width * n, this._rightViewport.height = e.height * i
                }
                return this._rightViewport
            }), g(0, t, "viewport", null, function(e) {
                if (null != this.renderTarget && (e.x < 0 || e.y < 0 || 0 == e.width || 0 == e.height)) throw new Error("VRCamera: viewport size invalid.", "value");
                this._viewportExpressedInClipSpace = !1, this._leftViewport = new Lt(0, 0, e.width / 2, e.height), this._rightViewport = new Lt(e.width / 2, 0, e.width / 2, e.height), this._calculateProjectionMatrix()
            }), g(0, t, "leftAspectRatio", function() {
                if (0 === this._leftAspectRatio) {
                    var e = this.leftViewport;
                    return e.width / e.height
                }
                return this._leftAspectRatio
            }), g(0, t, "rightAspectRatio", function() {
                if (0 === this._rightAspectRatio) {
                    var e = this.rightViewport;
                    return e.width / e.height
                }
                return this._rightAspectRatio
            }), g(0, t, "aspectRatio", null, function(e) {
                if (e < 0) throw new Error("VRCamera: the aspect ratio has to be a positive real number.");
                this._leftAspectRatio = e, this._rightAspectRatio = e, this._calculateRightProjectionMatrix()
            }), g(0, t, "rightNormalizedViewport", function() {
                if (!this._viewportExpressedInClipSpace) {
                    var e = this._rightViewport,
                        t = this.renderTargetSize,
                        n = t.width,
                        i = t.height;
                    this._rightNormalizedViewport.x = e.x / n, this._rightNormalizedViewport.y = e.y / i, this._rightNormalizedViewport.width = e.width / n, this._rightNormalizedViewport.height = e.height / i
                }
                return this._rightNormalizedViewport
            }), g(0, t, "normalizedViewport", null, function(e) {
                if (e.x < 0 || e.y < 0 || 1 < e.x + e.width || 1 < e.x + e.height) throw new Error("VRCamera: viewport size invalid.", "value");
                this._viewportExpressedInClipSpace = !0, this._leftNormalizedViewport = new Lt(0, 0, e.width / 2, e.height), this._rightNormalizedViewport = new Lt(e.width / 2, 0, e.width / 2, e.height), this._calculateProjectionMatrix()
            }), g(0, t, "leftViewport", function() {
                if (this._viewportExpressedInClipSpace) {
                    var e = this._leftNormalizedViewport,
                        t = this.renderTargetSize,
                        n = t.width,
                        i = t.height;
                    this._leftViewport.x = e.x * n, this._leftViewport.y = e.y * i, this._leftViewport.width = e.width * n, this._leftViewport.height = e.height * i
                }
                return this._leftViewport
            }), g(0, t, "needLeftViewport", function() {
                var e = this.leftNormalizedViewport;
                return 0 === e.x && 0 === e.y && 1 === e.width && 1 === e.height
            }), g(0, t, "needRightViewport", function() {
                var e = this.rightNormalizedViewport;
                return 0 === e.x && 0 === e.y && 1 === e.width && 1 === e.height
            }), g(0, t, "leftViewMatrix", function() {
                var e = this._calculatePupilOffset(),
                    t = this._tempMatrix;
                this.transform.worldMatrix.cloneTo(t);
                var n = t.elements;
                return n[12] -= e[0], n[13] -= e[1], n[14] -= e[2], t.invert(this._leftViewMatrix), this._leftViewMatrix
            }), g(0, t, "rightViewMatrix", function() {
                var e = this._calculatePupilOffset(),
                    t = this._tempMatrix;
                this.transform.worldMatrix.cloneTo(t);
                var n = t.elements;
                return n[12] += e[0], n[13] += e[1], n[14] += e[2], t.invert(this._rightViewMatrix), this._rightViewMatrix
            }), g(0, t, "leftProjectionMatrix", function() {
                return this._leftProjectionMatrix
            }), g(0, t, "leftProjectionViewMatrix", function() {
                return At.multiply(this.leftProjectionMatrix, this.leftViewMatrix, this._leftProjectionViewMatrix), this._leftProjectionViewMatrix
            }), g(0, t, "rightProjectionMatrix", function() {
                return this._rightProjectionMatrix
            }), g(0, t, "rightProjectionViewMatrix", function() {
                return At.multiply(this.rightProjectionMatrix, this.rightViewMatrix, this._rightProjectionViewMatrix), this._rightProjectionViewMatrix
            }), g(0, t, "leftBoundFrustum", function() {
                return this._leftBoundFrustumUpdate && (this._leftBoundFrustum.matrix = this.leftProjectionViewMatrix), this._leftBoundFrustum
            })
        }(), function(t) {
            function e() {
                e.__super.call(this), this._geometryFilter = new wn(this), this._render = new On(this), this._changeRenderObjectsByMaterial(this._render, 0, Qn.defaultMaterial), this._render.on("materialchanged", this, this._changeRenderObjectsByMaterial), this._geometryFilter.on("trailfilterchange", this, this._changeRenderObjectsByRenderElement)
            }
            m(e, "t_tl.d3.core.trail.TrailSprite3D", t);
            var n = e.prototype;
            return n._changeRenderObjectsByMaterial = function(e, t, n) {
                var i = this._geometryFilter.getRenderElementsCount();
                this._render._renderElements.length = i;
                for (var r = 0; r < i; r++) this._changeRenderObjectByMaterial(r, n)
            }, n._changeRenderObjectByMaterial = function(e, t) {
                var n = this._render._renderElements;
                t || (t = Qn.defaultMaterial);
                var i = n[e];
                i || (i = n[e] = new Q), i._sprite3D = this, i.renderObj = this._geometryFilter.getRenderElement(e), i._render = this._render, i._material = t
            }, n._changeRenderObjectsByRenderElement = function(e, t) {
                var n = this._render._renderElements,
                    i = n[e];
                i || (i = n[e] = new Q), i._sprite3D = this, i.renderObj = t, i._render = this._render, i._material = this._render.sharedMaterial
            }, n._clearSelfRenderObjects = function() {
                this.scene.removeFrustumCullingObject(this._render)
            }, n._addSelfRenderObjects = function() {
                this.scene.addFrustumCullingObject(this._render)
            }, n._update = function(e) {
                t.prototype._update.call(this, e), this._geometryFilter._update(e)
            }, n._parseCustomProps = function(e, t, n, i) {
                var r = this._render,
                    a = this._geometryFilter,
                    o = 0,
                    s = 0,
                    l = n.materials;
                if (l) {
                    var h = r.sharedMaterials,
                        _ = l.length;
                    for (h.length = _, o = 0; o < _; o++) h[o] = Ae.getRes(t[l[o].path]);
                    r.sharedMaterials = h
                }
                var u = i.props;
                a.time = u.time, a.minVertexDistance = u.minVertexDistance, a.widthMultiplier = u.widthMultiplier, a.textureMode = u.textureMode;
                var c = [],
                    d = n.widthCurve;
                for (o = 0, s = d.length; o < s; o++) {
                    var f = new ae;
                    f.time = d[o].time, f.inTangent = d[o].inTangent, f.outTangent = d[o].outTangent, f.value = d[o].value, c.push(f)
                }
                a.widthCurve = c;
                var m = n.colorGradient,
                    p = new ne;
                p.mode = m.mode;
                var v, g, E = [],
                    S = m.colorKeys;
                for (o = 0, s = S.length; o < s; o++) g = S[o], v = new re(new te(g.value[0], g.value[1], g.value[2], 1), g.time), E.push(v);
                var D, T, x = [],
                    M = m.alphaKeys;
                for (o = 0, s = M.length; o < s; o++) T = M[o], D = new ie(T.value, T.time), x.push(D);
                p.setKeys(E, x), a.colorGradient = p
            }, n.reset = function() {
                this.trailFilter.reset()
            }, n.cloneTo = function(e) {
                t_tl.d3.core.Sprite3D.prototype.cloneTo.call(this, e);
                var t, n = 0,
                    i = e,
                    r = i.trailFilter;
                r.time = this.trailFilter.time, r.minVertexDistance = this.trailFilter.minVertexDistance, r.widthMultiplier = this.trailFilter.widthMultiplier;
                var a = this.trailFilter.widthCurve,
                    o = [];
                for (n = 0, t = a.length; n < t; n++) {
                    var s = new ae;
                    a[n].cloneTo(s), o.push(s)
                }
                r.widthCurve = o;
                var l = new ne;
                this.trailFilter.colorGradient.cloneTo(l), r.colorGradient = l, r.textureMode = this.trailFilter.textureMode, i.trailRender.sharedMaterial = this.trailRender.sharedMaterial
            }, n.destroy = function(e) {
                void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy(), this._geometryFilter = null)
            }, g(0, n, "trailFilter", function() {
                return this._geometryFilter
            }), g(0, n, "trailRender", function() {
                return this._render
            }), e.__init__ = function() {
                e.SHADERDEFINE_GRADIENTMODE_BLEND = e.shaderDefines.registerDefine("GRADIENTMODE_BLEND")
            }, e.CURTIME = 3, e.LIFETIME = 4, e.WIDTHCURVE = 5, e.WIDTHCURVEKEYLENGTH = 6, e.GRADIENTCOLORKEY = 7, e.GRADIENTALPHAKEY = 8, e.SHADERDEFINE_GRADIENTMODE_BLEND = 0, u(e, ["shaderDefines", function() {
                return this.shaderDefines = new Bt(ci.shaderDefines)
            }]), e
        }(ci)),
        Di = function(t) {
            function l(e, t, n, i, r, a, o, s) {
                l.__super.call(this, s), this._geometryFilter = new Pn(this, e, t, n, i, r, a, o), this._render = new Ln(this)
            }
            m(l, "t_tl.d3.terrain.TerrainChunk", t);
            var e = l.prototype;
            return e.buildRenderElementAndMaterial = function(e, t, n, i, r, a, o, s, l, h, _, u, c, d, f, m, p, v) {
                void 0 === _ && (_ = 1), void 0 === u && (u = 1), void 0 === c && (c = 1), void 0 === d && (d = 1), void 0 === f && (f = 1), void 0 === m && (m = 1), void 0 === p && (p = 1), void 0 === v && (v = 1);
                var g = new Zn;
                l && (g.diffuseColor = l), s && (g.ambientColor = s), h && (g.specularColor = h), g.splatAlphaTexture = Ae.getRes(n), g.normalTexture = t ? Ae.getRes(t) : null, g.diffuseTexture1 = i ? Ae.getRes(i) : null, g.diffuseTexture2 = r ? Ae.getRes(r) : null, g.diffuseTexture3 = a ? Ae.getRes(a) : null, g.diffuseTexture4 = o ? Ae.getRes(o) : null, g.setDiffuseScale1(_, u), g.setDiffuseScale2(c, d), g.setDiffuseScale3(f, m), g.setDiffuseScale4(p, v), g.setDetailNum(e), 0 != this._render._renderElements.length && (g.renderMode = 2);
                var E = new Q;
                E._mainSortID = 0, E._sprite3D = this, E.renderObj = this._geometryFilter, E._material = g, this._render._materials.push(g), this._render._renderElements.push(E)
            }, e._clearSelfRenderObjects = function() {
                this.scene.removeFrustumCullingObject(this._render)
            }, e._addSelfRenderObjects = function() {
                this.scene.addFrustumCullingObject(this._render)
            }, e._applyMeshMaterials = function(e) {
                for (var t = this._render.sharedMaterials, n = e.materials, i = 0, r = n.length; i < r; i++) t[i] || (t[i] = n[i]);
                this._render.sharedMaterials = t
            }, e.cloneTo = function(e) {
                console.log("Terrain Chunk can't clone")
            }, e.destroy = function(e) {
                void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy())
            }, g(0, e, "terrainFilter", function() {
                return this._geometryFilter
            }), g(0, e, "terrainRender", function() {
                return this._render
            }), l.load = function(e) {
                return x.loader.create(e, null, null, l, null, 1, !1)
            }, l
        }(ci);
    ! function(e) {
        function E(e, t, n) {
            this._minX = NaN, this._minZ = NaN, this._cellSize = null, this._heightMap = null, E.__super.call(this, e, n), this._heightMap = t, this._cellSize = new Ot
        }
        m(E, "t_tl.d3.core.MeshTerrainSprite3D", vi);
        var t = E.prototype;
        t._disableRotation = function() {
            var e = this.transform.rotation;
            e.elements[0] = 0, e.elements[1] = 0, e.elements[2] = 0, e.elements[3] = 1, this.transform.rotation = e
        }, t._getScaleX = function() {
            var e = this.transform.worldMatrix.elements,
                t = e[0],
                n = e[1],
                i = e[2];
            return Math.sqrt(t * t + n * n + i * i)
        }, t._getScaleZ = function() {
            var e = this.transform.worldMatrix.elements,
                t = e[8],
                n = e[9],
                i = e[10];
            return Math.sqrt(t * t + n * n + i * i)
        }, t._initCreateFromMesh = function(e, t) {
            this._heightMap = b.creatFromMesh(this.meshFilter.sharedMesh, e, t, this._cellSize);
            var n = this.meshFilter.sharedMesh.boundingBox,
                i = n.min;
            n.max;
            this._minX = i.x, this._minZ = i.z
        }, t._initCreateFromMeshHeightMap = function(e, t, n) {
            var i = this,
                r = this.meshFilter.sharedMesh.boundingBox;
            e.loaded ? (this._heightMap = b.createFromImage(e, t, n), this._computeCellSize(r)) : e.once("loaded", null, function() {
                i._heightMap = b.createFromImage(e, t, n), i._computeCellSize(r)
            });
            var a = r.min;
            r.max;
            this._minX = a.x, this._minZ = a.z
        }, t._computeCellSize = function(e) {
            var t = e.min,
                n = e.max,
                i = t.x,
                r = t.z,
                a = n.x - i,
                o = n.z - r;
            this._cellSize.elements[0] = a / (this._heightMap.width - 1), this._cellSize.elements[1] = o / (this._heightMap.height - 1)
        }, t._update = function(e) {
            this._disableRotation(), t_tl.d3.core.RenderableSprite3D.prototype._update.call(this, e)
        }, t.getHeight = function(e, t) {
            E._tempVector3.elements[0] = e, E._tempVector3.elements[1] = 0, E._tempVector3.elements[2] = t, this._disableRotation();
            var n = this.transform.worldMatrix;
            n.invert(E._tempMatrix4x4), Vt.transformCoordinate(E._tempVector3, E._tempMatrix4x4, E._tempVector3), e = E._tempVector3.elements[0], t = E._tempVector3.elements[2];
            var i = (e - this._minX) / this._cellSize.x,
                r = (t - this._minZ) / this._cellSize.y,
                a = Math.floor(r),
                o = Math.floor(i),
                s = i - o,
                l = r - a,
                h = n.elements,
                _ = h[4],
                u = h[5],
                c = h[6],
                d = Math.sqrt(_ * _ + u * u + c * c),
                f = h[13],
                m = this._heightMap.getHeight(a, o + 1),
                p = this._heightMap.getHeight(a + 1, o);
            if (isNaN(m) || isNaN(p)) return NaN;
            if (s + l <= 1) {
                var v = this._heightMap.getHeight(a, o);
                return isNaN(v) ? NaN : (v + s * (m - v) + l * (p - v)) * d + f
            }
            var g = this._heightMap.getHeight(a + 1, o + 1);
            return isNaN(g) ? NaN : (g + (1 - s) * (p - g) + (1 - l) * (m - g)) * d + f
        }, g(0, t, "minX", function() {
            var e = this.transform.worldMatrix.elements;
            return this._minX * this._getScaleX() + e[12]
        }), g(0, t, "width", function() {
            return (this._heightMap.width - 1) * this._cellSize.x * this._getScaleX()
        }), g(0, t, "minZ", function() {
            var e = this.transform.worldMatrix.elements;
            return this._minZ * this._getScaleZ() + e[14]
        }), g(0, t, "depth", function() {
            return (this._heightMap.height - 1) * this._cellSize.y * this._getScaleZ()
        }), E.createFromMesh = function(e, t, n, i) {
            var r = new E(e, null, i);
            return e.loaded ? r._initCreateFromMesh(t, n) : e.once("loaded", r, r._initCreateFromMesh, [t, n]), r
        }, E.createFromMeshAndHeightMap = function(e, t, n, i, r) {
            var a = new E(e, null, r);
            return e.loaded ? a._initCreateFromMeshHeightMap(t, n, i) : e.once("loaded", a, a._initCreateFromMeshHeightMap, [t, n, i]), a
        }, u(E, ["_tempVector3", function() {
            return this._tempVector3 = new Vt
        }, "_tempMatrix4x4", function() {
            return this._tempMatrix4x4 = new At
        }])
    }()
}(window, document, t_t), "function" == typeof define && define.amd && define("t_tl.core", ["require", "exports"], function(e, t) {
    "use strict";
    for (var n in Object.defineProperty(t, "__esModule", {
            value: !0
        }), t_t) {
        var i = t_t[n];
        i && i.__isclass && (t[n] = i)
    }
});
! function(e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e();
    else if ("function" == typeof define && false) define([], e);
    else {
        var f;
        "undefined" != typeof window ? f = window : "undefined" != typeof global ? f = global : "undefined" != typeof self && (f = self), f.CANNON = e()
    }
}(function() {
    return function e(f, n, o) {
        function d(t, l) {
            if (!n[t]) {
                if (!f[t]) {
                    var u = "function" == typeof require && require;
                    if (!l && u) return u(t, !0);
                    if (i) return i(t, !0);
                    throw new Error("Cannot find module '" + t + "'")
                }
                var p = n[t] = {
                    exports: {}
                };
                f[t][0].call(p.exports, function(e) {
                    var n = f[t][1][e];
                    return d(n ? n : e)
                }, p, p.exports, e, f, n, o)
            }
            return n[t].exports
        }
        for (var i = "function" == typeof require && require, t = 0; t < o.length; t++) d(o[t]);
        return d
    }({
        1: [function(e, f) {
            f.exports = {
                name: "cannon",
                version: "0.6.2",
                description: "A lightweight 3D physics engine written in JavaScript.",
                homepage: "https://github.com/schteppe/cannon.js",
                author: "Stefan Hedman <schteppe@gmail.com> (http://steffe.se)",
                keywords: ["cannon.js", "cannon", "physics", "engine", "3d"],
                main: "./build/cannon.js",
                engines: {
                    node: "*"
                },
                repository: {
                    type: "git",
                    url: "https://github.com/schteppe/cannon.js.git"
                },
                bugs: {
                    url: "https://github.com/schteppe/cannon.js/issues"
                },
                licenses: [{
                    type: "MIT"
                }],
                devDependencies: {
                    jshint: "latest",
                    "uglify-js": "latest",
                    nodeunit: "^0.9.0",
                    grunt: "~0.4.0",
                    "grunt-contrib-jshint": "~0.1.1",
                    "grunt-contrib-nodeunit": "^0.4.1",
                    "grunt-contrib-concat": "~0.1.3",
                    "grunt-contrib-uglify": "^0.5.1",
                    "grunt-browserify": "^2.1.4",
                    "grunt-contrib-yuidoc": "^0.5.2",
                    browserify: "*"
                },
                dependencies: {}
            }
        }, {}],
        2: [function(e, f) {
            f.exports = {
                version: e("../package.json").version,
                AABB: e("./collision/AABB"),
                ArrayCollisionMatrix: e("./collision/ArrayCollisionMatrix"),
                Body: e("./objects/Body"),
                Box: e("./shapes/Box"),
                Broadphase: e("./collision/Broadphase"),
                Constraint: e("./constraints/Constraint"),
                ContactEquation: e("./equations/ContactEquation"),
                Narrowphase: e("./world/Narrowphase"),
                ConeTwistConstraint: e("./constraints/ConeTwistConstraint"),
                ContactMaterial: e("./material/ContactMaterial"),
                ConvexPolyhedron: e("./shapes/ConvexPolyhedron"),
                Cylinder: e("./shapes/Cylinder"),
                DistanceConstraint: e("./constraints/DistanceConstraint"),
                Equation: e("./equations/Equation"),
                EventTarget: e("./utils/EventTarget"),
                FrictionEquation: e("./equations/FrictionEquation"),
                GSSolver: e("./solver/GSSolver"),
                GridBroadphase: e("./collision/GridBroadphase"),
                Heightfield: e("./shapes/Heightfield"),
                HingeConstraint: e("./constraints/HingeConstraint"),
                LockConstraint: e("./constraints/LockConstraint"),
                Mat3: e("./math/Mat3"),
                Material: e("./material/Material"),
                NaiveBroadphase: e("./collision/NaiveBroadphase"),
                ObjectCollisionMatrix: e("./collision/ObjectCollisionMatrix"),
                Pool: e("./utils/Pool"),
                Particle: e("./shapes/Particle"),
                Plane: e("./shapes/Plane"),
                PointToPointConstraint: e("./constraints/PointToPointConstraint"),
                Quaternion: e("./math/Quaternion"),
                Ray: e("./collision/Ray"),
                RaycastVehicle: e("./objects/RaycastVehicle"),
                RaycastResult: e("./collision/RaycastResult"),
                RigidVehicle: e("./objects/RigidVehicle"),
                RotationalEquation: e("./equations/RotationalEquation"),
                RotationalMotorEquation: e("./equations/RotationalMotorEquation"),
                SAPBroadphase: e("./collision/SAPBroadphase"),
                SPHSystem: e("./objects/SPHSystem"),
                Shape: e("./shapes/Shape"),
                Solver: e("./solver/Solver"),
                Sphere: e("./shapes/Sphere"),
                SplitSolver: e("./solver/SplitSolver"),
                Spring: e("./objects/Spring"),
                Trimesh: e("./shapes/Trimesh"),
                Vec3: e("./math/Vec3"),
                Vec3Pool: e("./utils/Vec3Pool"),
                World: e("./world/World")
            }
        }, {
            "../package.json": 1,
            "./collision/AABB": 3,
            "./collision/ArrayCollisionMatrix": 4,
            "./collision/Broadphase": 5,
            "./collision/GridBroadphase": 6,
            "./collision/NaiveBroadphase": 7,
            "./collision/ObjectCollisionMatrix": 8,
            "./collision/Ray": 9,
            "./collision/RaycastResult": 10,
            "./collision/SAPBroadphase": 11,
            "./constraints/ConeTwistConstraint": 12,
            "./constraints/Constraint": 13,
            "./constraints/DistanceConstraint": 14,
            "./constraints/HingeConstraint": 15,
            "./constraints/LockConstraint": 16,
            "./constraints/PointToPointConstraint": 17,
            "./equations/ContactEquation": 19,
            "./equations/Equation": 20,
            "./equations/FrictionEquation": 21,
            "./equations/RotationalEquation": 22,
            "./equations/RotationalMotorEquation": 23,
            "./material/ContactMaterial": 24,
            "./material/Material": 25,
            "./math/Mat3": 27,
            "./math/Quaternion": 28,
            "./math/Vec3": 30,
            "./objects/Body": 31,
            "./objects/RaycastVehicle": 32,
            "./objects/RigidVehicle": 33,
            "./objects/SPHSystem": 34,
            "./objects/Spring": 35,
            "./shapes/Box": 37,
            "./shapes/ConvexPolyhedron": 38,
            "./shapes/Cylinder": 39,
            "./shapes/Heightfield": 40,
            "./shapes/Particle": 41,
            "./shapes/Plane": 42,
            "./shapes/Shape": 43,
            "./shapes/Sphere": 44,
            "./shapes/Trimesh": 45,
            "./solver/GSSolver": 46,
            "./solver/Solver": 47,
            "./solver/SplitSolver": 48,
            "./utils/EventTarget": 49,
            "./utils/Pool": 51,
            "./utils/Vec3Pool": 54,
            "./world/Narrowphase": 55,
            "./world/World": 56
        }],
        3: [function(e, f) {
            function n(e) {
                e = e || {}, this.lowerBound = new o, e.lowerBound && this.lowerBound.copy(e.lowerBound), this.upperBound = new o, e.upperBound && this.upperBound.copy(e.upperBound)
            } {
                var o = e("../math/Vec3");
                e("../utils/Utils")
            }
            f.exports = n;
            var d = new o;
            n.prototype.setFromPoints = function(e, f, n, o) {
                var i = this.lowerBound,
                    t = this.upperBound,
                    l = n;
                i.copy(e[0]), l && l.vmult(i, i), t.copy(i);
                for (var u = 1; u < e.length; u++) {
                    var p = e[u];
                    l && (l.vmult(p, d), p = d), p.x > t.x && (t.x = p.x), p.x < i.x && (i.x = p.x), p.y > t.y && (t.y = p.y), p.y < i.y && (i.y = p.y), p.z > t.z && (t.z = p.z), p.z < i.z && (i.z = p.z)
                }
                return f && (f.vadd(i, i), f.vadd(t, t)), o && (i.x -= o, i.y -= o, i.z -= o, t.x += o, t.y += o, t.z += o), this
            }, n.prototype.copy = function(e) {
                return this.lowerBound.copy(e.lowerBound), this.upperBound.copy(e.upperBound), this
            }, n.prototype.clone = function() {
                return (new n).copy(this)
            }, n.prototype.extend = function(e) {
                var f = e.lowerBound.x;
                this.lowerBound.x > f && (this.lowerBound.x = f);
                var n = e.upperBound.x;
                this.upperBound.x < n && (this.upperBound.x = n);
                var f = e.lowerBound.y;
                this.lowerBound.y > f && (this.lowerBound.y = f);
                var n = e.upperBound.y;
                this.upperBound.y < n && (this.upperBound.y = n);
                var f = e.lowerBound.z;
                this.lowerBound.z > f && (this.lowerBound.z = f);
                var n = e.upperBound.z;
                this.upperBound.z < n && (this.upperBound.z = n)
            }, n.prototype.overlaps = function(e) {
                var f = this.lowerBound,
                    n = this.upperBound,
                    o = e.lowerBound,
                    d = e.upperBound;
                return (o.x <= n.x && n.x <= d.x || f.x <= d.x && d.x <= n.x) && (o.y <= n.y && n.y <= d.y || f.y <= d.y && d.y <= n.y) && (o.z <= n.z && n.z <= d.z || f.z <= d.z && d.z <= n.z)
            }, n.prototype.contains = function(e) {
                var f = this.lowerBound,
                    n = this.upperBound,
                    o = e.lowerBound,
                    d = e.upperBound;
                return f.x <= o.x && n.x >= d.x && f.y <= o.y && n.y >= d.y && f.z <= o.z && n.z >= d.z
            }, n.prototype.getCorners = function(e, f, n, o, d, i, t, l) {
                var u = this.lowerBound,
                    p = this.upperBound;
                e.copy(u), f.set(p.x, u.y, u.z), n.set(p.x, p.y, u.z), o.set(u.x, p.y, p.z), d.set(p.x, u.y, u.z), i.set(u.x, p.y, u.z), t.set(u.x, u.y, p.z), l.copy(p)
            };
            var i = [new o, new o, new o, new o, new o, new o, new o, new o];
            n.prototype.toLocalFrame = function(e, f) {
                var n = i,
                    o = n[0],
                    d = n[1],
                    t = n[2],
                    l = n[3],
                    u = n[4],
                    p = n[5],
                    s = n[6],
                    y = n[7];
                this.getCorners(o, d, t, l, u, p, s, y);
                for (var c = 0; 8 !== c; c++) {
                    var a = n[c];
                    e.pointToLocal(a, a)
                }
                return f.setFromPoints(n)
            }, n.prototype.toWorldFrame = function(e, f) {
                var n = i,
                    o = n[0],
                    d = n[1],
                    t = n[2],
                    l = n[3],
                    u = n[4],
                    p = n[5],
                    s = n[6],
                    y = n[7];
                this.getCorners(o, d, t, l, u, p, s, y);
                for (var c = 0; 8 !== c; c++) {
                    var a = n[c];
                    e.pointToWorld(a, a)
                }
                return f.setFromPoints(n)
            }
        }, {
            "../math/Vec3": 30,
            "../utils/Utils": 53
        }],
        4: [function(e, f) {
            function n() {
                this.matrix = []
            }
            f.exports = n, n.prototype.get = function(e, f) {
                if (e = e.index, f = f.index, f > e) {
                    var n = f;
                    f = e, e = n
                }
                return this.matrix[(e * (e + 1) >> 1) + f - 1]
            }, n.prototype.set = function(e, f, n) {
                if (e = e.index, f = f.index, f > e) {
                    var o = f;
                    f = e, e = o
                }
                this.matrix[(e * (e + 1) >> 1) + f - 1] = n ? 1 : 0
            }, n.prototype.reset = function() {
                for (var e = 0, f = this.matrix.length; e !== f; e++) this.matrix[e] = 0
            }, n.prototype.setNumObjects = function(e) {
                this.matrix.length = e * (e - 1) >> 1
            }
        }, {}],
        5: [function(e, f) {
            function n() {
                this.world = null, this.useBoundingBoxes = !1, this.dirty = !0
            } {
                var o = e("../objects/Body"),
                    d = e("../math/Vec3"),
                    i = e("../math/Quaternion");
                e("../shapes/Shape"), e("../shapes/Plane")
            }
            f.exports = n, n.prototype.collisionPairs = function() {
                throw new Error("collisionPairs not implemented for this BroadPhase class!")
            };
            var t = o.STATIC | o.KINEMATIC;
            n.prototype.needBroadphaseCollision = function(e, f) {
                return 0 === (e.collisionFilterGroup & f.collisionFilterMask) || 0 === (f.collisionFilterGroup & e.collisionFilterMask) ? !1 : 0 === (e.type & t) && e.sleepState !== o.SLEEPING || 0 === (f.type & t) && f.sleepState !== o.SLEEPING ? !0 : !1
            }, n.prototype.intersectionTest = function(e, f, n, o) {
                this.useBoundingBoxes ? this.doBoundingBoxBroadphase(e, f, n, o) : this.doBoundingSphereBroadphase(e, f, n, o)
            }; {
                var l = new d;
                new d, new i, new d
            }
            n.prototype.doBoundingSphereBroadphase = function(e, f, n, o) {
                var d = l;
                f.position.vsub(e.position, d);
                var i = Math.pow(e.boundingRadius + f.boundingRadius, 2),
                    t = d.norm2();
                i > t && (n.push(e), o.push(f))
            }, n.prototype.doBoundingBoxBroadphase = function(e, f, n, o) {
                e.aabbNeedsUpdate && e.computeAABB(), f.aabbNeedsUpdate && f.computeAABB(), e.aabb.overlaps(f.aabb) && (n.push(e), o.push(f))
            };
            var u = {
                    keys: []
                },
                p = [],
                s = [];
            n.prototype.makePairsUnique = function(e, f) {
                for (var n = u, o = p, d = s, i = e.length, t = 0; t !== i; t++) o[t] = e[t], d[t] = f[t];
                e.length = 0, f.length = 0;
                for (var t = 0; t !== i; t++) {
                    var l = o[t].id,
                        y = d[t].id,
                        c = y > l ? l + "," + y : y + "," + l;
                    n[c] = t, n.keys.push(c)
                }
                for (var t = 0; t !== n.keys.length; t++) {
                    var c = n.keys.pop(),
                        a = n[c];
                    e.push(o[a]), f.push(d[a]), delete n[c]
                }
            }, n.prototype.setWorld = function() {};
            var y = new d;
            n.boundingSphereCheck = function(e, f) {
                var n = y;
                return e.position.vsub(f.position, n), Math.pow(e.shape.boundingSphereRadius + f.shape.boundingSphereRadius, 2) > n.norm2()
            }, n.prototype.aabbQuery = function() {
                return console.warn(".aabbQuery is not implemented in this Broadphase subclass."), []
            }
        }, {
            "../math/Quaternion": 28,
            "../math/Vec3": 30,
            "../objects/Body": 31,
            "../shapes/Plane": 42,
            "../shapes/Shape": 43
        }],
        6: [function(e, f) {
            function n(e, f, n, i, t) {
                o.apply(this), this.nx = n || 10, this.ny = i || 10, this.nz = t || 10, this.aabbMin = e || new d(100, 100, 100), this.aabbMax = f || new d(-100, -100, -100);
                var l = this.nx * this.ny * this.nz;
                if (0 >= l) throw "GridBroadphase: Each dimension's n must be >0";
                this.bins = [], this.binLengths = [], this.bins.length = l, this.binLengths.length = l;
                for (var u = 0; l > u; u++) this.bins[u] = [], this.binLengths[u] = 0
            }
            f.exports = n;
            var o = e("./Broadphase"),
                d = e("../math/Vec3"),
                i = e("../shapes/Shape");
            n.prototype = new o, n.prototype.constructor = n; {
                var t = new d;
                new d
            }
            n.prototype.collisionPairs = function(e, f, n) {
                function o(e, f, n, o, d, i, t) {
                    var l = (e - g) * v | 0,
                        u = (f - x) * A | 0,
                        p = (n - j) * C | 0,
                        b = I((o - g) * v),
                        m = I((d - x) * A),
                        N = I((i - j) * C);
                    0 > l ? l = 0 : l >= s && (l = s - 1), 0 > u ? u = 0 : u >= y && (u = y - 1), 0 > p ? p = 0 : p >= c && (p = c - 1), 0 > b ? b = 0 : b >= s && (b = s - 1), 0 > m ? m = 0 : m >= y && (m = y - 1), 0 > N ? N = 0 : N >= c && (N = c - 1), l *= a, u *= r, p *= w, b *= a, m *= r, N *= w;
                    for (var O = l; b >= O; O += a)
                        for (var h = u; m >= h; h += r)
                            for (var k = p; N >= k; k += w) {
                                var q = O + h + k;
                                E[q][F[q]++] = t
                            }
                }
                for (var d = e.numObjects(), l = e.bodies, u = this.aabbMax, p = this.aabbMin, s = this.nx, y = this.ny, c = this.nz, a = y * c, r = c, w = 1, b = u.x, m = u.y, N = u.z, g = p.x, x = p.y, j = p.z, v = s / (b - g), A = y / (m - x), C = c / (N - j), O = (b - g) / s, h = (m - x) / y, k = (N - j) / c, q = .5 * Math.sqrt(O * O + h * h + k * k), z = i.types, B = z.SPHERE, D = z.PLANE, E = (z.BOX, z.COMPOUND, z.CONVEXPOLYHEDRON, this.bins), F = this.binLengths, G = this.bins.length, H = 0; H !== G; H++) F[H] = 0;
                for (var I = Math.ceil, p = Math.min, u = Math.max, H = 0; H !== d; H++) {
                    var J = l[H],
                        K = J.shape;
                    switch (K.type) {
                        case B:
                            var L = J.position.x,
                                M = J.position.y,
                                P = J.position.z,
                                Q = K.radius;
                            o(L - Q, M - Q, P - Q, L + Q, M + Q, P + Q, J);
                            break;
                        case D:
                            K.worldNormalNeedsUpdate && K.computeWorldNormal(J.quaternion);
                            var R = K.worldNormal,
                                S = g + .5 * O - J.position.x,
                                T = x + .5 * h - J.position.y,
                                U = j + .5 * k - J.position.z,
                                V = t;
                            V.set(S, T, U);
                            for (var W = 0, X = 0; W !== s; W++, X += a, V.y = T, V.x += O)
                                for (var Y = 0, Z = 0; Y !== y; Y++, Z += r, V.z = U, V.y += h)
                                    for (var $ = 0, _ = 0; $ !== c; $++, _ += w, V.z += k)
                                        if (V.dot(R) < q) {
                                            var ef = X + Z + _;
                                            E[ef][F[ef]++] = J
                                        }
                            break;
                        default:
                            J.aabbNeedsUpdate && J.computeAABB(), o(J.aabb.lowerBound.x, J.aabb.lowerBound.y, J.aabb.lowerBound.z, J.aabb.upperBound.x, J.aabb.upperBound.y, J.aabb.upperBound.z, J)
                    }
                }
                for (var H = 0; H !== G; H++) {
                    var ff = F[H];
                    if (ff > 1)
                        for (var nf = E[H], W = 0; W !== ff; W++)
                            for (var J = nf[W], Y = 0; Y !== W; Y++) {
                                var of = nf[Y];
                                this.needBroadphaseCollision(J, of ) && this.intersectionTest(J, of , f, n)
                            }
                }
                this.makePairsUnique(f, n)
            }
        }, {
            "../math/Vec3": 30,
            "../shapes/Shape": 43,
            "./Broadphase": 5
        }],
        7: [function(e, f) {
            function n() {
                o.apply(this)
            }
            f.exports = n;
            var o = e("./Broadphase"),
                d = e("./AABB");
            n.prototype = new o, n.prototype.constructor = n, n.prototype.collisionPairs = function(e, f, n) {
                var o, d, i, t, l = e.bodies,
                    u = l.length;
                for (o = 0; o !== u; o++)
                    for (d = 0; d !== o; d++) i = l[o], t = l[d], this.needBroadphaseCollision(i, t) && this.intersectionTest(i, t, f, n)
            };
            new d;
            n.prototype.aabbQuery = function(e, f, n) {
                n = n || [];
                for (var o = 0; o < e.bodies.length; o++) {
                    var d = e.bodies[o];
                    d.aabbNeedsUpdate && d.computeAABB(), d.aabb.overlaps(f) && n.push(d)
                }
                return n
            }
        }, {
            "./AABB": 3,
            "./Broadphase": 5
        }],
        8: [function(e, f) {
            function n() {
                this.matrix = {}
            }
            f.exports = n, n.prototype.get = function(e, f) {
                if (e = e.id, f = f.id, f > e) {
                    var n = f;
                    f = e, e = n
                }
                return e + "-" + f in this.matrix
            }, n.prototype.set = function(e, f, n) {
                if (e = e.id, f = f.id, f > e) {
                    var o = f;
                    f = e, e = o
                }
                n ? this.matrix[e + "-" + f] = !0 : delete this.matrix[e + "-" + f]
            }, n.prototype.reset = function() {
                this.matrix = {}
            }, n.prototype.setNumObjects = function() {}
        }, {}],
        9: [function(e, f) {
            function n(e, f) {
                this.from = e ? e.clone() : new i, this.to = f ? f.clone() : new i, this._direction = new i, this.precision = 1e-4, this.checkCollisionResponse = !0, this.skipBackfaces = !1, this.collisionFilterMask = -1, this.collisionFilterGroup = -1, this.mode = n.ANY, this.result = new u, this.hasHit = !1, this.callback = function() {}
            }

            function o(e, f, n, o) {
                o.vsub(f, G), n.vsub(f, a), e.vsub(f, r);
                var d, i, t = G.dot(G),
                    l = G.dot(a),
                    u = G.dot(r),
                    p = a.dot(a),
                    s = a.dot(r);
                return (d = p * u - l * s) >= 0 && (i = t * s - l * u) >= 0 && t * p - l * l > d + i
            }

            function d(e, f, n) {
                n.vsub(e, G);
                var o = G.dot(f);
                f.mult(o, H), H.vadd(e, H);
                var d = n.distanceTo(H);
                return d
            }
            f.exports = n;
            var i = e("../math/Vec3"),
                t = e("../math/Quaternion"),
                l = e("../math/Transform"),
                u = (e("../shapes/ConvexPolyhedron"), e("../shapes/Box"), e("../collision/RaycastResult")),
                p = e("../shapes/Shape"),
                s = e("../collision/AABB");
            n.prototype.constructor = n, n.CLOSEST = 1, n.ANY = 2, n.ALL = 4;
            var y = new s,
                c = [];
            n.prototype.intersectWorld = function(e, f) {
                return this.mode = f.mode || n.ANY, this.result = f.result || new u, this.skipBackfaces = !!f.skipBackfaces, this.collisionFilterMask = "undefined" != typeof f.collisionFilterMask ? f.collisionFilterMask : -1, this.collisionFilterGroup = "undefined" != typeof f.collisionFilterGroup ? f.collisionFilterGroup : -1, f.from && this.from.copy(f.from), f.to && this.to.copy(f.to), this.callback = f.callback || function() {}, this.hasHit = !1, this.result.reset(), this._updateDirection(), this.getAABB(y), c.length = 0, e.broadphase.aabbQuery(e, y, c), this.intersectBodies(c), this.hasHit
            };
            var a = new i,
                r = new i;
            n.pointInTriangle = o;
            var w = new i,
                b = new t;
            n.prototype.intersectBody = function(e, f) {
                f && (this.result = f, this._updateDirection());
                var n = this.checkCollisionResponse;
                if ((!n || e.collisionResponse) && 0 !== (this.collisionFilterGroup & e.collisionFilterMask) && 0 !== (e.collisionFilterGroup & this.collisionFilterMask))
                    for (var o = w, d = b, i = 0, t = e.shapes.length; t > i; i++) {
                        var l = e.shapes[i];
                        if ((!n || l.collisionResponse) && (e.quaternion.mult(e.shapeOrientations[i], d), e.quaternion.vmult(e.shapeOffsets[i], o), o.vadd(e.position, o), this.intersectShape(l, d, o, e), this.result._shouldStop)) break
                    }
            }, n.prototype.intersectBodies = function(e, f) {
                f && (this.result = f, this._updateDirection());
                for (var n = 0, o = e.length; !this.result._shouldStop && o > n; n++) this.intersectBody(e[n])
            }, n.prototype._updateDirection = function() {
                this.to.vsub(this.from, this._direction), this._direction.normalize()
            }, n.prototype.intersectShape = function(e, f, n, o) {
                var i = this.from,
                    t = d(i, this._direction, n);
                if (!(t > e.boundingSphereRadius)) {
                    var l = this[e.type];
                    l && l.call(this, e, f, n, o)
                }
            }; {
                var m = (new i, new i, new i),
                    N = new i,
                    g = new i,
                    x = new i;
                new i, new u
            }
            n.prototype.intersectBox = function(e, f, n, o) {
                return this.intersectConvex(e.convexPolyhedronRepresentation, f, n, o)
            }, n.prototype[p.types.BOX] = n.prototype.intersectBox, n.prototype.intersectPlane = function(e, f, n, o) {
                var d = this.from,
                    t = this.to,
                    l = this._direction,
                    u = new i(0, 0, 1);
                f.vmult(u, u);
                var p = new i;
                d.vsub(n, p);
                var s = p.dot(u);
                t.vsub(n, p);
                var y = p.dot(u);
                if (!(s * y > 0 || d.distanceTo(t) < s)) {
                    var c = u.dot(l);
                    if (!(Math.abs(c) < this.precision)) {
                        var a = new i,
                            r = new i,
                            w = new i;
                        d.vsub(n, a);
                        var b = -u.dot(a) / c;
                        l.scale(b, r), d.vadd(r, w), this.reportIntersection(u, w, e, o, -1)
                    }
                }
            }, n.prototype[p.types.PLANE] = n.prototype.intersectPlane, n.prototype.getAABB = function(e) {
                var f = this.to,
                    n = this.from;
                e.lowerBound.x = Math.min(f.x, n.x), e.lowerBound.y = Math.min(f.y, n.y), e.lowerBound.z = Math.min(f.z, n.z), e.upperBound.x = Math.max(f.x, n.x), e.upperBound.y = Math.max(f.y, n.y), e.upperBound.z = Math.max(f.z, n.z)
            };
            var j = {
                faceList: [0]
            };
            n.prototype.intersectHeightfield = function(e, f, o, d) {
                var t = (e.data, e.elementSize, new i),
                    u = new n(this.from, this.to);
                l.pointToLocalFrame(o, f, u.from, u.from), l.pointToLocalFrame(o, f, u.to, u.to);
                var p = [],
                    s = null,
                    y = null,
                    c = null,
                    a = null,
                    r = e.getIndexOfPosition(u.from.x, u.from.y, p, !1);
                if (r && (s = p[0], y = p[1], c = p[0], a = p[1]), r = e.getIndexOfPosition(u.to.x, u.to.y, p, !1), r && ((null === s || p[0] < s) && (s = p[0]), (null === c || p[0] > c) && (c = p[0]), (null === y || p[1] < y) && (y = p[1]), (null === a || p[1] > a) && (a = p[1])), null !== s) {
                    var w = [];
                    e.getRectMinMax(s, y, c, a, w);
                    for (var b = (w[0], w[1], s); c >= b; b++)
                        for (var m = y; a >= m; m++) {
                            if (this.result._shouldStop) return;
                            if (e.getConvexTrianglePillar(b, m, !1), l.pointToWorldFrame(o, f, e.pillarOffset, t), this.intersectConvex(e.pillarConvex, f, t, d, j), this.result._shouldStop) return;
                            e.getConvexTrianglePillar(b, m, !0), l.pointToWorldFrame(o, f, e.pillarOffset, t), this.intersectConvex(e.pillarConvex, f, t, d, j)
                        }
                }
            }, n.prototype[p.types.HEIGHTFIELD] = n.prototype.intersectHeightfield;
            var v = new i,
                A = new i;
            n.prototype.intersectSphere = function(e, f, n, o) {
                var d = this.from,
                    i = this.to,
                    t = e.radius,
                    l = Math.pow(i.x - d.x, 2) + Math.pow(i.y - d.y, 2) + Math.pow(i.z - d.z, 2),
                    u = 2 * ((i.x - d.x) * (d.x - n.x) + (i.y - d.y) * (d.y - n.y) + (i.z - d.z) * (d.z - n.z)),
                    p = Math.pow(d.x - n.x, 2) + Math.pow(d.y - n.y, 2) + Math.pow(d.z - n.z, 2) - Math.pow(t, 2),
                    s = Math.pow(u, 2) - 4 * l * p,
                    y = v,
                    c = A;
                if (!(0 > s))
                    if (0 === s) d.lerp(i, s, y), y.vsub(n, c), c.normalize(), this.reportIntersection(c, y, e, o, -1);
                    else {
                        var a = (-u - Math.sqrt(s)) / (2 * l),
                            r = (-u + Math.sqrt(s)) / (2 * l);
                        if (a >= 0 && 1 >= a && (d.lerp(i, a, y), y.vsub(n, c), c.normalize(), this.reportIntersection(c, y, e, o, -1)), this.result._shouldStop) return;
                        r >= 0 && 1 >= r && (d.lerp(i, r, y), y.vsub(n, c), c.normalize(), this.reportIntersection(c, y, e, o, -1))
                    }
            }, n.prototype[p.types.SPHERE] = n.prototype.intersectSphere;
            var C = new i,
                O = (new i, new i, new i);
            n.prototype.intersectConvex = function(e, f, n, d, i) {
                for (var t = C, l = O, u = i && i.faceList || null, p = e.faces, s = e.vertices, y = e.faceNormals, c = this._direction, a = this.from, r = this.to, w = a.distanceTo(r), b = u ? u.length : p.length, j = this.result, v = 0; !j._shouldStop && b > v; v++) {
                    var A = u ? u[v] : v,
                        h = p[A],
                        k = y[A],
                        q = f,
                        z = n;
                    l.copy(s[h[0]]), q.vmult(l, l), l.vadd(z, l), l.vsub(a, l), q.vmult(k, t);
                    var B = c.dot(t);
                    if (!(Math.abs(B) < this.precision)) {
                        var D = t.dot(l) / B;
                        if (!(0 > D)) {
                            c.mult(D, m), m.vadd(a, m), N.copy(s[h[0]]), q.vmult(N, N), z.vadd(N, N);
                            for (var E = 1; !j._shouldStop && E < h.length - 1; E++) {
                                g.copy(s[h[E]]), x.copy(s[h[E + 1]]), q.vmult(g, g), q.vmult(x, x), z.vadd(g, g), z.vadd(x, x);
                                var F = m.distanceTo(a);
                                !o(m, N, g, x) && !o(m, g, N, x) || F > w || this.reportIntersection(t, m, e, d, A)
                            }
                        }
                    }
                }
            }, n.prototype[p.types.CONVEXPOLYHEDRON] = n.prototype.intersectConvex;
            var h = new i,
                k = new i,
                q = new i,
                z = new i,
                B = new i,
                D = new i,
                E = (new s, []),
                F = new l;
            n.prototype.intersectTrimesh = function(e, f, n, d, i) {
                var t = h,
                    u = E,
                    p = F,
                    s = O,
                    y = k,
                    c = q,
                    a = z,
                    r = D,
                    w = B,
                    b = (i && i.faceList || null, e.indices),
                    j = (e.vertices, e.faceNormals, this.from),
                    v = this.to,
                    A = this._direction;
                p.position.copy(n), p.quaternion.copy(f), l.vectorToLocalFrame(n, f, A, y), l.pointToLocalFrame(n, f, j, c), l.pointToLocalFrame(n, f, v, a);
                var C = c.distanceSquared(a);
                e.tree.rayQuery(this, p, u);
                for (var G = 0, H = u.length; !this.result._shouldStop && G !== H; G++) {
                    var I = u[G];
                    e.getNormal(I, t), e.getVertex(b[3 * I], N), N.vsub(c, s);
                    var J = y.dot(t),
                        K = t.dot(s) / J;
                    if (!(0 > K)) {
                        y.scale(K, m), m.vadd(c, m), e.getVertex(b[3 * I + 1], g), e.getVertex(b[3 * I + 2], x);
                        var L = m.distanceSquared(c);
                        !o(m, g, N, x) && !o(m, N, g, x) || L > C || (l.vectorToWorldFrame(f, t, w), l.pointToWorldFrame(n, f, m, r), this.reportIntersection(w, r, e, d, I))
                    }
                }
                u.length = 0
            }, n.prototype[p.types.TRIMESH] = n.prototype.intersectTrimesh, n.prototype.reportIntersection = function(e, f, o, d, i) {
                var t = this.from,
                    l = this.to,
                    u = t.distanceTo(f),
                    p = this.result;
                if (!(this.skipBackfaces && e.dot(this._direction) > 0)) switch (p.hitFaceIndex = "undefined" != typeof i ? i : -1, this.mode) {
                    case n.ALL:
                        this.hasHit = !0, p.set(t, l, e, f, o, d, u), p.hasHit = !0, this.callback(p);
                        break;
                    case n.CLOSEST:
                        (u < p.distance || !p.hasHit) && (this.hasHit = !0, p.hasHit = !0, p.set(t, l, e, f, o, d, u));
                        break;
                    case n.ANY:
                        this.hasHit = !0, p.hasHit = !0, p.set(t, l, e, f, o, d, u), p._shouldStop = !0
                }
            };
            var G = new i,
                H = new i
        }, {
            "../collision/AABB": 3,
            "../collision/RaycastResult": 10,
            "../math/Quaternion": 28,
            "../math/Transform": 29,
            "../math/Vec3": 30,
            "../shapes/Box": 37,
            "../shapes/ConvexPolyhedron": 38,
            "../shapes/Shape": 43
        }],
        10: [function(e, f) {
            function n() {
                this.rayFromWorld = new o, this.rayToWorld = new o, this.hitNormalWorld = new o, this.hitPointWorld = new o, this.hasHit = !1, this.shape = null, this.body = null, this.hitFaceIndex = -1, this.distance = -1, this._shouldStop = !1
            }
            var o = e("../math/Vec3");
            f.exports = n, n.prototype.reset = function() {
                this.rayFromWorld.setZero(), this.rayToWorld.setZero(), this.hitNormalWorld.setZero(), this.hitPointWorld.setZero(), this.hasHit = !1, this.shape = null, this.body = null, this.hitFaceIndex = -1, this.distance = -1, this._shouldStop = !1
            }, n.prototype.abort = function() {
                this._shouldStop = !0
            }, n.prototype.set = function(e, f, n, o, d, i, t) {
                this.rayFromWorld.copy(e), this.rayToWorld.copy(f), this.hitNormalWorld.copy(n), this.hitPointWorld.copy(o), this.shape = d, this.body = i, this.distance = t
            }
        }, {
            "../math/Vec3": 30
        }],
        11: [function(e, f) {
            function n(e) {
                o.apply(this), this.axisList = [], this.world = null, this.axisIndex = 0;
                var f = this.axisList;
                this._addBodyHandler = function(e) {
                    f.push(e.body)
                }, this._removeBodyHandler = function(e) {
                    var n = f.indexOf(e.body); - 1 !== n && f.splice(n, 1)
                }, e && this.setWorld(e)
            }
            var o = (e("../shapes/Shape"), e("../collision/Broadphase"));
            f.exports = n, n.prototype = new o, n.prototype.setWorld = function(e) {
                this.axisList.length = 0;
                for (var f = 0; f < e.bodies.length; f++) this.axisList.push(e.bodies[f]);
                e.removeEventListener("addBody", this._addBodyHandler), e.removeEventListener("removeBody", this._removeBodyHandler), e.addEventListener("addBody", this._addBodyHandler), e.addEventListener("removeBody", this._removeBodyHandler), this.world = e, this.dirty = !0
            }, n.insertionSortX = function(e) {
                for (var f = 1, n = e.length; n > f; f++) {
                    for (var o = e[f], d = f - 1; d >= 0 && !(e[d].aabb.lowerBound.x <= o.aabb.lowerBound.x); d--) e[d + 1] = e[d];
                    e[d + 1] = o
                }
                return e
            }, n.insertionSortY = function(e) {
                for (var f = 1, n = e.length; n > f; f++) {
                    for (var o = e[f], d = f - 1; d >= 0 && !(e[d].aabb.lowerBound.y <= o.aabb.lowerBound.y); d--) e[d + 1] = e[d];
                    e[d + 1] = o
                }
                return e
            }, n.insertionSortZ = function(e) {
                for (var f = 1, n = e.length; n > f; f++) {
                    for (var o = e[f], d = f - 1; d >= 0 && !(e[d].aabb.lowerBound.z <= o.aabb.lowerBound.z); d--) e[d + 1] = e[d];
                    e[d + 1] = o
                }
                return e
            }, n.prototype.collisionPairs = function(e, f, o) {
                var d, i, t = this.axisList,
                    l = t.length,
                    u = this.axisIndex;
                for (this.dirty && (this.sortList(), this.dirty = !1), d = 0; d !== l; d++) {
                    var p = t[d];
                    for (i = d + 1; l > i; i++) {
                        var s = t[i];
                        if (this.needBroadphaseCollision(p, s)) {
                            if (!n.checkBounds(p, s, u)) break;
                            this.intersectionTest(p, s, f, o)
                        }
                    }
                }
            }, n.prototype.sortList = function() {
                for (var e = this.axisList, f = this.axisIndex, o = e.length, d = 0; d !== o; d++) {
                    var i = e[d];
                    i.aabbNeedsUpdate && i.computeAABB()
                }
                0 === f ? n.insertionSortX(e) : 1 === f ? n.insertionSortY(e) : 2 === f && n.insertionSortZ(e)
            }, n.checkBounds = function(e, f, n) {
                var o, d;
                0 === n ? (o = e.position.x, d = f.position.x) : 1 === n ? (o = e.position.y, d = f.position.y) : 2 === n && (o = e.position.z, d = f.position.z);
                var i = e.boundingRadius,
                    t = f.boundingRadius,
                    l = o + i,
                    u = d - t;
                return l > u
            }, n.prototype.autoDetectAxis = function() {
                for (var e = 0, f = 0, n = 0, o = 0, d = 0, i = 0, t = this.axisList, l = t.length, u = 1 / l, p = 0; p !== l; p++) {
                    var s = t[p],
                        y = s.position.x;
                    e += y, f += y * y;
                    var c = s.position.y;
                    n += c, o += c * c;
                    var a = s.position.z;
                    d += a, i += a * a
                }
                var r = f - e * e * u,
                    w = o - n * n * u,
                    b = i - d * d * u;
                this.axisIndex = r > w ? r > b ? 0 : 2 : w > b ? 1 : 2
            }, n.prototype.aabbQuery = function(e, f, n) {
                n = n || [], this.dirty && (this.sortList(), this.dirty = !1);
                var o = this.axisIndex,
                    d = "x";
                1 === o && (d = "y"), 2 === o && (d = "z");
                for (var i = this.axisList, t = (f.lowerBound[d], f.upperBound[d], 0); t < i.length; t++) {
                    var l = i[t];
                    l.aabbNeedsUpdate && l.computeAABB(), l.aabb.overlaps(f) && n.push(l)
                }
                return n
            }
        }, {
            "../collision/Broadphase": 5,
            "../shapes/Shape": 43
        }],
        12: [function(e, f) {
            function n(e, f, n) {
                n = n || {};
                var l = "undefined" != typeof n.maxForce ? n.maxForce : 1e6,
                    u = n.pivotA ? n.pivotA.clone() : new t,
                    p = n.pivotB ? n.pivotB.clone() : new t;
                this.axisA = n.axisA ? n.axisA.clone() : new t, this.axisB = n.axisB ? n.axisB.clone() : new t, o.call(this, e, u, f, p, l), this.collideConnected = !!n.collideConnected, this.angle = "undefined" != typeof n.angle ? n.angle : 0;
                var s = this.coneEquation = new d(e, f, n),
                    y = this.twistEquation = new i(e, f, n);
                this.twistAngle = "undefined" != typeof n.twistAngle ? n.twistAngle : 0, s.maxForce = 0, s.minForce = -l, y.maxForce = 0, y.minForce = -l, this.equations.push(s, y)
            }
            f.exports = n;
            var o = (e("./Constraint"), e("./PointToPointConstraint")),
                d = e("../equations/ConeEquation"),
                i = e("../equations/RotationalEquation"),
                t = (e("../equations/ContactEquation"), e("../math/Vec3"));
            n.prototype = new o, n.constructor = n;
            new t, new t;
            n.prototype.update = function() {
                var e = this.bodyA,
                    f = this.bodyB,
                    n = this.coneEquation,
                    d = this.twistEquation;
                o.prototype.update.call(this), e.vectorToWorldFrame(this.axisA, n.axisA), f.vectorToWorldFrame(this.axisB, n.axisB), this.axisA.tangents(d.axisA, d.axisA), e.vectorToWorldFrame(d.axisA, d.axisA), this.axisB.tangents(d.axisB, d.axisB), f.vectorToWorldFrame(d.axisB, d.axisB), n.angle = this.angle, d.maxAngle = this.twistAngle
            }
        }, {
            "../equations/ConeEquation": 18,
            "../equations/ContactEquation": 19,
            "../equations/RotationalEquation": 22,
            "../math/Vec3": 30,
            "./Constraint": 13,
            "./PointToPointConstraint": 17
        }],
        13: [function(e, f) {
            function n(e, f, d) {
                d = o.defaults(d, {
                    collideConnected: !0,
                    wakeUpBodies: !0
                }), this.equations = [], this.bodyA = e, this.bodyB = f, this.id = n.idCounter++, this.collideConnected = d.collideConnected, d.wakeUpBodies && (e && e.wakeUp(), f && f.wakeUp())
            }
            f.exports = n;
            var o = e("../utils/Utils");
            n.prototype.update = function() {
                throw new Error("method update() not implmemented in this Constraint subclass!")
            }, n.prototype.enable = function() {
                for (var e = this.equations, f = 0; f < e.length; f++) e[f].enabled = !0
            }, n.prototype.disable = function() {
                for (var e = this.equations, f = 0; f < e.length; f++) e[f].enabled = !1
            }, n.idCounter = 0
        }, {
            "../utils/Utils": 53
        }],
        14: [function(e, f) {
            function n(e, f, n, i) {
                o.call(this, e, f), "undefined" == typeof n && (n = e.position.distanceTo(f.position)), "undefined" == typeof i && (i = 1e6), this.distance = n;
                var t = this.distanceEquation = new d(e, f);
                this.equations.push(t), t.minForce = -i, t.maxForce = i
            }
            f.exports = n;
            var o = e("./Constraint"),
                d = e("../equations/ContactEquation");
            n.prototype = new o, n.prototype.update = function() {
                var e = this.bodyA,
                    f = this.bodyB,
                    n = this.distanceEquation,
                    o = .5 * this.distance,
                    d = n.ni;
                f.position.vsub(e.position, d), d.normalize(), d.mult(o, n.ri), d.mult(-o, n.rj)
            }
        }, {
            "../equations/ContactEquation": 19,
            "./Constraint": 13
        }],
        15: [function(e, f) {
            function n(e, f, n) {
                n = n || {};
                var l = "undefined" != typeof n.maxForce ? n.maxForce : 1e6,
                    u = n.pivotA ? n.pivotA.clone() : new t,
                    p = n.pivotB ? n.pivotB.clone() : new t;
                o.call(this, e, u, f, p, l);
                var s = this.axisA = n.axisA ? n.axisA.clone() : new t(1, 0, 0);
                s.normalize();
                var y = this.axisB = n.axisB ? n.axisB.clone() : new t(1, 0, 0);
                y.normalize();
                var c = this.rotationalEquation1 = new d(e, f, n),
                    a = this.rotationalEquation2 = new d(e, f, n),
                    r = this.motorEquation = new i(e, f, l);
                r.enabled = !1, this.equations.push(c, a, r)
            }
            f.exports = n;
            var o = (e("./Constraint"), e("./PointToPointConstraint")),
                d = e("../equations/RotationalEquation"),
                i = e("../equations/RotationalMotorEquation"),
                t = (e("../equations/ContactEquation"), e("../math/Vec3"));
            n.prototype = new o, n.constructor = n, n.prototype.enableMotor = function() {
                this.motorEquation.enabled = !0
            }, n.prototype.disableMotor = function() {
                this.motorEquation.enabled = !1
            }, n.prototype.setMotorSpeed = function(e) {
                this.motorEquation.targetVelocity = e
            }, n.prototype.setMotorMaxForce = function(e) {
                this.motorEquation.maxForce = e, this.motorEquation.minForce = -e
            };
            var l = new t,
                u = new t;
            n.prototype.update = function() {
                var e = this.bodyA,
                    f = this.bodyB,
                    n = this.motorEquation,
                    d = this.rotationalEquation1,
                    i = this.rotationalEquation2,
                    t = l,
                    p = u,
                    s = this.axisA,
                    y = this.axisB;
                o.prototype.update.call(this), e.quaternion.vmult(s, t), f.quaternion.vmult(y, p), t.tangents(d.axisA, i.axisA), d.axisB.copy(p), i.axisB.copy(p), this.motorEquation.enabled && (e.quaternion.vmult(this.axisA, n.axisA), f.quaternion.vmult(this.axisB, n.axisB))
            }
        }, {
            "../equations/ContactEquation": 19,
            "../equations/RotationalEquation": 22,
            "../equations/RotationalMotorEquation": 23,
            "../math/Vec3": 30,
            "./Constraint": 13,
            "./PointToPointConstraint": 17
        }],
        16: [function(e, f) {
            function n(e, f, n) {
                n = n || {};
                var t = "undefined" != typeof n.maxForce ? n.maxForce : 1e6,
                    l = new i,
                    u = new i,
                    p = new i;
                e.position.vadd(f.position, p), p.scale(.5, p), f.pointToLocalFrame(p, u), e.pointToLocalFrame(p, l), o.call(this, e, l, f, u, t);
                var s = this.rotationalEquation1 = new d(e, f, n),
                    y = this.rotationalEquation2 = new d(e, f, n),
                    c = this.rotationalEquation3 = new d(e, f, n);
                this.equations.push(s, y, c)
            }
            f.exports = n;
            var o = (e("./Constraint"), e("./PointToPointConstraint")),
                d = e("../equations/RotationalEquation"),
                i = (e("../equations/RotationalMotorEquation"), e("../equations/ContactEquation"), e("../math/Vec3"));
            n.prototype = new o, n.constructor = n;
            new i, new i;
            n.prototype.update = function() {
                var e = this.bodyA,
                    f = this.bodyB,
                    n = (this.motorEquation, this.rotationalEquation1),
                    d = this.rotationalEquation2,
                    t = this.rotationalEquation3;
                o.prototype.update.call(this), e.vectorToWorldFrame(i.UNIT_X, n.axisA), f.vectorToWorldFrame(i.UNIT_Y, n.axisB), e.vectorToWorldFrame(i.UNIT_Y, d.axisA), f.vectorToWorldFrame(i.UNIT_Z, d.axisB), e.vectorToWorldFrame(i.UNIT_Z, t.axisA), f.vectorToWorldFrame(i.UNIT_X, t.axisB)
            }
        }, {
            "../equations/ContactEquation": 19,
            "../equations/RotationalEquation": 22,
            "../equations/RotationalMotorEquation": 23,
            "../math/Vec3": 30,
            "./Constraint": 13,
            "./PointToPointConstraint": 17
        }],
        17: [function(e, f) {
            function n(e, f, n, t, l) {
                o.call(this, e, n), l = "undefined" != typeof l ? l : 1e6, this.pivotA = f ? f.clone() : new i, this.pivotB = t ? t.clone() : new i;
                var u = this.equationX = new d(e, n),
                    p = this.equationY = new d(e, n),
                    s = this.equationZ = new d(e, n);
                this.equations.push(u, p, s), u.minForce = p.minForce = s.minForce = -l, u.maxForce = p.maxForce = s.maxForce = l, u.ni.set(1, 0, 0), p.ni.set(0, 1, 0), s.ni.set(0, 0, 1)
            }
            f.exports = n;
            var o = e("./Constraint"),
                d = e("../equations/ContactEquation"),
                i = e("../math/Vec3");
            n.prototype = new o, n.prototype.update = function() {
                var e = this.bodyA,
                    f = this.bodyB,
                    n = this.equationX,
                    o = this.equationY,
                    d = this.equationZ;
                e.quaternion.vmult(this.pivotA, n.ri), f.quaternion.vmult(this.pivotB, n.rj), o.ri.copy(n.ri), o.rj.copy(n.rj), d.ri.copy(n.ri), d.rj.copy(n.rj)
            }
        }, {
            "../equations/ContactEquation": 19,
            "../math/Vec3": 30,
            "./Constraint": 13
        }],
        18: [function(e, f) {
            function n(e, f, n) {
                n = n || {};
                var i = "undefined" != typeof n.maxForce ? n.maxForce : 1e6;
                d.call(this, e, f, -i, i), this.axisA = n.axisA ? n.axisA.clone() : new o(1, 0, 0), this.axisB = n.axisB ? n.axisB.clone() : new o(0, 1, 0), this.angle = "undefined" != typeof n.angle ? n.angle : 0
            }
            f.exports = n;
            var o = e("../math/Vec3"),
                d = (e("../math/Mat3"), e("./Equation"));
            n.prototype = new d, n.prototype.constructor = n;
            var i = new o,
                t = new o;
            n.prototype.computeB = function(e) {
                var f = this.a,
                    n = this.b,
                    o = this.axisA,
                    d = this.axisB,
                    l = i,
                    u = t,
                    p = this.jacobianElementA,
                    s = this.jacobianElementB;
                o.cross(d, l), d.cross(o, u), p.rotational.copy(u), s.rotational.copy(l);
                var y = Math.cos(this.angle) - o.dot(d),
                    c = this.computeGW(),
                    a = this.computeGiMf(),
                    r = -y * f - c * n - e * a;
                return r
            }
        }, {
            "../math/Mat3": 27,
            "../math/Vec3": 30,
            "./Equation": 20
        }],
        19: [function(e, f) {
            function n(e, f, n) {
                n = "undefined" != typeof n ? n : 1e6, o.call(this, e, f, 0, n), this.restitution = 0, this.ri = new d, this.rj = new d, this.ni = new d
            }
            f.exports = n; {
                var o = e("./Equation"),
                    d = e("../math/Vec3");
                e("../math/Mat3")
            }
            n.prototype = new o, n.prototype.constructor = n;
            var i = new d,
                t = new d,
                l = new d;
            n.prototype.computeB = function(e) {
                var f = this.a,
                    n = this.b,
                    o = this.bi,
                    d = this.bj,
                    u = this.ri,
                    p = this.rj,
                    s = i,
                    y = t,
                    c = o.velocity,
                    a = o.angularVelocity,
                    r = (o.force, o.torque, d.velocity),
                    w = d.angularVelocity,
                    b = (d.force, d.torque, l),
                    m = this.jacobianElementA,
                    N = this.jacobianElementB,
                    g = this.ni;
                u.cross(g, s), p.cross(g, y), g.negate(m.spatial), s.negate(m.rotational), N.spatial.copy(g), N.rotational.copy(y), b.copy(d.position), b.vadd(p, b), b.vsub(o.position, b), b.vsub(u, b);
                var x = g.dot(b),
                    j = this.restitution + 1,
                    v = j * r.dot(g) - j * c.dot(g) + w.dot(y) - a.dot(s),
                    A = this.computeGiMf(),
                    C = -x * f - v * n - e * A;
                return C
            };
            var u = new d,
                p = new d,
                s = new d,
                y = new d,
                c = new d;
            n.prototype.getImpactVelocityAlongNormal = function() {
                var e = u,
                    f = p,
                    n = s,
                    o = y,
                    d = c;
                return this.bi.position.vadd(this.ri, n), this.bj.position.vadd(this.rj, o), this.bi.getVelocityAtWorldPoint(n, e), this.bj.getVelocityAtWorldPoint(o, f), e.vsub(f, d), this.ni.dot(d)
            }
        }, {
            "../math/Mat3": 27,
            "../math/Vec3": 30,
            "./Equation": 20
        }],
        20: [function(e, f) {
            function n(e, f, d, i) {
                this.id = n.id++, this.minForce = "undefined" == typeof d ? -1e6 : d, this.maxForce = "undefined" == typeof i ? 1e6 : i, this.bi = e, this.bj = f, this.a = 0, this.b = 0, this.eps = 0, this.jacobianElementA = new o, this.jacobianElementB = new o, this.enabled = !0, this.setSpookParams(1e7, 4, 1 / 60)
            }
            f.exports = n;
            var o = e("../math/JacobianElement"),
                d = e("../math/Vec3");
            n.prototype.constructor = n, n.id = 0, n.prototype.setSpookParams = function(e, f, n) {
                var o = f,
                    d = e,
                    i = n;
                this.a = 4 / (i * (1 + 4 * o)), this.b = 4 * o / (1 + 4 * o), this.eps = 4 / (i * i * d * (1 + 4 * o))
            }, n.prototype.computeB = function(e, f, n) {
                var o = this.computeGW(),
                    d = this.computeGq(),
                    i = this.computeGiMf();
                return -d * e - o * f - i * n
            }, n.prototype.computeGq = function() {
                var e = this.jacobianElementA,
                    f = this.jacobianElementB,
                    n = this.bi,
                    o = this.bj,
                    d = n.position,
                    i = o.position;
                return e.spatial.dot(d) + f.spatial.dot(i)
            };
            var i = new d;
            n.prototype.computeGW = function() {
                var e = this.jacobianElementA,
                    f = this.jacobianElementB,
                    n = this.bi,
                    o = this.bj,
                    d = n.velocity,
                    t = o.velocity,
                    l = n.angularVelocity || i,
                    u = o.angularVelocity || i;
                return e.multiplyVectors(d, l) + f.multiplyVectors(t, u)
            }, n.prototype.computeGWlambda = function() {
                var e = this.jacobianElementA,
                    f = this.jacobianElementB,
                    n = this.bi,
                    o = this.bj,
                    d = n.vlambda,
                    t = o.vlambda,
                    l = n.wlambda || i,
                    u = o.wlambda || i;
                return e.multiplyVectors(d, l) + f.multiplyVectors(t, u)
            };
            var t = new d,
                l = new d,
                u = new d,
                p = new d;
            n.prototype.computeGiMf = function() {
                var e = this.jacobianElementA,
                    f = this.jacobianElementB,
                    n = this.bi,
                    o = this.bj,
                    d = n.force,
                    i = n.torque,
                    s = o.force,
                    y = o.torque,
                    c = n.invMassSolve,
                    a = o.invMassSolve;
                return n.invInertiaWorldSolve ? n.invInertiaWorldSolve.vmult(i, u) : u.set(0, 0, 0), o.invInertiaWorldSolve ? o.invInertiaWorldSolve.vmult(y, p) : p.set(0, 0, 0), d.mult(c, t), s.mult(a, l), e.multiplyVectors(t, u) + f.multiplyVectors(l, p)
            };
            var s = new d;
            n.prototype.computeGiMGt = function() {
                var e = this.jacobianElementA,
                    f = this.jacobianElementB,
                    n = this.bi,
                    o = this.bj,
                    d = n.invMassSolve,
                    i = o.invMassSolve,
                    t = n.invInertiaWorldSolve,
                    l = o.invInertiaWorldSolve,
                    u = d + i;
                return t && (t.vmult(e.rotational, s), u += s.dot(e.rotational)), l && (l.vmult(f.rotational, s), u += s.dot(f.rotational)), u
            }; {
                var y = new d;
                new d, new d, new d, new d, new d
            }
            n.prototype.addToWlambda = function(e) {
                var f = this.jacobianElementA,
                    n = this.jacobianElementB,
                    o = this.bi,
                    d = this.bj,
                    i = y;
                f.spatial.mult(o.invMassSolve * e, i), o.vlambda.vadd(i, o.vlambda), n.spatial.mult(d.invMassSolve * e, i), d.vlambda.vadd(i, d.vlambda), o.invInertiaWorldSolve && (o.invInertiaWorldSolve.vmult(f.rotational, i), i.mult(e, i), o.wlambda.vadd(i, o.wlambda)), d.invInertiaWorldSolve && (d.invInertiaWorldSolve.vmult(n.rotational, i), i.mult(e, i), d.wlambda.vadd(i, d.wlambda))
            }, n.prototype.computeC = function() {
                return this.computeGiMGt() + this.eps
            }
        }, {
            "../math/JacobianElement": 26,
            "../math/Vec3": 30
        }],
        21: [function(e, f) {
            function n(e, f, n) {
                o.call(this, e, f, -n, n), this.ri = new d, this.rj = new d, this.t = new d
            }
            f.exports = n; {
                var o = e("./Equation"),
                    d = e("../math/Vec3");
                e("../math/Mat3")
            }
            n.prototype = new o, n.prototype.constructor = n;
            var i = new d,
                t = new d;
            n.prototype.computeB = function(e) {
                var f = (this.a, this.b),
                    n = (this.bi, this.bj, this.ri),
                    o = this.rj,
                    d = i,
                    l = t,
                    u = this.t;
                n.cross(u, d), o.cross(u, l);
                var p = this.jacobianElementA,
                    s = this.jacobianElementB;
                u.negate(p.spatial), d.negate(p.rotational), s.spatial.copy(u), s.rotational.copy(l);
                var y = this.computeGW(),
                    c = this.computeGiMf(),
                    a = -y * f - e * c;
                return a
            }
        }, {
            "../math/Mat3": 27,
            "../math/Vec3": 30,
            "./Equation": 20
        }],
        22: [function(e, f) {
            function n(e, f, n) {
                n = n || {};
                var i = "undefined" != typeof n.maxForce ? n.maxForce : 1e6;
                d.call(this, e, f, -i, i), this.axisA = n.axisA ? n.axisA.clone() : new o(1, 0, 0), this.axisB = n.axisB ? n.axisB.clone() : new o(0, 1, 0), this.maxAngle = Math.PI / 2
            }
            f.exports = n;
            var o = e("../math/Vec3"),
                d = (e("../math/Mat3"), e("./Equation"));
            n.prototype = new d, n.prototype.constructor = n;
            var i = new o,
                t = new o;
            n.prototype.computeB = function(e) {
                var f = this.a,
                    n = this.b,
                    o = this.axisA,
                    d = this.axisB,
                    l = i,
                    u = t,
                    p = this.jacobianElementA,
                    s = this.jacobianElementB;
                o.cross(d, l), d.cross(o, u), p.rotational.copy(u), s.rotational.copy(l);
                var y = Math.cos(this.maxAngle) - o.dot(d),
                    c = this.computeGW(),
                    a = this.computeGiMf(),
                    r = -y * f - c * n - e * a;
                return r
            }
        }, {
            "../math/Mat3": 27,
            "../math/Vec3": 30,
            "./Equation": 20
        }],
        23: [function(e, f) {
            function n(e, f, n) {
                n = "undefined" != typeof n ? n : 1e6, d.call(this, e, f, -n, n), this.axisA = new o, this.axisB = new o, this.targetVelocity = 0
            }
            f.exports = n;
            var o = e("../math/Vec3"),
                d = (e("../math/Mat3"), e("./Equation"));
            n.prototype = new d, n.prototype.constructor = n, n.prototype.computeB = function(e) {
                var f = (this.a, this.b),
                    n = (this.bi, this.bj, this.axisA),
                    o = this.axisB,
                    d = this.jacobianElementA,
                    i = this.jacobianElementB;
                d.rotational.copy(n), o.negate(i.rotational);
                var t = this.computeGW() - this.targetVelocity,
                    l = this.computeGiMf(),
                    u = -t * f - e * l;
                return u
            }
        }, {
            "../math/Mat3": 27,
            "../math/Vec3": 30,
            "./Equation": 20
        }],
        24: [function(e, f) {
            function n(e, f, d) {
                d = o.defaults(d, {
                    friction: .3,
                    restitution: .3,
                    contactEquationStiffness: 1e7,
                    contactEquationRelaxation: 3,
                    frictionEquationStiffness: 1e7,
                    frictionEquationRelaxation: 3
                }), this.id = n.idCounter++, this.materials = [e, f], this.friction = d.friction, this.restitution = d.restitution, this.contactEquationStiffness = d.contactEquationStiffness, this.contactEquationRelaxation = d.contactEquationRelaxation, this.frictionEquationStiffness = d.frictionEquationStiffness, this.frictionEquationRelaxation = d.frictionEquationRelaxation
            }
            var o = e("../utils/Utils");
            f.exports = n, n.idCounter = 0
        }, {
            "../utils/Utils": 53
        }],
        25: [function(e, f) {
            function n(e) {
                var f = "";
                e = e || {}, "string" == typeof e ? (f = e, e = {}) : "object" == typeof e && (f = ""), this.name = f, this.id = n.idCounter++, this.friction = "undefined" != typeof e.friction ? e.friction : -1, this.restitution = "undefined" != typeof e.restitution ? e.restitution : -1
            }
            f.exports = n, n.idCounter = 0
        }, {}],
        26: [function(e, f) {
            function n() {
                this.spatial = new o, this.rotational = new o
            }
            f.exports = n;
            var o = e("./Vec3");
            n.prototype.multiplyElement = function(e) {
                return e.spatial.dot(this.spatial) + e.rotational.dot(this.rotational)
            }, n.prototype.multiplyVectors = function(e, f) {
                return e.dot(this.spatial) + f.dot(this.rotational)
            }
        }, {
            "./Vec3": 30
        }],
        27: [function(e, f) {
            function n(e) {
                this.elements = e ? e : [0, 0, 0, 0, 0, 0, 0, 0, 0]
            }
            f.exports = n;
            var o = e("./Vec3");
            n.prototype.identity = function() {
                var e = this.elements;
                e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 1, e[5] = 0, e[6] = 0, e[7] = 0, e[8] = 1
            }, n.prototype.setZero = function() {
                var e = this.elements;
                e[0] = 0, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = 0, e[6] = 0, e[7] = 0, e[8] = 0
            }, n.prototype.setTrace = function(e) {
                var f = this.elements;
                f[0] = e.x, f[4] = e.y, f[8] = e.z
            }, n.prototype.getTrace = function(e) {
                var e = e || new o,
                    f = this.elements;
                e.x = f[0], e.y = f[4], e.z = f[8]
            }, n.prototype.vmult = function(e, f) {
                f = f || new o;
                var n = this.elements,
                    d = e.x,
                    i = e.y,
                    t = e.z;
                return f.x = n[0] * d + n[1] * i + n[2] * t, f.y = n[3] * d + n[4] * i + n[5] * t, f.z = n[6] * d + n[7] * i + n[8] * t, f
            }, n.prototype.smult = function(e) {
                for (var f = 0; f < this.elements.length; f++) this.elements[f] *= e
            }, n.prototype.mmult = function(e, f) {
                for (var o = f || new n, d = 0; 3 > d; d++)
                    for (var i = 0; 3 > i; i++) {
                        for (var t = 0, l = 0; 3 > l; l++) t += e.elements[d + 3 * l] * this.elements[l + 3 * i];
                        o.elements[d + 3 * i] = t
                    }
                return o
            }, n.prototype.scale = function(e, f) {
                f = f || new n;
                for (var o = this.elements, d = f.elements, i = 0; 3 !== i; i++) d[3 * i + 0] = e.x * o[3 * i + 0], d[3 * i + 1] = e.y * o[3 * i + 1], d[3 * i + 2] = e.z * o[3 * i + 2];
                return f
            }, n.prototype.solve = function(e, f) {
                f = f || new o;
                for (var n = 3, d = 4, i = [], t = 0; n * d > t; t++) i.push(0);
                var t, l;
                for (t = 0; 3 > t; t++)
                    for (l = 0; 3 > l; l++) i[t + d * l] = this.elements[t + 3 * l];
                i[3] = e.x, i[7] = e.y, i[11] = e.z;
                var u, p, s = 3,
                    y = s,
                    c = 4;
                do {
                    if (t = y - s, 0 === i[t + d * t])
                        for (l = t + 1; y > l; l++)
                            if (0 !== i[t + d * l]) {
                                u = c;
                                do p = c - u, i[p + d * t] += i[p + d * l]; while (--u);
                                break
                            }
                    if (0 !== i[t + d * t])
                        for (l = t + 1; y > l; l++) {
                            var a = i[t + d * l] / i[t + d * t];
                            u = c;
                            do p = c - u, i[p + d * l] = t >= p ? 0 : i[p + d * l] - i[p + d * t] * a; while (--u)
                        }
                } while (--s);
                if (f.z = i[2 * d + 3] / i[2 * d + 2], f.y = (i[1 * d + 3] - i[1 * d + 2] * f.z) / i[1 * d + 1], f.x = (i[0 * d + 3] - i[0 * d + 2] * f.z - i[0 * d + 1] * f.y) / i[0 * d + 0], isNaN(f.x) || isNaN(f.y) || isNaN(f.z) || 1 / 0 === f.x || 1 / 0 === f.y || 1 / 0 === f.z) throw "Could not solve equation! Got x=[" + f.toString() + "], b=[" + e.toString() + "], A=[" + this.toString() + "]";
                return f
            }, n.prototype.e = function(e, f, n) {
                return void 0 === n ? this.elements[f + 3 * e] : void(this.elements[f + 3 * e] = n)
            }, n.prototype.copy = function(e) {
                for (var f = 0; f < e.elements.length; f++) this.elements[f] = e.elements[f];
                return this
            }, n.prototype.toString = function() {
                for (var e = "", f = ",", n = 0; 9 > n; n++) e += this.elements[n] + f;
                return e
            }, n.prototype.reverse = function(e) {
                e = e || new n;
                for (var f = 3, o = 6, d = [], i = 0; f * o > i; i++) d.push(0);
                var i, t;
                for (i = 0; 3 > i; i++)
                    for (t = 0; 3 > t; t++) d[i + o * t] = this.elements[i + 3 * t];
                d[3] = 1, d[9] = 0, d[15] = 0, d[4] = 0, d[10] = 1, d[16] = 0, d[5] = 0, d[11] = 0, d[17] = 1;
                var l, u, p = 3,
                    s = p,
                    y = o;
                do {
                    if (i = s - p, 0 === d[i + o * i])
                        for (t = i + 1; s > t; t++)
                            if (0 !== d[i + o * t]) {
                                l = y;
                                do u = y - l, d[u + o * i] += d[u + o * t]; while (--l);
                                break
                            }
                    if (0 !== d[i + o * i])
                        for (t = i + 1; s > t; t++) {
                            var c = d[i + o * t] / d[i + o * i];
                            l = y;
                            do u = y - l, d[u + o * t] = i >= u ? 0 : d[u + o * t] - d[u + o * i] * c; while (--l)
                        }
                } while (--p);
                i = 2;
                do {
                    t = i - 1;
                    do {
                        var c = d[i + o * t] / d[i + o * i];
                        l = o;
                        do u = o - l, d[u + o * t] = d[u + o * t] - d[u + o * i] * c; while (--l)
                    } while (t--)
                } while (--i);
                i = 2;
                do {
                    var c = 1 / d[i + o * i];
                    l = o;
                    do u = o - l, d[u + o * i] = d[u + o * i] * c; while (--l)
                } while (i--);
                i = 2;
                do {
                    t = 2;
                    do {
                        if (u = d[f + t + o * i], isNaN(u) || 1 / 0 === u) throw "Could not reverse! A=[" + this.toString() + "]";
                        e.e(i, t, u)
                    } while (t--)
                } while (i--);
                return e
            }, n.prototype.setRotationFromQuaternion = function(e) {
                var f = e.x,
                    n = e.y,
                    o = e.z,
                    d = e.w,
                    i = f + f,
                    t = n + n,
                    l = o + o,
                    u = f * i,
                    p = f * t,
                    s = f * l,
                    y = n * t,
                    c = n * l,
                    a = o * l,
                    r = d * i,
                    w = d * t,
                    b = d * l,
                    m = this.elements;
                return m[0] = 1 - (y + a), m[1] = p - b, m[2] = s + w, m[3] = p + b, m[4] = 1 - (u + a), m[5] = c - r, m[6] = s - w, m[7] = c + r, m[8] = 1 - (u + y), this
            }, n.prototype.transpose = function(e) {
                e = e || new n;
                for (var f = e.elements, o = this.elements, d = 0; 3 !== d; d++)
                    for (var i = 0; 3 !== i; i++) f[3 * d + i] = o[3 * i + d];
                return e
            }
        }, {
            "./Vec3": 30
        }],
        28: [function(e, f) {
            function n(e, f, n, o) {
                this.x = void 0 !== e ? e : 0, this.y = void 0 !== f ? f : 0, this.z = void 0 !== n ? n : 0, this.w = void 0 !== o ? o : 1
            }
            f.exports = n;
            var o = e("./Vec3");
            n.prototype.set = function(e, f, n, o) {
                this.x = e, this.y = f, this.z = n, this.w = o
            }, n.prototype.toString = function() {
                return this.x + "," + this.y + "," + this.z + "," + this.w
            }, n.prototype.toArray = function() {
                return [this.x, this.y, this.z, this.w]
            }, n.prototype.setFromAxisAngle = function(e, f) {
                var n = Math.sin(.5 * f);
                this.x = e.x * n, this.y = e.y * n, this.z = e.z * n, this.w = Math.cos(.5 * f)
            }, n.prototype.toAxisAngle = function(e) {
                e = e || new o, this.normalize();
                var f = 2 * Math.acos(this.w),
                    n = Math.sqrt(1 - this.w * this.w);
                return .001 > n ? (e.x = this.x, e.y = this.y, e.z = this.z) : (e.x = this.x / n, e.y = this.y / n, e.z = this.z / n), [e, f]
            };
            var d = new o,
                i = new o;
            n.prototype.setFromVectors = function(e, f) {
                if (e.isAntiparallelTo(f)) {
                    var n = d,
                        o = i;
                    e.tangents(n, o), this.setFromAxisAngle(n, Math.PI)
                } else {
                    var t = e.cross(f);
                    this.x = t.x, this.y = t.y, this.z = t.z, this.w = Math.sqrt(Math.pow(e.norm(), 2) * Math.pow(f.norm(), 2)) + e.dot(f), this.normalize()
                }
            };
            var t = new o,
                l = new o,
                u = new o;
            n.prototype.mult = function(e, f) {
                f = f || new n;
                var o = this.w,
                    d = t,
                    i = l,
                    p = u;
                return d.set(this.x, this.y, this.z), i.set(e.x, e.y, e.z), f.w = o * e.w - d.dot(i), d.cross(i, p), f.x = o * i.x + e.w * d.x + p.x, f.y = o * i.y + e.w * d.y + p.y, f.z = o * i.z + e.w * d.z + p.z, f
            }, n.prototype.inverse = function(e) {
                var f = this.x,
                    o = this.y,
                    d = this.z,
                    i = this.w;
                e = e || new n, this.conjugate(e);
                var t = 1 / (f * f + o * o + d * d + i * i);
                return e.x *= t, e.y *= t, e.z *= t, e.w *= t, e
            }, n.prototype.conjugate = function(e) {
                return e = e || new n, e.x = -this.x, e.y = -this.y, e.z = -this.z, e.w = this.w, e
            }, n.prototype.normalize = function() {
                var e = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
                0 === e ? (this.x = 0, this.y = 0, this.z = 0, this.w = 0) : (e = 1 / e, this.x *= e, this.y *= e, this.z *= e, this.w *= e)
            }, n.prototype.normalizeFast = function() {
                var e = (3 - (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)) / 2;
                0 === e ? (this.x = 0, this.y = 0, this.z = 0, this.w = 0) : (this.x *= e, this.y *= e, this.z *= e, this.w *= e)
            }, n.prototype.vmult = function(e, f) {
                f = f || new o;
                var n = e.x,
                    d = e.y,
                    i = e.z,
                    t = this.x,
                    l = this.y,
                    u = this.z,
                    p = this.w,
                    s = p * n + l * i - u * d,
                    y = p * d + u * n - t * i,
                    c = p * i + t * d - l * n,
                    a = -t * n - l * d - u * i;
                return f.x = s * p + a * -t + y * -u - c * -l, f.y = y * p + a * -l + c * -t - s * -u, f.z = c * p + a * -u + s * -l - y * -t, f
            }, n.prototype.copy = function(e) {
                return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w, this
            }, n.prototype.toEuler = function(e, f) {
                f = f || "YZX";
                var n, o, d, i = this.x,
                    t = this.y,
                    l = this.z,
                    u = this.w;
                switch (f) {
                    case "YZX":
                        var p = i * t + l * u;
                        if (p > .499 && (n = 2 * Math.atan2(i, u), o = Math.PI / 2, d = 0), -.499 > p && (n = -2 * Math.atan2(i, u), o = -Math.PI / 2, d = 0), isNaN(n)) {
                            var s = i * i,
                                y = t * t,
                                c = l * l;
                            n = Math.atan2(2 * t * u - 2 * i * l, 1 - 2 * y - 2 * c), o = Math.asin(2 * p), d = Math.atan2(2 * i * u - 2 * t * l, 1 - 2 * s - 2 * c)
                        }
                        break;
                    default:
                        throw new Error("Euler order " + f + " not supported yet.")
                }
                e.y = n, e.z = o, e.x = d
            }, n.prototype.setFromEuler = function(e, f, n, o) {
                o = o || "XYZ";
                var d = Math.cos(e / 2),
                    i = Math.cos(f / 2),
                    t = Math.cos(n / 2),
                    l = Math.sin(e / 2),
                    u = Math.sin(f / 2),
                    p = Math.sin(n / 2);
                return "XYZ" === o ? (this.x = l * i * t + d * u * p, this.y = d * u * t - l * i * p, this.z = d * i * p + l * u * t, this.w = d * i * t - l * u * p) : "YXZ" === o ? (this.x = l * i * t + d * u * p, this.y = d * u * t - l * i * p, this.z = d * i * p - l * u * t, this.w = d * i * t + l * u * p) : "ZXY" === o ? (this.x = l * i * t - d * u * p, this.y = d * u * t + l * i * p, this.z = d * i * p + l * u * t, this.w = d * i * t - l * u * p) : "ZYX" === o ? (this.x = l * i * t - d * u * p, this.y = d * u * t + l * i * p, this.z = d * i * p - l * u * t, this.w = d * i * t + l * u * p) : "YZX" === o ? (this.x = l * i * t + d * u * p, this.y = d * u * t + l * i * p, this.z = d * i * p - l * u * t, this.w = d * i * t - l * u * p) : "XZY" === o && (this.x = l * i * t - d * u * p, this.y = d * u * t - l * i * p, this.z = d * i * p + l * u * t, this.w = d * i * t + l * u * p), this
            }, n.prototype.clone = function() {
                return new n(this.x, this.y, this.z, this.w)
            }
        }, {
            "./Vec3": 30
        }],
        29: [function(e, f) {
            function n(e) {
                e = e || {}, this.position = new o, e.position && this.position.copy(e.position), this.quaternion = new d, e.quaternion && this.quaternion.copy(e.quaternion)
            }
            var o = e("./Vec3"),
                d = e("./Quaternion");
            f.exports = n;
            var i = new d;
            n.pointToLocalFrame = function(e, f, n, d) {
                var d = d || new o;
                return n.vsub(e, d), f.conjugate(i), i.vmult(d, d), d
            }, n.prototype.pointToLocal = function(e, f) {
                return n.pointToLocalFrame(this.position, this.quaternion, e, f)
            }, n.pointToWorldFrame = function(e, f, n, d) {
                var d = d || new o;
                return f.vmult(n, d), d.vadd(e, d), d
            }, n.prototype.pointToWorld = function(e, f) {
                return n.pointToWorldFrame(this.position, this.quaternion, e, f)
            }, n.prototype.vectorToWorldFrame = function(e, f) {
                var f = f || new o;
                return this.quaternion.vmult(e, f), f
            }, n.vectorToWorldFrame = function(e, f, n) {
                return e.vmult(f, n), n
            }, n.vectorToLocalFrame = function(e, f, n, d) {
                var d = d || new o;
                return f.w *= -1, f.vmult(n, d), f.w *= -1, d
            }
        }, {
            "./Quaternion": 28,
            "./Vec3": 30
        }],
        30: [function(e, f) {
            function n(e, f, n) {
                this.x = e || 0, this.y = f || 0, this.z = n || 0
            }
            f.exports = n;
            var o = e("./Mat3");
            n.ZERO = new n(0, 0, 0), n.UNIT_X = new n(1, 0, 0), n.UNIT_Y = new n(0, 1, 0), n.UNIT_Z = new n(0, 0, 1), n.prototype.cross = function(e, f) {
                var o = e.x,
                    d = e.y,
                    i = e.z,
                    t = this.x,
                    l = this.y,
                    u = this.z;
                return f = f || new n, f.x = l * i - u * d, f.y = u * o - t * i, f.z = t * d - l * o, f
            }, n.prototype.set = function(e, f, n) {
                return this.x = e, this.y = f, this.z = n, this
            }, n.prototype.setZero = function() {
                this.x = this.y = this.z = 0
            }, n.prototype.vadd = function(e, f) {
                return f ? (f.x = e.x + this.x, f.y = e.y + this.y, f.z = e.z + this.z, void 0) : new n(this.x + e.x, this.y + e.y, this.z + e.z)
            }, n.prototype.vsub = function(e, f) {
                return f ? (f.x = this.x - e.x, f.y = this.y - e.y, f.z = this.z - e.z, void 0) : new n(this.x - e.x, this.y - e.y, this.z - e.z)
            }, n.prototype.crossmat = function() {
                return new o([0, -this.z, this.y, this.z, 0, -this.x, -this.y, this.x, 0])
            }, n.prototype.normalize = function() {
                var e = this.x,
                    f = this.y,
                    n = this.z,
                    o = Math.sqrt(e * e + f * f + n * n);
                if (o > 0) {
                    var d = 1 / o;
                    this.x *= d, this.y *= d, this.z *= d
                } else this.x = 0, this.y = 0, this.z = 0;
                return o
            }, n.prototype.unit = function(e) {
                e = e || new n;
                var f = this.x,
                    o = this.y,
                    d = this.z,
                    i = Math.sqrt(f * f + o * o + d * d);
                return i > 0 ? (i = 1 / i, e.x = f * i, e.y = o * i, e.z = d * i) : (e.x = 1, e.y = 0, e.z = 0), e
            }, n.prototype.norm = function() {
                var e = this.x,
                    f = this.y,
                    n = this.z;
                return Math.sqrt(e * e + f * f + n * n)
            }, n.prototype.length = n.prototype.norm, n.prototype.norm2 = function() {
                return this.dot(this)
            }, n.prototype.lengthSquared = n.prototype.norm2, n.prototype.distanceTo = function(e) {
                var f = this.x,
                    n = this.y,
                    o = this.z,
                    d = e.x,
                    i = e.y,
                    t = e.z;
                return Math.sqrt((d - f) * (d - f) + (i - n) * (i - n) + (t - o) * (t - o))
            }, n.prototype.distanceSquared = function(e) {
                var f = this.x,
                    n = this.y,
                    o = this.z,
                    d = e.x,
                    i = e.y,
                    t = e.z;
                return (d - f) * (d - f) + (i - n) * (i - n) + (t - o) * (t - o)
            }, n.prototype.mult = function(e, f) {
                f = f || new n;
                var o = this.x,
                    d = this.y,
                    i = this.z;
                return f.x = e * o, f.y = e * d, f.z = e * i, f
            }, n.prototype.scale = n.prototype.mult, n.prototype.dot = function(e) {
                return this.x * e.x + this.y * e.y + this.z * e.z
            }, n.prototype.isZero = function() {
                return 0 === this.x && 0 === this.y && 0 === this.z
            }, n.prototype.negate = function(e) {
                return e = e || new n, e.x = -this.x, e.y = -this.y, e.z = -this.z, e
            };
            var d = new n,
                i = new n;
            n.prototype.tangents = function(e, f) {
                var n = this.norm();
                if (n > 0) {
                    var o = d,
                        t = 1 / n;
                    o.set(this.x * t, this.y * t, this.z * t);
                    var l = i;
                    Math.abs(o.x) < .9 ? (l.set(1, 0, 0), o.cross(l, e)) : (l.set(0, 1, 0), o.cross(l, e)), o.cross(e, f)
                } else e.set(1, 0, 0), f.set(0, 1, 0)
            }, n.prototype.toString = function() {
                return this.x + "," + this.y + "," + this.z
            }, n.prototype.toArray = function() {
                return [this.x, this.y, this.z]
            }, n.prototype.copy = function(e) {
                return this.x = e.x, this.y = e.y, this.z = e.z, this
            }, n.prototype.lerp = function(e, f, n) {
                var o = this.x,
                    d = this.y,
                    i = this.z;
                n.x = o + (e.x - o) * f, n.y = d + (e.y - d) * f, n.z = i + (e.z - i) * f
            }, n.prototype.almostEquals = function(e, f) {
                return void 0 === f && (f = 1e-6), Math.abs(this.x - e.x) > f || Math.abs(this.y - e.y) > f || Math.abs(this.z - e.z) > f ? !1 : !0
            }, n.prototype.almostZero = function(e) {
                return void 0 === e && (e = 1e-6), Math.abs(this.x) > e || Math.abs(this.y) > e || Math.abs(this.z) > e ? !1 : !0
            };
            var t = new n;
            n.prototype.isAntiparallelTo = function(e, f) {
                return this.negate(t), t.almostEquals(e, f)
            }, n.prototype.clone = function() {
                return new n(this.x, this.y, this.z)
            }
        }, {
            "./Mat3": 27
        }],
        31: [function(e, f) {
            function n(e) {
                e = e || {}, o.apply(this), this.id = n.idCounter++, this.world = null, this.preStep = null, this.postStep = null, this.vlambda = new d, this.collisionFilterGroup = "number" == typeof e.collisionFilterGroup ? e.collisionFilterGroup : 1, this.collisionFilterMask = "number" == typeof e.collisionFilterMask ? e.collisionFilterMask : 1, this.collisionResponse = !0, this.position = new d, e.position && this.position.copy(e.position), this.previousPosition = new d, this.initPosition = new d, this.velocity = new d, e.velocity && this.velocity.copy(e.velocity), this.initVelocity = new d, this.force = new d;
                var f = "number" == typeof e.mass ? e.mass : 0;
                this.mass = f, this.invMass = f > 0 ? 1 / f : 0, this.material = e.material || null, this.linearDamping = "number" == typeof e.linearDamping ? e.linearDamping : .01, this.type = 0 >= f ? n.STATIC : n.DYNAMIC, typeof e.type == typeof n.STATIC && (this.type = e.type), this.allowSleep = "undefined" != typeof e.allowSleep ? e.allowSleep : !0, this.sleepState = 0, this.sleepSpeedLimit = "undefined" != typeof e.sleepSpeedLimit ? e.sleepSpeedLimit : .1, this.sleepTimeLimit = "undefined" != typeof e.sleepTimeLimit ? e.sleepTimeLimit : 1, this.timeLastSleepy = 0, this._wakeUpAfterNarrowphase = !1, this.torque = new d, this.quaternion = new t, e.quaternion && this.quaternion.copy(e.quaternion), this.initQuaternion = new t, this.angularVelocity = new d, e.angularVelocity && this.angularVelocity.copy(e.angularVelocity), this.initAngularVelocity = new d, this.interpolatedPosition = new d, this.interpolatedQuaternion = new t, this.shapes = [], this.shapeOffsets = [], this.shapeOrientations = [], this.inertia = new d, this.invInertia = new d, this.invInertiaWorld = new i, this.invMassSolve = 0, this.invInertiaSolve = new d, this.invInertiaWorldSolve = new i, this.fixedRotation = "undefined" != typeof e.fixedRotation ? e.fixedRotation : !1, this.angularDamping = "undefined" != typeof e.angularDamping ? e.angularDamping : .01, this.aabb = new l, this.aabbNeedsUpdate = !0, this.wlambda = new d, e.shape && this.addShape(e.shape), this.updateMassProperties()
            }
            f.exports = n;
            var o = e("../utils/EventTarget"),
                d = (e("../shapes/Shape"), e("../math/Vec3")),
                i = e("../math/Mat3"),
                t = e("../math/Quaternion"),
                l = (e("../material/Material"), e("../collision/AABB")),
                u = e("../shapes/Box");
            n.prototype = new o, n.prototype.constructor = n, n.DYNAMIC = 1, n.STATIC = 2, n.KINEMATIC = 4, n.AWAKE = 0, n.SLEEPY = 1, n.SLEEPING = 2, n.idCounter = 0, n.prototype.wakeUp = function() {
                var e = this.sleepState;
                this.sleepState = 0, e === n.SLEEPING && this.dispatchEvent({
                    type: "wakeup"
                })
            }, n.prototype.sleep = function() {
                this.sleepState = n.SLEEPING, this.velocity.set(0, 0, 0), this.angularVelocity.set(0, 0, 0)
            }, n.sleepyEvent = {
                type: "sleepy"
            }, n.sleepEvent = {
                type: "sleep"
            }, n.prototype.sleepTick = function(e) {
                if (this.allowSleep) {
                    var f = this.sleepState,
                        o = this.velocity.norm2() + this.angularVelocity.norm2(),
                        d = Math.pow(this.sleepSpeedLimit, 2);
                    f === n.AWAKE && d > o ? (this.sleepState = n.SLEEPY, this.timeLastSleepy = e, this.dispatchEvent(n.sleepyEvent)) : f === n.SLEEPY && o > d ? this.wakeUp() : f === n.SLEEPY && e - this.timeLastSleepy > this.sleepTimeLimit && (this.sleep(), this.dispatchEvent(n.sleepEvent))
                }
            }, n.prototype.updateSolveMassProperties = function() {
                this.sleepState === n.SLEEPING || this.type === n.KINEMATIC ? (this.invMassSolve = 0, this.invInertiaSolve.setZero(), this.invInertiaWorldSolve.setZero()) : (this.invMassSolve = this.invMass, this.invInertiaSolve.copy(this.invInertia), this.invInertiaWorldSolve.copy(this.invInertiaWorld))
            }, n.prototype.pointToLocalFrame = function(e, f) {
                var f = f || new d;
                return e.vsub(this.position, f), this.quaternion.conjugate().vmult(f, f), f
            }, n.prototype.vectorToLocalFrame = function(e, f) {
                var f = f || new d;
                return this.quaternion.conjugate().vmult(e, f), f
            }, n.prototype.pointToWorldFrame = function(e, f) {
                var f = f || new d;
                return this.quaternion.vmult(e, f), f.vadd(this.position, f), f
            }, n.prototype.vectorToWorldFrame = function(e, f) {
                var f = f || new d;
                return this.quaternion.vmult(e, f), f
            };
            var p = new d,
                s = new t;
            n.prototype.addShape = function(e, f, n) {
                var o = new d,
                    i = new t;
                return f && o.copy(f), n && i.copy(n), this.shapes.push(e), this.shapeOffsets.push(o), this.shapeOrientations.push(i), this.updateMassProperties(), this.updateBoundingRadius(), this.aabbNeedsUpdate = !0, this
            }, n.prototype.updateBoundingRadius = function() {
                for (var e = this.shapes, f = this.shapeOffsets, n = e.length, o = 0, d = 0; d !== n; d++) {
                    var i = e[d];
                    i.updateBoundingSphereRadius();
                    var t = f[d].norm(),
                        l = i.boundingSphereRadius;
                    t + l > o && (o = t + l)
                }
                this.boundingRadius = o
            };
            var y = new l;
            n.prototype.computeAABB = function() {
                for (var e = this.shapes, f = this.shapeOffsets, n = this.shapeOrientations, o = e.length, d = p, i = s, t = this.quaternion, l = this.aabb, u = y, c = 0; c !== o; c++) {
                    var a = e[c];
                    n[c].mult(t, i), i.vmult(f[c], d), d.vadd(this.position, d), a.calculateWorldAABB(d, i, u.lowerBound, u.upperBound), 0 === c ? l.copy(u) : l.extend(u)
                }
                this.aabbNeedsUpdate = !1
            }; {
                var c = new i,
                    a = new i;
                new i
            }
            n.prototype.updateInertiaWorld = function(e) {
                var f = this.invInertia;
                if (f.x !== f.y || f.y !== f.z || e) {
                    var n = c,
                        o = a;
                    n.setRotationFromQuaternion(this.quaternion), n.transpose(o), n.scale(f, n), n.mmult(o, this.invInertiaWorld)
                } else;
            };
            var r = new d,
                w = new d;
            n.prototype.applyForce = function(e, f) {
                if (this.type === n.DYNAMIC) {
                    var o = r;
                    f.vsub(this.position, o);
                    var d = w;
                    o.cross(e, d), this.force.vadd(e, this.force), this.torque.vadd(d, this.torque)
                }
            };
            var b = new d,
                m = new d;
            n.prototype.applyLocalForce = function(e, f) {
                if (this.type === n.DYNAMIC) {
                    var o = b,
                        d = m;
                    this.vectorToWorldFrame(e, o), this.pointToWorldFrame(f, d), this.applyForce(o, d)
                }
            };
            var N = new d,
                g = new d,
                x = new d;
            n.prototype.applyImpulse = function(e, f) {
                if (this.type === n.DYNAMIC) {
                    var o = N;
                    f.vsub(this.position, o);
                    var d = g;
                    d.copy(e), d.mult(this.invMass, d), this.velocity.vadd(d, this.velocity);
                    var i = x;
                    o.cross(e, i), this.invInertiaWorld.vmult(i, i), this.angularVelocity.vadd(i, this.angularVelocity)
                }
            };
            var j = new d,
                v = new d;
            n.prototype.applyLocalImpulse = function(e, f) {
                if (this.type === n.DYNAMIC) {
                    var o = j,
                        d = v;
                    this.vectorToWorldFrame(e, o), this.pointToWorldFrame(f, d), this.applyImpulse(o, d)
                }
            };
            var A = new d;
            n.prototype.updateMassProperties = function() {
                var e = A;
                this.invMass = this.mass > 0 ? 1 / this.mass : 0;
                var f = this.inertia,
                    n = this.fixedRotation;
                this.computeAABB(), e.set((this.aabb.upperBound.x - this.aabb.lowerBound.x) / 2, (this.aabb.upperBound.y - this.aabb.lowerBound.y) / 2, (this.aabb.upperBound.z - this.aabb.lowerBound.z) / 2), u.calculateInertia(e, this.mass, f), this.invInertia.set(f.x > 0 && !n ? 1 / f.x : 0, f.y > 0 && !n ? 1 / f.y : 0, f.z > 0 && !n ? 1 / f.z : 0), this.updateInertiaWorld(!0)
            }, n.prototype.getVelocityAtWorldPoint = function(e, f) {
                var n = new d;
                return e.vsub(this.position, n), this.angularVelocity.cross(n, f), this.velocity.vadd(f, f), f
            }
        }, {
            "../collision/AABB": 3,
            "../material/Material": 25,
            "../math/Mat3": 27,
            "../math/Quaternion": 28,
            "../math/Vec3": 30,
            "../shapes/Box": 37,
            "../shapes/Shape": 43,
            "../utils/EventTarget": 49
        }],
        32: [function(e, f) {
            function n(e) {
                this.chassisBody = e.chassisBody, this.wheelInfos = [], this.sliding = !1, this.world = null, this.indexRightAxis = "undefined" != typeof e.indexRightAxis ? e.indexRightAxis : 1, this.indexForwardAxis = "undefined" != typeof e.indexForwardAxis ? e.indexForwardAxis : 0, this.indexUpAxis = "undefined" != typeof e.indexUpAxis ? e.indexUpAxis : 2
            }

            function o(e, f, n, o, i) {
                var t = 0,
                    l = n,
                    u = x,
                    p = j,
                    s = v;
                e.getVelocityAtWorldPoint(l, u), f.getVelocityAtWorldPoint(l, p), u.vsub(p, s);
                var y = o.dot(s),
                    c = d(e, n, o),
                    a = d(f, n, o),
                    r = 1,
                    w = r / (c + a);
                return t = -y * w, t > i && (t = i), -i > t && (t = -i), t
            }

            function d(e, f, n) {
                var o = A,
                    d = C,
                    i = O,
                    t = h;
                return f.vsub(e.position, o), o.cross(n, d), e.invInertiaWorld.vmult(d, t), t.cross(o, i), e.invMass + n.dot(i)
            }

            function i(e, f, n, o, d, i) {
                var t = d.norm2();
                if (t > 1.1) return 0;
                var l = k,
                    u = q,
                    p = z;
                e.getVelocityAtWorldPoint(f, l), n.getVelocityAtWorldPoint(o, u), l.vsub(u, p);
                var s = d.dot(p),
                    y = .2,
                    c = 1 / (e.invMass + n.invMass),
                    i = -y * s * c;
                return i
            }
            var t = (e("./Body"), e("../math/Vec3")),
                l = e("../math/Quaternion"),
                u = (e("../collision/RaycastResult"), e("../collision/Ray")),
                p = e("../objects/WheelInfo");
            f.exports = n; {
                var s = (new t, new t, new t, new t),
                    y = new t,
                    c = new t;
                new u
            }
            n.prototype.addWheel = function(e) {
                e = e || {};
                var f = new p(e),
                    n = this.wheelInfos.length;
                return this.wheelInfos.push(f), n
            }, n.prototype.setSteeringValue = function(e, f) {
                var n = this.wheelInfos[f];
                n.steering = e
            };
            new t;
            n.prototype.applyEngineForce = function(e, f) {
                this.wheelInfos[f].engineForce = e
            }, n.prototype.setBrake = function(e, f) {
                this.wheelInfos[f].brake = e
            }, n.prototype.addToWorld = function(e) {
                this.constraints;
                e.add(this.chassisBody);
                var f = this;
                this.preStepCallback = function() {
                    f.updateVehicle(e.dt)
                }, e.addEventListener("preStep", this.preStepCallback), this.world = e
            }, n.prototype.getVehicleAxisWorld = function(e, f) {
                f.set(0 === e ? 1 : 0, 1 === e ? 1 : 0, 2 === e ? 1 : 0), this.chassisBody.vectorToWorldFrame(f, f)
            }, n.prototype.updateVehicle = function(e) {
                for (var f = this.wheelInfos, n = f.length, o = this.chassisBody, d = 0; n > d; d++) this.updateWheelTransform(d);
                this.currentVehicleSpeedKmHour = 3.6 * o.velocity.norm();
                var i = new t;
                this.getVehicleAxisWorld(this.indexForwardAxis, i), i.dot(o.velocity) < 0 && (this.currentVehicleSpeedKmHour *= -1);
                for (var d = 0; n > d; d++) this.castRay(f[d]);
                this.updateSuspension(e);
                for (var l = new t, u = new t, d = 0; n > d; d++) {
                    var p = f[d],
                        s = p.suspensionForce;
                    s > p.maxSuspensionForce && (s = p.maxSuspensionForce), p.raycastResult.hitNormalWorld.scale(s * e, l), p.raycastResult.hitPointWorld.vsub(o.position, u), o.applyImpulse(l, p.raycastResult.hitPointWorld)
                }
                this.updateFriction(e);
                var y = new t,
                    c = new t,
                    a = new t;
                for (d = 0; n > d; d++) {
                    var p = f[d];
                    o.getVelocityAtWorldPoint(p.chassisConnectionPointWorld, a);
                    var r = 1;
                    switch (this.indexUpAxis) {
                        case 1:
                            r = -1
                    }
                    if (p.isInContact) {
                        this.getVehicleAxisWorld(this.indexForwardAxis, c);
                        var w = c.dot(p.raycastResult.hitNormalWorld);
                        p.raycastResult.hitNormalWorld.scale(w, y), c.vsub(y, c);
                        var b = c.dot(a);
                        p.deltaRotation = r * b * e / p.radius
                    }!p.sliding && p.isInContact || 0 === p.engineForce || !p.useCustomSlidingRotationalSpeed || (p.deltaRotation = (p.engineForce > 0 ? 1 : -1) * p.customSlidingRotationalSpeed * e), Math.abs(p.brake) > Math.abs(p.engineForce) && (p.deltaRotation = 0), p.rotation += p.deltaRotation, p.deltaRotation *= .99
                }
            }, n.prototype.updateSuspension = function() {
                for (var e = this.chassisBody, f = e.mass, n = this.wheelInfos, o = n.length, d = 0; o > d; d++) {
                    var i = n[d];
                    if (i.isInContact) {
                        var t, l = i.suspensionRestLength,
                            u = i.suspensionLength,
                            p = l - u;
                        t = i.suspensionStiffness * p * i.clippedInvContactDotSuspension;
                        var s, y = i.suspensionRelativeVelocity;
                        s = 0 > y ? i.dampingCompression : i.dampingRelaxation, t -= s * y, i.suspensionForce = t * f, i.suspensionForce < 0 && (i.suspensionForce = 0)
                    } else i.suspensionForce = 0
                }
            }, n.prototype.removeFromWorld = function(e) {
                this.constraints;
                e.remove(this.chassisBody), e.removeEventListener("preStep", this.preStepCallback), this.world = null
            };
            var a = new t,
                r = new t;
            n.prototype.castRay = function(e) {
                var f = a,
                    n = r;
                this.updateWheelTransformWorld(e);
                var o = this.chassisBody,
                    d = -1,
                    i = e.suspensionRestLength + e.radius;
                e.directionWorld.scale(i, f);
                var l = e.chassisConnectionPointWorld;
                l.vadd(f, n);
                var u = e.raycastResult;
                u.reset();
                var p = o.collisionResponse;
                o.collisionResponse = !1, this.world.rayTest(l, n, u), o.collisionResponse = p;
                var s = u.body;
                if (e.raycastResult.groundObject = 0, s) {
                    d = u.distance, e.raycastResult.hitNormalWorld = u.hitNormalWorld, e.isInContact = !0;
                    var y = u.distance;
                    e.suspensionLength = y - e.radius;
                    var c = e.suspensionRestLength - e.maxSuspensionTravel,
                        w = e.suspensionRestLength + e.maxSuspensionTravel;
                    e.suspensionLength < c && (e.suspensionLength = c), e.suspensionLength > w && (e.suspensionLength = w, e.raycastResult.reset());
                    var b = e.raycastResult.hitNormalWorld.dot(e.directionWorld),
                        m = new t;
                    o.getVelocityAtWorldPoint(e.raycastResult.hitPointWorld, m);
                    var N = e.raycastResult.hitNormalWorld.dot(m);
                    if (b >= -.1) e.suspensionRelativeVelocity = 0, e.clippedInvContactDotSuspension = 10;
                    else {
                        var g = -1 / b;
                        e.suspensionRelativeVelocity = N * g, e.clippedInvContactDotSuspension = g
                    }
                } else e.suspensionLength = e.suspensionRestLength + 0 * e.maxSuspensionTravel, e.suspensionRelativeVelocity = 0, e.directionWorld.scale(-1, e.raycastResult.hitNormalWorld), e.clippedInvContactDotSuspension = 1;
                return d
            }, n.prototype.updateWheelTransformWorld = function(e) {
                e.isInContact = !1;
                var f = this.chassisBody;
                f.pointToWorldFrame(e.chassisConnectionPointLocal, e.chassisConnectionPointWorld), f.vectorToWorldFrame(e.directionLocal, e.directionWorld), f.vectorToWorldFrame(e.axleLocal, e.axleWorld)
            }, n.prototype.updateWheelTransform = function(e) {
                var f = s,
                    n = y,
                    o = c,
                    d = this.wheelInfos[e];
                this.updateWheelTransformWorld(d), d.directionLocal.scale(-1, f), n.copy(d.axleLocal), f.cross(n, o), o.normalize(), n.normalize();
                var i = d.steering,
                    t = new l;
                t.setFromAxisAngle(f, i);
                var u = new l;
                u.setFromAxisAngle(n, d.rotation);
                var p = d.worldTransform.quaternion;
                this.chassisBody.quaternion.mult(t, p), p.mult(u, p), p.normalize();
                var a = d.worldTransform.position;
                a.copy(d.directionWorld), a.scale(d.suspensionLength, a), a.vadd(d.chassisConnectionPointWorld, a)
            };
            var w = [new t(1, 0, 0), new t(0, 1, 0), new t(0, 0, 1)];
            n.prototype.getWheelTransformWorld = function(e) {
                return this.wheelInfos[e].worldTransform
            };
            var b = new t,
                m = [],
                N = [],
                g = 1;
            n.prototype.updateFriction = function(e) {
                for (var f = b, n = this.wheelInfos, d = n.length, l = this.chassisBody, u = N, p = m, s = 0, y = 0; d > y; y++) {
                    var c = n[y],
                        a = c.raycastResult.body;
                    a && s++, c.sideImpulse = 0, c.forwardImpulse = 0, u[y] || (u[y] = new t), p[y] || (p[y] = new t)
                }
                for (var y = 0; d > y; y++) {
                    var c = n[y],
                        a = c.raycastResult.body;
                    if (a) {
                        var r = p[y],
                            x = this.getWheelTransformWorld(y);
                        x.vectorToWorldFrame(w[this.indexRightAxis], r);
                        var j = c.raycastResult.hitNormalWorld,
                            v = r.dot(j);
                        j.scale(v, f), r.vsub(f, r), r.normalize(), j.cross(r, u[y]), u[y].normalize(), c.sideImpulse = i(l, c.raycastResult.hitPointWorld, a, c.raycastResult.hitPointWorld, r), c.sideImpulse *= g
                    }
                }
                var A = 1,
                    C = .5;
                this.sliding = !1;
                for (var y = 0; d > y; y++) {
                    var c = n[y],
                        a = c.raycastResult.body,
                        O = 0;
                    if (c.slipInfo = 1, a) {
                        var h = 0,
                            k = c.brake ? c.brake : h;
                        O = o(l, a, c.raycastResult.hitPointWorld, u[y], k), O += c.engineForce * e;
                        var q = k / O;
                        c.slipInfo *= q
                    }
                    if (c.forwardImpulse = 0, c.skidInfo = 1, a) {
                        c.skidInfo = 1;
                        var z = c.suspensionForce * e * c.frictionSlip,
                            B = z,
                            D = z * B;
                        c.forwardImpulse = O;
                        var E = c.forwardImpulse * C,
                            F = c.sideImpulse * A,
                            G = E * E + F * F;
                        if (c.sliding = !1, G > D) {
                            this.sliding = !0, c.sliding = !0;
                            var q = z / Math.sqrt(G);
                            c.skidInfo *= q
                        }
                    }
                }
                if (this.sliding)
                    for (var y = 0; d > y; y++) {
                        var c = n[y];
                        0 !== c.sideImpulse && c.skidInfo < 1 && (c.forwardImpulse *= c.skidInfo, c.sideImpulse *= c.skidInfo)
                    }
                for (var y = 0; d > y; y++) {
                    var c = n[y],
                        H = new t;
                    if (H.copy(c.raycastResult.hitPointWorld), 0 !== c.forwardImpulse) {
                        var I = new t;
                        u[y].scale(c.forwardImpulse, I), l.applyImpulse(I, H)
                    }
                    if (0 !== c.sideImpulse) {
                        var a = c.raycastResult.body,
                            J = new t;
                        J.copy(c.raycastResult.hitPointWorld);
                        var K = new t;
                        p[y].scale(c.sideImpulse, K), l.pointToLocalFrame(H, H), H["xyz" [this.indexUpAxis]] *= c.rollInfluence, l.pointToWorldFrame(H, H), l.applyImpulse(K, H), K.scale(-1, K), a.applyImpulse(K, J)
                    }
                }
            };
            var x = new t,
                j = new t,
                v = new t,
                A = new t,
                C = new t,
                O = new t,
                h = new t,
                k = new t,
                q = new t,
                z = new t
        }, {
            "../collision/Ray": 9,
            "../collision/RaycastResult": 10,
            "../math/Quaternion": 28,
            "../math/Vec3": 30,
            "../objects/WheelInfo": 36,
            "./Body": 31
        }],
        33: [function(e, f) {
            function n(e) {
                if (this.wheelBodies = [], this.coordinateSystem = "undefined" == typeof e.coordinateSystem ? new t(1, 2, 3) : e.coordinateSystem.clone(), this.chassisBody = e.chassisBody, !this.chassisBody) {
                    var f = new i(new t(5, 2, .5));
                    this.chassisBody = new o(1, f)
                }
                this.constraints = [], this.wheelAxes = [], this.wheelForces = []
            }
            var o = e("./Body"),
                d = e("../shapes/Sphere"),
                i = e("../shapes/Box"),
                t = e("../math/Vec3"),
                l = e("../constraints/HingeConstraint");
            f.exports = n, n.prototype.addWheel = function(e) {
                e = e || {};
                var f = e.body;
                f || (f = new o(1, new d(1.2))), this.wheelBodies.push(f), this.wheelForces.push(0);
                var n = (new t, "undefined" != typeof e.position ? e.position.clone() : new t),
                    i = new t;
                this.chassisBody.pointToWorldFrame(n, i), f.position.set(i.x, i.y, i.z);
                var u = "undefined" != typeof e.axis ? e.axis.clone() : new t(0, 1, 0);
                this.wheelAxes.push(u);
                var p = new l(this.chassisBody, f, {
                    pivotA: n,
                    axisA: u,
                    pivotB: t.ZERO,
                    axisB: u,
                    collideConnected: !1
                });
                return this.constraints.push(p), this.wheelBodies.length - 1
            }, n.prototype.setSteeringValue = function(e, f) {
                var n = this.wheelAxes[f],
                    o = Math.cos(e),
                    d = Math.sin(e),
                    i = n.x,
                    t = n.y;
                this.constraints[f].axisA.set(o * i - d * t, d * i + o * t, 0)
            }, n.prototype.setMotorSpeed = function(e, f) {
                var n = this.constraints[f];
                n.enableMotor(), n.motorTargetVelocity = e
            }, n.prototype.disableMotor = function(e) {
                var f = this.constraints[e];
                f.disableMotor()
            };
            var u = new t;
            n.prototype.setWheelForce = function(e, f) {
                this.wheelForces[f] = e
            }, n.prototype.applyWheelForce = function(e, f) {
                var n = this.wheelAxes[f],
                    o = this.wheelBodies[f],
                    d = o.torque;
                n.scale(e, u), o.vectorToWorldFrame(u, u), d.vadd(u, d)
            }, n.prototype.addToWorld = function(e) {
                for (var f = this.constraints, n = this.wheelBodies.concat([this.chassisBody]), o = 0; o < n.length; o++) e.add(n[o]);
                for (var o = 0; o < f.length; o++) e.addConstraint(f[o]);
                e.addEventListener("preStep", this._update.bind(this))
            }, n.prototype._update = function() {
                for (var e = this.wheelForces, f = 0; f < e.length; f++) this.applyWheelForce(e[f], f)
            }, n.prototype.removeFromWorld = function(e) {
                for (var f = this.constraints, n = this.wheelBodies.concat([this.chassisBody]), o = 0; o < n.length; o++) e.remove(n[o]);
                for (var o = 0; o < f.length; o++) e.removeConstraint(f[o])
            };
            var p = new t;
            n.prototype.getWheelSpeed = function(e) {
                var f = this.wheelAxes[e],
                    n = this.wheelBodies[e],
                    o = n.angularVelocity;
                return this.chassisBody.vectorToWorldFrame(f, p), o.dot(p)
            }
        }, {
            "../constraints/HingeConstraint": 15,
            "../math/Vec3": 30,
            "../shapes/Box": 37,
            "../shapes/Sphere": 44,
            "./Body": 31
        }],
        34: [function(e, f) {
            function n() {
                this.particles = [], this.density = 1, this.smoothingRadius = 1, this.speedOfSound = 1, this.viscosity = .01, this.eps = 1e-6, this.pressures = [], this.densities = [], this.neighbors = []
            }
            f.exports = n; {
                var o = (e("../shapes/Shape"), e("../math/Vec3"));
                e("../math/Quaternion"), e("../shapes/Particle"), e("../objects/Body"), e("../material/Material")
            }
            n.prototype.add = function(e) {
                this.particles.push(e), this.neighbors.length < this.particles.length && this.neighbors.push([])
            }, n.prototype.remove = function(e) {
                var f = this.particles.indexOf(e); - 1 !== f && (this.particles.splice(f, 1), this.neighbors.length > this.particles.length && this.neighbors.pop())
            };
            var d = new o;
            n.prototype.getNeighbors = function(e, f) {
                for (var n = this.particles.length, o = e.id, i = this.smoothingRadius * this.smoothingRadius, t = d, l = 0; l !== n; l++) {
                    var u = this.particles[l];
                    u.position.vsub(e.position, t), o !== u.id && t.norm2() < i && f.push(u)
                }
            };
            var i = new o,
                t = new o,
                l = new o,
                u = new o,
                p = new o,
                s = new o;
            n.prototype.update = function() {
                for (var e = this.particles.length, f = i, n = this.speedOfSound, o = this.eps, d = 0; d !== e; d++) {
                    var y = this.particles[d],
                        c = this.neighbors[d];
                    c.length = 0, this.getNeighbors(y, c), c.push(this.particles[d]);
                    for (var a = c.length, r = 0, w = 0; w !== a; w++) {
                        y.position.vsub(c[w].position, f);
                        var b = f.norm(),
                            m = this.w(b);
                        r += c[w].mass * m
                    }
                    this.densities[d] = r, this.pressures[d] = n * n * (this.densities[d] - this.density)
                }
                for (var N = t, g = l, x = u, j = p, v = s, d = 0; d !== e; d++) {
                    var A = this.particles[d];
                    N.set(0, 0, 0), g.set(0, 0, 0);
                    for (var C, O, c = this.neighbors[d], a = c.length, w = 0; w !== a; w++) {
                        var h = c[w];
                        A.position.vsub(h.position, j);
                        var k = j.norm();
                        C = -h.mass * (this.pressures[d] / (this.densities[d] * this.densities[d] + o) + this.pressures[w] / (this.densities[w] * this.densities[w] + o)), this.gradw(j, x), x.mult(C, x), N.vadd(x, N), h.velocity.vsub(A.velocity, v), v.mult(1 / (1e-4 + this.densities[d] * this.densities[w]) * this.viscosity * h.mass, v), O = this.nablaw(k), v.mult(O, v), g.vadd(v, g)
                    }
                    g.mult(A.mass, g), N.mult(A.mass, N), A.force.vadd(g, A.force), A.force.vadd(N, A.force)
                }
            }, n.prototype.w = function(e) {
                var f = this.smoothingRadius;
                return 315 / (64 * Math.PI * Math.pow(f, 9)) * Math.pow(f * f - e * e, 3)
            }, n.prototype.gradw = function(e, f) {
                var n = e.norm(),
                    o = this.smoothingRadius;
                e.mult(945 / (32 * Math.PI * Math.pow(o, 9)) * Math.pow(o * o - n * n, 2), f)
            }, n.prototype.nablaw = function(e) {
                var f = this.smoothingRadius,
                    n = 945 / (32 * Math.PI * Math.pow(f, 9)) * (f * f - e * e) * (7 * e * e - 3 * f * f);
                return n
            }
        }, {
            "../material/Material": 25,
            "../math/Quaternion": 28,
            "../math/Vec3": 30,
            "../objects/Body": 31,
            "../shapes/Particle": 41,
            "../shapes/Shape": 43
        }],
        35: [function(e, f) {
            function n(e, f, n) {
                n = n || {}, this.restLength = "number" == typeof n.restLength ? n.restLength : 1, this.stiffness = n.stiffness || 100, this.damping = n.damping || 1, this.bodyA = e, this.bodyB = f, this.localAnchorA = new o, this.localAnchorB = new o, n.localAnchorA && this.localAnchorA.copy(n.localAnchorA), n.localAnchorB && this.localAnchorB.copy(n.localAnchorB), n.worldAnchorA && this.setWorldAnchorA(n.worldAnchorA), n.worldAnchorB && this.setWorldAnchorB(n.worldAnchorB)
            }
            var o = e("../math/Vec3");
            f.exports = n, n.prototype.setWorldAnchorA = function(e) {
                this.bodyA.pointToLocalFrame(e, this.localAnchorA)
            }, n.prototype.setWorldAnchorB = function(e) {
                this.bodyB.pointToLocalFrame(e, this.localAnchorB)
            }, n.prototype.getWorldAnchorA = function(e) {
                this.bodyA.pointToWorldFrame(this.localAnchorA, e)
            }, n.prototype.getWorldAnchorB = function(e) {
                this.bodyB.pointToWorldFrame(this.localAnchorB, e)
            };
            var d = new o,
                i = new o,
                t = new o,
                l = new o,
                u = new o,
                p = new o,
                s = new o,
                y = new o,
                c = new o,
                a = new o,
                r = new o;
            n.prototype.applyForce = function() {
                var e = this.stiffness,
                    f = this.damping,
                    n = this.restLength,
                    o = this.bodyA,
                    w = this.bodyB,
                    b = d,
                    m = i,
                    N = t,
                    g = l,
                    x = r,
                    j = u,
                    v = p,
                    A = s,
                    C = y,
                    O = c,
                    h = a;
                this.getWorldAnchorA(j), this.getWorldAnchorB(v), j.vsub(o.position, A), v.vsub(w.position, C), v.vsub(j, b);
                var k = b.norm();
                m.copy(b), m.normalize(), w.velocity.vsub(o.velocity, N), w.angularVelocity.cross(C, x), N.vadd(x, N), o.angularVelocity.cross(A, x), N.vsub(x, N), m.mult(-e * (k - n) - f * N.dot(m), g), o.force.vsub(g, o.force), w.force.vadd(g, w.force), A.cross(g, O), C.cross(g, h), o.torque.vsub(O, o.torque), w.torque.vadd(h, w.torque)
            }
        }, {
            "../math/Vec3": 30
        }],
        36: [function(e, f) {
            function n(e) {
                e = t.defaults(e, {
                    chassisConnectionPointLocal: new o,
                    chassisConnectionPointWorld: new o,
                    directionLocal: new o,
                    directionWorld: new o,
                    axleLocal: new o,
                    axleWorld: new o,
                    suspensionRestLength: 1,
                    suspensionMaxLength: 2,
                    radius: 1,
                    suspensionStiffness: 100,
                    dampingCompression: 10,
                    dampingRelaxation: 10,
                    frictionSlip: 1e4,
                    steering: 0,
                    rotation: 0,
                    deltaRotation: 0,
                    rollInfluence: .01,
                    maxSuspensionForce: Number.MAX_VALUE,
                    isFrontWheel: !0,
                    clippedInvContactDotSuspension: 1,
                    suspensionRelativeVelocity: 0,
                    suspensionForce: 0,
                    skidInfo: 0,
                    suspensionLength: 0,
                    maxSuspensionTravel: 1,
                    useCustomSlidingRotationalSpeed: !1,
                    customSlidingRotationalSpeed: -.1
                }), this.maxSuspensionTravel = e.maxSuspensionTravel, this.customSlidingRotationalSpeed = e.customSlidingRotationalSpeed, this.useCustomSlidingRotationalSpeed = e.useCustomSlidingRotationalSpeed, this.sliding = !1, this.chassisConnectionPointLocal = e.chassisConnectionPointLocal.clone(), this.chassisConnectionPointWorld = e.chassisConnectionPointWorld.clone(), this.directionLocal = e.directionLocal.clone(), this.directionWorld = e.directionWorld.clone(), this.axleLocal = e.axleLocal.clone(), this.axleWorld = e.axleWorld.clone(), this.suspensionRestLength = e.suspensionRestLength, this.suspensionMaxLength = e.suspensionMaxLength, this.radius = e.radius, this.suspensionStiffness = e.suspensionStiffness, this.dampingCompression = e.dampingCompression, this.dampingRelaxation = e.dampingRelaxation, this.frictionSlip = e.frictionSlip, this.steering = 0, this.rotation = 0, this.deltaRotation = 0, this.rollInfluence = e.rollInfluence, this.maxSuspensionForce = e.maxSuspensionForce, this.engineForce = 0, this.brake = 0, this.isFrontWheel = e.isFrontWheel, this.clippedInvContactDotSuspension = 1, this.suspensionRelativeVelocity = 0, this.suspensionForce = 0, this.skidInfo = 0, this.suspensionLength = 0, this.sideImpulse = 0, this.forwardImpulse = 0, this.raycastResult = new i, this.worldTransform = new d, this.isInContact = !1
            }
            var o = e("../math/Vec3"),
                d = e("../math/Transform"),
                i = e("../collision/RaycastResult"),
                t = e("../utils/Utils");
            f.exports = n;
            var l = new o,
                u = new o,
                l = new o;
            n.prototype.updateWheel = function(e) {
                var f = this.raycastResult;
                if (this.isInContact) {
                    var n = f.hitNormalWorld.dot(f.directionWorld);
                    f.hitPointWorld.vsub(e.position, u), e.getVelocityAtWorldPoint(u, l);
                    var o = f.hitNormalWorld.dot(l);
                    if (n >= -.1) this.suspensionRelativeVelocity = 0, this.clippedInvContactDotSuspension = 10;
                    else {
                        var d = -1 / n;
                        this.suspensionRelativeVelocity = o * d, this.clippedInvContactDotSuspension = d
                    }
                } else f.suspensionLength = this.suspensionRestLength, this.suspensionRelativeVelocity = 0, f.directionWorld.scale(-1, f.hitNormalWorld), this.clippedInvContactDotSuspension = 1
            }
        }, {
            "../collision/RaycastResult": 10,
            "../math/Transform": 29,
            "../math/Vec3": 30,
            "../utils/Utils": 53
        }],
        37: [function(e, f) {
            function n(e) {
                o.call(this), this.type = o.types.BOX, this.halfExtents = e, this.convexPolyhedronRepresentation = null, this.updateConvexPolyhedronRepresentation(), this.updateBoundingSphereRadius()
            }
            f.exports = n;
            var o = e("./Shape"),
                d = e("../math/Vec3"),
                i = e("./ConvexPolyhedron");
            n.prototype = new o, n.prototype.constructor = n, n.prototype.updateConvexPolyhedronRepresentation = function() {
                var e = this.halfExtents.x,
                    f = this.halfExtents.y,
                    n = this.halfExtents.z,
                    o = d,
                    t = [new o(-e, -f, -n), new o(e, -f, -n), new o(e, f, -n), new o(-e, f, -n), new o(-e, -f, n), new o(e, -f, n), new o(e, f, n), new o(-e, f, n)],
                    l = [
                        [3, 2, 1, 0],
                        [4, 5, 6, 7],
                        [5, 4, 0, 1],
                        [2, 3, 7, 6],
                        [0, 4, 7, 3],
                        [1, 2, 6, 5]
                    ],
                    u = ([new o(0, 0, 1), new o(0, 1, 0), new o(1, 0, 0)], new i(t, l));
                this.convexPolyhedronRepresentation = u, u.material = this.material
            }, n.prototype.calculateLocalInertia = function(e, f) {
                return f = f || new d, n.calculateInertia(this.halfExtents, e, f), f
            }, n.calculateInertia = function(e, f, n) {
                var o = e;
                n.x = 1 / 12 * f * (2 * o.y * 2 * o.y + 2 * o.z * 2 * o.z), n.y = 1 / 12 * f * (2 * o.x * 2 * o.x + 2 * o.z * 2 * o.z), n.z = 1 / 12 * f * (2 * o.y * 2 * o.y + 2 * o.x * 2 * o.x)
            }, n.prototype.getSideNormals = function(e, f) {
                var n = e,
                    o = this.halfExtents;
                if (n[0].set(o.x, 0, 0), n[1].set(0, o.y, 0), n[2].set(0, 0, o.z), n[3].set(-o.x, 0, 0), n[4].set(0, -o.y, 0), n[5].set(0, 0, -o.z), void 0 !== f)
                    for (var d = 0; d !== n.length; d++) f.vmult(n[d], n[d]);
                return n
            }, n.prototype.volume = function() {
                return 8 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z
            }, n.prototype.updateBoundingSphereRadius = function() {
                this.boundingSphereRadius = this.halfExtents.norm()
            }; {
                var t = new d;
                new d
            }
            n.prototype.forEachWorldCorner = function(e, f, n) {
                for (var o = this.halfExtents, d = [
                        [o.x, o.y, o.z],
                        [-o.x, o.y, o.z],
                        [-o.x, -o.y, o.z],
                        [-o.x, -o.y, -o.z],
                        [o.x, -o.y, -o.z],
                        [o.x, o.y, -o.z],
                        [-o.x, o.y, -o.z],
                        [o.x, -o.y, o.z]
                    ], i = 0; i < d.length; i++) t.set(d[i][0], d[i][1], d[i][2]), f.vmult(t, t), e.vadd(t, t), n(t.x, t.y, t.z)
            };
            var l = [new d, new d, new d, new d, new d, new d, new d, new d];
            n.prototype.calculateWorldAABB = function(e, f, n, o) {
                var d = this.halfExtents;
                l[0].set(d.x, d.y, d.z), l[1].set(-d.x, d.y, d.z), l[2].set(-d.x, -d.y, d.z), l[3].set(-d.x, -d.y, -d.z), l[4].set(d.x, -d.y, -d.z), l[5].set(d.x, d.y, -d.z), l[6].set(-d.x, d.y, -d.z), l[7].set(d.x, -d.y, d.z);
                var i = l[0];
                f.vmult(i, i), e.vadd(i, i), o.copy(i), n.copy(i);
                for (var t = 1; 8 > t; t++) {
                    var i = l[t];
                    f.vmult(i, i), e.vadd(i, i);
                    var u = i.x,
                        p = i.y,
                        s = i.z;
                    u > o.x && (o.x = u), p > o.y && (o.y = p), s > o.z && (o.z = s), u < n.x && (n.x = u), p < n.y && (n.y = p), s < n.z && (n.z = s)
                }
            }
        }, {
            "../math/Vec3": 30,
            "./ConvexPolyhedron": 38,
            "./Shape": 43
        }],
        38: [function(e, f) {
            function n(e, f, n) {
                o.call(this), this.type = o.types.CONVEXPOLYHEDRON, this.vertices = e || [], this.worldVertices = [], this.worldVerticesNeedsUpdate = !0, this.faces = f || [], this.faceNormals = [], this.computeNormals(), this.worldFaceNormalsNeedsUpdate = !0, this.worldFaceNormals = [], this.uniqueEdges = [], this.uniqueAxes = n ? n.slice() : null, this.computeEdges(), this.updateBoundingSphereRadius()
            }
            f.exports = n;
            var o = e("./Shape"),
                d = e("../math/Vec3"),
                i = (e("../math/Quaternion"), e("../math/Transform"));
            n.prototype = new o, n.prototype.constructor = n;
            var t = new d;
            n.prototype.computeEdges = function() {
                var e = this.faces,
                    f = this.vertices,
                    n = (f.length, this.uniqueEdges);
                n.length = 0;
                for (var o = t, d = 0; d !== e.length; d++)
                    for (var i = e[d], l = i.length, u = 0; u !== l; u++) {
                        var p = (u + 1) % l;
                        f[i[u]].vsub(f[i[p]], o), o.normalize();
                        for (var s = !1, y = 0; y !== n.length; y++)
                            if (n[y].almostEquals(o) || n[y].almostEquals(o)) {
                                s = !0;
                                break
                            }
                        s || n.push(o.clone())
                    }
            }, n.prototype.computeNormals = function() {
                this.faceNormals.length = this.faces.length;
                for (var e = 0; e < this.faces.length; e++) {
                    for (var f = 0; f < this.faces[e].length; f++)
                        if (!this.vertices[this.faces[e][f]]) throw new Error("Vertex " + this.faces[e][f] + " not found!");
                    var n = this.faceNormals[e] || new d;
                    this.getFaceNormal(e, n), n.negate(n), this.faceNormals[e] = n;
                    var o = this.vertices[this.faces[e][0]];
                    if (n.dot(o) < 0) {
                        console.error(".faceNormals[" + e + "] = Vec3(" + n.toString() + ") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.");
                        for (var f = 0; f < this.faces[e].length; f++) console.warn(".vertices[" + this.faces[e][f] + "] = Vec3(" + this.vertices[this.faces[e][f]].toString() + ")")
                    }
                }
            };
            var l = new d,
                u = new d;
            n.computeNormal = function(e, f, n, o) {
                f.vsub(e, u), n.vsub(f, l), l.cross(u, o), o.isZero() || o.normalize()
            }, n.prototype.getFaceNormal = function(e, f) {
                var o = this.faces[e],
                    d = this.vertices[o[0]],
                    i = this.vertices[o[1]],
                    t = this.vertices[o[2]];
                return n.computeNormal(d, i, t, f)
            };
            var p = new d;
            n.prototype.clipAgainstHull = function(e, f, n, o, i, t, l, u, s) {
                for (var y = p, c = -1, a = -Number.MAX_VALUE, r = 0; r < n.faces.length; r++) {
                    y.copy(n.faceNormals[r]), i.vmult(y, y);
                    var w = y.dot(t);
                    w > a && (a = w, c = r)
                }
                for (var b = [], m = n.faces[c], N = m.length, g = 0; N > g; g++) {
                    var x = n.vertices[m[g]],
                        j = new d;
                    j.copy(x), i.vmult(j, j), o.vadd(j, j), b.push(j)
                }
                c >= 0 && this.clipFaceAgainstHull(t, e, f, b, l, u, s)
            };
            var s = new d,
                y = new d,
                c = new d,
                a = new d,
                r = new d,
                w = new d;
            n.prototype.findSeparatingAxis = function(e, f, n, o, d, i, t, l) {
                var u = s,
                    p = y,
                    b = c,
                    m = a,
                    N = r,
                    g = w,
                    x = Number.MAX_VALUE,
                    j = this,
                    v = 0;
                if (j.uniqueAxes)
                    for (var A = 0; A !== j.uniqueAxes.length; A++) {
                        n.vmult(j.uniqueAxes[A], u);
                        var C = j.testSepAxis(u, e, f, n, o, d);
                        if (C === !1) return !1;
                        x > C && (x = C, i.copy(u))
                    } else
                        for (var O = t ? t.length : j.faces.length, A = 0; O > A; A++) {
                            var h = t ? t[A] : A;
                            u.copy(j.faceNormals[h]), n.vmult(u, u);
                            var C = j.testSepAxis(u, e, f, n, o, d);
                            if (C === !1) return !1;
                            x > C && (x = C, i.copy(u))
                        }
                if (e.uniqueAxes)
                    for (var A = 0; A !== e.uniqueAxes.length; A++) {
                        d.vmult(e.uniqueAxes[A], p), v++;
                        var C = j.testSepAxis(p, e, f, n, o, d);
                        if (C === !1) return !1;
                        x > C && (x = C, i.copy(p))
                    } else
                        for (var k = l ? l.length : e.faces.length, A = 0; k > A; A++) {
                            var h = l ? l[A] : A;
                            p.copy(e.faceNormals[h]), d.vmult(p, p), v++;
                            var C = j.testSepAxis(p, e, f, n, o, d);
                            if (C === !1) return !1;
                            x > C && (x = C, i.copy(p))
                        }
                for (var q = 0; q !== j.uniqueEdges.length; q++) {
                    n.vmult(j.uniqueEdges[q], m);
                    for (var z = 0; z !== e.uniqueEdges.length; z++)
                        if (d.vmult(e.uniqueEdges[z], N), m.cross(N, g), !g.almostZero()) {
                            g.normalize();
                            var B = j.testSepAxis(g, e, f, n, o, d);
                            if (B === !1) return !1;
                            x > B && (x = B, i.copy(g))
                        }
                }
                return o.vsub(f, b), b.dot(i) > 0 && i.negate(i), !0
            };
            var b = [],
                m = [];
            n.prototype.testSepAxis = function(e, f, o, d, i, t) {
                var l = this;
                n.project(l, e, o, d, b), n.project(f, e, i, t, m);
                var u = b[0],
                    p = b[1],
                    s = m[0],
                    y = m[1];
                if (y > u || p > s) return !1;
                var c = u - y,
                    a = s - p,
                    r = a > c ? c : a;
                return r
            };
            var N = new d,
                g = new d;
            n.prototype.calculateLocalInertia = function(e, f) {
                this.computeLocalAABB(N, g);
                var n = g.x - N.x,
                    o = g.y - N.y,
                    d = g.z - N.z;
                f.x = 1 / 12 * e * (2 * o * 2 * o + 2 * d * 2 * d), f.y = 1 / 12 * e * (2 * n * 2 * n + 2 * d * 2 * d), f.z = 1 / 12 * e * (2 * o * 2 * o + 2 * n * 2 * n)
            }, n.prototype.getPlaneConstantOfFace = function(e) {
                var f = this.faces[e],
                    n = this.faceNormals[e],
                    o = this.vertices[f[0]],
                    d = -n.dot(o);
                return d
            };
            var x = new d,
                j = new d,
                v = new d,
                A = new d,
                C = new d,
                O = new d,
                h = new d,
                k = new d;
            n.prototype.clipFaceAgainstHull = function(e, f, n, o, d, i, t) {
                for (var l = x, u = j, p = v, s = A, y = C, c = O, a = h, r = k, w = this, b = [], m = o, N = b, g = -1, q = Number.MAX_VALUE, z = 0; z < w.faces.length; z++) {
                    l.copy(w.faceNormals[z]), n.vmult(l, l);
                    var B = l.dot(e);
                    q > B && (q = B, g = z)
                }
                if (!(0 > g)) {
                    var D = w.faces[g];
                    D.connectedFaces = [];
                    for (var E = 0; E < w.faces.length; E++)
                        for (var F = 0; F < w.faces[E].length; F++) - 1 !== D.indexOf(w.faces[E][F]) && E !== g && -1 === D.connectedFaces.indexOf(E) && D.connectedFaces.push(E);
                    for (var G = (m.length, D.length), H = 0; G > H; H++) {
                        var I = w.vertices[D[H]],
                            J = w.vertices[D[(H + 1) % G]];
                        I.vsub(J, u), p.copy(u), n.vmult(p, p), f.vadd(p, p), s.copy(this.faceNormals[g]), n.vmult(s, s), f.vadd(s, s), p.cross(s, y), y.negate(y), c.copy(I), n.vmult(c, c), f.vadd(c, c);
                        var K, L = (-c.dot(y), D.connectedFaces[H]);
                        a.copy(this.faceNormals[L]);
                        var M = this.getPlaneConstantOfFace(L);
                        r.copy(a), n.vmult(r, r);
                        var K = M - r.dot(f);
                        for (this.clipFaceAgainstPlane(m, N, r, K); m.length;) m.shift();
                        for (; N.length;) m.push(N.shift())
                    }
                    a.copy(this.faceNormals[g]);
                    var M = this.getPlaneConstantOfFace(g);
                    r.copy(a), n.vmult(r, r);
                    for (var K = M - r.dot(f), E = 0; E < m.length; E++) {
                        var P = r.dot(m[E]) + K;
                        if (d >= P && (console.log("clamped: depth=" + P + " to minDist=" + (d + "")), P = d), i >= P) {
                            var Q = m[E];
                            if (0 >= P) {
                                var R = {
                                    point: Q,
                                    normal: r,
                                    depth: P
                                };
                                t.push(R)
                            }
                        }
                    }
                }
            }, n.prototype.clipFaceAgainstPlane = function(e, f, n, o) {
                var i, t, l = e.length;
                if (2 > l) return f;
                var u = e[e.length - 1],
                    p = e[0];
                i = n.dot(u) + o;
                for (var s = 0; l > s; s++) {
                    if (p = e[s], t = n.dot(p) + o, 0 > i)
                        if (0 > t) {
                            var y = new d;
                            y.copy(p), f.push(y)
                        } else {
                            var y = new d;
                            u.lerp(p, i / (i - t), y), f.push(y)
                        }
                    else if (0 > t) {
                        var y = new d;
                        u.lerp(p, i / (i - t), y), f.push(y), f.push(p)
                    }
                    u = p, i = t
                }
                return f
            }, n.prototype.computeWorldVertices = function(e, f) {
                for (var n = this.vertices.length; this.worldVertices.length < n;) this.worldVertices.push(new d);
                for (var o = this.vertices, i = this.worldVertices, t = 0; t !== n; t++) f.vmult(o[t], i[t]), e.vadd(i[t], i[t]);
                this.worldVerticesNeedsUpdate = !1
            };
            new d;
            n.prototype.computeLocalAABB = function(e, f) {
                var n = this.vertices.length,
                    o = this.vertices;
                e.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE), f.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);
                for (var d = 0; n > d; d++) {
                    var i = o[d];
                    i.x < e.x ? e.x = i.x : i.x > f.x && (f.x = i.x), i.y < e.y ? e.y = i.y : i.y > f.y && (f.y = i.y), i.z < e.z ? e.z = i.z : i.z > f.z && (f.z = i.z)
                }
            }, n.prototype.computeWorldFaceNormals = function(e) {
                for (var f = this.faceNormals.length; this.worldFaceNormals.length < f;) this.worldFaceNormals.push(new d);
                for (var n = this.faceNormals, o = this.worldFaceNormals, i = 0; i !== f; i++) e.vmult(n[i], o[i]);
                this.worldFaceNormalsNeedsUpdate = !1
            }, n.prototype.updateBoundingSphereRadius = function() {
                for (var e = 0, f = this.vertices, n = 0, o = f.length; n !== o; n++) {
                    var d = f[n].norm2();
                    d > e && (e = d)
                }
                this.boundingSphereRadius = Math.sqrt(e)
            };
            var q = new d;
            n.prototype.calculateWorldAABB = function(e, f, n, o) {
                for (var d, i, t, l, u, p, s = this.vertices.length, y = this.vertices, c = 0; s > c; c++) {
                    q.copy(y[c]), f.vmult(q, q), e.vadd(q, q);
                    var a = q;
                    a.x < d || void 0 === d ? d = a.x : (a.x > l || void 0 === l) && (l = a.x), a.y < i || void 0 === i ? i = a.y : (a.y > u || void 0 === u) && (u = a.y), a.z < t || void 0 === t ? t = a.z : (a.z > p || void 0 === p) && (p = a.z)
                }
                n.set(d, i, t), o.set(l, u, p)
            }, n.prototype.volume = function() {
                return 4 * Math.PI * this.boundingSphereRadius / 3
            }, n.prototype.getAveragePointLocal = function(e) {
                e = e || new d;
                for (var f = this.vertices.length, n = this.vertices, o = 0; f > o; o++) e.vadd(n[o], e);
                return e.mult(1 / f, e), e
            }, n.prototype.transformAllPoints = function(e, f) {
                var n = this.vertices.length,
                    o = this.vertices;
                if (f) {
                    for (var d = 0; n > d; d++) {
                        var i = o[d];
                        f.vmult(i, i)
                    }
                    for (var d = 0; d < this.faceNormals.length; d++) {
                        var i = this.faceNormals[d];
                        f.vmult(i, i)
                    }
                }
                if (e)
                    for (var d = 0; n > d; d++) {
                        var i = o[d];
                        i.vadd(e, i)
                    }
            };
            var z = new d,
                B = new d,
                D = new d;
            n.prototype.pointIsInside = function(e) {
                var f = this.vertices.length,
                    n = this.vertices,
                    o = this.faces,
                    d = this.faceNormals,
                    i = null,
                    t = this.faces.length,
                    l = z;
                this.getAveragePointLocal(l);
                for (var u = 0; t > u; u++) {
                    var f = (this.faces[u].length, d[u]),
                        p = n[o[u][0]],
                        s = B;
                    e.vsub(p, s);
                    var y = f.dot(s),
                        c = D;
                    l.vsub(p, c);
                    var a = f.dot(c);
                    if (0 > y && a > 0 || y > 0 && 0 > a) return !1
                }
                return i ? 1 : -1
            };
            var E = (new d, new d),
                F = new d;
            n.project = function(e, f, n, o, d) {
                var t = e.vertices.length,
                    l = E,
                    u = 0,
                    p = 0,
                    s = F,
                    y = e.vertices;
                s.setZero(), i.vectorToLocalFrame(n, o, f, l), i.pointToLocalFrame(n, o, s, s);
                var c = s.dot(l);
                p = u = y[0].dot(l);
                for (var a = 1; t > a; a++) {
                    var r = y[a].dot(l);
                    r > u && (u = r), p > r && (p = r)
                }
                if (p -= c, u -= c, p > u) {
                    var w = p;
                    p = u, u = w
                }
                d[0] = u, d[1] = p
            }
        }, {
            "../math/Quaternion": 28,
            "../math/Transform": 29,
            "../math/Vec3": 30,
            "./Shape": 43
        }],
        39: [function(e, f) {
            function n(e, f, n, t) {
                var l = t,
                    u = [],
                    p = [],
                    s = [],
                    y = [],
                    c = [],
                    a = Math.cos,
                    r = Math.sin;
                u.push(new d(f * a(0), f * r(0), .5 * -n)), y.push(0), u.push(new d(e * a(0), e * r(0), .5 * n)), c.push(1);
                for (var w = 0; l > w; w++) {
                    var b = 2 * Math.PI / l * (w + 1),
                        m = 2 * Math.PI / l * (w + .5);
                    l - 1 > w ? (u.push(new d(f * a(b), f * r(b), .5 * -n)), y.push(2 * w + 2), u.push(new d(e * a(b), e * r(b), .5 * n)), c.push(2 * w + 3), s.push([2 * w + 2, 2 * w + 3, 2 * w + 1, 2 * w])) : s.push([0, 1, 2 * w + 1, 2 * w]), (l % 2 === 1 || l / 2 > w) && p.push(new d(a(m), r(m), 0))
                }
                s.push(c), p.push(new d(0, 0, 1));
                for (var N = [], w = 0; w < y.length; w++) N.push(y[y.length - w - 1]);
                s.push(N), this.type = o.types.CONVEXPOLYHEDRON, i.call(this, u, s, p)
            }
            f.exports = n;
            var o = e("./Shape"),
                d = e("../math/Vec3"),
                i = (e("../math/Quaternion"), e("./ConvexPolyhedron"));
            n.prototype = new i
        }, {
            "../math/Quaternion": 28,
            "../math/Vec3": 30,
            "./ConvexPolyhedron": 38,
            "./Shape": 43
        }],
        40: [function(e, f) {
            function n(e, f) {
                f = t.defaults(f, {
                    maxValue: null,
                    minValue: null,
                    elementSize: 1
                }), this.data = e, this.maxValue = f.maxValue, this.minValue = f.minValue, this.elementSize = f.elementSize, null === f.minValue && this.updateMinValue(), null === f.maxValue && this.updateMaxValue(), this.cacheEnabled = !0, o.call(this), this.pillarConvex = new d, this.pillarOffset = new i, this.type = o.types.HEIGHTFIELD, this.updateBoundingSphereRadius(), this._cachedPillars = {}
            }
            var o = e("./Shape"),
                d = e("./ConvexPolyhedron"),
                i = e("../math/Vec3"),
                t = e("../utils/Utils");
            f.exports = n, n.prototype = new o, n.prototype.update = function() {
                this._cachedPillars = {}
            }, n.prototype.updateMinValue = function() {
                for (var e = this.data, f = e[0][0], n = 0; n !== e.length; n++)
                    for (var o = 0; o !== e[n].length; o++) {
                        var d = e[n][o];
                        f > d && (f = d)
                    }
                this.minValue = f
            }, n.prototype.updateMaxValue = function() {
                for (var e = this.data, f = e[0][0], n = 0; n !== e.length; n++)
                    for (var o = 0; o !== e[n].length; o++) {
                        var d = e[n][o];
                        d > f && (f = d)
                    }
                this.maxValue = f
            }, n.prototype.setHeightValueAtIndex = function(e, f, n) {
                var o = this.data;
                o[e][f] = n, this.clearCachedConvexTrianglePillar(e, f, !1), e > 0 && (this.clearCachedConvexTrianglePillar(e - 1, f, !0), this.clearCachedConvexTrianglePillar(e - 1, f, !1)), f > 0 && (this.clearCachedConvexTrianglePillar(e, f - 1, !0), this.clearCachedConvexTrianglePillar(e, f - 1, !1)), f > 0 && e > 0 && this.clearCachedConvexTrianglePillar(e - 1, f - 1, !0)
            }, n.prototype.getRectMinMax = function(e, f, n, o, d) {
                d = d || [];
                for (var i = this.data, t = this.minValue, l = e; n >= l; l++)
                    for (var u = f; o >= u; u++) {
                        var p = i[l][u];
                        p > t && (t = p)
                    }
                d[0] = this.minValue, d[1] = t
            }, n.prototype.getIndexOfPosition = function(e, f, n, o) {
                var d = this.elementSize,
                    i = this.data,
                    t = Math.floor(e / d),
                    l = Math.floor(f / d);
                return n[0] = t, n[1] = l, o && (0 > t && (t = 0), 0 > l && (l = 0), t >= i.length - 1 && (t = i.length - 1), l >= i[0].length - 1 && (l = i[0].length - 1)), 0 > t || 0 > l || t >= i.length - 1 || l >= i[0].length - 1 ? !1 : !0
            }, n.prototype.getHeightAt = function(e, f, n) {
                var o = [];
                this.getIndexOfPosition(e, f, o, n);
                var d = [];
                return this.getRectMinMax(o[0], o[1] + 1, o[0], o[1] + 1, d), (d[0] + d[1]) / 2
            }, n.prototype.getCacheConvexTrianglePillarKey = function(e, f, n) {
                return e + "_" + f + "_" + (n ? 1 : 0)
            }, n.prototype.getCachedConvexTrianglePillar = function(e, f, n) {
                return this._cachedPillars[this.getCacheConvexTrianglePillarKey(e, f, n)]
            }, n.prototype.setCachedConvexTrianglePillar = function(e, f, n, o, d) {
                this._cachedPillars[this.getCacheConvexTrianglePillarKey(e, f, n)] = {
                    convex: o,
                    offset: d
                }
            }, n.prototype.clearCachedConvexTrianglePillar = function(e, f, n) {
                delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(e, f, n)]
            }, n.prototype.getConvexTrianglePillar = function(e, f, n) {
                var o = this.pillarConvex,
                    t = this.pillarOffset;
                if (this.cacheEnabled) {
                    var l = this.getCachedConvexTrianglePillar(e, f, n);
                    if (l) return this.pillarConvex = l.convex, void(this.pillarOffset = l.offset);
                    o = new d, t = new i, this.pillarConvex = o, this.pillarOffset = t
                }
                var l = this.data,
                    u = this.elementSize,
                    p = o.faces;
                o.vertices.length = 6;
                for (var s = 0; 6 > s; s++) o.vertices[s] || (o.vertices[s] = new i);
                p.length = 5;
                for (var s = 0; 5 > s; s++) p[s] || (p[s] = []);
                var y = o.vertices,
                    c = (Math.min(l[e][f], l[e + 1][f], l[e][f + 1], l[e + 1][f + 1]) - this.minValue) / 2 + this.minValue;
                n ? (t.set((e + .75) * u, (f + .75) * u, c), y[0].set(.25 * u, .25 * u, l[e + 1][f + 1] - c), y[1].set(-.75 * u, .25 * u, l[e][f + 1] - c), y[2].set(.25 * u, -.75 * u, l[e + 1][f] - c), y[3].set(.25 * u, .25 * u, -c - 1), y[4].set(-.75 * u, .25 * u, -c - 1), y[5].set(.25 * u, -.75 * u, -c - 1), p[0][0] = 0, p[0][1] = 1, p[0][2] = 2, p[1][0] = 5, p[1][1] = 4, p[1][2] = 3, p[2][0] = 2, p[2][1] = 5, p[2][2] = 3, p[2][3] = 0, p[3][0] = 3, p[3][1] = 4, p[3][2] = 1, p[3][3] = 0, p[4][0] = 1, p[4][1] = 4, p[4][2] = 5, p[4][3] = 2) : (t.set((e + .25) * u, (f + .25) * u, c), y[0].set(-.25 * u, -.25 * u, l[e][f] - c), y[1].set(.75 * u, -.25 * u, l[e + 1][f] - c), y[2].set(-.25 * u, .75 * u, l[e][f + 1] - c), y[3].set(-.25 * u, -.25 * u, -c - 1), y[4].set(.75 * u, -.25 * u, -c - 1), y[5].set(-.25 * u, .75 * u, -c - 1), p[0][0] = 0, p[0][1] = 1, p[0][2] = 2, p[1][0] = 5, p[1][1] = 4, p[1][2] = 3, p[2][0] = 0, p[2][1] = 2, p[2][2] = 5, p[2][3] = 3, p[3][0] = 1, p[3][1] = 0, p[3][2] = 3, p[3][3] = 4, p[4][0] = 4, p[4][1] = 5, p[4][2] = 2, p[4][3] = 1), o.computeNormals(), o.computeEdges(), o.updateBoundingSphereRadius(), this.setCachedConvexTrianglePillar(e, f, n, o, t)
            }, n.prototype.calculateLocalInertia = function(e, f) {
                return f = f || new i, f.set(0, 0, 0), f
            }, n.prototype.volume = function() {
                return Number.MAX_VALUE
            }, n.prototype.calculateWorldAABB = function(e, f, n, o) {
                n.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE), o.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE)
            }, n.prototype.updateBoundingSphereRadius = function() {
                var e = this.data,
                    f = this.elementSize;
                this.boundingSphereRadius = new i(e.length * f, e[0].length * f, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).norm()
            }
        }, {
            "../math/Vec3": 30,
            "../utils/Utils": 53,
            "./ConvexPolyhedron": 38,
            "./Shape": 43
        }],
        41: [function(e, f) {
            function n() {
                o.call(this), this.type = o.types.PARTICLE
            }
            f.exports = n;
            var o = e("./Shape"),
                d = e("../math/Vec3");
            n.prototype = new o, n.prototype.constructor = n, n.prototype.calculateLocalInertia = function(e, f) {
                return f = f || new d, f.set(0, 0, 0), f
            }, n.prototype.volume = function() {
                return 0
            }, n.prototype.updateBoundingSphereRadius = function() {
                this.boundingSphereRadius = 0
            }, n.prototype.calculateWorldAABB = function(e, f, n, o) {
                n.copy(e), o.copy(e)
            }
        }, {
            "../math/Vec3": 30,
            "./Shape": 43
        }],
        42: [function(e, f) {
            function n() {
                o.call(this), this.type = o.types.PLANE, this.worldNormal = new d, this.worldNormalNeedsUpdate = !0, this.boundingSphereRadius = Number.MAX_VALUE
            }
            f.exports = n;
            var o = e("./Shape"),
                d = e("../math/Vec3");
            n.prototype = new o, n.prototype.constructor = n, n.prototype.computeWorldNormal = function(e) {
                var f = this.worldNormal;
                f.set(0, 0, 1), e.vmult(f, f), this.worldNormalNeedsUpdate = !1
            }, n.prototype.calculateLocalInertia = function(e, f) {
                return f = f || new d
            }, n.prototype.volume = function() {
                return Number.MAX_VALUE
            };
            var i = new d;
            n.prototype.calculateWorldAABB = function(e, f, n, o) {
                i.set(0, 0, 1), f.vmult(i, i);
                var d = Number.MAX_VALUE;
                n.set(-d, -d, -d), o.set(d, d, d), 1 === i.x && (o.x = e.x), 1 === i.y && (o.y = e.y), 1 === i.z && (o.z = e.z), -1 === i.x && (n.x = e.x), -1 === i.y && (n.y = e.y), -1 === i.z && (n.z = e.z)
            }, n.prototype.updateBoundingSphereRadius = function() {
                this.boundingSphereRadius = Number.MAX_VALUE
            }
        }, {
            "../math/Vec3": 30,
            "./Shape": 43
        }],
        43: [function(e, f) {
            function n() {
                this.id = n.idCounter++, this.type = 0, this.boundingSphereRadius = 0, this.collisionResponse = !0, this.material = null
            }
            f.exports = n; {
                var n = e("./Shape");
                e("../math/Vec3"), e("../math/Quaternion"), e("../material/Material")
            }
            n.prototype.constructor = n, n.prototype.updateBoundingSphereRadius = function() {
                throw "computeBoundingSphereRadius() not implemented for shape type " + this.type
            }, n.prototype.volume = function() {
                throw "volume() not implemented for shape type " + this.type
            }, n.prototype.calculateLocalInertia = function() {
                throw "calculateLocalInertia() not implemented for shape type " + this.type
            }, n.idCounter = 0, n.types = {
                SPHERE: 1,
                PLANE: 2,
                BOX: 4,
                COMPOUND: 8,
                CONVEXPOLYHEDRON: 16,
                HEIGHTFIELD: 32,
                PARTICLE: 64,
                CYLINDER: 128,
                TRIMESH: 256
            }
        }, {
            "../material/Material": 25,
            "../math/Quaternion": 28,
            "../math/Vec3": 30,
            "./Shape": 43
        }],
        44: [function(e, f) {
            function n(e) {
                if (o.call(this), this.radius = void 0 !== e ? Number(e) : 1, this.type = o.types.SPHERE, this.radius < 0) throw new Error("The sphere radius cannot be negative.");
                this.updateBoundingSphereRadius()
            }
            f.exports = n;
            var o = e("./Shape"),
                d = e("../math/Vec3");
            n.prototype = new o, n.prototype.constructor = n, n.prototype.calculateLocalInertia = function(e, f) {
                f = f || new d;
                var n = 2 * e * this.radius * this.radius / 5;
                return f.x = n, f.y = n, f.z = n, f
            }, n.prototype.volume = function() {
                return 4 * Math.PI * this.radius / 3
            }, n.prototype.updateBoundingSphereRadius = function() {
                this.boundingSphereRadius = this.radius
            }, n.prototype.calculateWorldAABB = function(e, f, n, o) {
                for (var d = this.radius, i = ["x", "y", "z"], t = 0; t < i.length; t++) {
                    var l = i[t];
                    n[l] = e[l] - d, o[l] = e[l] + d
                }
            }
        }, {
            "../math/Vec3": 30,
            "./Shape": 43
        }],
        45: [function(e, f) {
            function n(e, f) {
                o.call(this), this.type = o.types.TRIMESH, this.vertices = new Float32Array(e), this.indices = new Int16Array(f), this.normals = new Float32Array(f.length), this.aabb = new t, this.edges = null, this.scale = new d(1, 1, 1), this.tree = new l, this.updateEdges(), this.updateNormals(), this.updateAABB(), this.updateBoundingSphereRadius(), this.updateTree()
            }
            f.exports = n;
            var o = e("./Shape"),
                d = e("../math/Vec3"),
                i = (e("../math/Quaternion"), e("../math/Transform")),
                t = e("../collision/AABB"),
                l = e("../utils/Octree");
            n.prototype = new o, n.prototype.constructor = n;
            var u = new d;
            n.prototype.updateTree = function() {
                var e = this.tree;
                e.reset(), e.aabb.copy(this.aabb);
                var f = this.scale;
                e.aabb.lowerBound.x *= 1 / f.x, e.aabb.lowerBound.y *= 1 / f.y, e.aabb.lowerBound.z *= 1 / f.z, e.aabb.upperBound.x *= 1 / f.x, e.aabb.upperBound.y *= 1 / f.y, e.aabb.upperBound.z *= 1 / f.z;
                for (var n = new t, o = new d, i = new d, l = new d, u = [o, i, l], p = 0; p < this.indices.length / 3; p++) {
                    var s = 3 * p;
                    this._getUnscaledVertex(this.indices[s], o), this._getUnscaledVertex(this.indices[s + 1], i), this._getUnscaledVertex(this.indices[s + 2], l), n.setFromPoints(u), e.insert(n, p)
                }
                e.removeEmptyNodes()
            };
            var p = new t;
            n.prototype.getTrianglesInAABB = function(e, f) {
                p.copy(e);
                var n = this.scale,
                    o = n.x,
                    d = n.y,
                    i = n.z,
                    t = p.lowerBound,
                    l = p.upperBound;
                return t.x /= o, t.y /= d, t.z /= i, l.x /= o, l.y /= d, l.z /= i, this.tree.aabbQuery(p, f)
            }, n.prototype.setScale = function(e) {
                var f = this.scale.x === this.scale.y === this.scale.z,
                    n = e.x === e.y === e.z;
                f && n || this.updateNormals(), this.scale.copy(e), this.updateAABB(), this.updateBoundingSphereRadius()
            }, n.prototype.updateNormals = function() {
                for (var e = u, f = this.normals, o = 0; o < this.indices.length / 3; o++) {
                    var d = 3 * o,
                        i = this.indices[d],
                        t = this.indices[d + 1],
                        l = this.indices[d + 2];
                    this.getVertex(i, r), this.getVertex(t, w), this.getVertex(l, b), n.computeNormal(w, r, b, e), f[d] = e.x, f[d + 1] = e.y, f[d + 2] = e.z
                }
            }, n.prototype.updateEdges = function() {
                for (var e = {}, f = function() {
                        var f = i > d ? d + "_" + i : i + "_" + d;
                        e[f] = !0
                    }, n = 0; n < this.indices.length / 3; n++) {
                    var o = 3 * n,
                        d = this.indices[o],
                        i = this.indices[o + 1],
                        t = this.indices[o + 2];
                    f(d, i), f(i, t), f(t, d)
                }
                var l = Object.keys(e);
                this.edges = new Int16Array(2 * l.length);
                for (var n = 0; n < l.length; n++) {
                    var u = l[n].split("_");
                    this.edges[2 * n] = parseInt(u[0], 10), this.edges[2 * n + 1] = parseInt(u[1], 10)
                }
            }, n.prototype.getEdgeVertex = function(e, f, n) {
                var o = this.edges[2 * e + (f ? 1 : 0)];
                this.getVertex(o, n)
            };
            var s = new d,
                y = new d;
            n.prototype.getEdgeVector = function(e, f) {
                var n = s,
                    o = y;
                this.getEdgeVertex(e, 0, n), this.getEdgeVertex(e, 1, o), o.vsub(n, f)
            };
            var c = new d,
                a = new d;
            n.computeNormal = function(e, f, n, o) {
                f.vsub(e, a), n.vsub(f, c), c.cross(a, o), o.isZero() || o.normalize()
            };
            var r = new d,
                w = new d,
                b = new d;
            n.prototype.getVertex = function(e, f) {
                var n = this.scale;
                return this._getUnscaledVertex(e, f), f.x *= n.x, f.y *= n.y, f.z *= n.z, f
            }, n.prototype._getUnscaledVertex = function(e, f) {
                var n = 3 * e,
                    o = this.vertices;
                return f.set(o[n], o[n + 1], o[n + 2])
            }, n.prototype.getWorldVertex = function(e, f, n, o) {
                return this.getVertex(e, o), i.pointToWorldFrame(f, n, o, o), o
            }, n.prototype.getTriangleVertices = function(e, f, n, o) {
                var d = 3 * e;
                this.getVertex(this.indices[d], f), this.getVertex(this.indices[d + 1], n), this.getVertex(this.indices[d + 2], o)
            }, n.prototype.getNormal = function(e, f) {
                var n = 3 * e;
                return f.set(this.normals[n], this.normals[n + 1], this.normals[n + 2])
            };
            var m = new t;
            n.prototype.calculateLocalInertia = function(e, f) {
                this.computeLocalAABB(m);
                var n = m.upperBound.x - m.lowerBound.x,
                    o = m.upperBound.y - m.lowerBound.y,
                    d = m.upperBound.z - m.lowerBound.z;
                return f.set(1 / 12 * e * (2 * o * 2 * o + 2 * d * 2 * d), 1 / 12 * e * (2 * n * 2 * n + 2 * d * 2 * d), 1 / 12 * e * (2 * o * 2 * o + 2 * n * 2 * n))
            };
            var N = new d;
            n.prototype.computeLocalAABB = function(e) {
                var f = e.lowerBound,
                    n = e.upperBound,
                    o = this.vertices.length,
                    d = (this.vertices, N);
                this.getVertex(0, d), f.copy(d), n.copy(d);
                for (var i = 0; i !== o; i++) this.getVertex(i, d), d.x < f.x ? f.x = d.x : d.x > n.x && (n.x = d.x), d.y < f.y ? f.y = d.y : d.y > n.y && (n.y = d.y), d.z < f.z ? f.z = d.z : d.z > n.z && (n.z = d.z)
            }, n.prototype.updateAABB = function() {
                this.computeLocalAABB(this.aabb)
            }, n.prototype.updateBoundingSphereRadius = function() {
                for (var e = 0, f = this.vertices, n = new d, o = 0, i = f.length / 3; o !== i; o++) {
                    this.getVertex(o, n);
                    var t = n.norm2();
                    t > e && (e = t)
                }
                this.boundingSphereRadius = Math.sqrt(e)
            };
            var g = (new d, new i),
                x = new t;
            n.prototype.calculateWorldAABB = function(e, f, n, o) {
                var d = g,
                    i = x;
                d.position = e, d.quaternion = f, this.aabb.toWorldFrame(d, i), n.copy(i.lowerBound), o.copy(i.upperBound)
            }, n.prototype.volume = function() {
                return 4 * Math.PI * this.boundingSphereRadius / 3
            }, n.createTorus = function(e, f, o, d, i) {
                e = e || 1, f = f || .5, o = o || 8, d = d || 6, i = i || 2 * Math.PI;
                for (var t = [], l = [], u = 0; o >= u; u++)
                    for (var p = 0; d >= p; p++) {
                        var s = p / d * i,
                            y = u / o * Math.PI * 2,
                            c = (e + f * Math.cos(y)) * Math.cos(s),
                            a = (e + f * Math.cos(y)) * Math.sin(s),
                            r = f * Math.sin(y);
                        t.push(c, a, r)
                    }
                for (var u = 1; o >= u; u++)
                    for (var p = 1; d >= p; p++) {
                        var w = (d + 1) * u + p - 1,
                            b = (d + 1) * (u - 1) + p - 1,
                            m = (d + 1) * (u - 1) + p,
                            N = (d + 1) * u + p;
                        l.push(w, b, N), l.push(b, m, N)
                    }
                return new n(t, l)
            }
        }, {
            "../collision/AABB": 3,
            "../math/Quaternion": 28,
            "../math/Transform": 29,
            "../math/Vec3": 30,
            "../utils/Octree": 50,
            "./Shape": 43
        }],
        46: [function(e, f) {
            function n() {
                o.call(this), this.iterations = 10, this.tolerance = 1e-7
            }
            f.exports = n;
            var o = (e("../math/Vec3"), e("../math/Quaternion"), e("./Solver"));
            n.prototype = new o;
            var d = [],
                i = [],
                t = [];
            n.prototype.solve = function(e, f) {
                var n, o, l, u, p, s, y = 0,
                    c = this.iterations,
                    a = this.tolerance * this.tolerance,
                    r = this.equations,
                    w = r.length,
                    b = f.bodies,
                    m = b.length,
                    N = e;
                if (0 !== w)
                    for (var g = 0; g !== m; g++) b[g].updateSolveMassProperties();
                var x = i,
                    j = t,
                    v = d;
                x.length = w, j.length = w, v.length = w;
                for (var g = 0; g !== w; g++) {
                    var A = r[g];
                    v[g] = 0, j[g] = A.computeB(N), x[g] = 1 / A.computeC()
                }
                if (0 !== w) {
                    for (var g = 0; g !== m; g++) {
                        var C = b[g],
                            O = C.vlambda,
                            h = C.wlambda;
                        O.set(0, 0, 0), h && h.set(0, 0, 0)
                    }
                    for (y = 0; y !== c; y++) {
                        u = 0;
                        for (var k = 0; k !== w; k++) {
                            var A = r[k];
                            n = j[k], o = x[k], s = v[k], p = A.computeGWlambda(), l = o * (n - p - A.eps * s), s + l < A.minForce ? l = A.minForce - s : s + l > A.maxForce && (l = A.maxForce - s), v[k] += l, u += l > 0 ? l : -l, A.addToWlambda(l)
                        }
                        if (a > u * u) break
                    }
                    for (var g = 0; g !== m; g++) {
                        var C = b[g],
                            q = C.velocity,
                            z = C.angularVelocity;
                        q.vadd(C.vlambda, q), z && z.vadd(C.wlambda, z)
                    }
                }
                return y
            }
        }, {
            "../math/Quaternion": 28,
            "../math/Vec3": 30,
            "./Solver": 47
        }],
        47: [function(e, f) {
            function n() {
                this.equations = []
            }
            f.exports = n, n.prototype.solve = function() {
                return 0
            }, n.prototype.addEquation = function(e) {
                e.enabled && this.equations.push(e)
            }, n.prototype.removeEquation = function(e) {
                var f = this.equations,
                    n = f.indexOf(e); - 1 !== n && f.splice(n, 1)
            }, n.prototype.removeAllEquations = function() {
                this.equations.length = 0
            }
        }, {}],
        48: [function(e, f) {
            function n(e) {
                for (l.call(this), this.iterations = 10, this.tolerance = 1e-7, this.subsolver = e, this.nodes = [], this.nodePool = []; this.nodePool.length < 128;) this.nodePool.push(this.createNode())
            }

            function o(e) {
                for (var f = e.length, n = 0; n !== f; n++) {
                    var o = e[n];
                    if (!(o.visited || o.body.type & c)) return o
                }
                return !1
            }

            function d(e, f, n, d) {
                for (a.push(e), e.visited = !0, f(e, n, d); a.length;)
                    for (var i, t = a.pop(); i = o(t.children);) i.visited = !0, f(i, n, d), a.push(i)
            }

            function i(e, f, n) {
                f.push(e.body);
                for (var o = e.eqs.length, d = 0; d !== o; d++) {
                    var i = e.eqs[d]; - 1 === n.indexOf(i) && n.push(i)
                }
            }

            function t(e, f) {
                return f.id - e.id
            }
            f.exports = n;
            var l = (e("../math/Vec3"), e("../math/Quaternion"), e("./Solver")),
                u = e("../objects/Body");
            n.prototype = new l;
            var p = [],
                s = [],
                y = {
                    bodies: []
                },
                c = u.STATIC,
                a = [];
            n.prototype.createNode = function() {
                return {
                    body: null,
                    children: [],
                    eqs: [],
                    visited: !1
                }
            }, n.prototype.solve = function(e, f) {
                for (var n = p, l = this.nodePool, u = f.bodies, c = this.equations, a = c.length, r = u.length, w = this.subsolver; l.length < r;) l.push(this.createNode());
                n.length = r;
                for (var b = 0; r > b; b++) n[b] = l[b];
                for (var b = 0; b !== r; b++) {
                    var m = n[b];
                    m.body = u[b], m.children.length = 0, m.eqs.length = 0, m.visited = !1
                }
                for (var N = 0; N !== a; N++) {
                    var g = c[N],
                        b = u.indexOf(g.bi),
                        x = u.indexOf(g.bj),
                        j = n[b],
                        v = n[x];
                    j.children.push(v), j.eqs.push(g), v.children.push(j), v.eqs.push(g)
                }
                var A, C = 0,
                    O = s;
                w.tolerance = this.tolerance, w.iterations = this.iterations;
                for (var h = y; A = o(n);) {
                    O.length = 0, h.bodies.length = 0, d(A, i, h.bodies, O);
                    var k = O.length;
                    O = O.sort(t);
                    for (var b = 0; b !== k; b++) w.addEquation(O[b]); {
                        w.solve(e, h)
                    }
                    w.removeAllEquations(), C++
                }
                return C
            }
        }, {
            "../math/Quaternion": 28,
            "../math/Vec3": 30,
            "../objects/Body": 31,
            "./Solver": 47
        }],
        49: [function(e, f) {
            var n = function() {};
            f.exports = n, n.prototype = {
                constructor: n,
                addEventListener: function(e, f) {
                    void 0 === this._listeners && (this._listeners = {});
                    var n = this._listeners;
                    return void 0 === n[e] && (n[e] = []), -1 === n[e].indexOf(f) && n[e].push(f), this
                },
                hasEventListener: function(e, f) {
                    if (void 0 === this._listeners) return !1;
                    var n = this._listeners;
                    return void 0 !== n[e] && -1 !== n[e].indexOf(f) ? !0 : !1
                },
                removeEventListener: function(e, f) {
                    if (void 0 === this._listeners) return this;
                    var n = this._listeners;
                    if (void 0 === n[e]) return this;
                    var o = n[e].indexOf(f);
                    return -1 !== o && n[e].splice(o, 1), this
                },
                dispatchEvent: function(e) {
                    if (void 0 === this._listeners) return this;
                    var f = this._listeners,
                        n = f[e.type];
                    if (void 0 !== n) {
                        e.target = this;
                        for (var o = 0, d = n.length; d > o; o++) n[o].call(this, e)
                    }
                    return this
                }
            }
        }, {}],
        50: [function(e, f) {
            function n(e) {
                e = e || {}, this.root = e.root || null, this.aabb = e.aabb ? e.aabb.clone() : new d, this.data = [], this.children = []
            }

            function o(e, f) {
                f = f || {}, f.root = null, f.aabb = e, n.call(this, f), this.maxDepth = "undefined" != typeof f.maxDepth ? f.maxDepth : 8
            }
            var d = e("../collision/AABB"),
                i = e("../math/Vec3");
            f.exports = o, o.prototype = new n, n.prototype.reset = function() {
                this.children.length = this.data.length = 0
            }, n.prototype.insert = function(e, f, n) {
                var o = this.data;
                if (n = n || 0, !this.aabb.contains(e)) return !1;
                var d = this.children;
                if (n < (this.maxDepth || this.root.maxDepth)) {
                    var i = !1;
                    d.length || (this.subdivide(), i = !0);
                    for (var t = 0; 8 !== t; t++)
                        if (d[t].insert(e, f, n + 1)) return !0;
                    i && (d.length = 0)
                }
                return o.push(f), !0
            };
            var t = new i;
            n.prototype.subdivide = function() {
                var e = this.aabb,
                    f = e.lowerBound,
                    o = e.upperBound,
                    l = this.children;
                l.push(new n({
                    aabb: new d({
                        lowerBound: new i(0, 0, 0)
                    })
                }), new n({
                    aabb: new d({
                        lowerBound: new i(1, 0, 0)
                    })
                }), new n({
                    aabb: new d({
                        lowerBound: new i(1, 1, 0)
                    })
                }), new n({
                    aabb: new d({
                        lowerBound: new i(1, 1, 1)
                    })
                }), new n({
                    aabb: new d({
                        lowerBound: new i(0, 1, 1)
                    })
                }), new n({
                    aabb: new d({
                        lowerBound: new i(0, 0, 1)
                    })
                }), new n({
                    aabb: new d({
                        lowerBound: new i(1, 0, 1)
                    })
                }), new n({
                    aabb: new d({
                        lowerBound: new i(0, 1, 0)
                    })
                })), o.vsub(f, t), t.scale(.5, t);
                for (var u = this.root || this, p = 0; 8 !== p; p++) {
                    var s = l[p];
                    s.root = u;
                    var y = s.aabb.lowerBound;
                    y.x *= t.x, y.y *= t.y, y.z *= t.z, y.vadd(f, y), y.vadd(t, s.aabb.upperBound)
                }
            }, n.prototype.aabbQuery = function(e, f) {
                for (var n = (this.data, this.children, [this]); n.length;) {
                    var o = n.pop();
                    o.aabb.overlaps(e) && Array.prototype.push.apply(f, o.data), Array.prototype.push.apply(n, o.children)
                }
                return f
            };
            var l = new d;
            n.prototype.rayQuery = function(e, f, n) {
                return e.getAABB(l), l.toLocalFrame(f, l), this.aabbQuery(l, n), n
            }, n.prototype.removeEmptyNodes = function() {
                for (var e = [this]; e.length;) {
                    for (var f = e.pop(), n = f.children.length - 1; n >= 0; n--) f.children[n].data.length || f.children.splice(n, 1);
                    Array.prototype.push.apply(e, f.children)
                }
            }
        }, {
            "../collision/AABB": 3,
            "../math/Vec3": 30
        }],
        51: [function(e, f) {
            function n() {
                this.objects = [], this.type = Object
            }
            f.exports = n, n.prototype.release = function() {
                for (var e = arguments.length, f = 0; f !== e; f++) this.objects.push(arguments[f])
            }, n.prototype.get = function() {
                return 0 === this.objects.length ? this.constructObject() : this.objects.pop()
            }, n.prototype.constructObject = function() {
                throw new Error("constructObject() not implemented in this Pool subclass yet!")
            }
        }, {}],
        52: [function(e, f) {
            function n() {
                this.data = {
                    keys: []
                }
            }
            f.exports = n, n.prototype.get = function(e, f) {
                if (e > f) {
                    var n = f;
                    f = e, e = n
                }
                return this.data[e + "-" + f]
            }, n.prototype.set = function(e, f, n) {
                if (e > f) {
                    var o = f;
                    f = e, e = o
                }
                var d = e + "-" + f;
                this.get(e, f) || this.data.keys.push(d), this.data[d] = n
            }, n.prototype.reset = function() {
                for (var e = this.data, f = e.keys; f.length > 0;) {
                    var n = f.pop();
                    delete e[n]
                }
            }
        }, {}],
        53: [function(e, f) {
            function n() {}
            f.exports = n, n.defaults = function(e, f) {
                e = e || {};
                for (var n in f) n in e || (e[n] = f[n]);
                return e
            }
        }, {}],
        54: [function(e, f) {
            function n() {
                d.call(this), this.type = o
            }
            f.exports = n;
            var o = e("../math/Vec3"),
                d = e("./Pool");
            n.prototype = new d, n.prototype.constructObject = function() {
                return new o
            }
        }, {
            "../math/Vec3": 30,
            "./Pool": 51
        }],
        55: [function(e, f) {
            function n(e) {
                this.contactPointPool = [], this.frictionEquationPool = [], this.result = [], this.frictionResult = [], this.v3pool = new s, this.world = e, this.currentContactMaterial = null, this.enableFrictionReduction = !1
            }

            function o(e, f, n) {
                for (var o = null, d = e.length, i = 0; i !== d; i++) {
                    var t = e[i],
                        l = M;
                    e[(i + 1) % d].vsub(t, l);
                    var u = P;
                    l.cross(f, u);
                    var p = Q;
                    n.vsub(t, p);
                    var s = u.dot(p);
                    if (!(null === o || s > 0 && o === !0 || 0 >= s && o === !1)) return !1;
                    null === o && (o = s > 0)
                }
                return !0
            }
            f.exports = n;
            var d = e("../collision/AABB"),
                i = e("../shapes/Shape"),
                t = e("../collision/Ray"),
                l = e("../math/Vec3"),
                u = e("../math/Transform"),
                p = (e("../shapes/ConvexPolyhedron"), e("../math/Quaternion")),
                s = (e("../solver/Solver"), e("../utils/Vec3Pool")),
                y = e("../equations/ContactEquation"),
                c = e("../equations/FrictionEquation");
            n.prototype.createContactEquation = function(e, f, n, o, d, i) {
                var t;
                this.contactPointPool.length ? (t = this.contactPointPool.pop(), t.bi = e, t.bj = f) : t = new y(e, f), t.enabled = e.collisionResponse && f.collisionResponse && n.collisionResponse && o.collisionResponse;
                var l = this.currentContactMaterial;
                t.restitution = l.restitution, t.setSpookParams(l.contactEquationStiffness, l.contactEquationRelaxation, this.world.dt);
                var u = n.material || e.material,
                    p = o.material || f.material;
                return u && p && u.restitution >= 0 && p.restitution >= 0 && (t.restitution = u.restitution * p.restitution), t.si = d || n, t.sj = i || o, t
            }, n.prototype.createFrictionEquationsFromContact = function(e, f) {
                var n = e.bi,
                    o = e.bj,
                    d = e.si,
                    i = e.sj,
                    t = this.world,
                    l = this.currentContactMaterial,
                    u = l.friction,
                    p = d.material || n.material,
                    s = i.material || o.material;
                if (p && s && p.friction >= 0 && s.friction >= 0 && (u = p.friction * s.friction), u > 0) {
                    var y = u * t.gravity.length(),
                        a = n.invMass + o.invMass;
                    a > 0 && (a = 1 / a);
                    var r = this.frictionEquationPool,
                        w = r.length ? r.pop() : new c(n, o, y * a),
                        b = r.length ? r.pop() : new c(n, o, y * a);
                    return w.bi = b.bi = n, w.bj = b.bj = o, w.minForce = b.minForce = -y * a, w.maxForce = b.maxForce = y * a, w.ri.copy(e.ri), w.rj.copy(e.rj), b.ri.copy(e.ri), b.rj.copy(e.rj), e.ni.tangents(w.t, b.t), w.setSpookParams(l.frictionEquationStiffness, l.frictionEquationRelaxation, t.dt), b.setSpookParams(l.frictionEquationStiffness, l.frictionEquationRelaxation, t.dt), w.enabled = b.enabled = e.enabled, f.push(w, b), !0
                }
                return !1
            };
            var a = new l,
                r = new l,
                w = new l;
            n.prototype.createFrictionFromAverage = function(e) {
                var f = this.result[this.result.length - 1];
                if (this.createFrictionEquationsFromContact(f, this.frictionResult) && 1 !== e) {
                    var n = this.frictionResult[this.frictionResult.length - 2],
                        o = this.frictionResult[this.frictionResult.length - 1];
                    a.setZero(), r.setZero(), w.setZero();
                    for (var d = f.bi, i = (f.bj, 0); i !== e; i++) f = this.result[this.result.length - 1 - i], f.bodyA !== d ? (a.vadd(f.ni, a), r.vadd(f.ri, r), w.vadd(f.rj, w)) : (a.vsub(f.ni, a), r.vadd(f.rj, r), w.vadd(f.ri, w));
                    var t = 1 / e;
                    r.scale(t, n.ri), w.scale(t, n.rj), o.ri.copy(n.ri), o.rj.copy(n.rj), a.normalize(), a.tangents(n.t, o.t)
                }
            };
            var b = new l,
                m = new l,
                N = new p,
                g = new p;
            n.prototype.getContacts = function(e, f, n, o, d, i, t) {
                this.contactPointPool = d, this.frictionEquationPool = t, this.result = o, this.frictionResult = i;
                for (var l = N, u = g, p = b, s = m, y = 0, c = e.length; y !== c; y++) {
                    var a = e[y],
                        r = f[y],
                        w = null;
                    a.material && r.material && (w = n.getContactMaterial(a.material, r.material) || null);
                    for (var x = 0; x < a.shapes.length; x++) {
                        a.quaternion.mult(a.shapeOrientations[x], l), a.quaternion.vmult(a.shapeOffsets[x], p), p.vadd(a.position, p);
                        for (var j = a.shapes[x], v = 0; v < r.shapes.length; v++) {
                            r.quaternion.mult(r.shapeOrientations[v], u), r.quaternion.vmult(r.shapeOffsets[v], s), s.vadd(r.position, s);
                            var A = r.shapes[v];
                            if (!(p.distanceTo(s) > j.boundingSphereRadius + A.boundingSphereRadius)) {
                                var C = null;
                                j.material && A.material && (C = n.getContactMaterial(j.material, A.material) || null), this.currentContactMaterial = C || w || n.defaultContactMaterial;
                                var O = this[j.type | A.type];
                                O && (j.type < A.type ? O.call(this, j, A, p, s, l, u, a, r, j, A) : O.call(this, A, j, s, p, u, l, r, a, j, A))
                            }
                        }
                    }
                }
            };
            n.prototype[i.types.BOX | i.types.BOX] = n.prototype.boxBox = function(e, f, n, o, d, i, t, l) {
                e.convexPolyhedronRepresentation.material = e.material, f.convexPolyhedronRepresentation.material = f.material, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, f.convexPolyhedronRepresentation.collisionResponse = f.collisionResponse, this.convexConvex(e.convexPolyhedronRepresentation, f.convexPolyhedronRepresentation, n, o, d, i, t, l, e, f)
            }, n.prototype[i.types.BOX | i.types.CONVEXPOLYHEDRON] = n.prototype.boxConvex = function(e, f, n, o, d, i, t, l) {
                e.convexPolyhedronRepresentation.material = e.material, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, this.convexConvex(e.convexPolyhedronRepresentation, f, n, o, d, i, t, l, e, f)
            }, n.prototype[i.types.BOX | i.types.PARTICLE] = n.prototype.boxParticle = function(e, f, n, o, d, i, t, l) {
                e.convexPolyhedronRepresentation.material = e.material, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, this.convexParticle(e.convexPolyhedronRepresentation, f, n, o, d, i, t, l, e, f)
            }, n.prototype[i.types.SPHERE] = n.prototype.sphereSphere = function(e, f, n, o, d, i, t, l) {
                var u = this.createContactEquation(t, l, e, f);
                o.vsub(n, u.ni), u.ni.normalize(), u.ri.copy(u.ni), u.rj.copy(u.ni), u.ri.mult(e.radius, u.ri), u.rj.mult(-f.radius, u.rj), u.ri.vadd(n, u.ri), u.ri.vsub(t.position, u.ri), u.rj.vadd(o, u.rj), u.rj.vsub(l.position, u.rj), this.result.push(u), this.createFrictionEquationsFromContact(u, this.frictionResult)
            };
            var x = new l,
                j = new l,
                v = new l;
            n.prototype[i.types.PLANE | i.types.TRIMESH] = n.prototype.planeTrimesh = function(e, f, n, o, d, i, t, p) {
                var s = new l,
                    y = x;
                y.set(0, 0, 1), d.vmult(y, y);
                for (var c = 0; c < f.vertices.length / 3; c++) {
                    f.getVertex(c, s);
                    var a = new l;
                    a.copy(s), u.pointToWorldFrame(o, i, a, s);
                    var r = j;
                    s.vsub(n, r);
                    var w = y.dot(r);
                    if (0 >= w) {
                        var b = this.createContactEquation(t, p, e, f);
                        b.ni.copy(y);
                        var m = v;
                        y.scale(r.dot(y), m), s.vsub(m, m), b.ri.copy(m), b.ri.vsub(t.position, b.ri), b.rj.copy(s), b.rj.vsub(p.position, b.rj), this.result.push(b), this.createFrictionEquationsFromContact(b, this.frictionResult)
                    }
                }
            };
            var A = new l,
                C = new l,
                O = (new l, new l),
                h = new l,
                k = new l,
                q = new l,
                z = new l,
                B = new l,
                D = new l,
                E = new l,
                F = new l,
                G = new l,
                H = new l,
                I = new d,
                J = [];
            n.prototype[i.types.SPHERE | i.types.TRIMESH] = n.prototype.sphereTrimesh = function(e, f, n, o, d, i, l, p) {
                var s = k,
                    y = q,
                    c = z,
                    a = B,
                    r = D,
                    w = E,
                    b = I,
                    m = h,
                    N = C,
                    g = J;
                u.pointToLocalFrame(o, i, n, r);
                var x = e.radius;
                b.lowerBound.set(r.x - x, r.y - x, r.z - x), b.upperBound.set(r.x + x, r.y + x, r.z + x), f.getTrianglesInAABB(b, g);
                for (var j = O, v = e.radius * e.radius, K = 0; K < g.length; K++)
                    for (var L = 0; 3 > L; L++)
                        if (f.getVertex(f.indices[3 * g[K] + L], j), j.vsub(r, N), N.norm2() <= v) {
                            m.copy(j), u.pointToWorldFrame(o, i, m, j), j.vsub(n, N);
                            var M = this.createContactEquation(l, p, e, f);
                            M.ni.copy(N), M.ni.normalize(), M.ri.copy(M.ni), M.ri.scale(e.radius, M.ri), M.ri.vadd(n, M.ri), M.ri.vsub(l.position, M.ri), M.rj.copy(j), M.rj.vsub(p.position, M.rj), this.result.push(M), this.createFrictionEquationsFromContact(M, this.frictionResult)
                        }
                for (var K = 0; K < g.length; K++)
                    for (var L = 0; 3 > L; L++) {
                        f.getVertex(f.indices[3 * g[K] + L], s), f.getVertex(f.indices[3 * g[K] + (L + 1) % 3], y), y.vsub(s, c), r.vsub(y, w);
                        var P = w.dot(c);
                        r.vsub(s, w);
                        var Q = w.dot(c);
                        if (Q > 0 && 0 > P) {
                            r.vsub(s, w), a.copy(c), a.normalize(), Q = w.dot(a), a.scale(Q, w), w.vadd(s, w);
                            var R = w.distanceTo(r);
                            if (R < e.radius) {
                                var M = this.createContactEquation(l, p, e, f);
                                w.vsub(r, M.ni), M.ni.normalize(), M.ni.scale(e.radius, M.ri), u.pointToWorldFrame(o, i, w, w), w.vsub(p.position, M.rj), u.vectorToWorldFrame(i, M.ni, M.ni), u.vectorToWorldFrame(i, M.ri, M.ri), this.result.push(M), this.createFrictionEquationsFromContact(M, this.frictionResult)
                            }
                        }
                    }
                for (var S = F, T = G, U = H, V = A, K = 0, W = g.length; K !== W; K++) {
                    f.getTriangleVertices(g[K], S, T, U), f.getNormal(g[K], V), r.vsub(S, w);
                    var R = w.dot(V);
                    if (V.scale(R, w), r.vsub(w, w), R = w.distanceTo(r), t.pointInTriangle(w, S, T, U) && R < e.radius) {
                        var M = this.createContactEquation(l, p, e, f);
                        w.vsub(r, M.ni), M.ni.normalize(), M.ni.scale(e.radius, M.ri), u.pointToWorldFrame(o, i, w, w), w.vsub(p.position, M.rj), u.vectorToWorldFrame(i, M.ni, M.ni), u.vectorToWorldFrame(i, M.ri, M.ri), this.result.push(M), this.createFrictionEquationsFromContact(M, this.frictionResult)
                    }
                }
                g.length = 0
            };
            var K = new l,
                L = new l;
            n.prototype[i.types.SPHERE | i.types.PLANE] = n.prototype.spherePlane = function(e, f, n, o, d, i, t, l) {
                var u = this.createContactEquation(t, l, e, f);
                if (u.ni.set(0, 0, 1), i.vmult(u.ni, u.ni), u.ni.negate(u.ni), u.ni.normalize(), u.ni.mult(e.radius, u.ri), n.vsub(o, K), u.ni.mult(u.ni.dot(K), L), K.vsub(L, u.rj), -K.dot(u.ni) <= e.radius) {
                    var p = u.ri,
                        s = u.rj;
                    p.vadd(n, p), p.vsub(t.position, p), s.vadd(o, s), s.vsub(l.position, s), this.result.push(u), this.createFrictionEquationsFromContact(u, this.frictionResult)
                }
            };
            var M = new l,
                P = new l,
                Q = new l,
                R = new l,
                S = new l,
                T = new l,
                U = new l,
                V = [new l, new l, new l, new l, new l, new l],
                W = new l,
                X = new l,
                Y = new l,
                Z = new l;
            n.prototype[i.types.SPHERE | i.types.BOX] = n.prototype.sphereBox = function(e, f, n, o, d, i, t, l) {
                var u = this.v3pool,
                    p = V;
                n.vsub(o, R), f.getSideNormals(p, i);
                for (var s = e.radius, y = !1, c = X, a = Y, r = Z, w = null, b = 0, m = 0, N = 0, g = null, x = 0, j = p.length; x !== j && y === !1; x++) {
                    var v = S;
                    v.copy(p[x]);
                    var A = v.norm();
                    v.normalize();
                    var C = R.dot(v);
                    if (A + s > C && C > 0) {
                        var O = T,
                            h = U;
                        O.copy(p[(x + 1) % 3]), h.copy(p[(x + 2) % 3]);
                        var k = O.norm(),
                            q = h.norm();
                        O.normalize(), h.normalize();
                        var z = R.dot(O),
                            B = R.dot(h);
                        if (k > z && z > -k && q > B && B > -q) {
                            var D = Math.abs(C - A - s);
                            (null === g || g > D) && (g = D, m = z, N = B, w = A, c.copy(v), a.copy(O), r.copy(h), b++)
                        }
                    }
                }
                if (b) {
                    y = !0;
                    var E = this.createContactEquation(t, l, e, f);
                    c.mult(-s, E.ri), E.ni.copy(c), E.ni.negate(E.ni), c.mult(w, c), a.mult(m, a), c.vadd(a, c), r.mult(N, r), c.vadd(r, E.rj), E.ri.vadd(n, E.ri), E.ri.vsub(t.position, E.ri), E.rj.vadd(o, E.rj), E.rj.vsub(l.position, E.rj), this.result.push(E), this.createFrictionEquationsFromContact(E, this.frictionResult)
                }
                for (var F = u.get(), G = W, H = 0; 2 !== H && !y; H++)
                    for (var I = 0; 2 !== I && !y; I++)
                        for (var J = 0; 2 !== J && !y; J++)
                            if (F.set(0, 0, 0), H ? F.vadd(p[0], F) : F.vsub(p[0], F), I ? F.vadd(p[1], F) : F.vsub(p[1], F), J ? F.vadd(p[2], F) : F.vsub(p[2], F), o.vadd(F, G), G.vsub(n, G), G.norm2() < s * s) {
                                y = !0;
                                var E = this.createContactEquation(t, l, e, f);
                                E.ri.copy(G), E.ri.normalize(), E.ni.copy(E.ri), E.ri.mult(s, E.ri), E.rj.copy(F), E.ri.vadd(n, E.ri), E.ri.vsub(t.position, E.ri), E.rj.vadd(o, E.rj), E.rj.vsub(l.position, E.rj), this.result.push(E), this.createFrictionEquationsFromContact(E, this.frictionResult)
                            }
                u.release(F), F = null;
                for (var K = u.get(), L = u.get(), E = u.get(), M = u.get(), D = u.get(), P = p.length, H = 0; H !== P && !y; H++)
                    for (var I = 0; I !== P && !y; I++)
                        if (H % 3 !== I % 3) {
                            p[I].cross(p[H], K), K.normalize(), p[H].vadd(p[I], L), E.copy(n), E.vsub(L, E), E.vsub(o, E);
                            var Q = E.dot(K);
                            K.mult(Q, M);
                            for (var J = 0; J === H % 3 || J === I % 3;) J++;
                            D.copy(n), D.vsub(M, D), D.vsub(L, D), D.vsub(o, D);
                            var $ = Math.abs(Q),
                                _ = D.norm();
                            if ($ < p[J].norm() && s > _) {
                                y = !0;
                                var ef = this.createContactEquation(t, l, e, f);
                                L.vadd(M, ef.rj), ef.rj.copy(ef.rj), D.negate(ef.ni), ef.ni.normalize(), ef.ri.copy(ef.rj), ef.ri.vadd(o, ef.ri), ef.ri.vsub(n, ef.ri), ef.ri.normalize(), ef.ri.mult(s, ef.ri), ef.ri.vadd(n, ef.ri), ef.ri.vsub(t.position, ef.ri), ef.rj.vadd(o, ef.rj), ef.rj.vsub(l.position, ef.rj), this.result.push(ef), this.createFrictionEquationsFromContact(ef, this.frictionResult)
                            }
                        }
                u.release(K, L, E, M, D)
            };
            var $ = new l,
                _ = new l,
                ef = new l,
                ff = new l,
                nf = new l,
                of = new l,
                df = new l,
                tf = new l,
                lf = new l,
                uf = new l;
            n.prototype[i.types.SPHERE | i.types.CONVEXPOLYHEDRON] = n.prototype.sphereConvex = function(e, f, n, d, i, t, l, u) {
                var p = this.v3pool;
                n.vsub(d, $);
                for (var s = f.faceNormals, y = f.faces, c = f.vertices, a = e.radius, r = 0; r !== c.length; r++) {
                    var w = c[r],
                        b = nf;
                    t.vmult(w, b), d.vadd(b, b);
                    var m = ff;
                    if (b.vsub(n, m), m.norm2() < a * a) {
                        g = !0;
                        var N = this.createContactEquation(l, u, e, f);
                        return N.ri.copy(m), N.ri.normalize(), N.ni.copy(N.ri), N.ri.mult(a, N.ri), b.vsub(d, N.rj), N.ri.vadd(n, N.ri), N.ri.vsub(l.position, N.ri), N.rj.vadd(d, N.rj), N.rj.vsub(u.position, N.rj), this.result.push(N), void this.createFrictionEquationsFromContact(N, this.frictionResult)
                    }
                }
                for (var g = !1, r = 0, x = y.length; r !== x && g === !1; r++) {
                    var j = s[r],
                        v = y[r],
                        A = of ;
                    t.vmult(j, A);
                    var C = df;
                    t.vmult(c[v[0]], C), C.vadd(d, C);
                    var O = tf;
                    A.mult(-a, O), n.vadd(O, O);
                    var h = lf;
                    O.vsub(C, h);
                    var k = h.dot(A),
                        q = uf;
                    if (n.vsub(C, q), 0 > k && q.dot(A) > 0) {
                        for (var z = [], B = 0, D = v.length; B !== D; B++) {
                            var E = p.get();
                            t.vmult(c[v[B]], E), d.vadd(E, E), z.push(E)
                        }
                        if (o(z, A, n)) {
                            g = !0;
                            var N = this.createContactEquation(l, u, e, f);
                            A.mult(-a, N.ri), A.negate(N.ni);
                            var F = p.get();
                            A.mult(-k, F);
                            var G = p.get();
                            A.mult(-a, G), n.vsub(d, N.rj), N.rj.vadd(G, N.rj), N.rj.vadd(F, N.rj), N.rj.vadd(d, N.rj), N.rj.vsub(u.position, N.rj), N.ri.vadd(n, N.ri), N.ri.vsub(l.position, N.ri), p.release(F), p.release(G), this.result.push(N), this.createFrictionEquationsFromContact(N, this.frictionResult);
                            for (var B = 0, H = z.length; B !== H; B++) p.release(z[B]);
                            return
                        }
                        for (var B = 0; B !== v.length; B++) {
                            var I = p.get(),
                                J = p.get();
                            t.vmult(c[v[(B + 1) % v.length]], I), t.vmult(c[v[(B + 2) % v.length]], J), d.vadd(I, I), d.vadd(J, J);
                            var K = _;
                            J.vsub(I, K);
                            var L = ef;
                            K.unit(L);
                            var M = p.get(),
                                P = p.get();
                            n.vsub(I, P);
                            var Q = P.dot(L);
                            L.mult(Q, M), M.vadd(I, M);
                            var R = p.get();
                            if (M.vsub(n, R), Q > 0 && Q * Q < K.norm2() && R.norm2() < a * a) {
                                var N = this.createContactEquation(l, u, e, f);
                                M.vsub(d, N.rj), M.vsub(n, N.ni), N.ni.normalize(), N.ni.mult(a, N.ri), N.rj.vadd(d, N.rj), N.rj.vsub(u.position, N.rj), N.ri.vadd(n, N.ri), N.ri.vsub(l.position, N.ri), this.result.push(N), this.createFrictionEquationsFromContact(N, this.frictionResult);
                                for (var B = 0, H = z.length; B !== H; B++) p.release(z[B]);
                                return p.release(I), p.release(J), p.release(M), p.release(R), void p.release(P)
                            }
                            p.release(I), p.release(J), p.release(M), p.release(R), p.release(P)
                        }
                        for (var B = 0, H = z.length; B !== H; B++) p.release(z[B])
                    }
                }
            };
            new l, new l;
            n.prototype[i.types.PLANE | i.types.BOX] = n.prototype.planeBox = function(e, f, n, o, d, i, t, l) {
                f.convexPolyhedronRepresentation.material = f.material, f.convexPolyhedronRepresentation.collisionResponse = f.collisionResponse, this.planeConvex(e, f.convexPolyhedronRepresentation, n, o, d, i, t, l)
            };
            var pf = new l,
                sf = new l,
                yf = new l,
                cf = new l;
            n.prototype[i.types.PLANE | i.types.CONVEXPOLYHEDRON] = n.prototype.planeConvex = function(e, f, n, o, d, i, t, l) {
                var u = pf,
                    p = sf;
                p.set(0, 0, 1), d.vmult(p, p);
                for (var s = 0, y = yf, c = 0; c !== f.vertices.length; c++) {
                    u.copy(f.vertices[c]), i.vmult(u, u), o.vadd(u, u), u.vsub(n, y);
                    var a = p.dot(y);
                    if (0 >= a) {
                        var r = this.createContactEquation(t, l, e, f),
                            w = cf;
                        p.mult(p.dot(y), w), u.vsub(w, w), w.vsub(n, r.ri), r.ni.copy(p), u.vsub(o, r.rj), r.ri.vadd(n, r.ri), r.ri.vsub(t.position, r.ri), r.rj.vadd(o, r.rj), r.rj.vsub(l.position, r.rj), this.result.push(r), s++, this.enableFrictionReduction || this.createFrictionEquationsFromContact(r, this.frictionResult)
                    }
                }
                this.enableFrictionReduction && s && this.createFrictionFromAverage(s)
            };
            var af = new l,
                rf = new l;
            n.prototype[i.types.CONVEXPOLYHEDRON] = n.prototype.convexConvex = function(e, f, n, o, d, i, t, l, u, p, s, y) {
                var c = af;
                if (!(n.distanceTo(o) > e.boundingSphereRadius + f.boundingSphereRadius) && e.findSeparatingAxis(f, n, d, o, i, c, s, y)) {
                    var a = [],
                        r = rf;
                    e.clipAgainstHull(n, d, f, o, i, c, -100, 100, a);
                    for (var w = 0, b = 0; b !== a.length; b++) {
                        var m = this.createContactEquation(t, l, e, f, u, p),
                            N = m.ri,
                            g = m.rj;
                        c.negate(m.ni), a[b].normal.negate(r), r.mult(a[b].depth, r), a[b].point.vadd(r, N), g.copy(a[b].point), N.vsub(n, N), g.vsub(o, g), N.vadd(n, N), N.vsub(t.position, N), g.vadd(o, g), g.vsub(l.position, g), this.result.push(m), w++, this.enableFrictionReduction || this.createFrictionEquationsFromContact(m, this.frictionResult)
                    }
                    this.enableFrictionReduction && w && this.createFrictionFromAverage(w)
                }
            };
            var wf = new l,
                bf = new l,
                mf = new l;
            n.prototype[i.types.PLANE | i.types.PARTICLE] = n.prototype.planeParticle = function(e, f, n, o, d, i, t, l) {
                var u = wf;
                u.set(0, 0, 1), t.quaternion.vmult(u, u);
                var p = bf;
                o.vsub(t.position, p);
                var s = u.dot(p);
                if (0 >= s) {
                    var y = this.createContactEquation(l, t, f, e);
                    y.ni.copy(u), y.ni.negate(y.ni), y.ri.set(0, 0, 0);
                    var c = mf;
                    u.mult(u.dot(o), c), o.vsub(c, c), y.rj.copy(c), this.result.push(y), this.createFrictionEquationsFromContact(y, this.frictionResult)
                }
            };
            var Nf = new l;
            n.prototype[i.types.PARTICLE | i.types.SPHERE] = n.prototype.sphereParticle = function(e, f, n, o, d, i, t, l) {
                var u = Nf;
                u.set(0, 0, 1), o.vsub(n, u);
                var p = u.norm2();
                if (p <= e.radius * e.radius) {
                    var s = this.createContactEquation(l, t, f, e);
                    u.normalize(), s.rj.copy(u), s.rj.mult(e.radius, s.rj), s.ni.copy(u), s.ni.negate(s.ni), s.ri.set(0, 0, 0), this.result.push(s), this.createFrictionEquationsFromContact(s, this.frictionResult)
                }
            };
            var gf = new p,
                xf = new l,
                jf = (new l, new l),
                vf = new l,
                Af = new l;
            n.prototype[i.types.PARTICLE | i.types.CONVEXPOLYHEDRON] = n.prototype.convexParticle = function(e, f, n, o, d, i, t, l) {
                var u = -1,
                    p = jf,
                    s = Af,
                    y = null,
                    c = 0,
                    a = xf;
                if (a.copy(o), a.vsub(n, a), d.conjugate(gf), gf.vmult(a, a), e.pointIsInside(a)) {
                    e.worldVerticesNeedsUpdate && e.computeWorldVertices(n, d), e.worldFaceNormalsNeedsUpdate && e.computeWorldFaceNormals(d);
                    for (var r = 0, w = e.faces.length; r !== w; r++) {
                        var b = [e.worldVertices[e.faces[r][0]]],
                            m = e.worldFaceNormals[r];
                        o.vsub(b[0], vf);
                        var N = -m.dot(vf);
                        (null === y || Math.abs(N) < Math.abs(y)) && (y = N, u = r, p.copy(m), c++)
                    }
                    if (-1 !== u) {
                        var g = this.createContactEquation(l, t, f, e);
                        p.mult(y, s), s.vadd(o, s), s.vsub(n, s), g.rj.copy(s), p.negate(g.ni), g.ri.set(0, 0, 0);
                        var x = g.ri,
                            j = g.rj;
                        x.vadd(o, x), x.vsub(l.position, x), j.vadd(n, j), j.vsub(t.position, j), this.result.push(g), this.createFrictionEquationsFromContact(g, this.frictionResult)
                    } else console.warn("Point found inside convex, but did not find penetrating face!")
                }
            }, n.prototype[i.types.BOX | i.types.HEIGHTFIELD] = n.prototype.boxHeightfield = function(e, f, n, o, d, i, t, l) {
                e.convexPolyhedronRepresentation.material = e.material, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, this.convexHeightfield(e.convexPolyhedronRepresentation, f, n, o, d, i, t, l)
            };
            var Cf = new l,
                Of = new l,
                hf = [0];
            n.prototype[i.types.CONVEXPOLYHEDRON | i.types.HEIGHTFIELD] = n.prototype.convexHeightfield = function(e, f, n, o, d, i, t, l) {
                var p = f.data,
                    s = f.elementSize,
                    y = e.boundingSphereRadius,
                    c = Of,
                    a = hf,
                    r = Cf;
                u.pointToLocalFrame(o, i, n, r);
                var w = Math.floor((r.x - y) / s) - 1,
                    b = Math.ceil((r.x + y) / s) + 1,
                    m = Math.floor((r.y - y) / s) - 1,
                    N = Math.ceil((r.y + y) / s) + 1;
                if (!(0 > b || 0 > N || w > p.length || m > p[0].length)) {
                    0 > w && (w = 0), 0 > b && (b = 0), 0 > m && (m = 0), 0 > N && (N = 0), w >= p.length && (w = p.length - 1), b >= p.length && (b = p.length - 1), N >= p[0].length && (N = p[0].length - 1), m >= p[0].length && (m = p[0].length - 1);
                    var g = [];
                    f.getRectMinMax(w, m, b, N, g);
                    var x = g[0],
                        j = g[1];
                    if (!(r.z - y > j || r.z + y < x))
                        for (var v = w; b > v; v++)
                            for (var A = m; N > A; A++) f.getConvexTrianglePillar(v, A, !1), u.pointToWorldFrame(o, i, f.pillarOffset, c), n.distanceTo(c) < f.pillarConvex.boundingSphereRadius + e.boundingSphereRadius && this.convexConvex(e, f.pillarConvex, n, c, d, i, t, l, null, null, a, null), f.getConvexTrianglePillar(v, A, !0), u.pointToWorldFrame(o, i, f.pillarOffset, c), n.distanceTo(c) < f.pillarConvex.boundingSphereRadius + e.boundingSphereRadius && this.convexConvex(e, f.pillarConvex, n, c, d, i, t, l, null, null, a, null)
                }
            };
            var kf = new l,
                qf = new l;
            n.prototype[i.types.SPHERE | i.types.HEIGHTFIELD] = n.prototype.sphereHeightfield = function(e, f, n, o, d, i, t, l) {
                var p = f.data,
                    s = e.radius,
                    y = f.elementSize,
                    c = qf,
                    a = kf;
                u.pointToLocalFrame(o, i, n, a);
                var r = Math.floor((a.x - s) / y) - 1,
                    w = Math.ceil((a.x + s) / y) + 1,
                    b = Math.floor((a.y - s) / y) - 1,
                    m = Math.ceil((a.y + s) / y) + 1;
                if (!(0 > w || 0 > m || r > p.length || m > p[0].length)) {
                    0 > r && (r = 0), 0 > w && (w = 0), 0 > b && (b = 0), 0 > m && (m = 0), r >= p.length && (r = p.length - 1), w >= p.length && (w = p.length - 1), m >= p[0].length && (m = p[0].length - 1), b >= p[0].length && (b = p[0].length - 1);
                    var N = [];
                    f.getRectMinMax(r, b, w, m, N);
                    var g = N[0],
                        x = N[1];
                    if (!(a.z - s > x || a.z + s < g))
                        for (var j = this.result, v = r; w > v; v++)
                            for (var A = b; m > A; A++) {
                                var C = j.length;
                                f.getConvexTrianglePillar(v, A, !1), u.pointToWorldFrame(o, i, f.pillarOffset, c), n.distanceTo(c) < f.pillarConvex.boundingSphereRadius + e.boundingSphereRadius && this.sphereConvex(e, f.pillarConvex, n, c, d, i, t, l), f.getConvexTrianglePillar(v, A, !0), u.pointToWorldFrame(o, i, f.pillarOffset, c), n.distanceTo(c) < f.pillarConvex.boundingSphereRadius + e.boundingSphereRadius && this.sphereConvex(e, f.pillarConvex, n, c, d, i, t, l);
                                var O = j.length - C;
                                if (O > 2) return
                            }
                }
            }
        }, {
            "../collision/AABB": 3,
            "../collision/Ray": 9,
            "../equations/ContactEquation": 19,
            "../equations/FrictionEquation": 21,
            "../math/Quaternion": 28,
            "../math/Transform": 29,
            "../math/Vec3": 30,
            "../shapes/ConvexPolyhedron": 38,
            "../shapes/Shape": 43,
            "../solver/Solver": 47,
            "../utils/Vec3Pool": 54
        }],
        56: [function(e, f) {
            function n() {
                u.apply(this), this.dt = -1, this.allowSleep = !1, this.contacts = [], this.frictionEquations = [], this.quatNormalizeSkip = 0, this.quatNormalizeFast = !1, this.time = 0, this.stepnumber = 0, this.default_dt = 1 / 60, this.nextId = 0, this.gravity = new d, this.broadphase = new m, this.bodies = [], this.solver = new t, this.constraints = [], this.narrowphase = new l(this), this.collisionMatrix = new p, this.collisionMatrixPrevious = new p, this.materials = [], this.contactmaterials = [], this.contactMaterialTable = new a, this.defaultMaterial = new s("default"), this.defaultContactMaterial = new y(this.defaultMaterial, this.defaultMaterial, {
                    friction: .3,
                    restitution: 0
                }), this.doProfiling = !1, this.profile = {
                    solve: 0,
                    makeContactConstraints: 0,
                    broadphase: 0,
                    integrate: 0,
                    narrowphase: 0
                }, this.subsystems = [], this.addBodyEvent = {
                    type: "addBody",
                    body: null
                }, this.removeBodyEvent = {
                    type: "removeBody",
                    body: null
                }
            }
            f.exports = n;
            var o = e("../shapes/Shape"),
                d = e("../math/Vec3"),
                i = e("../math/Quaternion"),
                t = e("../solver/GSSolver"),
                l = (e("../utils/Vec3Pool"), e("../equations/ContactEquation"), e("../equations/FrictionEquation"), e("./Narrowphase")),
                u = e("../utils/EventTarget"),
                p = e("../collision/ArrayCollisionMatrix"),
                s = e("../material/Material"),
                y = e("../material/ContactMaterial"),
                c = e("../objects/Body"),
                a = e("../utils/TupleDictionary"),
                r = e("../collision/RaycastResult"),
                w = e("../collision/AABB"),
                b = e("../collision/Ray"),
                m = e("../collision/NaiveBroadphase");
            n.prototype = new u;
            var N = (new w, new b);
            if (n.prototype.getContactMaterial = function(e, f) {
                    return this.contactMaterialTable.get(e.id, f.id)
                }, n.prototype.numObjects = function() {
                    return this.bodies.length
                }, n.prototype.collisionMatrixTick = function() {
                    var e = this.collisionMatrixPrevious;
                    this.collisionMatrixPrevious = this.collisionMatrix, this.collisionMatrix = e, this.collisionMatrix.reset()
                }, n.prototype.add = n.prototype.addBody = function(e) {
                    -1 === this.bodies.indexOf(e) && (e.index = this.bodies.length, this.bodies.push(e), e.world = this, e.initPosition.copy(e.position), e.initVelocity.copy(e.velocity), e.timeLastSleepy = this.time, e instanceof c && (e.initAngularVelocity.copy(e.angularVelocity), e.initQuaternion.copy(e.quaternion)), this.collisionMatrix.setNumObjects(this.bodies.length), this.addBodyEvent.body = e, this.dispatchEvent(this.addBodyEvent))
                }, n.prototype.addConstraint = function(e) {
                    this.constraints.push(e)
                }, n.prototype.removeConstraint = function(e) {
                    var f = this.constraints.indexOf(e); - 1 !== f && this.constraints.splice(f, 1)
                }, n.prototype.rayTest = function(e, f, n) {
                    n instanceof r ? this.raycastClosest(e, f, {
                        skipBackfaces: !0
                    }, n) : this.raycastAll(e, f, {
                        skipBackfaces: !0
                    }, n)
                }, n.prototype.raycastAll = function(e, f, n, o) {
                    return n.mode = b.ALL, n.from = e, n.to = f, n.callback = o, N.intersectWorld(this, n)
                }, n.prototype.raycastAny = function(e, f, n, o) {
                    return n.mode = b.ANY, n.from = e, n.to = f, n.result = o, N.intersectWorld(this, n)
                }, n.prototype.raycastClosest = function(e, f, n, o) {
                    return n.mode = b.CLOSEST, n.from = e, n.to = f, n.result = o, N.intersectWorld(this, n)
                }, n.prototype.remove = function(e) {
                    e.world = null;
                    var f = this.bodies.length - 1,
                        n = this.bodies,
                        o = n.indexOf(e);
                    if (-1 !== o) {
                        n.splice(o, 1);
                        for (var d = 0; d !== n.length; d++) n[d].index = d;
                        this.collisionMatrix.setNumObjects(f), this.removeBodyEvent.body = e, this.dispatchEvent(this.removeBodyEvent)
                    }
                }, n.prototype.removeBody = n.prototype.remove, n.prototype.addMaterial = function(e) {
                    this.materials.push(e)
                }, n.prototype.addContactMaterial = function(e) {
                    this.contactmaterials.push(e), this.contactMaterialTable.set(e.materials[0].id, e.materials[1].id, e)
                }, "undefined" == typeof performance && (performance = {}), !performance.now) {
                var g = Date.now();
                performance.timing && performance.timing.navigationStart && (g = performance.timing.navigationStart), performance.now = function() {
                    return Date.now() - g
                }
            }
            var x = new d;
            n.prototype.step = function(e, f, n) {
                if (n = n || 10, f = f || 0, 0 === f) this.internalStep(e), this.time += e;
                else {
                    var o = Math.floor((this.time + f) / e) - Math.floor(this.time / e);
                    o = Math.min(o, n);
                    for (var d = performance.now(), i = 0; i !== o && (this.internalStep(e), !(performance.now() - d > 1e3 * e)); i++);
                    this.time += f;
                    for (var t = this.time % e, l = t / e, u = x, p = this.bodies, s = 0; s !== p.length; s++) {
                        var y = p[s];
                        y.type !== c.STATIC && y.sleepState !== c.SLEEPING ? (y.position.vsub(y.previousPosition, u), u.scale(l, u), y.position.vadd(u, y.interpolatedPosition)) : (y.interpolatedPosition.copy(y.position), y.interpolatedQuaternion.copy(y.quaternion))
                    }
                }
            };
            var j = {
                    type: "postStep"
                },
                v = {
                    type: "preStep"
                },
                A = {
                    type: "collide",
                    body: null,
                    contact: null
                },
                C = [],
                O = [],
                h = [],
                k = [],
                q = (new d, new d, new d, new d, new d, new d, new d, new d, new d, new i, new i),
                z = new i,
                B = new d;
            n.prototype.internalStep = function(e) {
                this.dt = e;
                var f, n = this.contacts,
                    d = h,
                    i = k,
                    t = this.numObjects(),
                    l = this.bodies,
                    u = this.solver,
                    p = this.gravity,
                    s = this.doProfiling,
                    y = this.profile,
                    a = c.DYNAMIC,
                    r = this.constraints,
                    w = O,
                    b = (p.norm(), p.x),
                    m = p.y,
                    N = p.z,
                    g = 0;
                for (s && (f = performance.now()), g = 0; g !== t; g++) {
                    var x = l[g];
                    if (x.type & a) {
                        var D = x.force,
                            E = x.mass;
                        D.x += E * b, D.y += E * m, D.z += E * N
                    }
                }
                for (var g = 0, F = this.subsystems.length; g !== F; g++) this.subsystems[g].update();
                s && (f = performance.now()), d.length = 0, i.length = 0, this.broadphase.collisionPairs(this, d, i), s && (y.broadphase = performance.now() - f);
                var G = r.length;
                for (g = 0; g !== G; g++) {
                    var H = r[g];
                    if (!H.collideConnected)
                        for (var I = d.length - 1; I >= 0; I -= 1)(H.bodyA === d[I] && H.bodyB === i[I] || H.bodyB === d[I] && H.bodyA === i[I]) && (d.splice(I, 1), i.splice(I, 1))
                }
                this.collisionMatrixTick(), s && (f = performance.now());
                var J = C,
                    K = n.length;
                for (g = 0; g !== K; g++) J.push(n[g]);
                n.length = 0;
                var L = this.frictionEquations.length;
                for (g = 0; g !== L; g++) w.push(this.frictionEquations[g]);
                this.frictionEquations.length = 0, this.narrowphase.getContacts(d, i, this, n, J, this.frictionEquations, w), s && (y.narrowphase = performance.now() - f), s && (f = performance.now());
                for (var g = 0; g < this.frictionEquations.length; g++) u.addEquation(this.frictionEquations[g]);
                for (var M = n.length, P = 0; P !== M; P++) {
                    {
                        var Q, H = n[P],
                            x = H.bi,
                            R = H.bj;
                        H.si, H.sj
                    }
                    Q = x.material && R.material ? this.getContactMaterial(x.material, R.material) || this.defaultContactMaterial : this.defaultContactMaterial;
                    var S = Q.friction;
                    if (x.material && R.material && (x.material.friction >= 0 && R.material.friction >= 0 && (S = x.material.friction * R.material.friction), x.material.restitution >= 0 && R.material.restitution >= 0 && (H.restitution = x.material.restitution * R.material.restitution)), u.addEquation(H), x.allowSleep && x.type === c.DYNAMIC && x.sleepState === c.SLEEPING && R.sleepState === c.AWAKE && R.type !== c.STATIC) {
                        var T = R.velocity.norm2() + R.angularVelocity.norm2(),
                            U = Math.pow(R.sleepSpeedLimit, 2);
                        T >= 2 * U && (x._wakeUpAfterNarrowphase = !0)
                    }
                    if (R.allowSleep && R.type === c.DYNAMIC && R.sleepState === c.SLEEPING && x.sleepState === c.AWAKE && x.type !== c.STATIC) {
                        var V = x.velocity.norm2() + x.angularVelocity.norm2(),
                            W = Math.pow(x.sleepSpeedLimit, 2);
                        V >= 2 * W && (R._wakeUpAfterNarrowphase = !0)
                    }
                    this.collisionMatrix.set(x, R, !0), this.collisionMatrixPrevious.get(x, R) || (A.body = R, A.contact = H, x.dispatchEvent(A), A.body = x, R.dispatchEvent(A))
                }
                for (s && (y.makeContactConstraints = performance.now() - f, f = performance.now()), g = 0; g !== t; g++) {
                    var x = l[g];
                    x._wakeUpAfterNarrowphase && (x.wakeUp(), x._wakeUpAfterNarrowphase = !1)
                }
                var G = r.length;
                for (g = 0; g !== G; g++) {
                    var H = r[g];
                    H.update();
                    for (var I = 0, X = H.equations.length; I !== X; I++) {
                        var Y = H.equations[I];
                        u.addEquation(Y)
                    }
                }
                u.solve(e, this), s && (y.solve = performance.now() - f), u.removeAllEquations();
                var Z = Math.pow;
                for (g = 0; g !== t; g++) {
                    var x = l[g];
                    if (x.type & a) {
                        var $ = Z(1 - x.linearDamping, e),
                            _ = x.velocity;
                        _.mult($, _);
                        var ef = x.angularVelocity;
                        if (ef) {
                            var ff = Z(1 - x.angularDamping, e);
                            ef.mult(ff, ef)
                        }
                    }
                }
                for (this.dispatchEvent(v), g = 0; g !== t; g++) {
                    var x = l[g];
                    x.preStep && x.preStep.call(x)
                }
                s && (f = performance.now()); {
                    var nf = q,
                        of = z,
                        df = this.stepnumber,
                        tf = c.DYNAMIC | c.KINEMATIC,
                        lf = df % (this.quatNormalizeSkip + 1) === 0,
                        uf = this.quatNormalizeFast,
                        pf = .5 * e;
                    o.types.PLANE, o.types.CONVEXPOLYHEDRON
                }
                for (g = 0; g !== t; g++) {
                    var sf = l[g],
                        yf = sf.force,
                        cf = sf.torque;
                    if (sf.type & tf && sf.sleepState !== c.SLEEPING) {
                        var af = sf.velocity,
                            rf = sf.angularVelocity,
                            wf = sf.position,
                            bf = sf.quaternion,
                            mf = sf.invMass,
                            Nf = sf.invInertiaWorld;
                        af.x += yf.x * mf * e, af.y += yf.y * mf * e, af.z += yf.z * mf * e, sf.angularVelocity && (Nf.vmult(cf, B), B.mult(e, B), B.vadd(rf, rf)), wf.x += af.x * e, wf.y += af.y * e, wf.z += af.z * e, sf.angularVelocity && (nf.set(rf.x, rf.y, rf.z, 0), nf.mult(bf, of ), bf.x += pf * of .x, bf.y += pf * of .y, bf.z += pf * of .z, bf.w += pf * of .w, lf && (uf ? bf.normalizeFast() : bf.normalize())), sf.aabb && (sf.aabbNeedsUpdate = !0), sf.updateInertiaWorld && sf.updateInertiaWorld()
                    }
                }
                for (this.clearForces(), this.broadphase.dirty = !0, s && (y.integrate = performance.now() - f), this.time += e, this.stepnumber += 1, this.dispatchEvent(j), g = 0; g !== t; g++) {
                    var x = l[g],
                        gf = x.postStep;
                    gf && gf.call(x)
                }
                if (this.allowSleep)
                    for (g = 0; g !== t; g++) l[g].sleepTick(this.time)
            }, n.prototype.clearForces = function() {
                for (var e = this.bodies, f = e.length, n = 0; n !== f; n++) {
                    {
                        var o = e[n];
                        o.force, o.torque
                    }
                    o.force.set(0, 0, 0), o.torque.set(0, 0, 0)
                }
            }
        }, {
            "../collision/AABB": 3,
            "../collision/ArrayCollisionMatrix": 4,
            "../collision/NaiveBroadphase": 7,
            "../collision/Ray": 9,
            "../collision/RaycastResult": 10,
            "../equations/ContactEquation": 19,
            "../equations/FrictionEquation": 21,
            "../material/ContactMaterial": 24,
            "../material/Material": 25,
            "../math/Quaternion": 28,
            "../math/Vec3": 30,
            "../objects/Body": 31,
            "../shapes/Shape": 43,
            "../solver/GSSolver": 46,
            "../utils/EventTarget": 49,
            "../utils/TupleDictionary": 52,
            "../utils/Vec3Pool": 54,
            "./Narrowphase": 55
        }]
    }, {}, [2])(2)
});
! function(t) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = t();
    else if ("function" == typeof define && define.amd) define([], t);
    else {
        var r;
        r = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, r.msgpack = t()
    }
}(function() {
    return function t(r, e, n) {
        function i(f, u) {
            if (!e[f]) {
                if (!r[f]) {
                    var a = "function" == typeof require && require;
                    if (!u && a) return a(f, !0);
                    if (o) return o(f, !0);
                    var s = new Error("Cannot find module '" + f + "'");
                    throw s.code = "MODULE_NOT_FOUND", s
                }
                var c = e[f] = {
                    exports: {}
                };
                r[f][0].call(c.exports, function(t) {
                    var e = r[f][1][t];
                    return i(e ? e : t)
                }, c, c.exports, t, r, e, n)
            }
            return e[f].exports
        }
        for (var o = "function" == typeof require && require, f = 0; f < n.length; f++) i(n[f]);
        return i
    }({
        1: [function(t, r, e) {
            e.encode = t("./encode").encode, e.decode = t("./decode").decode, e.Encoder = t("./encoder").Encoder, e.Decoder = t("./decoder").Decoder, e.createCodec = t("./ext").createCodec, e.codec = t("./codec").codec
        }, {
            "./codec": 10,
            "./decode": 12,
            "./decoder": 13,
            "./encode": 15,
            "./encoder": 16,
            "./ext": 20
        }],
        2: [function(t, r, e) {
            (function(Buffer) {
                function t(t) {
                    return t && t.isBuffer && t
                }
                r.exports = t("undefined" != typeof Buffer && Buffer) || t(this.Buffer) || t("undefined" != typeof window && window.Buffer) || this.Buffer
            }).call(this, t("buffer").Buffer)
        }, {
            buffer: 29
        }],
        3: [function(t, r, e) {
            function n(t, r) {
                for (var e = this, n = r || (r |= 0), i = t.length, o = 0, f = 0; f < i;) o = t.charCodeAt(f++), o < 128 ? e[n++] = o : o < 2048 ? (e[n++] = 192 | o >>> 6, e[n++] = 128 | 63 & o) : o < 55296 || o > 57343 ? (e[n++] = 224 | o >>> 12, e[n++] = 128 | o >>> 6 & 63, e[n++] = 128 | 63 & o) : (o = (o - 55296 << 10 | t.charCodeAt(f++) - 56320) + 65536, e[n++] = 240 | o >>> 18, e[n++] = 128 | o >>> 12 & 63, e[n++] = 128 | o >>> 6 & 63, e[n++] = 128 | 63 & o);
                return n - r
            }

            function i(t, r, e) {
                var n = this,
                    i = 0 | r;
                e || (e = n.length);
                for (var o = "", f = 0; i < e;) f = n[i++], f < 128 ? o += String.fromCharCode(f) : (192 === (224 & f) ? f = (31 & f) << 6 | 63 & n[i++] : 224 === (240 & f) ? f = (15 & f) << 12 | (63 & n[i++]) << 6 | 63 & n[i++] : 240 === (248 & f) && (f = (7 & f) << 18 | (63 & n[i++]) << 12 | (63 & n[i++]) << 6 | 63 & n[i++]), f >= 65536 ? (f -= 65536, o += String.fromCharCode((f >>> 10) + 55296, (1023 & f) + 56320)) : o += String.fromCharCode(f));
                return o
            }

            function o(t, r, e, n) {
                var i;
                e || (e = 0), n || 0 === n || (n = this.length), r || (r = 0);
                var o = n - e;
                if (t === this && e < r && r < n)
                    for (i = o - 1; i >= 0; i--) t[i + r] = this[i + e];
                else
                    for (i = 0; i < o; i++) t[i + r] = this[i + e];
                return o
            }
            e.copy = o, e.toString = i, e.write = n
        }, {}],
        4: [function(t, r, e) {
            function n(t) {
                return new Array(t)
            }

            function i(t) {
                if (!o.isBuffer(t) && o.isView(t)) t = o.Uint8Array.from(t);
                else if (o.isArrayBuffer(t)) t = new Uint8Array(t);
                else {
                    if ("string" == typeof t) return o.from.call(e, t);
                    if ("number" == typeof t) throw new TypeError('"value" argument must not be a number')
                }
                return Array.prototype.slice.call(t)
            }
            var o = t("./bufferish"),
                e = r.exports = n(0);
            e.alloc = n, e.concat = o.concat, e.from = i
        }, {
            "./bufferish": 8
        }],
        5: [function(t, r, e) {
            function n(t) {
                return new Buffer(t)
            }

            function i(t) {
                if (!o.isBuffer(t) && o.isView(t)) t = o.Uint8Array.from(t);
                else if (o.isArrayBuffer(t)) t = new Uint8Array(t);
                else {
                    if ("string" == typeof t) return o.from.call(e, t);
                    if ("number" == typeof t) throw new TypeError('"value" argument must not be a number')
                }
                return Buffer.from && 1 !== Buffer.from.length ? Buffer.from(t) : new Buffer(t)
            }
            var o = t("./bufferish"),
                Buffer = o.global,
                e = r.exports = o.hasBuffer ? n(0) : [];
            e.alloc = o.hasBuffer && Buffer.alloc || n, e.concat = o.concat, e.from = i
        }, {
            "./bufferish": 8
        }],
        6: [function(t, r, e) {
            function n(t, r, e, n) {
                var o = a.isBuffer(this),
                    f = a.isBuffer(t);
                if (o && f) return this.copy(t, r, e, n);
                if (c || o || f || !a.isView(this) || !a.isView(t)) return u.copy.call(this, t, r, e, n);
                var s = e || null != n ? i.call(this, e, n) : this;
                return t.set(s, r), s.length
            }

            function i(t, r) {
                var e = this.slice || !c && this.subarray;
                if (e) return e.call(this, t, r);
                var i = a.alloc.call(this, r - t);
                return n.call(this, i, 0, t, r), i
            }

            function o(t, r, e) {
                var n = !s && a.isBuffer(this) ? this.toString : u.toString;
                return n.apply(this, arguments)
            }

            function f(t) {
                function r() {
                    var r = this[t] || u[t];
                    return r.apply(this, arguments)
                }
                return r
            }
            var u = t("./buffer-lite");
            e.copy = n, e.slice = i, e.toString = o, e.write = f("write");
            var a = t("./bufferish"),
                Buffer = a.global,
                s = a.hasBuffer && "TYPED_ARRAY_SUPPORT" in Buffer,
                c = s && !Buffer.TYPED_ARRAY_SUPPORT
        }, {
            "./buffer-lite": 3,
            "./bufferish": 8
        }],
        7: [function(t, r, e) {
            function n(t) {
                return new Uint8Array(t)
            }

            function i(t) {
                if (o.isView(t)) {
                    var r = t.byteOffset,
                        n = t.byteLength;
                    t = t.buffer, t.byteLength !== n && (t.slice ? t = t.slice(r, r + n) : (t = new Uint8Array(t), t.byteLength !== n && (t = Array.prototype.slice.call(t, r, r + n))))
                } else {
                    if ("string" == typeof t) return o.from.call(e, t);
                    if ("number" == typeof t) throw new TypeError('"value" argument must not be a number')
                }
                return new Uint8Array(t)
            }
            var o = t("./bufferish"),
                e = r.exports = o.hasArrayBuffer ? n(0) : [];
            e.alloc = n, e.concat = o.concat, e.from = i
        }, {
            "./bufferish": 8
        }],
        8: [function(t, r, e) {
            function n(t) {
                return "string" == typeof t ? u.call(this, t) : a(this).from(t)
            }

            function i(t) {
                return a(this).alloc(t)
            }

            function o(t, r) {
                function n(t) {
                    r += t.length
                }

                function o(t) {
                    a += w.copy.call(t, u, a)
                }
                r || (r = 0, Array.prototype.forEach.call(t, n));
                var f = this !== e && this || t[0],
                    u = i.call(f, r),
                    a = 0;
                return Array.prototype.forEach.call(t, o), u
            }

            function f(t) {
                return t instanceof ArrayBuffer || E(t)
            }

            function u(t) {
                var r = 3 * t.length,
                    e = i.call(this, r),
                    n = w.write.call(e, t);
                return r !== n && (e = w.slice.call(e, 0, n)), e
            }

            function a(t) {
                return d(t) ? g : y(t) ? b : p(t) ? v : h ? g : l ? b : v
            }

            function s() {
                return !1
            }

            function c(t, r) {
                return t = "[object " + t + "]",
                    function(e) {
                        return null != e && {}.toString.call(r ? e[r] : e) === t
                    }
            }
            var Buffer = e.global = t("./buffer-global"),
                h = e.hasBuffer = Buffer && !!Buffer.isBuffer,
                l = e.hasArrayBuffer = "undefined" != typeof ArrayBuffer,
                p = e.isArray = t("isarray");
            e.isArrayBuffer = l ? f : s;
            var d = e.isBuffer = h ? Buffer.isBuffer : s,
                y = e.isView = l ? ArrayBuffer.isView || c("ArrayBuffer", "buffer") : s;
            e.alloc = i, e.concat = o, e.from = n;
            var v = e.Array = t("./bufferish-array"),
                g = e.Buffer = t("./bufferish-buffer"),
                b = e.Uint8Array = t("./bufferish-uint8array"),
                w = e.prototype = t("./bufferish-proto"),
                E = c("ArrayBuffer")
        }, {
            "./buffer-global": 2,
            "./bufferish-array": 4,
            "./bufferish-buffer": 5,
            "./bufferish-proto": 6,
            "./bufferish-uint8array": 7,
            isarray: 34
        }],
        9: [function(t, r, e) {
            function n(t) {
                return this instanceof n ? (this.options = t, void this.init()) : new n(t)
            }

            function i(t) {
                for (var r in t) n.prototype[r] = o(n.prototype[r], t[r])
            }

            function o(t, r) {
                function e() {
                    return t.apply(this, arguments), r.apply(this, arguments)
                }
                return t && r ? e : t || r
            }

            function f(t) {
                function r(t, r) {
                    return r(t)
                }
                return t = t.slice(),
                    function(e) {
                        return t.reduce(r, e)
                    }
            }

            function u(t) {
                return s(t) ? f(t) : t
            }

            function a(t) {
                return new n(t)
            }
            var s = t("isarray");
            e.createCodec = a, e.install = i, e.filter = u;
            var c = t("./bufferish");
            n.prototype.init = function() {
                var t = this.options;
                return t && t.uint8array && (this.bufferish = c.Uint8Array), this
            }, e.preset = a({
                preset: !0
            })
        }, {
            "./bufferish": 8,
            isarray: 34
        }],
        10: [function(t, r, e) {
            t("./read-core"), t("./write-core"), e.codec = {
                preset: t("./codec-base").preset
            }
        }, {
            "./codec-base": 9,
            "./read-core": 22,
            "./write-core": 25
        }],
        11: [function(t, r, e) {
            function n(t) {
                if (!(this instanceof n)) return new n(t);
                if (t && (this.options = t, t.codec)) {
                    var r = this.codec = t.codec;
                    r.bufferish && (this.bufferish = r.bufferish)
                }
            }
            e.DecodeBuffer = n;
            var i = t("./read-core").preset,
                o = t("./flex-buffer").FlexDecoder;
            o.mixin(n.prototype), n.prototype.codec = i, n.prototype.fetch = function() {
                return this.codec.decode(this)
            }
        }, {
            "./flex-buffer": 21,
            "./read-core": 22
        }],
        12: [function(t, r, e) {
            function n(t, r) {
                var e = new i(r);
                return e.write(t), e.read()
            }
            e.decode = n;
            var i = t("./decode-buffer").DecodeBuffer
        }, {
            "./decode-buffer": 11
        }],
        13: [function(t, r, e) {
            function n(t) {
                return this instanceof n ? void o.call(this, t) : new n(t)
            }
            e.Decoder = n;
            var i = t("event-lite"),
                o = t("./decode-buffer").DecodeBuffer;
            n.prototype = new o, i.mixin(n.prototype), n.prototype.decode = function(t) {
                arguments.length && this.write(t), this.flush()
            }, n.prototype.push = function(t) {
                this.emit("data", t)
            }, n.prototype.end = function(t) {
                this.decode(t), this.emit("end")
            }
        }, {
            "./decode-buffer": 11,
            "event-lite": 31
        }],
        14: [function(t, r, e) {
            function n(t) {
                if (!(this instanceof n)) return new n(t);
                if (t && (this.options = t, t.codec)) {
                    var r = this.codec = t.codec;
                    r.bufferish && (this.bufferish = r.bufferish)
                }
            }
            e.EncodeBuffer = n;
            var i = t("./write-core").preset,
                o = t("./flex-buffer").FlexEncoder;
            o.mixin(n.prototype), n.prototype.codec = i, n.prototype.write = function(t) {
                this.codec.encode(this, t)
            }
        }, {
            "./flex-buffer": 21,
            "./write-core": 25
        }],
        15: [function(t, r, e) {
            function n(t, r) {
                var e = new i(r);
                return e.write(t), e.read()
            }
            e.encode = n;
            var i = t("./encode-buffer").EncodeBuffer
        }, {
            "./encode-buffer": 14
        }],
        16: [function(t, r, e) {
            function n(t) {
                return this instanceof n ? void o.call(this, t) : new n(t)
            }
            e.Encoder = n;
            var i = t("event-lite"),
                o = t("./encode-buffer").EncodeBuffer;
            n.prototype = new o, i.mixin(n.prototype), n.prototype.encode = function(t) {
                this.write(t), this.emit("data", this.read())
            }, n.prototype.end = function(t) {
                arguments.length && this.encode(t), this.flush(), this.emit("end")
            }
        }, {
            "./encode-buffer": 14,
            "event-lite": 31
        }],
        17: [function(t, r, e) {
            function n(t, r) {
                return this instanceof n ? (this.buffer = i.from(t), void(this.type = r)) : new n(t, r)
            }
            e.ExtBuffer = n;
            var i = t("./bufferish")
        }, {
            "./bufferish": 8
        }],
        18: [function(t, r, e) {
            function n(t) {
                t.addExtPacker(14, Error, [u, i]), t.addExtPacker(1, EvalError, [u, i]), t.addExtPacker(2, RangeError, [u, i]), t.addExtPacker(3, ReferenceError, [u, i]), t.addExtPacker(4, SyntaxError, [u, i]), t.addExtPacker(5, TypeError, [u, i]), t.addExtPacker(6, URIError, [u, i]), t.addExtPacker(10, RegExp, [f, i]), t.addExtPacker(11, Boolean, [o, i]), t.addExtPacker(12, String, [o, i]), t.addExtPacker(13, Date, [Number, i]), t.addExtPacker(15, Number, [o, i]), "undefined" != typeof Uint8Array && (t.addExtPacker(17, Int8Array, c), t.addExtPacker(18, Uint8Array, c), t.addExtPacker(19, Int16Array, c), t.addExtPacker(20, Uint16Array, c), t.addExtPacker(21, Int32Array, c), t.addExtPacker(22, Uint32Array, c), t.addExtPacker(23, Float32Array, c), "undefined" != typeof Float64Array && t.addExtPacker(24, Float64Array, c), "undefined" != typeof Uint8ClampedArray && t.addExtPacker(25, Uint8ClampedArray, c), t.addExtPacker(26, ArrayBuffer, c), t.addExtPacker(29, DataView, c)), s.hasBuffer && t.addExtPacker(27, Buffer, s.from)
            }

            function i(r) {
                return a || (a = t("./encode").encode), a(r)
            }

            function o(t) {
                return t.valueOf()
            }

            function f(t) {
                t = RegExp.prototype.toString.call(t).split("/"), t.shift();
                var r = [t.pop()];
                return r.unshift(t.join("/")), r
            }

            function u(t) {
                var r = {};
                for (var e in h) r[e] = t[e];
                return r
            }
            e.setExtPackers = n;
            var a, s = t("./bufferish"),
                Buffer = s.global,
                c = s.Uint8Array.from,
                h = {
                    name: 1,
                    message: 1,
                    stack: 1,
                    columnNumber: 1,
                    fileName: 1,
                    lineNumber: 1
                }
        }, {
            "./bufferish": 8,
            "./encode": 15
        }],
        19: [function(t, r, e) {
            function n(t) {
                t.addExtUnpacker(14, [i, f(Error)]), t.addExtUnpacker(1, [i, f(EvalError)]), t.addExtUnpacker(2, [i, f(RangeError)]), t.addExtUnpacker(3, [i, f(ReferenceError)]), t.addExtUnpacker(4, [i, f(SyntaxError)]), t.addExtUnpacker(5, [i, f(TypeError)]), t.addExtUnpacker(6, [i, f(URIError)]), t.addExtUnpacker(10, [i, o]), t.addExtUnpacker(11, [i, u(Boolean)]), t.addExtUnpacker(12, [i, u(String)]), t.addExtUnpacker(13, [i, u(Date)]), t.addExtUnpacker(15, [i, u(Number)]), "undefined" != typeof Uint8Array && (t.addExtUnpacker(17, u(Int8Array)), t.addExtUnpacker(18, u(Uint8Array)), t.addExtUnpacker(19, [a, u(Int16Array)]), t.addExtUnpacker(20, [a, u(Uint16Array)]), t.addExtUnpacker(21, [a, u(Int32Array)]), t.addExtUnpacker(22, [a, u(Uint32Array)]), t.addExtUnpacker(23, [a, u(Float32Array)]), "undefined" != typeof Float64Array && t.addExtUnpacker(24, [a, u(Float64Array)]), "undefined" != typeof Uint8ClampedArray && t.addExtUnpacker(25, u(Uint8ClampedArray)), t.addExtUnpacker(26, a), t.addExtUnpacker(29, [a, u(DataView)])), c.hasBuffer && t.addExtUnpacker(27, u(Buffer))
            }

            function i(r) {
                return s || (s = t("./decode").decode), s(r)
            }

            function o(t) {
                return RegExp.apply(null, t)
            }

            function f(t) {
                return function(r) {
                    var e = new t;
                    for (var n in h) e[n] = r[n];
                    return e
                }
            }

            function u(t) {
                return function(r) {
                    return new t(r)
                }
            }

            function a(t) {
                return new Uint8Array(t).buffer
            }
            e.setExtUnpackers = n;
            var s, c = t("./bufferish"),
                Buffer = c.global,
                h = {
                    name: 1,
                    message: 1,
                    stack: 1,
                    columnNumber: 1,
                    fileName: 1,
                    lineNumber: 1
                }
        }, {
            "./bufferish": 8,
            "./decode": 12
        }],
        20: [function(t, r, e) {
            t("./read-core"), t("./write-core"), e.createCodec = t("./codec-base").createCodec
        }, {
            "./codec-base": 9,
            "./read-core": 22,
            "./write-core": 25
        }],
        21: [function(t, r, e) {
            function n() {
                if (!(this instanceof n)) return new n
            }

            function i() {
                if (!(this instanceof i)) return new i
            }

            function o() {
                function t(t) {
                    var r = this.offset ? p.prototype.slice.call(this.buffer, this.offset) : this.buffer;
                    this.buffer = r ? t ? this.bufferish.concat([r, t]) : r : t, this.offset = 0
                }

                function r() {
                    for (; this.offset < this.buffer.length;) {
                        var t, r = this.offset;
                        try {
                            t = this.fetch()
                        } catch (t) {
                            if (t && t.message != v) throw t;
                            this.offset = r;
                            break
                        }
                        this.push(t)
                    }
                }

                function e(t) {
                    var r = this.offset,
                        e = r + t;
                    if (e > this.buffer.length) throw new Error(v);
                    return this.offset = e, r
                }
                return {
                    bufferish: p,
                    write: t,
                    fetch: a,
                    flush: r,
                    push: c,
                    pull: h,
                    read: s,
                    reserve: e,
                    offset: 0
                }
            }

            function f() {
                function t() {
                    var t = this.start;
                    if (t < this.offset) {
                        var r = this.start = this.offset;
                        return p.prototype.slice.call(this.buffer, t, r)
                    }
                }

                function r() {
                    for (; this.start < this.offset;) {
                        var t = this.fetch();
                        t && this.push(t)
                    }
                }

                function e() {
                    var t = this.buffers || (this.buffers = []),
                        r = t.length > 1 ? this.bufferish.concat(t) : t[0];
                    return t.length = 0, r
                }

                function n(t) {
                    var r = 0 | t;
                    if (this.buffer) {
                        var e = this.buffer.length,
                            n = 0 | this.offset,
                            i = n + r;
                        if (i < e) return this.offset = i, n;
                        this.flush(), t = Math.max(t, Math.min(2 * e, this.maxBufferSize))
                    }
                    return t = Math.max(t, this.minBufferSize), this.buffer = this.bufferish.alloc(t), this.start = 0, this.offset = r, 0
                }

                function i(t) {
                    var r = t.length;
                    if (r > this.minBufferSize) this.flush(), this.push(t);
                    else {
                        var e = this.reserve(r);
                        p.prototype.copy.call(t, this.buffer, e)
                    }
                }
                return {
                    bufferish: p,
                    write: u,
                    fetch: t,
                    flush: r,
                    push: c,
                    pull: e,
                    read: s,
                    reserve: n,
                    send: i,
                    maxBufferSize: y,
                    minBufferSize: d,
                    offset: 0,
                    start: 0
                }
            }

            function u() {
                throw new Error("method not implemented: write()")
            }

            function a() {
                throw new Error("method not implemented: fetch()")
            }

            function s() {
                var t = this.buffers && this.buffers.length;
                return t ? (this.flush(), this.pull()) : this.fetch()
            }

            function c(t) {
                var r = this.buffers || (this.buffers = []);
                r.push(t)
            }

            function h() {
                var t = this.buffers || (this.buffers = []);
                return t.shift()
            }

            function l(t) {
                function r(r) {
                    for (var e in t) r[e] = t[e];
                    return r
                }
                return r
            }
            e.FlexDecoder = n, e.FlexEncoder = i;
            var p = t("./bufferish"),
                d = 2048,
                y = 65536,
                v = "BUFFER_SHORTAGE";
            n.mixin = l(o()), n.mixin(n.prototype), i.mixin = l(f()), i.mixin(i.prototype)
        }, {
            "./bufferish": 8
        }],
        22: [function(t, r, e) {
            function n(t) {
                function r(t) {
                    var r = s(t),
                        n = e[r];
                    if (!n) throw new Error("Invalid type: " + (r ? "0x" + r.toString(16) : r));
                    return n(t)
                }
                var e = c.getReadToken(t);
                return r
            }

            function i() {
                var t = this.options;
                return this.decode = n(t), t && t.preset && a.setExtUnpackers(this), this
            }

            function o(t, r) {
                var e = this.extUnpackers || (this.extUnpackers = []);
                e[t] = h.filter(r)
            }

            function f(t) {
                function r(r) {
                    return new u(r, t)
                }
                var e = this.extUnpackers || (this.extUnpackers = []);
                return e[t] || r
            }
            var u = t("./ext-buffer").ExtBuffer,
                a = t("./ext-unpacker"),
                s = t("./read-format").readUint8,
                c = t("./read-token"),
                h = t("./codec-base");
            h.install({
                addExtUnpacker: o,
                getExtUnpacker: f,
                init: i
            }), e.preset = i.call(h.preset)
        }, {
            "./codec-base": 9,
            "./ext-buffer": 17,
            "./ext-unpacker": 19,
            "./read-format": 23,
            "./read-token": 24
        }],
        23: [function(t, r, e) {
            function n(t) {
                var r = k.hasArrayBuffer && t && t.binarraybuffer,
                    e = t && t.int64,
                    n = T && t && t.usemap,
                    B = {
                        map: n ? o : i,
                        array: f,
                        str: u,
                        bin: r ? s : a,
                        ext: c,
                        uint8: h,
                        uint16: p,
                        uint32: y,
                        uint64: g(8, e ? E : b),
                        int8: l,
                        int16: d,
                        int32: v,
                        int64: g(8, e ? A : w),
                        float32: g(4, m),
                        float64: g(8, x)
                    };
                return B
            }

            function i(t, r) {
                var e, n = {},
                    i = new Array(r),
                    o = new Array(r),
                    f = t.codec.decode;
                for (e = 0; e < r; e++) i[e] = f(t), o[e] = f(t);
                for (e = 0; e < r; e++) n[i[e]] = o[e];
                return n
            }

            function o(t, r) {
                var e, n = new Map,
                    i = new Array(r),
                    o = new Array(r),
                    f = t.codec.decode;
                for (e = 0; e < r; e++) i[e] = f(t), o[e] = f(t);
                for (e = 0; e < r; e++) n.set(i[e], o[e]);
                return n
            }

            function f(t, r) {
                for (var e = new Array(r), n = t.codec.decode, i = 0; i < r; i++) e[i] = n(t);
                return e
            }

            function u(t, r) {
                var e = t.reserve(r),
                    n = e + r;
                return _.toString.call(t.buffer, "utf-8", e, n)
            }

            function a(t, r) {
                var e = t.reserve(r),
                    n = e + r,
                    i = _.slice.call(t.buffer, e, n);
                return k.from(i)
            }

            function s(t, r) {
                var e = t.reserve(r),
                    n = e + r,
                    i = _.slice.call(t.buffer, e, n);
                return k.Uint8Array.from(i).buffer
            }

            function c(t, r) {
                var e = t.reserve(r + 1),
                    n = t.buffer[e++],
                    i = e + r,
                    o = t.codec.getExtUnpacker(n);
                if (!o) throw new Error("Invalid ext type: " + (n ? "0x" + n.toString(16) : n));
                var f = _.slice.call(t.buffer, e, i);
                return o(f)
            }

            function h(t) {
                var r = t.reserve(1);
                return t.buffer[r]
            }

            function l(t) {
                var r = t.reserve(1),
                    e = t.buffer[r];
                return 128 & e ? e - 256 : e
            }

            function p(t) {
                var r = t.reserve(2),
                    e = t.buffer;
                return e[r++] << 8 | e[r]
            }

            function d(t) {
                var r = t.reserve(2),
                    e = t.buffer,
                    n = e[r++] << 8 | e[r];
                return 32768 & n ? n - 65536 : n
            }

            function y(t) {
                var r = t.reserve(4),
                    e = t.buffer;
                return 16777216 * e[r++] + (e[r++] << 16) + (e[r++] << 8) + e[r]
            }

            function v(t) {
                var r = t.reserve(4),
                    e = t.buffer;
                return e[r++] << 24 | e[r++] << 16 | e[r++] << 8 | e[r]
            }

            function g(t, r) {
                return function(e) {
                    var n = e.reserve(t);
                    return r.call(e.buffer, n, S)
                }
            }

            function b(t) {
                return new P(this, t).toNumber()
            }

            function w(t) {
                return new R(this, t).toNumber()
            }

            function E(t) {
                return new P(this, t)
            }

            function A(t) {
                return new R(this, t)
            }

            function m(t) {
                return B.read(this, t, !1, 23, 4)
            }

            function x(t) {
                return B.read(this, t, !1, 52, 8)
            }
            var B = t("ieee754"),
                U = t("int64-buffer"),
                P = U.Uint64BE,
                R = U.Int64BE;
            e.getReadFormat = n, e.readUint8 = h;
            var k = t("./bufferish"),
                _ = t("./bufferish-proto"),
                T = "undefined" != typeof Map,
                S = !0
        }, {
            "./bufferish": 8,
            "./bufferish-proto": 6,
            ieee754: 32,
            "int64-buffer": 33
        }],
        24: [function(t, r, e) {
            function n(t) {
                var r = s.getReadFormat(t);
                return t && t.useraw ? o(r) : i(r)
            }

            function i(t) {
                var r, e = new Array(256);
                for (r = 0; r <= 127; r++) e[r] = f(r);
                for (r = 128; r <= 143; r++) e[r] = a(r - 128, t.map);
                for (r = 144; r <= 159; r++) e[r] = a(r - 144, t.array);
                for (r = 160; r <= 191; r++) e[r] = a(r - 160, t.str);
                for (e[192] = f(null), e[193] = null, e[194] = f(!1), e[195] = f(!0), e[196] = u(t.uint8, t.bin), e[197] = u(t.uint16, t.bin), e[198] = u(t.uint32, t.bin), e[199] = u(t.uint8, t.ext), e[200] = u(t.uint16, t.ext), e[201] = u(t.uint32, t.ext), e[202] = t.float32, e[203] = t.float64, e[204] = t.uint8, e[205] = t.uint16, e[206] = t.uint32, e[207] = t.uint64, e[208] = t.int8, e[209] = t.int16, e[210] = t.int32, e[211] = t.int64, e[212] = a(1, t.ext), e[213] = a(2, t.ext), e[214] = a(4, t.ext), e[215] = a(8, t.ext), e[216] = a(16, t.ext), e[217] = u(t.uint8, t.str), e[218] = u(t.uint16, t.str), e[219] = u(t.uint32, t.str), e[220] = u(t.uint16, t.array), e[221] = u(t.uint32, t.array), e[222] = u(t.uint16, t.map), e[223] = u(t.uint32, t.map), r = 224; r <= 255; r++) e[r] = f(r - 256);
                return e
            }

            function o(t) {
                var r, e = i(t).slice();
                for (e[217] = e[196], e[218] = e[197], e[219] = e[198], r = 160; r <= 191; r++) e[r] = a(r - 160, t.bin);
                return e
            }

            function f(t) {
                return function() {
                    return t
                }
            }

            function u(t, r) {
                return function(e) {
                    var n = t(e);
                    return r(e, n)
                }
            }

            function a(t, r) {
                return function(e) {
                    return r(e, t)
                }
            }
            var s = t("./read-format");
            e.getReadToken = n
        }, {
            "./read-format": 23
        }],
        25: [function(t, r, e) {
            function n(t) {
                function r(t, r) {
                    var n = e[typeof r];
                    if (!n) throw new Error('Unsupported type "' + typeof r + '": ' + r);
                    n(t, r)
                }
                var e = s.getWriteType(t);
                return r
            }

            function i() {
                var t = this.options;
                return this.encode = n(t), t && t.preset && a.setExtPackers(this), this
            }

            function o(t, r, e) {
                function n(r) {
                    return e && (r = e(r)), new u(r, t)
                }
                e = c.filter(e);
                var i = r.name;
                if (i && "Object" !== i) {
                    var o = this.extPackers || (this.extPackers = {});
                    o[i] = n
                } else {
                    var f = this.extEncoderList || (this.extEncoderList = []);
                    f.unshift([r, n])
                }
            }

            function f(t) {
                var r = this.extPackers || (this.extPackers = {}),
                    e = t.constructor,
                    n = e && e.name && r[e.name];
                if (n) return n;
                for (var i = this.extEncoderList || (this.extEncoderList = []), o = i.length, f = 0; f < o; f++) {
                    var u = i[f];
                    if (e === u[0]) return u[1]
                }
            }
            var u = t("./ext-buffer").ExtBuffer,
                a = t("./ext-packer"),
                s = t("./write-type"),
                c = t("./codec-base");
            c.install({
                addExtPacker: o,
                getExtPacker: f,
                init: i
            }), e.preset = i.call(c.preset)
        }, {
            "./codec-base": 9,
            "./ext-buffer": 17,
            "./ext-packer": 18,
            "./write-type": 27
        }],
        26: [function(t, r, e) {
            function n(t) {
                return t && t.uint8array ? i() : m || E.hasBuffer && t && t.safe ? f() : o()
            }

            function i() {
                var t = o();
                return t[202] = c(202, 4, p), t[203] = c(203, 8, d), t
            }

            function o() {
                var t = w.slice();
                return t[196] = u(196), t[197] = a(197), t[198] = s(198), t[199] = u(199), t[200] = a(200), t[201] = s(201), t[202] = c(202, 4, x.writeFloatBE || p, !0), t[203] = c(203, 8, x.writeDoubleBE || d, !0), t[204] = u(204), t[205] = a(205), t[206] = s(206), t[207] = c(207, 8, h), t[208] = u(208), t[209] = a(209), t[210] = s(210), t[211] = c(211, 8, l), t[217] = u(217), t[218] = a(218), t[219] = s(219), t[220] = a(220), t[221] = s(221), t[222] = a(222), t[223] = s(223), t
            }

            function f() {
                var t = w.slice();
                return t[196] = c(196, 1, Buffer.prototype.writeUInt8), t[197] = c(197, 2, Buffer.prototype.writeUInt16BE), t[198] = c(198, 4, Buffer.prototype.writeUInt32BE), t[199] = c(199, 1, Buffer.prototype.writeUInt8), t[200] = c(200, 2, Buffer.prototype.writeUInt16BE), t[201] = c(201, 4, Buffer.prototype.writeUInt32BE), t[202] = c(202, 4, Buffer.prototype.writeFloatBE), t[203] = c(203, 8, Buffer.prototype.writeDoubleBE), t[204] = c(204, 1, Buffer.prototype.writeUInt8), t[205] = c(205, 2, Buffer.prototype.writeUInt16BE), t[206] = c(206, 4, Buffer.prototype.writeUInt32BE), t[207] = c(207, 8, h), t[208] = c(208, 1, Buffer.prototype.writeInt8), t[209] = c(209, 2, Buffer.prototype.writeInt16BE), t[210] = c(210, 4, Buffer.prototype.writeInt32BE), t[211] = c(211, 8, l), t[217] = c(217, 1, Buffer.prototype.writeUInt8), t[218] = c(218, 2, Buffer.prototype.writeUInt16BE), t[219] = c(219, 4, Buffer.prototype.writeUInt32BE), t[220] = c(220, 2, Buffer.prototype.writeUInt16BE), t[221] = c(221, 4, Buffer.prototype.writeUInt32BE), t[222] = c(222, 2, Buffer.prototype.writeUInt16BE), t[223] = c(223, 4, Buffer.prototype.writeUInt32BE), t
            }

            function u(t) {
                return function(r, e) {
                    var n = r.reserve(2),
                        i = r.buffer;
                    i[n++] = t, i[n] = e
                }
            }

            function a(t) {
                return function(r, e) {
                    var n = r.reserve(3),
                        i = r.buffer;
                    i[n++] = t, i[n++] = e >>> 8, i[n] = e
                }
            }

            function s(t) {
                return function(r, e) {
                    var n = r.reserve(5),
                        i = r.buffer;
                    i[n++] = t, i[n++] = e >>> 24, i[n++] = e >>> 16, i[n++] = e >>> 8, i[n] = e
                }
            }

            function c(t, r, e, n) {
                return function(i, o) {
                    var f = i.reserve(r + 1);
                    i.buffer[f++] = t, e.call(i.buffer, o, f, n)
                }
            }

            function h(t, r) {
                new g(this, r, t)
            }

            function l(t, r) {
                new b(this, r, t)
            }

            function p(t, r) {
                y.write(this, t, r, !1, 23, 4)
            }

            function d(t, r) {
                y.write(this, t, r, !1, 52, 8)
            }
            var y = t("ieee754"),
                v = t("int64-buffer"),
                g = v.Uint64BE,
                b = v.Int64BE,
                w = t("./write-uint8").uint8,
                E = t("./bufferish"),
                Buffer = E.global,
                A = E.hasBuffer && "TYPED_ARRAY_SUPPORT" in Buffer,
                m = A && !Buffer.TYPED_ARRAY_SUPPORT,
                x = E.hasBuffer && Buffer.prototype || {};
            e.getWriteToken = n
        }, {
            "./bufferish": 8,
            "./write-uint8": 28,
            ieee754: 32,
            "int64-buffer": 33
        }],
        27: [function(t, r, e) {
            function n(t) {
                function r(t, r) {
                    var e = r ? 195 : 194;
                    _[e](t, r)
                }

                function e(t, r) {
                    var e, n = 0 | r;
                    return r !== n ? (e = 203, void _[e](t, r)) : (e = -32 <= n && n <= 127 ? 255 & n : 0 <= n ? n <= 255 ? 204 : n <= 65535 ? 205 : 206 : -128 <= n ? 208 : -32768 <= n ? 209 : 210, void _[e](t, n))
                }

                function n(t, r) {
                    var e = 207;
                    _[e](t, r.toArray())
                }

                function o(t, r) {
                    var e = 211;
                    _[e](t, r.toArray())
                }

                function v(t) {
                    return t < 32 ? 1 : t <= 255 ? 2 : t <= 65535 ? 3 : 5
                }

                function g(t) {
                    return t < 32 ? 1 : t <= 65535 ? 3 : 5
                }

                function b(t) {
                    function r(r, e) {
                        var n = e.length,
                            i = 5 + 3 * n;
                        r.offset = r.reserve(i);
                        var o = r.buffer,
                            f = t(n),
                            u = r.offset + f;
                        n = s.write.call(o, e, u);
                        var a = t(n);
                        if (f !== a) {
                            var c = u + a - f,
                                h = u + n;
                            s.copy.call(o, o, c, u, h)
                        }
                        var l = 1 === a ? 160 + n : a <= 3 ? 215 + a : 219;
                        _[l](r, n), r.offset += n
                    }
                    return r
                }

                function w(t, r) {
                    if (null === r) return A(t, r);
                    if (I(r)) return Y(t, r);
                    if (i(r)) return m(t, r);
                    if (f.isUint64BE(r)) return n(t, r);
                    if (u.isInt64BE(r)) return o(t, r);
                    var e = t.codec.getExtPacker(r);
                    return e && (r = e(r)), r instanceof l ? U(t, r) : void D(t, r)
                }

                function E(t, r) {
                    return I(r) ? k(t, r) : void w(t, r)
                }

                function A(t, r) {
                    var e = 192;
                    _[e](t, r)
                }

                function m(t, r) {
                    var e = r.length,
                        n = e < 16 ? 144 + e : e <= 65535 ? 220 : 221;
                    _[n](t, e);
                    for (var i = t.codec.encode, o = 0; o < e; o++) i(t, r[o])
                }

                function x(t, r) {
                    var e = r.length,
                        n = e < 255 ? 196 : e <= 65535 ? 197 : 198;
                    _[n](t, e), t.send(r)
                }

                function B(t, r) {
                    x(t, new Uint8Array(r))
                }

                function U(t, r) {
                    var e = r.buffer,
                        n = e.length,
                        i = y[n] || (n < 255 ? 199 : n <= 65535 ? 200 : 201);
                    _[i](t, n), h[r.type](t), t.send(e)
                }

                function P(t, r) {
                    var e = Object.keys(r),
                        n = e.length,
                        i = n < 16 ? 128 + n : n <= 65535 ? 222 : 223;
                    _[i](t, n);
                    var o = t.codec.encode;
                    e.forEach(function(e) {
                        o(t, e), o(t, r[e])
                    })
                }

                function R(t, r) {
                    if (!(r instanceof Map)) return P(t, r);
                    var e = r.size,
                        n = e < 16 ? 128 + e : e <= 65535 ? 222 : 223;
                    _[n](t, e);
                    var i = t.codec.encode;
                    r.forEach(function(r, e, n) {
                        i(t, e), i(t, r)
                    })
                }

                function k(t, r) {
                    var e = r.length,
                        n = e < 32 ? 160 + e : e <= 65535 ? 218 : 219;
                    _[n](t, e), t.send(r)
                }
                var _ = c.getWriteToken(t),
                    T = t && t.useraw,
                    S = p && t && t.binarraybuffer,
                    I = S ? a.isArrayBuffer : a.isBuffer,
                    Y = S ? B : x,
                    C = d && t && t.usemap,
                    D = C ? R : P,
                    O = {
                        boolean: r,
                        function: A,
                        number: e,
                        object: T ? E : w,
                        string: b(T ? g : v),
                        symbol: A,
                        undefined: A
                    };
                return O
            }
            var i = t("isarray"),
                o = t("int64-buffer"),
                f = o.Uint64BE,
                u = o.Int64BE,
                a = t("./bufferish"),
                s = t("./bufferish-proto"),
                c = t("./write-token"),
                h = t("./write-uint8").uint8,
                l = t("./ext-buffer").ExtBuffer,
                p = "undefined" != typeof Uint8Array,
                d = "undefined" != typeof Map,
                y = [];
            y[1] = 212, y[2] = 213, y[4] = 214, y[8] = 215, y[16] = 216, e.getWriteType = n
        }, {
            "./bufferish": 8,
            "./bufferish-proto": 6,
            "./ext-buffer": 17,
            "./write-token": 26,
            "./write-uint8": 28,
            "int64-buffer": 33,
            isarray: 34
        }],
        28: [function(t, r, e) {
            function n(t) {
                return function(r) {
                    var e = r.reserve(1);
                    r.buffer[e] = t
                }
            }
            for (var i = e.uint8 = new Array(256), o = 0; o <= 255; o++) i[o] = n(o)
        }, {}],
        29: [function(t, r, e) {
            (function(r) {
                "use strict";

                function n() {
                    try {
                        var t = new Uint8Array(1);
                        return t.__proto__ = {
                            __proto__: Uint8Array.prototype,
                            foo: function() {
                                return 42
                            }
                        }, 42 === t.foo() && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength
                    } catch (t) {
                        return !1
                    }
                }

                function i() {
                    return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
                }

                function o(t, r) {
                    if (i() < r) throw new RangeError("Invalid typed array length");
                    return Buffer.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(r), t.__proto__ = Buffer.prototype) : (null === t && (t = new Buffer(r)), t.length = r), t
                }

                function Buffer(t, r, e) {
                    if (!(Buffer.TYPED_ARRAY_SUPPORT || this instanceof Buffer)) return new Buffer(t, r, e);
                    if ("number" == typeof t) {
                        if ("string" == typeof r) throw new Error("If encoding is specified then the first argument must be a string");
                        return s(this, t)
                    }
                    return f(this, t, r, e)
                }

                function f(t, r, e, n) {
                    if ("number" == typeof r) throw new TypeError('"value" argument must not be a number');
                    return "undefined" != typeof ArrayBuffer && r instanceof ArrayBuffer ? l(t, r, e, n) : "string" == typeof r ? c(t, r, e) : p(t, r)
                }

                function u(t) {
                    if ("number" != typeof t) throw new TypeError('"size" argument must be a number');
                    if (t < 0) throw new RangeError('"size" argument must not be negative')
                }

                function a(t, r, e, n) {
                    return u(r), r <= 0 ? o(t, r) : void 0 !== e ? "string" == typeof n ? o(t, r).fill(e, n) : o(t, r).fill(e) : o(t, r)
                }

                function s(t, r) {
                    if (u(r), t = o(t, r < 0 ? 0 : 0 | d(r)), !Buffer.TYPED_ARRAY_SUPPORT)
                        for (var e = 0; e < r; ++e) t[e] = 0;
                    return t
                }

                function c(t, r, e) {
                    if ("string" == typeof e && "" !== e || (e = "utf8"), !Buffer.isEncoding(e)) throw new TypeError('"encoding" must be a valid string encoding');
                    var n = 0 | v(r, e);
                    t = o(t, n);
                    var i = t.write(r, e);
                    return i !== n && (t = t.slice(0, i)), t
                }

                function h(t, r) {
                    var e = r.length < 0 ? 0 : 0 | d(r.length);
                    t = o(t, e);
                    for (var n = 0; n < e; n += 1) t[n] = 255 & r[n];
                    return t
                }

                function l(t, r, e, n) {
                    if (r.byteLength, e < 0 || r.byteLength < e) throw new RangeError("'offset' is out of bounds");
                    if (r.byteLength < e + (n || 0)) throw new RangeError("'length' is out of bounds");
                    return r = void 0 === e && void 0 === n ? new Uint8Array(r) : void 0 === n ? new Uint8Array(r, e) : new Uint8Array(r, e, n), Buffer.TYPED_ARRAY_SUPPORT ? (t = r, t.__proto__ = Buffer.prototype) : t = h(t, r), t
                }

                function p(t, r) {
                    if (Buffer.isBuffer(r)) {
                        var e = 0 | d(r.length);
                        return t = o(t, e), 0 === t.length ? t : (r.copy(t, 0, 0, e), t)
                    }
                    if (r) {
                        if ("undefined" != typeof ArrayBuffer && r.buffer instanceof ArrayBuffer || "length" in r) return "number" != typeof r.length || H(r.length) ? o(t, 0) : h(t, r);
                        if ("Buffer" === r.type && Q(r.data)) return h(t, r.data)
                    }
                    throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
                }

                function d(t) {
                    if (t >= i()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + i().toString(16) + " bytes");
                    return 0 | t
                }

                function y(t) {
                    return +t != t && (t = 0), Buffer.alloc(+t)
                }

                function v(t, r) {
                    if (Buffer.isBuffer(t)) return t.length;
                    if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)) return t.byteLength;
                    "string" != typeof t && (t = "" + t);
                    var e = t.length;
                    if (0 === e) return 0;
                    for (var n = !1;;) switch (r) {
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return e;
                        case "utf8":
                        case "utf-8":
                        case void 0:
                            return q(t).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * e;
                        case "hex":
                            return e >>> 1;
                        case "base64":
                            return X(t).length;
                        default:
                            if (n) return q(t).length;
                            r = ("" + r).toLowerCase(), n = !0
                    }
                }

                function g(t, r, e) {
                    var n = !1;
                    if ((void 0 === r || r < 0) && (r = 0), r > this.length) return "";
                    if ((void 0 === e || e > this.length) && (e = this.length), e <= 0) return "";
                    if (e >>>= 0, r >>>= 0, e <= r) return "";
                    for (t || (t = "utf8");;) switch (t) {
                        case "hex":
                            return I(this, r, e);
                        case "utf8":
                        case "utf-8":
                            return k(this, r, e);
                        case "ascii":
                            return T(this, r, e);
                        case "latin1":
                        case "binary":
                            return S(this, r, e);
                        case "base64":
                            return R(this, r, e);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return Y(this, r, e);
                        default:
                            if (n) throw new TypeError("Unknown encoding: " + t);
                            t = (t + "").toLowerCase(), n = !0
                    }
                }

                function b(t, r, e) {
                    var n = t[r];
                    t[r] = t[e], t[e] = n
                }

                function w(t, r, e, n, i) {
                    if (0 === t.length) return -1;
                    if ("string" == typeof e ? (n = e, e = 0) : e > 2147483647 ? e = 2147483647 : e < -2147483648 && (e = -2147483648), e = +e, isNaN(e) && (e = i ? 0 : t.length - 1), e < 0 && (e = t.length + e), e >= t.length) {
                        if (i) return -1;
                        e = t.length - 1
                    } else if (e < 0) {
                        if (!i) return -1;
                        e = 0
                    }
                    if ("string" == typeof r && (r = Buffer.from(r, n)), Buffer.isBuffer(r)) return 0 === r.length ? -1 : E(t, r, e, n, i);
                    if ("number" == typeof r) return r = 255 & r, Buffer.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(t, r, e) : Uint8Array.prototype.lastIndexOf.call(t, r, e) : E(t, [r], e, n, i);
                    throw new TypeError("val must be string, number or Buffer")
                }

                function E(t, r, e, n, i) {
                    function o(t, r) {
                        return 1 === f ? t[r] : t.readUInt16BE(r * f)
                    }
                    var f = 1,
                        u = t.length,
                        a = r.length;
                    if (void 0 !== n && (n = String(n).toLowerCase(), "ucs2" === n || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                        if (t.length < 2 || r.length < 2) return -1;
                        f = 2, u /= 2, a /= 2, e /= 2
                    }
                    var s;
                    if (i) {
                        var c = -1;
                        for (s = e; s < u; s++)
                            if (o(t, s) === o(r, c === -1 ? 0 : s - c)) {
                                if (c === -1 && (c = s), s - c + 1 === a) return c * f
                            } else c !== -1 && (s -= s - c), c = -1
                    } else
                        for (e + a > u && (e = u - a), s = e; s >= 0; s--) {
                            for (var h = !0, l = 0; l < a; l++)
                                if (o(t, s + l) !== o(r, l)) {
                                    h = !1;
                                    break
                                }
                            if (h) return s
                        }
                    return -1
                }

                function A(t, r, e, n) {
                    e = Number(e) || 0;
                    var i = t.length - e;
                    n ? (n = Number(n), n > i && (n = i)) : n = i;
                    var o = r.length;
                    if (o % 2 !== 0) throw new TypeError("Invalid hex string");
                    n > o / 2 && (n = o / 2);
                    for (var f = 0; f < n; ++f) {
                        var u = parseInt(r.substr(2 * f, 2), 16);
                        if (isNaN(u)) return f;
                        t[e + f] = u
                    }
                    return f
                }

                function m(t, r, e, n) {
                    return G(q(r, t.length - e), t, e, n)
                }

                function x(t, r, e, n) {
                    return G(W(r), t, e, n)
                }

                function B(t, r, e, n) {
                    return x(t, r, e, n)
                }

                function U(t, r, e, n) {
                    return G(X(r), t, e, n)
                }

                function P(t, r, e, n) {
                    return G(J(r, t.length - e), t, e, n)
                }

                function R(t, r, e) {
                    return 0 === r && e === t.length ? Z.fromByteArray(t) : Z.fromByteArray(t.slice(r, e))
                }

                function k(t, r, e) {
                    e = Math.min(t.length, e);
                    for (var n = [], i = r; i < e;) {
                        var o = t[i],
                            f = null,
                            u = o > 239 ? 4 : o > 223 ? 3 : o > 191 ? 2 : 1;
                        if (i + u <= e) {
                            var a, s, c, h;
                            switch (u) {
                                case 1:
                                    o < 128 && (f = o);
                                    break;
                                case 2:
                                    a = t[i + 1], 128 === (192 & a) && (h = (31 & o) << 6 | 63 & a, h > 127 && (f = h));
                                    break;
                                case 3:
                                    a = t[i + 1], s = t[i + 2], 128 === (192 & a) && 128 === (192 & s) && (h = (15 & o) << 12 | (63 & a) << 6 | 63 & s, h > 2047 && (h < 55296 || h > 57343) && (f = h));
                                    break;
                                case 4:
                                    a = t[i + 1], s = t[i + 2], c = t[i + 3], 128 === (192 & a) && 128 === (192 & s) && 128 === (192 & c) && (h = (15 & o) << 18 | (63 & a) << 12 | (63 & s) << 6 | 63 & c, h > 65535 && h < 1114112 && (f = h))
                            }
                        }
                        null === f ? (f = 65533, u = 1) : f > 65535 && (f -= 65536, n.push(f >>> 10 & 1023 | 55296), f = 56320 | 1023 & f), n.push(f), i += u
                    }
                    return _(n)
                }

                function _(t) {
                    var r = t.length;
                    if (r <= $) return String.fromCharCode.apply(String, t);
                    for (var e = "", n = 0; n < r;) e += String.fromCharCode.apply(String, t.slice(n, n += $));
                    return e
                }

                function T(t, r, e) {
                    var n = "";
                    e = Math.min(t.length, e);
                    for (var i = r; i < e; ++i) n += String.fromCharCode(127 & t[i]);
                    return n
                }

                function S(t, r, e) {
                    var n = "";
                    e = Math.min(t.length, e);
                    for (var i = r; i < e; ++i) n += String.fromCharCode(t[i]);
                    return n
                }

                function I(t, r, e) {
                    var n = t.length;
                    (!r || r < 0) && (r = 0), (!e || e < 0 || e > n) && (e = n);
                    for (var i = "", o = r; o < e; ++o) i += V(t[o]);
                    return i
                }

                function Y(t, r, e) {
                    for (var n = t.slice(r, e), i = "", o = 0; o < n.length; o += 2) i += String.fromCharCode(n[o] + 256 * n[o + 1]);
                    return i
                }

                function C(t, r, e) {
                    if (t % 1 !== 0 || t < 0) throw new RangeError("offset is not uint");
                    if (t + r > e) throw new RangeError("Trying to access beyond buffer length")
                }

                function D(t, r, e, n, i, o) {
                    if (!Buffer.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (r > i || r < o) throw new RangeError('"value" argument is out of bounds');
                    if (e + n > t.length) throw new RangeError("Index out of range")
                }

                function O(t, r, e, n) {
                    r < 0 && (r = 65535 + r + 1);
                    for (var i = 0, o = Math.min(t.length - e, 2); i < o; ++i) t[e + i] = (r & 255 << 8 * (n ? i : 1 - i)) >>> 8 * (n ? i : 1 - i)
                }

                function L(t, r, e, n) {
                    r < 0 && (r = 4294967295 + r + 1);
                    for (var i = 0, o = Math.min(t.length - e, 4); i < o; ++i) t[e + i] = r >>> 8 * (n ? i : 3 - i) & 255
                }

                function M(t, r, e, n, i, o) {
                    if (e + n > t.length) throw new RangeError("Index out of range");
                    if (e < 0) throw new RangeError("Index out of range")
                }

                function N(t, r, e, n, i) {
                    return i || M(t, r, e, 4, 3.4028234663852886e38, -3.4028234663852886e38), K.write(t, r, e, n, 23, 4), e + 4
                }

                function F(t, r, e, n, i) {
                    return i || M(t, r, e, 8, 1.7976931348623157e308, -1.7976931348623157e308), K.write(t, r, e, n, 52, 8), e + 8
                }

                function j(t) {
                    if (t = z(t).replace(tt, ""), t.length < 2) return "";
                    for (; t.length % 4 !== 0;) t += "=";
                    return t
                }

                function z(t) {
                    return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "")
                }

                function V(t) {
                    return t < 16 ? "0" + t.toString(16) : t.toString(16)
                }

                function q(t, r) {
                    r = r || 1 / 0;
                    for (var e, n = t.length, i = null, o = [], f = 0; f < n; ++f) {
                        if (e = t.charCodeAt(f), e > 55295 && e < 57344) {
                            if (!i) {
                                if (e > 56319) {
                                    (r -= 3) > -1 && o.push(239, 191, 189);
                                    continue
                                }
                                if (f + 1 === n) {
                                    (r -= 3) > -1 && o.push(239, 191, 189);
                                    continue
                                }
                                i = e;
                                continue
                            }
                            if (e < 56320) {
                                (r -= 3) > -1 && o.push(239, 191, 189), i = e;
                                continue
                            }
                            e = (i - 55296 << 10 | e - 56320) + 65536
                        } else i && (r -= 3) > -1 && o.push(239, 191, 189);
                        if (i = null, e < 128) {
                            if ((r -= 1) < 0) break;
                            o.push(e)
                        } else if (e < 2048) {
                            if ((r -= 2) < 0) break;
                            o.push(e >> 6 | 192, 63 & e | 128)
                        } else if (e < 65536) {
                            if ((r -= 3) < 0) break;
                            o.push(e >> 12 | 224, e >> 6 & 63 | 128, 63 & e | 128)
                        } else {
                            if (!(e < 1114112)) throw new Error("Invalid code point");
                            if ((r -= 4) < 0) break;
                            o.push(e >> 18 | 240, e >> 12 & 63 | 128, e >> 6 & 63 | 128, 63 & e | 128)
                        }
                    }
                    return o
                }

                function W(t) {
                    for (var r = [], e = 0; e < t.length; ++e) r.push(255 & t.charCodeAt(e));
                    return r
                }

                function J(t, r) {
                    for (var e, n, i, o = [], f = 0; f < t.length && !((r -= 2) < 0); ++f) e = t.charCodeAt(f), n = e >> 8, i = e % 256, o.push(i), o.push(n);
                    return o
                }

                function X(t) {
                    return Z.toByteArray(j(t))
                }

                function G(t, r, e, n) {
                    for (var i = 0; i < n && !(i + e >= r.length || i >= t.length); ++i) r[i + e] = t[i];
                    return i
                }

                function H(t) {
                    return t !== t
                }
                var Z = t("base64-js"),
                    K = t("ieee754"),
                    Q = t("isarray");
                e.Buffer = Buffer, e.SlowBuffer = y, e.INSPECT_MAX_BYTES = 50, Buffer.TYPED_ARRAY_SUPPORT = void 0 !== r.TYPED_ARRAY_SUPPORT ? r.TYPED_ARRAY_SUPPORT : n(), e.kMaxLength = i(), Buffer.poolSize = 8192, Buffer._augment = function(t) {
                    return t.__proto__ = Buffer.prototype, t
                }, Buffer.from = function(t, r, e) {
                    return f(null, t, r, e)
                }, Buffer.TYPED_ARRAY_SUPPORT && (Buffer.prototype.__proto__ = Uint8Array.prototype, Buffer.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && Buffer[Symbol.species] === Buffer && Object.defineProperty(Buffer, Symbol.species, {
                    value: null,
                    configurable: !0
                })), Buffer.alloc = function(t, r, e) {
                    return a(null, t, r, e)
                }, Buffer.allocUnsafe = function(t) {
                    return s(null, t)
                }, Buffer.allocUnsafeSlow = function(t) {
                    return s(null, t)
                }, Buffer.isBuffer = function(t) {
                    return !(null == t || !t._isBuffer)
                }, Buffer.compare = function(t, r) {
                    if (!Buffer.isBuffer(t) || !Buffer.isBuffer(r)) throw new TypeError("Arguments must be Buffers");
                    if (t === r) return 0;
                    for (var e = t.length, n = r.length, i = 0, o = Math.min(e, n); i < o; ++i)
                        if (t[i] !== r[i]) {
                            e = t[i], n = r[i];
                            break
                        }
                    return e < n ? -1 : n < e ? 1 : 0
                }, Buffer.isEncoding = function(t) {
                    switch (String(t).toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1
                    }
                }, Buffer.concat = function(t, r) {
                    if (!Q(t)) throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === t.length) return Buffer.alloc(0);
                    var e;
                    if (void 0 === r)
                        for (r = 0, e = 0; e < t.length; ++e) r += t[e].length;
                    var n = Buffer.allocUnsafe(r),
                        i = 0;
                    for (e = 0; e < t.length; ++e) {
                        var o = t[e];
                        if (!Buffer.isBuffer(o)) throw new TypeError('"list" argument must be an Array of Buffers');
                        o.copy(n, i), i += o.length
                    }
                    return n
                }, Buffer.byteLength = v, Buffer.prototype._isBuffer = !0, Buffer.prototype.swap16 = function() {
                    var t = this.length;
                    if (t % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for (var r = 0; r < t; r += 2) b(this, r, r + 1);
                    return this
                }, Buffer.prototype.swap32 = function() {
                    var t = this.length;
                    if (t % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for (var r = 0; r < t; r += 4) b(this, r, r + 3), b(this, r + 1, r + 2);
                    return this
                }, Buffer.prototype.swap64 = function() {
                    var t = this.length;
                    if (t % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for (var r = 0; r < t; r += 8) b(this, r, r + 7), b(this, r + 1, r + 6), b(this, r + 2, r + 5), b(this, r + 3, r + 4);
                    return this
                }, Buffer.prototype.toString = function() {
                    var t = 0 | this.length;
                    return 0 === t ? "" : 0 === arguments.length ? k(this, 0, t) : g.apply(this, arguments)
                }, Buffer.prototype.equals = function(t) {
                    if (!Buffer.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                    return this === t || 0 === Buffer.compare(this, t)
                }, Buffer.prototype.inspect = function() {
                    var t = "",
                        r = e.INSPECT_MAX_BYTES;
                    return this.length > 0 && (t = this.toString("hex", 0, r).match(/.{2}/g).join(" "), this.length > r && (t += " ... ")), "<Buffer " + t + ">"
                }, Buffer.prototype.compare = function(t, r, e, n, i) {
                    if (!Buffer.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                    if (void 0 === r && (r = 0), void 0 === e && (e = t ? t.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), r < 0 || e > t.length || n < 0 || i > this.length) throw new RangeError("out of range index");
                    if (n >= i && r >= e) return 0;
                    if (n >= i) return -1;
                    if (r >= e) return 1;
                    if (r >>>= 0, e >>>= 0, n >>>= 0, i >>>= 0, this === t) return 0;
                    for (var o = i - n, f = e - r, u = Math.min(o, f), a = this.slice(n, i), s = t.slice(r, e), c = 0; c < u; ++c)
                        if (a[c] !== s[c]) {
                            o = a[c], f = s[c];
                            break
                        }
                    return o < f ? -1 : f < o ? 1 : 0
                }, Buffer.prototype.includes = function(t, r, e) {
                    return this.indexOf(t, r, e) !== -1
                }, Buffer.prototype.indexOf = function(t, r, e) {
                    return w(this, t, r, e, !0)
                }, Buffer.prototype.lastIndexOf = function(t, r, e) {
                    return w(this, t, r, e, !1)
                }, Buffer.prototype.write = function(t, r, e, n) {
                    if (void 0 === r) n = "utf8", e = this.length, r = 0;
                    else if (void 0 === e && "string" == typeof r) n = r, e = this.length, r = 0;
                    else {
                        if (!isFinite(r)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        r = 0 | r, isFinite(e) ? (e = 0 | e, void 0 === n && (n = "utf8")) : (n = e, e = void 0)
                    }
                    var i = this.length - r;
                    if ((void 0 === e || e > i) && (e = i), t.length > 0 && (e < 0 || r < 0) || r > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                    n || (n = "utf8");
                    for (var o = !1;;) switch (n) {
                        case "hex":
                            return A(this, t, r, e);
                        case "utf8":
                        case "utf-8":
                            return m(this, t, r, e);
                        case "ascii":
                            return x(this, t, r, e);
                        case "latin1":
                        case "binary":
                            return B(this, t, r, e);
                        case "base64":
                            return U(this, t, r, e);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return P(this, t, r, e);
                        default:
                            if (o) throw new TypeError("Unknown encoding: " + n);
                            n = ("" + n).toLowerCase(), o = !0
                    }
                }, Buffer.prototype.toJSON = function() {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    }
                };
                var $ = 4096;
                Buffer.prototype.slice = function(t, r) {
                    var e = this.length;
                    t = ~~t, r = void 0 === r ? e : ~~r, t < 0 ? (t += e, t < 0 && (t = 0)) : t > e && (t = e), r < 0 ? (r += e, r < 0 && (r = 0)) : r > e && (r = e), r < t && (r = t);
                    var n;
                    if (Buffer.TYPED_ARRAY_SUPPORT) n = this.subarray(t, r), n.__proto__ = Buffer.prototype;
                    else {
                        var i = r - t;
                        n = new Buffer(i, void 0);
                        for (var o = 0; o < i; ++o) n[o] = this[o + t]
                    }
                    return n
                }, Buffer.prototype.readUIntLE = function(t, r, e) {
                    t = 0 | t, r = 0 | r, e || C(t, r, this.length);
                    for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256);) n += this[t + o] * i;
                    return n
                }, Buffer.prototype.readUIntBE = function(t, r, e) {
                    t = 0 | t, r = 0 | r, e || C(t, r, this.length);
                    for (var n = this[t + --r], i = 1; r > 0 && (i *= 256);) n += this[t + --r] * i;
                    return n
                }, Buffer.prototype.readUInt8 = function(t, r) {
                    return r || C(t, 1, this.length), this[t]
                }, Buffer.prototype.readUInt16LE = function(t, r) {
                    return r || C(t, 2, this.length), this[t] | this[t + 1] << 8
                }, Buffer.prototype.readUInt16BE = function(t, r) {
                    return r || C(t, 2, this.length), this[t] << 8 | this[t + 1]
                }, Buffer.prototype.readUInt32LE = function(t, r) {
                    return r || C(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3]
                }, Buffer.prototype.readUInt32BE = function(t, r) {
                    return r || C(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3])
                }, Buffer.prototype.readIntLE = function(t, r, e) {
                    t = 0 | t, r = 0 | r, e || C(t, r, this.length);
                    for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256);) n += this[t + o] * i;
                    return i *= 128, n >= i && (n -= Math.pow(2, 8 * r)), n
                }, Buffer.prototype.readIntBE = function(t, r, e) {
                    t = 0 | t, r = 0 | r, e || C(t, r, this.length);
                    for (var n = r, i = 1, o = this[t + --n]; n > 0 && (i *= 256);) o += this[t + --n] * i;
                    return i *= 128, o >= i && (o -= Math.pow(2, 8 * r)), o
                }, Buffer.prototype.readInt8 = function(t, r) {
                    return r || C(t, 1, this.length), 128 & this[t] ? (255 - this[t] + 1) * -1 : this[t]
                }, Buffer.prototype.readInt16LE = function(t, r) {
                    r || C(t, 2, this.length);
                    var e = this[t] | this[t + 1] << 8;
                    return 32768 & e ? 4294901760 | e : e
                }, Buffer.prototype.readInt16BE = function(t, r) {
                    r || C(t, 2, this.length);
                    var e = this[t + 1] | this[t] << 8;
                    return 32768 & e ? 4294901760 | e : e
                }, Buffer.prototype.readInt32LE = function(t, r) {
                    return r || C(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24
                }, Buffer.prototype.readInt32BE = function(t, r) {
                    return r || C(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]
                }, Buffer.prototype.readFloatLE = function(t, r) {
                    return r || C(t, 4, this.length), K.read(this, t, !0, 23, 4)
                }, Buffer.prototype.readFloatBE = function(t, r) {
                    return r || C(t, 4, this.length), K.read(this, t, !1, 23, 4)
                }, Buffer.prototype.readDoubleLE = function(t, r) {
                    return r || C(t, 8, this.length), K.read(this, t, !0, 52, 8)
                }, Buffer.prototype.readDoubleBE = function(t, r) {
                    return r || C(t, 8, this.length), K.read(this, t, !1, 52, 8)
                }, Buffer.prototype.writeUIntLE = function(t, r, e, n) {
                    if (t = +t, r = 0 | r, e = 0 | e, !n) {
                        var i = Math.pow(2, 8 * e) - 1;
                        D(this, t, r, e, i, 0)
                    }
                    var o = 1,
                        f = 0;
                    for (this[r] = 255 & t; ++f < e && (o *= 256);) this[r + f] = t / o & 255;
                    return r + e
                }, Buffer.prototype.writeUIntBE = function(t, r, e, n) {
                    if (t = +t, r = 0 | r, e = 0 | e, !n) {
                        var i = Math.pow(2, 8 * e) - 1;
                        D(this, t, r, e, i, 0)
                    }
                    var o = e - 1,
                        f = 1;
                    for (this[r + o] = 255 & t; --o >= 0 && (f *= 256);) this[r + o] = t / f & 255;
                    return r + e
                }, Buffer.prototype.writeUInt8 = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 1, 255, 0), Buffer.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), this[r] = 255 & t, r + 1
                }, Buffer.prototype.writeUInt16LE = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 2, 65535, 0), Buffer.TYPED_ARRAY_SUPPORT ? (this[r] = 255 & t, this[r + 1] = t >>> 8) : O(this, t, r, !0), r + 2
                }, Buffer.prototype.writeUInt16BE = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 2, 65535, 0), Buffer.TYPED_ARRAY_SUPPORT ? (this[r] = t >>> 8, this[r + 1] = 255 & t) : O(this, t, r, !1), r + 2
                }, Buffer.prototype.writeUInt32LE = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 4, 4294967295, 0), Buffer.TYPED_ARRAY_SUPPORT ? (this[r + 3] = t >>> 24, this[r + 2] = t >>> 16, this[r + 1] = t >>> 8, this[r] = 255 & t) : L(this, t, r, !0), r + 4
                }, Buffer.prototype.writeUInt32BE = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 4, 4294967295, 0), Buffer.TYPED_ARRAY_SUPPORT ? (this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = 255 & t) : L(this, t, r, !1), r + 4
                }, Buffer.prototype.writeIntLE = function(t, r, e, n) {
                    if (t = +t, r = 0 | r, !n) {
                        var i = Math.pow(2, 8 * e - 1);
                        D(this, t, r, e, i - 1, -i)
                    }
                    var o = 0,
                        f = 1,
                        u = 0;
                    for (this[r] = 255 & t; ++o < e && (f *= 256);) t < 0 && 0 === u && 0 !== this[r + o - 1] && (u = 1), this[r + o] = (t / f >> 0) - u & 255;
                    return r + e
                }, Buffer.prototype.writeIntBE = function(t, r, e, n) {
                    if (t = +t, r = 0 | r, !n) {
                        var i = Math.pow(2, 8 * e - 1);
                        D(this, t, r, e, i - 1, -i)
                    }
                    var o = e - 1,
                        f = 1,
                        u = 0;
                    for (this[r + o] = 255 & t; --o >= 0 && (f *= 256);) t < 0 && 0 === u && 0 !== this[r + o + 1] && (u = 1), this[r + o] = (t / f >> 0) - u & 255;
                    return r + e
                }, Buffer.prototype.writeInt8 = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 1, 127, -128), Buffer.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), t < 0 && (t = 255 + t + 1), this[r] = 255 & t, r + 1
                }, Buffer.prototype.writeInt16LE = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 2, 32767, -32768), Buffer.TYPED_ARRAY_SUPPORT ? (this[r] = 255 & t, this[r + 1] = t >>> 8) : O(this, t, r, !0), r + 2
                }, Buffer.prototype.writeInt16BE = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 2, 32767, -32768), Buffer.TYPED_ARRAY_SUPPORT ? (this[r] = t >>> 8, this[r + 1] = 255 & t) : O(this, t, r, !1), r + 2
                }, Buffer.prototype.writeInt32LE = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 4, 2147483647, -2147483648), Buffer.TYPED_ARRAY_SUPPORT ? (this[r] = 255 & t, this[r + 1] = t >>> 8, this[r + 2] = t >>> 16, this[r + 3] = t >>> 24) : L(this, t, r, !0), r + 4
                }, Buffer.prototype.writeInt32BE = function(t, r, e) {
                    return t = +t, r = 0 | r, e || D(this, t, r, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), Buffer.TYPED_ARRAY_SUPPORT ? (this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = 255 & t) : L(this, t, r, !1), r + 4
                }, Buffer.prototype.writeFloatLE = function(t, r, e) {
                    return N(this, t, r, !0, e)
                }, Buffer.prototype.writeFloatBE = function(t, r, e) {
                    return N(this, t, r, !1, e)
                }, Buffer.prototype.writeDoubleLE = function(t, r, e) {
                    return F(this, t, r, !0, e)
                }, Buffer.prototype.writeDoubleBE = function(t, r, e) {
                    return F(this, t, r, !1, e)
                }, Buffer.prototype.copy = function(t, r, e, n) {
                    if (e || (e = 0), n || 0 === n || (n = this.length), r >= t.length && (r = t.length), r || (r = 0), n > 0 && n < e && (n = e), n === e) return 0;
                    if (0 === t.length || 0 === this.length) return 0;
                    if (r < 0) throw new RangeError("targetStart out of bounds");
                    if (e < 0 || e >= this.length) throw new RangeError("sourceStart out of bounds");
                    if (n < 0) throw new RangeError("sourceEnd out of bounds");
                    n > this.length && (n = this.length), t.length - r < n - e && (n = t.length - r + e);
                    var i, o = n - e;
                    if (this === t && e < r && r < n)
                        for (i = o - 1; i >= 0; --i) t[i + r] = this[i + e];
                    else if (o < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT)
                        for (i = 0; i < o; ++i) t[i + r] = this[i + e];
                    else Uint8Array.prototype.set.call(t, this.subarray(e, e + o), r);
                    return o
                }, Buffer.prototype.fill = function(t, r, e, n) {
                    if ("string" == typeof t) {
                        if ("string" == typeof r ? (n = r, r = 0, e = this.length) : "string" == typeof e && (n = e, e = this.length), 1 === t.length) {
                            var i = t.charCodeAt(0);
                            i < 256 && (t = i)
                        }
                        if (void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                        if ("string" == typeof n && !Buffer.isEncoding(n)) throw new TypeError("Unknown encoding: " + n)
                    } else "number" == typeof t && (t = 255 & t);
                    if (r < 0 || this.length < r || this.length < e) throw new RangeError("Out of range index");
                    if (e <= r) return this;
                    r >>>= 0, e = void 0 === e ? this.length : e >>> 0, t || (t = 0);
                    var o;
                    if ("number" == typeof t)
                        for (o = r; o < e; ++o) this[o] = t;
                    else {
                        var f = Buffer.isBuffer(t) ? t : q(new Buffer(t, n).toString()),
                            u = f.length;
                        for (o = 0; o < e - r; ++o) this[o + r] = f[o % u]
                    }
                    return this
                };
                var tt = /[^+\/0-9A-Za-z-_]/g
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "base64-js": 30,
            ieee754: 32,
            isarray: 34
        }],
        30: [function(t, r, e) {
            "use strict";

            function n(t) {
                var r = t.length;
                if (r % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                return "=" === t[r - 2] ? 2 : "=" === t[r - 1] ? 1 : 0
            }

            function i(t) {
                return 3 * t.length / 4 - n(t)
            }

            function o(t) {
                var r, e, i, o, f, u, a = t.length;
                f = n(t), u = new h(3 * a / 4 - f), i = f > 0 ? a - 4 : a;
                var s = 0;
                for (r = 0, e = 0; r < i; r += 4, e += 3) o = c[t.charCodeAt(r)] << 18 | c[t.charCodeAt(r + 1)] << 12 | c[t.charCodeAt(r + 2)] << 6 | c[t.charCodeAt(r + 3)], u[s++] = o >> 16 & 255, u[s++] = o >> 8 & 255, u[s++] = 255 & o;
                return 2 === f ? (o = c[t.charCodeAt(r)] << 2 | c[t.charCodeAt(r + 1)] >> 4, u[s++] = 255 & o) : 1 === f && (o = c[t.charCodeAt(r)] << 10 | c[t.charCodeAt(r + 1)] << 4 | c[t.charCodeAt(r + 2)] >> 2, u[s++] = o >> 8 & 255, u[s++] = 255 & o), u
            }

            function f(t) {
                return s[t >> 18 & 63] + s[t >> 12 & 63] + s[t >> 6 & 63] + s[63 & t]
            }

            function u(t, r, e) {
                for (var n, i = [], o = r; o < e; o += 3) n = (t[o] << 16) + (t[o + 1] << 8) + t[o + 2], i.push(f(n));
                return i.join("")
            }

            function a(t) {
                for (var r, e = t.length, n = e % 3, i = "", o = [], f = 16383, a = 0, c = e - n; a < c; a += f) o.push(u(t, a, a + f > c ? c : a + f));
                return 1 === n ? (r = t[e - 1], i += s[r >> 2], i += s[r << 4 & 63], i += "==") : 2 === n && (r = (t[e - 2] << 8) + t[e - 1], i += s[r >> 10], i += s[r >> 4 & 63], i += s[r << 2 & 63], i += "="), o.push(i), o.join("")
            }
            e.byteLength = i, e.toByteArray = o, e.fromByteArray = a;
            for (var s = [], c = [], h = "undefined" != typeof Uint8Array ? Uint8Array : Array, l = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", p = 0, d = l.length; p < d; ++p) s[p] = l[p], c[l.charCodeAt(p)] = p;
            c["-".charCodeAt(0)] = 62, c["_".charCodeAt(0)] = 63
        }, {}],
        31: [function(t, r, e) {
            function n() {
                if (!(this instanceof n)) return new n
            }! function(t) {
                function e(t) {
                    for (var r in s) t[r] = s[r];
                    return t
                }

                function n(t, r) {
                    return u(this, t).push(r), this
                }

                function i(t, r) {
                    function e() {
                        o.call(n, t, e), r.apply(this, arguments)
                    }
                    var n = this;
                    return e.originalListener = r, u(n, t).push(e), n
                }

                function o(t, r) {
                    function e(t) {
                        return t !== r && t.originalListener !== r
                    }
                    var n, i = this;
                    if (arguments.length) {
                        if (r) {
                            if (n = u(i, t, !0)) {
                                if (n = n.filter(e), !n.length) return o.call(i, t);
                                i[a][t] = n
                            }
                        } else if (n = i[a], n && (delete n[t], !Object.keys(n).length)) return o.call(i)
                    } else delete i[a];
                    return i
                }

                function f(t, r) {
                    function e(t) {
                        t.call(o)
                    }

                    function n(t) {
                        t.call(o, r)
                    }

                    function i(t) {
                        t.apply(o, s)
                    }
                    var o = this,
                        f = u(o, t, !0);
                    if (!f) return !1;
                    var a = arguments.length;
                    if (1 === a) f.forEach(e);
                    else if (2 === a) f.forEach(n);
                    else {
                        var s = Array.prototype.slice.call(arguments, 1);
                        f.forEach(i)
                    }
                    return !!f.length
                }

                function u(t, r, e) {
                    if (!e || t[a]) {
                        var n = t[a] || (t[a] = {});
                        return n[r] || (n[r] = [])
                    }
                }
                "undefined" != typeof r && (r.exports = t);
                var a = "listeners",
                    s = {
                        on: n,
                        once: i,
                        off: o,
                        emit: f
                    };
                e(t.prototype), t.mixin = e
            }(n)
        }, {}],
        32: [function(t, r, e) {
            e.read = function(t, r, e, n, i) {
                var o, f, u = 8 * i - n - 1,
                    a = (1 << u) - 1,
                    s = a >> 1,
                    c = -7,
                    h = e ? i - 1 : 0,
                    l = e ? -1 : 1,
                    p = t[r + h];
                for (h += l, o = p & (1 << -c) - 1, p >>= -c, c += u; c > 0; o = 256 * o + t[r + h], h += l, c -= 8);
                for (f = o & (1 << -c) - 1, o >>= -c, c += n; c > 0; f = 256 * f + t[r + h], h += l, c -= 8);
                if (0 === o) o = 1 - s;
                else {
                    if (o === a) return f ? NaN : (p ? -1 : 1) * (1 / 0);
                    f += Math.pow(2, n), o -= s
                }
                return (p ? -1 : 1) * f * Math.pow(2, o - n)
            }, e.write = function(t, r, e, n, i, o) {
                var f, u, a, s = 8 * o - i - 1,
                    c = (1 << s) - 1,
                    h = c >> 1,
                    l = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                    p = n ? 0 : o - 1,
                    d = n ? 1 : -1,
                    y = r < 0 || 0 === r && 1 / r < 0 ? 1 : 0;
                for (r = Math.abs(r), isNaN(r) || r === 1 / 0 ? (u = isNaN(r) ? 1 : 0, f = c) : (f = Math.floor(Math.log(r) / Math.LN2), r * (a = Math.pow(2, -f)) < 1 && (f--, a *= 2), r += f + h >= 1 ? l / a : l * Math.pow(2, 1 - h), r * a >= 2 && (f++, a /= 2), f + h >= c ? (u = 0, f = c) : f + h >= 1 ? (u = (r * a - 1) * Math.pow(2, i), f += h) : (u = r * Math.pow(2, h - 1) * Math.pow(2, i), f = 0)); i >= 8; t[e + p] = 255 & u, p += d, u /= 256, i -= 8);
                for (f = f << i | u, s += i; s > 0; t[e + p] = 255 & f, p += d, f /= 256, s -= 8);
                t[e + p - d] |= 128 * y
            }
        }, {}],
        33: [function(t, r, e) {
            (function(Buffer) {
                var t, r, n, i;
                ! function(e) {
                    function o(t, r, n) {
                        function i(t, r, e, n) {
                            return this instanceof i ? v(this, t, r, e, n) : new i(t, r, e, n)
                        }

                        function o(t) {
                            return !(!t || !t[F])
                        }

                        function v(t, r, e, n, i) {
                            if (E && A && (r instanceof A && (r = new E(r)), n instanceof A && (n = new E(n))), !(r || e || n || g)) return void(t.buffer = h(m, 0));
                            if (!s(r, e)) {
                                var o = g || Array;
                                i = e, n = r, e = 0, r = new o(8)
                            }
                            t.buffer = r, t.offset = e |= 0, b !== typeof n && ("string" == typeof n ? x(r, e, n, i || 10) : s(n, i) ? c(r, e, n, i) : "number" == typeof i ? (k(r, e + T, n), k(r, e + S, i)) : n > 0 ? O(r, e, n) : n < 0 ? L(r, e, n) : c(r, e, m, 0))
                        }

                        function x(t, r, e, n) {
                            var i = 0,
                                o = e.length,
                                f = 0,
                                u = 0;
                            "-" === e[0] && i++;
                            for (var a = i; i < o;) {
                                var s = parseInt(e[i++], n);
                                if (!(s >= 0)) break;
                                u = u * n + s, f = f * n + Math.floor(u / B), u %= B
                            }
                            a && (f = ~f, u ? u = B - u : f++), k(t, r + T, f), k(t, r + S, u)
                        }

                        function P() {
                            var t = this.buffer,
                                r = this.offset,
                                e = _(t, r + T),
                                i = _(t, r + S);
                            return n || (e |= 0), e ? e * B + i : i
                        }

                        function R(t) {
                            var r = this.buffer,
                                e = this.offset,
                                i = _(r, e + T),
                                o = _(r, e + S),
                                f = "",
                                u = !n && 2147483648 & i;
                            for (u && (i = ~i, o = B - o), t = t || 10;;) {
                                var a = i % t * B + o;
                                if (i = Math.floor(i / t), o = Math.floor(a / t), f = (a % t).toString(t) + f, !i && !o) break
                            }
                            return u && (f = "-" + f), f
                        }

                        function k(t, r, e) {
                            t[r + D] = 255 & e, e >>= 8, t[r + C] = 255 & e, e >>= 8, t[r + Y] = 255 & e, e >>= 8, t[r + I] = 255 & e
                        }

                        function _(t, r) {
                            return t[r + I] * U + (t[r + Y] << 16) + (t[r + C] << 8) + t[r + D]
                        }
                        var T = r ? 0 : 4,
                            S = r ? 4 : 0,
                            I = r ? 0 : 3,
                            Y = r ? 1 : 2,
                            C = r ? 2 : 1,
                            D = r ? 3 : 0,
                            O = r ? l : d,
                            L = r ? p : y,
                            M = i.prototype,
                            N = "is" + t,
                            F = "_" + N;
                        return M.buffer = void 0, M.offset = 0, M[F] = !0, M.toNumber = P, M.toString = R, M.toJSON = P, M.toArray = f, w && (M.toBuffer = u), E && (M.toArrayBuffer = a), i[N] = o, e[t] = i, i
                    }

                    function f(t) {
                        var r = this.buffer,
                            e = this.offset;
                        return g = null, t !== !1 && 0 === e && 8 === r.length && x(r) ? r : h(r, e)
                    }

                    function u(t) {
                        var r = this.buffer,
                            e = this.offset;
                        if (g = w, t !== !1 && 0 === e && 8 === r.length && Buffer.isBuffer(r)) return r;
                        var n = new w(8);
                        return c(n, 0, r, e), n
                    }

                    function a(t) {
                        var r = this.buffer,
                            e = this.offset,
                            n = r.buffer;
                        if (g = E, t !== !1 && 0 === e && n instanceof A && 8 === n.byteLength) return n;
                        var i = new E(8);
                        return c(i, 0, r, e), i.buffer
                    }

                    function s(t, r) {
                        var e = t && t.length;
                        return r |= 0, e && r + 8 <= e && "string" != typeof t[r]
                    }

                    function c(t, r, e, n) {
                        r |= 0, n |= 0;
                        for (var i = 0; i < 8; i++) t[r++] = 255 & e[n++]
                    }

                    function h(t, r) {
                        return Array.prototype.slice.call(t, r, r + 8)
                    }

                    function l(t, r, e) {
                        for (var n = r + 8; n > r;) t[--n] = 255 & e, e /= 256
                    }

                    function p(t, r, e) {
                        var n = r + 8;
                        for (e++; n > r;) t[--n] = 255 & -e ^ 255, e /= 256
                    }

                    function d(t, r, e) {
                        for (var n = r + 8; r < n;) t[r++] = 255 & e, e /= 256
                    }

                    function y(t, r, e) {
                        var n = r + 8;
                        for (e++; r < n;) t[r++] = 255 & -e ^ 255, e /= 256
                    }

                    function v(t) {
                        return !!t && "[object Array]" == Object.prototype.toString.call(t)
                    }
                    var g, b = "undefined",
                        w = b !== typeof Buffer && Buffer,
                        E = b !== typeof Uint8Array && Uint8Array,
                        A = b !== typeof ArrayBuffer && ArrayBuffer,
                        m = [0, 0, 0, 0, 0, 0, 0, 0],
                        x = Array.isArray || v,
                        B = 4294967296,
                        U = 16777216;
                    t = o("Uint64BE", !0, !0), r = o("Int64BE", !0, !1), n = o("Uint64LE", !1, !0), i = o("Int64LE", !1, !1)
                }("object" == typeof e && "string" != typeof e.nodeName ? e : this || {})
            }).call(this, t("buffer").Buffer)
        }, {
            buffer: 29
        }],
        34: [function(t, r, e) {
            var n = {}.toString;
            r.exports = Array.isArray || function(t) {
                return "[object Array]" == n.call(t)
            }
        }, {}]
    }, {}, [1])(1)
});
! function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.VConsole = t() : e.VConsole = t()
}(this, function() {
    return function(e) {
        function t(n) {
            if (o[n]) return o[n].exports;
            var i = o[n] = {
                exports: {},
                id: n,
                loaded: !1
            };
            return e[n].call(i.exports, i, i.exports, t), i.loaded = !0, i.exports
        }
        var o = {};
        return t.m = e, t.c = o, t.p = "", t(0)
    }([function(e, t, o) {
        "use strict";

        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), o(1);
        var i = o(2),
            a = n(i),
            r = o(18),
            l = n(r);
        a["default"].VConsolePlugin = l["default"], t["default"] = a["default"], e.exports = t["default"]
    }, function(e, t) {
        "use strict";
        if ("undefined" == typeof Symbol) {
            window.Symbol = function() {};
            var o = "__symbol_iterator_key";
            window.Symbol.iterator = o, Array.prototype[o] = function() {
                var e = this,
                    t = 0;
                return {
                    next: function() {
                        return {
                            done: e.length === t,
                            value: e.length === t ? void 0 : e[t++]
                        }
                    }
                }
            }
        }
    }, function(e, t, o) {
        "use strict";

        function n(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
                for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            return t["default"] = e, t
        }

        function i(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function a(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var r = function() {
                function e(e, t) {
                    for (var o = 0; o < t.length; o++) {
                        var n = t[o];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, o, n) {
                    return o && e(t.prototype, o), n && e(t, n), t
                }
            }(),
            l = o(3),
            c = i(l),
            s = o(4),
            d = n(s),
            u = o(5),
            v = i(u);
        o(7);
        var f = o(11),
            p = i(f),
            h = o(12),
            b = i(h),
            g = o(13),
            m = i(g),
            y = o(14),
            _ = i(y),
            w = o(15),
            x = i(w),
            k = o(16),
            C = i(k),
            T = o(24),
            O = i(T),
            E = o(26),
            S = i(E),
            L = o(30),
            j = i(L),
            N = o(37),
            P = i(N),
            M = "#__vconsole",
            A = function() {
                function e(t) {
                    if (a(this, e), v["default"].one(M)) return void console.debug("vConsole is already exists.");
                    var o = this;
                    if (this.version = c["default"].version, this.$dom = null, this.isInited = !1, this.option = {
                            defaultPlugins: ["system", "network", "element", "storage"]
                        }, this.activedTab = "", this.tabList = [], this.pluginList = {}, this.switchPos = {
                            x: 10,
                            y: 10,
                            startX: 0,
                            startY: 0,
                            endX: 0,
                            endY: 0
                        }, this.tool = d, this.$ = v["default"], d.isObject(t))
                        for (var n in t) this.option[n] = t[n];
                    this._addBuiltInPlugins();
                    var i = function() {
                        o.isInited || (o._render(), o._mockTap(), o._bindEvent(), o._autoRun())
                    };
                    void 0 !== document ? "complete" == document.readyState ? i() : v["default"].bind(window, "load", i) : ! function() {
                        var e = void 0,
                            t = function o() {
                                document && "complete" == document.readyState ? (e && clearTimeout(e), i()) : e = setTimeout(o, 1)
                            };
                        e = setTimeout(t, 1)
                    }()
                }
                return r(e, [{
                    key: "_addBuiltInPlugins",
                    value: function() {
                        this.addPlugin(new C["default"]("default", "Log"));
                        var e = this.option.defaultPlugins,
                            t = {
                                system: {
                                    proto: O["default"],
                                    name: "System"
                                },
                                network: {
                                    proto: S["default"],
                                    name: "Network"
                                },
                                element: {
                                    proto: j["default"],
                                    name: "Element"
                                },
                                storage: {
                                    proto: P["default"],
                                    name: "Storage"
                                }
                            };
                        if (e && d.isArray(e))
                            for (var o = 0; o < e.length; o++) {
                                var n = t[e[o]];
                                n ? this.addPlugin(new n.proto(e[o], n.name)) : console.debug("Unrecognized default plugin ID:", e[o])
                            }
                    }
                }, {
                    key: "_render",
                    value: function() {
                        if (!v["default"].one(M)) {
                            var e = document.createElement("div");
                            e.innerHTML = p["default"], document.documentElement.insertAdjacentElement("beforeend", e.children[0])
                        }
                        this.$dom = v["default"].one(M);
                        var t = v["default"].one(".vc-switch", this.$dom),
                            o = 1 * d.getStorage("switch_x"),
                            n = 1 * d.getStorage("switch_y");
                        (o || n) && (o + t.offsetWidth > document.documentElement.offsetWidth && (o = document.documentElement.offsetWidth - t.offsetWidth), n + t.offsetHeight > document.documentElement.offsetHeight && (n = document.documentElement.offsetHeight - t.offsetHeight), 0 > o && (o = 0), 0 > n && (n = 0), this.switchPos.x = o, this.switchPos.y = n, v["default"].one(".vc-switch").style.right = o + "px", v["default"].one(".vc-switch").style.bottom = n + "px");
                        var i = window.devicePixelRatio || 1,
                            a = document.querySelector('[name="viewport"]');
                        if (a && a.content) {
                            var r = a.content.match(/initial\-scale\=\d+(\.\d+)?/),
                                l = r ? parseFloat(r[0].split("=")[1]) : 1;
                            1 > l && (this.$dom.style.fontSize = 13 * i + "px")
                        }
                        v["default"].one(".vc-mask", this.$dom).style.display = "none"
                    }
                }, {
                    key: "_mockTap",
                    value: function() {
                        var e = 700,
                            t = 10,
                            o = void 0,
                            n = void 0,
                            i = void 0,
                            a = !1,
                            r = null;
                        this.$dom.addEventListener("touchstart", function(e) {
                            if (void 0 === o) {
                                var t = e.targetTouches[0];
                                n = t.pageX, i = t.pageY, o = e.timeStamp, r = e.target.nodeType === Node.TEXT_NODE ? e.target.parentNode : e.target
                            }
                        }, !1), this.$dom.addEventListener("touchmove", function(e) {
                            var o = e.changedTouches[0];
                            (Math.abs(o.pageX - n) > t || Math.abs(o.pageY - i) > t) && (a = !0)
                        }), this.$dom.addEventListener("touchend", function(t) {
                            if (a === !1 && t.timeStamp - o < e && null != r) {
                                var n = r.tagName.toLowerCase(),
                                    i = !1;
                                switch (n) {
                                    case "textarea":
                                        i = !0;
                                        break;
                                    case "input":
                                        switch (r.type) {
                                            case "button":
                                            case "checkbox":
                                            case "file":
                                            case "image":
                                            case "radio":
                                            case "submit":
                                                i = !1;
                                                break;
                                            default:
                                                i = !r.disabled && !r.readOnly
                                        }
                                }
                                i ? r.focus() : t.preventDefault();
                                var l = t.changedTouches[0],
                                    c = document.createEvent("MouseEvents");
                                c.initMouseEvent("click", !0, !0, window, 1, l.screenX, l.screenY, l.clientX, l.clientY, !1, !1, !1, !1, 0, null), c.forwardedTouchEvent = !0, c.initEvent("click", !0, !0), r.dispatchEvent(c)
                            }
                            o = void 0, a = !1, r = null
                        }, !1)
                    }
                }, {
                    key: "_bindEvent",
                    value: function() {
                        var e = this,
                            t = v["default"].one(".vc-switch", e.$dom);
                        v["default"].bind(t, "touchstart", function(t) {
                            e.switchPos.startX = t.touches[0].pageX, e.switchPos.startY = t.touches[0].pageY
                        }), v["default"].bind(t, "touchend", function(t) {
                            e.switchPos.x = e.switchPos.endX, e.switchPos.y = e.switchPos.endY, e.switchPos.startX = 0, e.switchPos.startY = 0, e.switchPos.endX = 0, e.switchPos.endY = 0, d.setStorage("switch_x", e.switchPos.x), d.setStorage("switch_y", e.switchPos.y)
                        }), v["default"].bind(t, "touchmove", function(o) {
                            if (o.touches.length > 0) {
                                var n = o.touches[0].pageX - e.switchPos.startX,
                                    i = o.touches[0].pageY - e.switchPos.startY,
                                    a = e.switchPos.x - n,
                                    r = e.switchPos.y - i;
                                a + t.offsetWidth > document.documentElement.offsetWidth && (a = document.documentElement.offsetWidth - t.offsetWidth), r + t.offsetHeight > document.documentElement.offsetHeight && (r = document.documentElement.offsetHeight - t.offsetHeight), 0 > a && (a = 0), 0 > r && (r = 0), t.style.right = a + "px", t.style.bottom = r + "px", e.switchPos.endX = a, e.switchPos.endY = r, o.preventDefault()
                            }
                        }), v["default"].bind(v["default"].one(".vc-switch", e.$dom), "click", function() {
                            e.show()
                        }), v["default"].bind(v["default"].one(".vc-hide", e.$dom), "click", function() {
                            e.hide()
                        }), v["default"].bind(v["default"].one(".vc-mask", e.$dom), "click", function(t) {
                            return t.target != v["default"].one(".vc-mask") ? !1 : void e.hide()
                        }), v["default"].delegate(v["default"].one(".vc-tabbar", e.$dom), "click", ".vc-tab", function(t) {
                            var o = this.dataset.tab;
                            o != e.activedTab && e.showTab(o)
                        }), v["default"].bind(v["default"].one(".vc-panel", e.$dom), "transitionend webkitTransitionEnd oTransitionEnd otransitionend", function(t) {
                            return t.target != v["default"].one(".vc-panel") ? !1 : void(v["default"].hasClass(e.$dom, "vc-toggle") || (t.target.style.display = "none"))
                        });
                        var o = v["default"].one(".vc-content", e.$dom),
                            n = !1;
                        v["default"].bind(o, "touchstart", function(e) {
                            var t = o.scrollTop,
                                i = o.scrollHeight,
                                a = t + o.offsetHeight;
                            0 === t ? (o.scrollTop = 1, 0 === o.scrollTop && (v["default"].hasClass(e.target, "vc-cmd-input") || (n = !0))) : a === i && (o.scrollTop = t - 1, o.scrollTop === t && (v["default"].hasClass(e.target, "vc-cmd-input") || (n = !0)))
                        }), v["default"].bind(o, "touchmove", function(e) {
                            n && e.preventDefault()
                        }), v["default"].bind(o, "touchend", function(e) {
                            n = !1
                        })
                    }
                }, {
                    key: "_autoRun",
                    value: function() {
                        this.isInited = !0;
                        for (var e in this.pluginList) this._initPlugin(this.pluginList[e]);
                        this.tabList.length > 0 && this.showTab(this.tabList[0]), this.triggerEvent("ready")
                    }
                }, {
                    key: "triggerEvent",
                    value: function(e, t) {
                        e = "on" + e.charAt(0).toUpperCase() + e.slice(1), d.isFunction(this.option[e]) && this.option[e].apply(this, t)
                    }
                }, {
                    key: "_initPlugin",
                    value: function(e) {
                        var t = this;
                        e.vConsole = this, e.trigger("init"), e.trigger("renderTab", function(o) {
                            t.tabList.push(e.id);
                            var n = v["default"].render(b["default"], {
                                id: e.id,
                                name: e.name
                            });
                            v["default"].one(".vc-tabbar", t.$dom).insertAdjacentElement("beforeend", n);
                            var i = v["default"].render(m["default"], {
                                id: e.id
                            });
                            o && (d.isString(o) ? i.innerHTML += o : d.isFunction(o.appendTo) ? o.appendTo(i) : d.isElement(o) && i.insertAdjacentElement("beforeend", o)), v["default"].one(".vc-content", t.$dom).insertAdjacentElement("beforeend", i)
                        }), e.trigger("addTopBar", function(o) {
                            if (o)
                                for (var n = v["default"].one(".vc-topbar", t.$dom), i = function(t) {
                                        var i = o[t],
                                            a = v["default"].render(_["default"], {
                                                name: i.name || "Undefined",
                                                className: i.className || "",
                                                pluginID: e.id
                                            });
                                        if (i.data)
                                            for (var r in i.data) a.dataset[r] = i.data[r];
                                        d.isFunction(i.onClick) && v["default"].bind(a, "click", function(t) {
                                            var o = i.onClick.call(a);
                                            o === !1 || (v["default"].removeClass(v["default"].all(".vc-topbar-" + e.id), "vc-actived"), v["default"].addClass(a, "vc-actived"))
                                        }), n.insertAdjacentElement("beforeend", a)
                                    }, a = 0; a < o.length; a++) i(a)
                        }), e.trigger("addTool", function(o) {
                            if (o)
                                for (var n = v["default"].one(".vc-tool-last", t.$dom), i = function(t) {
                                        var i = o[t],
                                            a = v["default"].render(x["default"], {
                                                name: i.name || "Undefined",
                                                pluginID: e.id
                                            });
                                        1 == i.global && v["default"].addClass(a, "vc-global-tool"), d.isFunction(i.onClick) && v["default"].bind(a, "click", function(e) {
                                            i.onClick.call(a)
                                        }), n.parentNode.insertBefore(a, n)
                                    }, a = 0; a < o.length; a++) i(a)
                        }), e.isReady = !0, e.trigger("ready")
                    }
                }, {
                    key: "_triggerPluginsEvent",
                    value: function(e) {
                        for (var t in this.pluginList) this.pluginList[t].isReady && this.pluginList[t].trigger(e)
                    }
                }, {
                    key: "_triggerPluginEvent",
                    value: function(e, t) {
                        var o = this.pluginList[e];
                        o && o.isReady && o.trigger(t)
                    }
                }, {
                    key: "addPlugin",
                    value: function(e) {
                        return void 0 !== this.pluginList[e.id] ? (console.debug("Plugin " + e.id + " has already been added."), !1) : (this.pluginList[e.id] = e, this.isInited && (this._initPlugin(e), 1 == this.tabList.length && this.showTab(this.tabList[0])), !0)
                    }
                }, {
                    key: "removePlugin",
                    value: function(e) {
                        e = (e + "").toLowerCase();
                        var t = this.pluginList[e];
                        if (void 0 === t) return console.debug("Plugin " + e + " does not exist."), !1;
                        if (t.trigger("remove"), this.isInited) {
                            var o = v["default"].one("#__vc_tab_" + e);
                            o && o.parentNode.removeChild(o);
                            for (var n = v["default"].all(".vc-topbar-" + e, this.$dom), i = 0; i < n.length; i++) n[i].parentNode.removeChild(n[i]);
                            var a = v["default"].one("#__vc_log_" + e);
                            a && a.parentNode.removeChild(a);
                            for (var r = v["default"].all(".vc-tool-" + e, this.$dom), l = 0; l < r.length; l++) r[l].parentNode.removeChild(r[l])
                        }
                        var c = this.tabList.indexOf(e);
                        c > -1 && this.tabList.splice(c, 1);
                        try {
                            delete this.pluginList[e]
                        } catch (s) {
                            this.pluginList[e] = void 0
                        }
                        return this.activedTab == e && this.tabList.length > 0 && this.showTab(this.tabList[0]), !0
                    }
                }, {
                    key: "show",
                    value: function() {
                        if (this.isInited) {
                            var e = this,
                                t = v["default"].one(".vc-panel", this.$dom);
                            t.style.display = "block", setTimeout(function() {
                                v["default"].addClass(e.$dom, "vc-toggle"), e._triggerPluginsEvent("showConsole");
                                var t = v["default"].one(".vc-mask", e.$dom);
                                t.style.display = "block"
                            }, 10)
                        }
                    }
                }, {
                    key: "hide",
                    value: function() {
                        if (this.isInited) {
                            v["default"].removeClass(this.$dom, "vc-toggle"), this._triggerPluginsEvent("hideConsole");
                            var e = v["default"].one(".vc-mask", this.$dom),
                                t = v["default"].one(".vc-panel", this.$dom);
                            v["default"].bind(e, "transitionend", function(o) {
                                e.style.display = "none", t.style.display = "none"
                            })
                        }
                    }
                }, {
                    key: "showSwitch",
                    value: function() {
                        if (this.isInited) {
                            var e = v["default"].one(".vc-switch", this.$dom);
                            e.style.display = "block"
                        }
                    }
                }, {
                    key: "hideSwitch",
                    value: function() {
                        if (this.isInited) {
                            var e = v["default"].one(".vc-switch", this.$dom);
                            e.style.display = "none"
                        }
                    }
                }, {
                    key: "showTab",
                    value: function(e) {
                        if (this.isInited) {
                            var t = v["default"].one("#__vc_log_" + e);
                            v["default"].removeClass(v["default"].all(".vc-tab", this.$dom), "vc-actived"), v["default"].addClass(v["default"].one("#__vc_tab_" + e), "vc-actived"), v["default"].removeClass(v["default"].all(".vc-logbox", this.$dom), "vc-actived"), v["default"].addClass(t, "vc-actived");
                            var o = v["default"].all(".vc-topbar-" + e, this.$dom);
                            v["default"].removeClass(v["default"].all(".vc-toptab", this.$dom), "vc-toggle"), v["default"].addClass(o, "vc-toggle"), o.length > 0 ? v["default"].addClass(v["default"].one(".vc-content", this.$dom), "vc-has-topbar") : v["default"].removeClass(v["default"].one(".vc-content", this.$dom), "vc-has-topbar"), v["default"].removeClass(v["default"].all(".vc-tool", this.$dom), "vc-toggle"), v["default"].addClass(v["default"].all(".vc-tool-" + e, this.$dom), "vc-toggle"), this.activedTab && this._triggerPluginEvent(this.activedTab, "hide"), this.activedTab = e, this._triggerPluginEvent(this.activedTab, "show")
                        }
                    }
                }, {
                    key: "setOption",
                    value: function(e, t) {
                        if (d.isString(e)) this.option[e] = t, this._triggerPluginsEvent("updateOption");
                        else if (d.isObject(e)) {
                            for (var o in e) this.option[o] = e[o];
                            this._triggerPluginsEvent("updateOption")
                        } else console.debug("The first parameter of vConsole.setOption() must be a string or an object.")
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        if (this.isInited) {
                            for (var e = Object.keys(this.pluginList), t = e.length - 1; t >= 0; t--) this.removePlugin(e[t]);
                            this.$dom.parentNode.removeChild(this.$dom)
                        }
                    }
                }]), e
            }();
        t["default"] = A, e.exports = t["default"]
    }, function(e, t) {
        e.exports = {
            name: "vconsole",
            version: "3.1.1-dev",
            description: "A lightweight, extendable front-end developer tool for mobile web page.",
            homepage: "https://github.com/Tencent/vConsole",
            main: "dist/vconsole.min.js",
            scripts: {
                test: "mocha",
                dist: "webpack"
            },
            keywords: ["console", "debug", "mobile"],
            repository: {
                type: "git",
                url: "git+https://github.com/Tencent/vConsole.git"
            },
            dependencies: {},
            devDependencies: {
                "babel-core": "^6.7.7",
                "babel-loader": "^6.2.4",
                "babel-plugin-add-module-exports": "^0.1.4",
                "babel-preset-es2015": "^6.6.0",
                "babel-preset-stage-3": "^6.5.0",
                chai: "^3.5.0",
                "css-loader": "^0.23.1",
                "extract-text-webpack-plugin": "^1.0.1",
                "html-loader": "^0.4.3",
                jsdom: "^9.2.1",
                "json-loader": "^0.5.4",
                less: "^2.5.3",
                "less-loader": "^2.2.3",
                mocha: "^2.5.3",
                "style-loader": "^0.13.1",
                webpack: "~1.12.11"
            },
            author: "Tencent",
            license: "MIT"
        }
    }, function(e, t) {
        "use strict";

        function o(e) {
            var t = e > 0 ? new Date(e) : new Date,
                o = t.getDate() < 10 ? "0" + t.getDate() : t.getDate(),
                n = t.getMonth() < 9 ? "0" + (t.getMonth() + 1) : t.getMonth() + 1,
                i = t.getFullYear(),
                a = t.getHours() < 10 ? "0" + t.getHours() : t.getHours(),
                r = t.getMinutes() < 10 ? "0" + t.getMinutes() : t.getMinutes(),
                l = t.getSeconds() < 10 ? "0" + t.getSeconds() : t.getSeconds(),
                c = t.getMilliseconds() < 10 ? "0" + t.getMilliseconds() : t.getMilliseconds();
            return 100 > c && (c = "0" + c), {
                time: +t,
                year: i,
                month: n,
                day: o,
                hour: a,
                minute: r,
                second: l,
                millisecond: c
            }
        }

        function n(e) {
            return "[object Number]" == Object.prototype.toString.call(e)
        }

        function i(e) {
            return "[object String]" == Object.prototype.toString.call(e)
        }

        function a(e) {
            return "[object Array]" == Object.prototype.toString.call(e)
        }

        function r(e) {
            return "[object Boolean]" == Object.prototype.toString.call(e)
        }

        function l(e) {
            return "[object Undefined]" == Object.prototype.toString.call(e)
        }

        function c(e) {
            return "[object Null]" == Object.prototype.toString.call(e)
        }

        function s(e) {
            return "[object Symbol]" == Object.prototype.toString.call(e)
        }

        function d(e) {
            return !("[object Object]" != Object.prototype.toString.call(e) && (n(e) || i(e) || r(e) || a(e) || c(e) || u(e) || l(e) || s(e)))
        }

        function u(e) {
            return "[object Function]" == Object.prototype.toString.call(e)
        }

        function v(e) {
            return "object" === ("undefined" == typeof HTMLElement ? "undefined" : w(HTMLElement)) ? e instanceof HTMLElement : e && "object" === ("undefined" == typeof e ? "undefined" : w(e)) && null !== e && 1 === e.nodeType && "string" == typeof e.nodeName
        }

        function f(e) {
            var t = Object.prototype.toString.call(e);
            return "[object global]" == t || "[object Window]" == t || "[object DOMWindow]" == t
        }

        function p(e) {
            var t = Object.prototype.hasOwnProperty;
            if (!e || "object" !== ("undefined" == typeof e ? "undefined" : w(e)) || e.nodeType || f(e)) return !1;
            try {
                if (e.constructor && !t.call(e, "constructor") && !t.call(e.constructor.prototype, "isPrototypeOf")) return !1
            } catch (o) {
                return !1
            }
            var n = void 0;
            for (n in e);
            return void 0 === n || t.call(e, n)
        }

        function h(e) {
            return document.createElement("a").appendChild(document.createTextNode(e)).parentNode.innerHTML
        }

        function b(e) {
            var t = arguments.length <= 1 || void 0 === arguments[1] ? "	" : arguments[1],
                o = arguments.length <= 2 || void 0 === arguments[2] ? "CIRCULAR_DEPENDECY_OBJECT" : arguments[2],
                n = [],
                i = JSON.stringify(e, function(e, t) {
                    if ("object" === ("undefined" == typeof t ? "undefined" : w(t)) && null !== t) {
                        if (~n.indexOf(t)) return o;
                        n.push(t)
                    }
                    return t
                }, t);
            return n = null, i
        }

        function g(e) {
            if (!d(e) && !a(e)) return [];
            var t = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
                o = [];
            for (var n in e) t.indexOf(n) < 0 && o.push(n);
            return o = o.sort()
        }

        function m(e) {
            return Object.prototype.toString.call(e).replace("[object ", "").replace("]", "")
        }

        function y(e, t) {
            window.localStorage && (e = "vConsole_" + e, localStorage.setItem(e, t))
        }

        function _(e) {
            return window.localStorage ? (e = "vConsole_" + e, localStorage.getItem(e)) : void 0
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var w = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol ? "symbol" : typeof e
        };
        t.getDate = o, t.isNumber = n, t.isString = i, t.isArray = a, t.isBoolean = r, t.isUndefined = l, t.isNull = c, t.isSymbol = s, t.isObject = d, t.isFunction = u, t.isElement = v, t.isWindow = f, t.isPlainObject = p, t.htmlEncode = h, t.JSONStringify = b, t.getObjAllKeys = g, t.getObjName = m, t.setStorage = y, t.getStorage = _
    }, function(e, t, o) {
        "use strict";

        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = o(4),
            a = o(6),
            r = n(a),
            l = {};
        l.one = function(e, t) {
            return t ? t.querySelector(e) : document.querySelector(e)
        }, l.all = function(e, t) {
            var o = void 0,
                n = [];
            return o = t ? t.querySelectorAll(e) : document.querySelectorAll(e), o && o.length > 0 && (n = Array.prototype.slice.call(o)), n
        }, l.addClass = function(e, t) {
            if (e) {
                (0, i.isArray)(e) || (e = [e]);
                for (var o = 0; o < e.length; o++) {
                    var n = e[o].className || "",
                        a = n.split(" ");
                    a.indexOf(t) > -1 || (a.push(t), e[o].className = a.join(" "))
                }
            }
        }, l.removeClass = function(e, t) {
            if (e) {
                (0, i.isArray)(e) || (e = [e]);
                for (var o = 0; o < e.length; o++) {
                    for (var n = e[o].className.split(" "), a = 0; a < n.length; a++) n[a] == t && (n[a] = "");
                    e[o].className = n.join(" ").trim()
                }
            }
        }, l.hasClass = function(e, t) {
            if (!e) return !1;
            for (var o = e.className.split(" "), n = 0; n < o.length; n++)
                if (o[n] == t) return !0;
            return !1
        }, l.bind = function(e, t, o, n) {
            if (e) {
                void 0 === n && (n = !1), (0, i.isArray)(e) || (e = [e]);
                for (var a = 0; a < e.length; a++) e[a].addEventListener(t, o, n)
            }
        }, l.delegate = function(e, t, o, n) {
            e && e.addEventListener(t, function(t) {
                var i = l.all(o, e);
                if (i) e: for (var a = 0; a < i.length; a++)
                    for (var r = t.target; r;) {
                        if (r == i[a]) {
                            n.call(r, t);
                            break e
                        }
                        if (r = r.parentNode, r == e) break
                    }
            }, !1)
        }, l.render = r["default"], t["default"] = l, e.exports = t["default"]
    }, function(e, t) {
        "use strict";

        function o(e, t, o) {
            var n = /\{\{([^\}]+)\}\}/g,
                i = "",
                a = "",
                r = 0,
                l = [],
                c = function(e, t) {
                    "" !== e && (i += t ? e.match(/^ ?else/g) ? "} " + e + " {\n" : e.match(/\/(if|for|switch)/g) ? "}\n" : e.match(/^ ?if|for|switch/g) ? e + " {\n" : e.match(/^ ?(break|continue) ?$/g) ? e + ";\n" : e.match(/^ ?(case|default)/g) ? e + ":\n" : "arr.push(" + e + ");\n" : 'arr.push("' + e.replace(/"/g, '\\"') + '");\n')
                };
            for (window.__mito_data = t, window.__mito_code = "", window.__mito_result = "", e = e.replace(/(\{\{ ?switch(.+?)\}\})[\r\n\t ]+\{\{/g, "$1{{"), e = e.replace(/^[\r\n]/, "").replace(/\n/g, "\\\n").replace(/\r/g, "\\\r"), a = "(function(){\n", i = "var arr = [];\n"; l = n.exec(e);) c(e.slice(r, l.index), !1), c(l[1], !0), r = l.index + l[0].length;
            c(e.substr(r, e.length - r), !1), i += '__mito_result = arr.join("");', i = "with (__mito_data) {\n" + i + "\n}", a += i, a += "})();";
            var s = document.getElementsByTagName("script"),
                d = "";
            s.length > 0 && (d = s[0].getAttribute("nonce") || "");
            var u = document.createElement("SCRIPT");
            u.innerHTML = a, u.setAttribute("nonce", d), document.documentElement.appendChild(u);
            var v = __mito_result;
            if (document.documentElement.removeChild(u), !o) {
                var f = document.createElement("DIV");
                f.innerHTML = v, v = f.children[0]
            }
            return v
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t["default"] = o, e.exports = t["default"]
    }, function(e, t, o) {
        var n = o(8);
        "string" == typeof n && (n = [
            [e.id, n, ""]
        ]);
        o(10)(n, {});
        n.locals && (e.exports = n.locals)
    }, function(e, t, o) {
        t = e.exports = o(9)(), t.push([e.id, '#__vconsole{color:#000;font-size:13px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#__vconsole .vc-max-height{max-height:19.23076923em}#__vconsole .vc-max-height-line{max-height:3.38461538em}#__vconsole .vc-min-height{min-height:3.07692308em}#__vconsole dd,#__vconsole dl,#__vconsole pre{margin:0}#__vconsole .vc-switch{display:block;position:fixed;right:.76923077em;bottom:.76923077em;color:#fff;background-color:#04be02;line-height:1;font-size:1.07692308em;padding:.61538462em 1.23076923em;z-index:10000;border-radius:.30769231em;box-shadow:0 0 .61538462em rgba(0,0,0,.4)}#__vconsole .vc-mask{top:0;background:transparent;z-index:10001;transition:background .3s;-webkit-tap-highlight-color:transparent;overflow-y:scroll}#__vconsole .vc-mask,#__vconsole .vc-panel{display:none;position:fixed;left:0;right:0;bottom:0}#__vconsole .vc-panel{min-height:85%;z-index:10002;background-color:#efeff4;-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;-webkit-transform:translateY(100%);transform:translateY(100%)}#__vconsole .vc-tabbar{border-bottom:1px solid #d9d9d9;overflow-x:auto;height:3em;width:auto;white-space:nowrap}#__vconsole .vc-tabbar .vc-tab{display:inline-block;line-height:3em;padding:0 1.15384615em;border-right:1px solid #d9d9d9;text-decoration:none;color:#000;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}#__vconsole .vc-tabbar .vc-tab:active{background-color:rgba(0,0,0,.15)}#__vconsole .vc-tabbar .vc-tab.vc-actived{background-color:#fff}#__vconsole .vc-content{background-color:#fff;overflow-x:hidden;overflow-y:auto;position:absolute;top:3.07692308em;left:0;right:0;bottom:3.07692308em;-webkit-overflow-scrolling:touch}#__vconsole .vc-content.vc-has-topbar{top:5.46153846em}#__vconsole .vc-topbar{background-color:#fbf9fe;display:flex;display:-webkit-box;flex-direction:row;flex-wrap:wrap;-webkit-box-direction:row;-webkit-flex-wrap:wrap;width:100%}#__vconsole .vc-topbar .vc-toptab{display:none;flex:1;-webkit-box-flex:1;line-height:2.30769231em;padding:0 1.15384615em;border-bottom:1px solid #d9d9d9;text-decoration:none;text-align:center;color:#000;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}#__vconsole .vc-topbar .vc-toptab.vc-toggle{display:block}#__vconsole .vc-topbar .vc-toptab:active{background-color:rgba(0,0,0,.15)}#__vconsole .vc-topbar .vc-toptab.vc-actived{border-bottom:1px solid #3e82f7}#__vconsole .vc-logbox{display:none;position:relative;min-height:100%}#__vconsole .vc-logbox i{font-style:normal}#__vconsole .vc-logbox .vc-log{padding-bottom:3em;-webkit-tap-highlight-color:transparent}#__vconsole .vc-logbox .vc-log:empty:before{content:"Empty";color:#999;position:absolute;top:45%;left:0;right:0;bottom:0;font-size:1.15384615em;text-align:center}#__vconsole .vc-logbox .vc-item{margin:0;padding:.46153846em .61538462em;overflow:hidden;line-height:1.3;border-bottom:1px solid #eee;word-break:break-word}#__vconsole .vc-logbox .vc-item-info{color:#6a5acd}#__vconsole .vc-logbox .vc-item-debug{color:#daa520}#__vconsole .vc-logbox .vc-item-warn{color:orange;border-color:#ffb930;background-color:#fffacd}#__vconsole .vc-logbox .vc-item-error{color:#dc143c;border-color:#f4a0ab;background-color:#ffe4e1}#__vconsole .vc-logbox .vc-log.vc-log-partly .vc-item{display:none}#__vconsole .vc-logbox .vc-log.vc-log-partly-error .vc-item-error,#__vconsole .vc-logbox .vc-log.vc-log-partly-info .vc-item-info,#__vconsole .vc-logbox .vc-log.vc-log-partly-log .vc-item-log,#__vconsole .vc-logbox .vc-log.vc-log-partly-warn .vc-item-warn{display:block}#__vconsole .vc-logbox .vc-item .vc-item-content{margin-right:4.61538462em;display:block}#__vconsole .vc-logbox .vc-item .vc-item-meta{color:#888;float:right;width:4.61538462em;text-align:right}#__vconsole .vc-logbox .vc-item.vc-item-nometa .vc-item-content{margin-right:0}#__vconsole .vc-logbox .vc-item.vc-item-nometa .vc-item-meta{display:none}#__vconsole .vc-logbox .vc-item .vc-item-code{display:block;white-space:pre-wrap;overflow:auto;position:relative}#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-input,#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-output{padding-left:.92307692em}#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-input:before,#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-output:before{content:"\\203A";position:absolute;top:-.23076923em;left:0;font-size:1.23076923em;color:#6a5acd}#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-output:before{content:"\\2039"}#__vconsole .vc-logbox .vc-item .vc-fold{display:block;overflow:auto;-webkit-overflow-scrolling:touch}#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer{display:block;font-style:italic;padding-left:.76923077em;position:relative}#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer:active{background-color:#e6e6e6}#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer:before{content:"";position:absolute;top:.30769231em;left:.15384615em;width:0;height:0;border:.30769231em solid transparent;border-left-color:#000}#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer.vc-toggle:before{top:.46153846em;left:0;border-top-color:#000;border-left-color:transparent}#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-inner{display:none;margin-left:.76923077em}#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-inner.vc-toggle{display:block}#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-inner .vc-code-key{margin-left:.76923077em}#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer .vc-code-key{margin-left:0}#__vconsole .vc-logbox .vc-code-key{color:#905}#__vconsole .vc-logbox .vc-code-private-key{color:#d391b5}#__vconsole .vc-logbox .vc-code-function{color:#905;font-style:italic}#__vconsole .vc-logbox .vc-code-boolean,#__vconsole .vc-logbox .vc-code-number{color:#0086b3}#__vconsole .vc-logbox .vc-code-string{color:#183691}#__vconsole .vc-logbox .vc-code-null,#__vconsole .vc-logbox .vc-code-undefined{color:#666}#__vconsole .vc-logbox .vc-cmd{position:absolute;height:3.07692308em;left:0;right:0;bottom:0;border-top:1px solid #d9d9d9;display:block!important}#__vconsole .vc-logbox .vc-cmd .vc-cmd-input-wrap{display:block;height:2.15384615em;margin-right:3.07692308em;padding:.46153846em .61538462em}#__vconsole .vc-logbox .vc-cmd .vc-cmd-input{width:100%;border:none;resize:none;outline:none;padding:0;font-size:.92307692em}#__vconsole .vc-logbox .vc-cmd .vc-cmd-input::-webkit-input-placeholder{line-height:2.15384615em}#__vconsole .vc-logbox .vc-cmd .vc-cmd-btn{position:absolute;top:0;right:0;bottom:0;width:3.07692308em;border:none;background-color:#efeff4;outline:none;-webkit-touch-callout:none;font-size:1em}#__vconsole .vc-logbox .vc-cmd .vc-cmd-btn:active{background-color:rgba(0,0,0,.15)}#__vconsole .vc-logbox .vc-group .vc-group-preview{-webkit-touch-callout:none}#__vconsole .vc-logbox .vc-group .vc-group-preview:active{background-color:#e6e6e6}#__vconsole .vc-logbox .vc-group .vc-group-detail{display:none;padding:0 0 .76923077em 1.53846154em;border-bottom:1px solid #eee}#__vconsole .vc-logbox .vc-group.vc-actived .vc-group-detail{display:block;background-color:#fbf9fe}#__vconsole .vc-logbox .vc-group.vc-actived .vc-table-row{background-color:#fff}#__vconsole .vc-logbox .vc-group.vc-actived .vc-group-preview{background-color:#fbf9fe}#__vconsole .vc-logbox .vc-table .vc-table-row{display:flex;display:-webkit-flex;flex-direction:row;flex-wrap:wrap;-webkit-box-direction:row;-webkit-flex-wrap:wrap;overflow:hidden;border-bottom:1px solid #eee}#__vconsole .vc-logbox .vc-table .vc-table-row.vc-left-border{border-left:1px solid #eee}#__vconsole .vc-logbox .vc-table .vc-table-col{flex:1;-webkit-box-flex:1;padding:.23076923em .30769231em;border-left:1px solid #eee;overflow:auto;white-space:pre-wrap;word-break:break-word;-webkit-overflow-scrolling:touch}#__vconsole .vc-logbox .vc-table .vc-table-col:first-child{border:none}#__vconsole .vc-logbox .vc-table .vc-small .vc-table-col{padding:0 .30769231em;font-size:.92307692em}#__vconsole .vc-logbox .vc-table .vc-table-col-2{flex:2;-webkit-box-flex:2}#__vconsole .vc-logbox .vc-table .vc-table-col-3{flex:3;-webkit-box-flex:3}#__vconsole .vc-logbox .vc-table .vc-table-col-4{flex:4;-webkit-box-flex:4}#__vconsole .vc-logbox .vc-table .vc-table-col-5{flex:5;-webkit-box-flex:5}#__vconsole .vc-logbox .vc-table .vc-table-col-6{flex:6;-webkit-box-flex:6}#__vconsole .vc-logbox .vc-table .vc-table-row-error{border-color:#f4a0ab;background-color:#ffe4e1}#__vconsole .vc-logbox .vc-table .vc-table-row-error .vc-table-col{color:#dc143c;border-color:#f4a0ab}#__vconsole .vc-logbox .vc-table .vc-table-col-title{font-weight:700}#__vconsole .vc-logbox.vc-actived{display:block}#__vconsole .vc-toolbar{border-top:1px solid #d9d9d9;line-height:3em;position:absolute;left:0;right:0;bottom:0;display:flex;display:-webkit-box;flex-direction:row;-webkit-box-direction:row}#__vconsole .vc-toolbar .vc-tool{display:none;text-decoration:none;color:#000;width:50%;flex:1;-webkit-box-flex:1;text-align:center;position:relative;-webkit-touch-callout:none}#__vconsole .vc-toolbar .vc-tool.vc-global-tool,#__vconsole .vc-toolbar .vc-tool.vc-toggle{display:block}#__vconsole .vc-toolbar .vc-tool:active{background-color:rgba(0,0,0,.15)}#__vconsole .vc-toolbar .vc-tool:after{content:" ";position:absolute;top:.53846154em;bottom:.53846154em;right:0;border-left:1px solid #d9d9d9}#__vconsole .vc-toolbar .vc-tool-last:after{border:none}#__vconsole.vc-toggle .vc-switch{display:none}#__vconsole.vc-toggle .vc-mask{background:rgba(0,0,0,.6);display:block}#__vconsole.vc-toggle .vc-panel{-webkit-transform:translate(0);transform:translate(0)}', ""])
    }, function(e, t) {
        "use strict";
        e.exports = function() {
            var e = [];
            return e.toString = function() {
                for (var e = [], t = 0; t < this.length; t++) {
                    var o = this[t];
                    o[2] ? e.push("@media " + o[2] + "{" + o[1] + "}") : e.push(o[1])
                }
                return e.join("")
            }, e.i = function(t, o) {
                "string" == typeof t && (t = [
                    [null, t, ""]
                ]);
                for (var n = {}, i = 0; i < this.length; i++) {
                    var a = this[i][0];
                    "number" == typeof a && (n[a] = !0)
                }
                for (i = 0; i < t.length; i++) {
                    var r = t[i];
                    "number" == typeof r[0] && n[r[0]] || (o && !r[2] ? r[2] = o : o && (r[2] = "(" + r[2] + ") and (" + o + ")"), e.push(r))
                }
            }, e
        }
    }, function(e, t, o) {
        function n(e, t) {
            for (var o = 0; o < e.length; o++) {
                var n = e[o],
                    i = f[n.id];
                if (i) {
                    i.refs++;
                    for (var a = 0; a < i.parts.length; a++) i.parts[a](n.parts[a]);
                    for (; a < n.parts.length; a++) i.parts.push(s(n.parts[a], t))
                } else {
                    for (var r = [], a = 0; a < n.parts.length; a++) r.push(s(n.parts[a], t));
                    f[n.id] = {
                        id: n.id,
                        refs: 1,
                        parts: r
                    }
                }
            }
        }

        function i(e) {
            for (var t = [], o = {}, n = 0; n < e.length; n++) {
                var i = e[n],
                    a = i[0],
                    r = i[1],
                    l = i[2],
                    c = i[3],
                    s = {
                        css: r,
                        media: l,
                        sourceMap: c
                    };
                o[a] ? o[a].parts.push(s) : t.push(o[a] = {
                    id: a,
                    parts: [s]
                })
            }
            return t
        }

        function a(e, t) {
            var o = b(),
                n = y[y.length - 1];
            if ("top" === e.insertAt) n ? n.nextSibling ? o.insertBefore(t, n.nextSibling) : o.appendChild(t) : o.insertBefore(t, o.firstChild), y.push(t);
            else {
                if ("bottom" !== e.insertAt) throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
                o.appendChild(t)
            }
        }

        function r(e) {
            e.parentNode.removeChild(e);
            var t = y.indexOf(e);
            t >= 0 && y.splice(t, 1)
        }

        function l(e) {
            var t = document.createElement("style");
            return t.type = "text/css", a(e, t), t
        }

        function c(e) {
            var t = document.createElement("link");
            return t.rel = "stylesheet", a(e, t), t
        }

        function s(e, t) {
            var o, n, i;
            if (t.singleton) {
                var a = m++;
                o = g || (g = l(t)), n = d.bind(null, o, a, !1), i = d.bind(null, o, a, !0)
            } else e.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (o = c(t), n = v.bind(null, o), i = function() {
                r(o), o.href && URL.revokeObjectURL(o.href)
            }) : (o = l(t), n = u.bind(null, o), i = function() {
                r(o)
            });
            return n(e),
                function(t) {
                    if (t) {
                        if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;
                        n(e = t)
                    } else i()
                }
        }

        function d(e, t, o, n) {
            var i = o ? "" : n.css;
            if (e.styleSheet) e.styleSheet.cssText = _(t, i);
            else {
                var a = document.createTextNode(i),
                    r = e.childNodes;
                r[t] && e.removeChild(r[t]), r.length ? e.insertBefore(a, r[t]) : e.appendChild(a)
            }
        }

        function u(e, t) {
            var o = t.css,
                n = t.media;
            if (n && e.setAttribute("media", n), e.styleSheet) e.styleSheet.cssText = o;
            else {
                for (; e.firstChild;) e.removeChild(e.firstChild);
                e.appendChild(document.createTextNode(o))
            }
        }

        function v(e, t) {
            var o = t.css,
                n = t.sourceMap;
            n && (o += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(n)))) + " */");
            var i = new Blob([o], {
                    type: "text/css"
                }),
                a = e.href;
            e.href = URL.createObjectURL(i), a && URL.revokeObjectURL(a)
        }
        var f = {},
            p = function(e) {
                var t;
                return function() {
                    return "undefined" == typeof t && (t = e.apply(this, arguments)), t
                }
            },
            h = p(function() {
                return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase())
            }),
            b = p(function() {
                return document.head || document.getElementsByTagName("head")[0]
            }),
            g = null,
            m = 0,
            y = [];
        e.exports = function(e, t) {
            t = t || {}, "undefined" == typeof t.singleton && (t.singleton = h()), "undefined" == typeof t.insertAt && (t.insertAt = "bottom");
            var o = i(e);
            return n(o, t),
                function(e) {
                    for (var a = [], r = 0; r < o.length; r++) {
                        var l = o[r],
                            c = f[l.id];
                        c.refs--, a.push(c)
                    }
                    if (e) {
                        var s = i(e);
                        n(s, t)
                    }
                    for (var r = 0; r < a.length; r++) {
                        var c = a[r];
                        if (0 === c.refs) {
                            for (var d = 0; d < c.parts.length; d++) c.parts[d]();
                            delete f[c.id]
                        }
                    }
                }
        };
        var _ = function() {
            var e = [];
            return function(t, o) {
                return e[t] = o, e.filter(Boolean).join("\n")
            }
        }()
    }, function(e, t) {
        e.exports = '<div id="__vconsole" class="">\n  <div class="vc-switch">vConsole</div>\n  <div class="vc-mask">\n  </div>\n  <div class="vc-panel">\n    <div class="vc-tabbar">\n    </div>\n    <div class="vc-topbar">\n    </div>\n    <div class="vc-content">\n    </div>\n    <div class="vc-toolbar">\n      <a class="vc-tool vc-global-tool vc-tool-last vc-hide">Hide</a>\n    </div>\n  </div>\n</div>'
    }, function(e, t) {
        e.exports = '<a class="vc-tab" data-tab="{{id}}" id="__vc_tab_{{id}}">{{name}}</a>'
    }, function(e, t) {
        e.exports = '<div class="vc-logbox" id="__vc_log_{{id}}">\n  \n</div>'
    }, function(e, t) {
        e.exports = '<a class="vc-toptab vc-topbar-{{pluginID}}{{if (className)}} {{className}}{{/if}}">{{name}}</a>'
    }, function(e, t) {
        e.exports = '<a class="vc-tool vc-tool-{{pluginID}}">{{name}}</a>'
    }, function(e, t, o) {
        "use strict";

        function n(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
                for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            return t["default"] = e, t
        }

        function i(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function a(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function r(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function l(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var c = function() {
                function e(e, t) {
                    for (var o = 0; o < t.length; o++) {
                        var n = t[o];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, o, n) {
                    return o && e(t.prototype, o), n && e(t, n), t
                }
            }(),
            s = function w(e, t, o) {
                null === e && (e = Function.prototype);
                var n = Object.getOwnPropertyDescriptor(e, t);
                if (void 0 === n) {
                    var i = Object.getPrototypeOf(e);
                    return null === i ? void 0 : w(i, t, o)
                }
                if ("value" in n) return n.value;
                var a = n.get;
                if (void 0 !== a) return a.call(o)
            },
            d = o(5),
            u = i(d),
            v = o(4),
            f = n(v),
            p = o(17),
            h = i(p),
            b = o(22),
            g = i(b),
            m = o(23),
            y = i(m),
            _ = function(e) {
                function t() {
                    var e;
                    a(this, t);
                    for (var o = arguments.length, n = Array(o), i = 0; o > i; i++) n[i] = arguments[i];
                    var l = r(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(n)));
                    return l.tplTabbox = g["default"], l.windowOnError = null, l
                }
                return l(t, e), c(t, [{
                    key: "onReady",
                    value: function() {
                        var e = this;
                        s(Object.getPrototypeOf(t.prototype), "onReady", this).call(this), u["default"].bind(u["default"].one(".vc-cmd", this.$tabbox), "submit", function(t) {
                            t.preventDefault();
                            var o = u["default"].one(".vc-cmd-input", t.target),
                                n = o.value;
                            o.value = "", "" !== n && e.evalCommand(n)
                        });
                        var o = "";
                        o += "if (!!window) {", o += "window.__vConsole_cmd_result = undefined;", o += "window.__vConsole_cmd_error = false;", o += "}";
                        var n = document.getElementsByTagName("script"),
                            i = "";
                        n.length > 0 && (i = n[0].getAttribute("nonce") || "");
                        var a = document.createElement("SCRIPT");
                        a.innerHTML = o, a.setAttribute("nonce", i), document.documentElement.appendChild(a), document.documentElement.removeChild(a)
                    }
                }, {
                    key: "mockConsole",
                    value: function() {
                        s(Object.getPrototypeOf(t.prototype), "mockConsole", this).call(this);
                        var e = this;
                        f.isFunction(window.onerror) && (this.windowOnError = window.onerror), window.onerror = function(t, o, n, i, a) {
                            var r = t;
                            o && (r += "\n" + o.replace(location.origin, "")), (n || i) && (r += ":" + n + ":" + i);
                            var l = !!a && !!a.stack,
                                c = l && a.stack.toString() || "";
                            e.printLog({
                                logType: "error",
                                logs: [r, c],
                                noOrigin: !0
                            }), f.isFunction(e.windowOnError) && e.windowOnError.call(window, t, o, n, i, a)
                        }
                    }
                }, {
                    key: "evalCommand",
                    value: function(e) {
                        this.printLog({
                            logType: "log",
                            content: u["default"].render(y["default"], {
                                content: e,
                                type: "input"
                            }),
                            noMeta: !0,
                            style: ""
                        });
                        var t = "";
                        t += "try {\n", t += "window.__vConsole_cmd_result = (function() {\n", t += "return " + e + ";\n", t += "})();\n", t += "window.__vConsole_cmd_error = false;\n", t += "} catch (e) {\n", t += "window.__vConsole_cmd_result = e.message;\n", t += "window.__vConsole_cmd_error = true;\n", t += "}";
                        var o = document.getElementsByTagName("script"),
                            n = "";
                        o.length > 0 && (n = o[0].getAttribute("nonce") || "");
                        var i = document.createElement("SCRIPT");
                        i.innerHTML = t, i.setAttribute("nonce", n), document.documentElement.appendChild(i);
                        var a = window.__vConsole_cmd_result,
                            r = window.__vConsole_cmd_error;
                        if (document.documentElement.removeChild(i), 0 == r) {
                            var l = void 0;
                            f.isArray(a) || f.isObject(a) ? l = this.getFoldedLine(a) : (f.isNull(a) ? a = "null" : f.isUndefined(a) ? a = "undefined" : f.isFunction(a) ? a = "function()" : f.isString(a) && (a = '"' + a + '"'), l = u["default"].render(y["default"], {
                                content: a,
                                type: "output"
                            })), this.printLog({
                                logType: "log",
                                content: l,
                                noMeta: !0,
                                style: ""
                            })
                        } else this.printLog({
                            logType: "error",
                            logs: [a],
                            noMeta: !0,
                            style: ""
                        })
                    }
                }]), t
            }(h["default"]);
        t["default"] = _, e.exports = t["default"]
    }, function(e, t, o) {
        "use strict";

        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
                for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            return t["default"] = e, t
        }

        function a(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function r(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function l(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol ? "symbol" : typeof e
            },
            s = function() {
                function e(e, t) {
                    for (var o = 0; o < t.length; o++) {
                        var n = t[o];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, o, n) {
                    return o && e(t.prototype, o), n && e(t, n), t
                }
            }(),
            d = o(4),
            u = i(d),
            v = o(5),
            f = n(v),
            p = o(18),
            h = n(p),
            b = o(19),
            g = n(b),
            m = o(20),
            y = n(m),
            _ = o(21),
            w = n(_),
            x = 1e3,
            k = function(e) {
                function t() {
                    var e;
                    a(this, t);
                    for (var o = arguments.length, n = Array(o), i = 0; o > i; i++) n[i] = arguments[i];
                    var l = r(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(n)));
                    return l.tplTabbox = "", l.allowUnformattedLog = !0, l.isReady = !1, l.isShow = !1, l.$tabbox = null, l.console = {}, l.logList = [], l.isInBottom = !0, l.maxLogNumber = x, l.logNumber = 0, l.mockConsole(), l
                }
                return l(t, e), s(t, [{
                    key: "onInit",
                    value: function() {
                        this.$tabbox = f["default"].render(this.tplTabbox, {}), this.updateMaxLogNumber()
                    }
                }, {
                    key: "onRenderTab",
                    value: function(e) {
                        e(this.$tabbox)
                    }
                }, {
                    key: "onAddTopBar",
                    value: function(e) {
                        for (var t = this, o = ["All", "Log", "Info", "Warn", "Error"], n = [], i = 0; i < o.length; i++) n.push({
                            name: o[i],
                            data: {
                                type: o[i].toLowerCase()
                            },
                            className: "",
                            onClick: function() {
                                return f["default"].hasClass(this, "vc-actived") ? !1 : void t.showLogType(this.dataset.type || "all")
                            }
                        });
                        n[0].className = "vc-actived", e(n)
                    }
                }, {
                    key: "onAddTool",
                    value: function(e) {
                        var t = this,
                            o = [{
                                name: "Clear",
                                global: !1,
                                onClick: function() {
                                    t.clearLog(), t.vConsole.triggerEvent("clearLog")
                                }
                            }];
                        e(o)
                    }
                }, {
                    key: "onReady",
                    value: function() {
                        var e = this;
                        e.isReady = !0;
                        var t = f["default"].all(".vc-subtab", e.$tabbox);
                        f["default"].bind(t, "click", function(o) {
                            if (o.preventDefault(), f["default"].hasClass(this, "vc-actived")) return !1;
                            f["default"].removeClass(t, "vc-actived"), f["default"].addClass(this, "vc-actived");
                            var n = this.dataset.type,
                                i = f["default"].one(".vc-log", e.$tabbox);
                            f["default"].removeClass(i, "vc-log-partly-log"), f["default"].removeClass(i, "vc-log-partly-info"), f["default"].removeClass(i, "vc-log-partly-warn"), f["default"].removeClass(i, "vc-log-partly-error"), "all" == n ? f["default"].removeClass(i, "vc-log-partly") : (f["default"].addClass(i, "vc-log-partly"), f["default"].addClass(i, "vc-log-partly-" + n))
                        });
                        var o = f["default"].one(".vc-content");
                        f["default"].bind(o, "scroll", function(t) {
                            e.isShow && (o.scrollTop + o.offsetHeight >= o.scrollHeight ? e.isInBottom = !0 : e.isInBottom = !1)
                        });
                        for (var n = 0; n < e.logList.length; n++) e.printLog(e.logList[n]);
                        e.logList = []
                    }
                }, {
                    key: "onRemove",
                    value: function() {
                        window.console.log = this.console.log, window.console.info = this.console.info, window.console.warn = this.console.warn, window.console.debug = this.console.debug, window.console.error = this.console.error, window.console.clear = this.console.clear, this.console = {}
                    }
                }, {
                    key: "onShow",
                    value: function() {
                        this.isShow = !0, 1 == this.isInBottom && this.scrollToBottom()
                    }
                }, {
                    key: "onHide",
                    value: function() {
                        this.isShow = !1
                    }
                }, {
                    key: "onShowConsole",
                    value: function() {
                        1 == this.isInBottom && this.scrollToBottom()
                    }
                }, {
                    key: "onUpdateOption",
                    value: function() {
                        this.vConsole.option.maxLogNumber != this.maxLogNumber && (this.updateMaxLogNumber(), this.limitMaxLogs())
                    }
                }, {
                    key: "updateMaxLogNumber",
                    value: function() {
                        this.maxLogNumber = this.vConsole.option.maxLogNumber || x, this.maxLogNumber = Math.max(1, this.maxLogNumber)
                    }
                }, {
                    key: "limitMaxLogs",
                    value: function() {
                        if (this.isReady)
                            for (; this.logNumber > this.maxLogNumber;) {
                                var e = f["default"].one(".vc-item", this.$tabbox);
                                if (!e) break;
                                e.parentNode.removeChild(e), this.logNumber--
                            }
                    }
                }, {
                    key: "showLogType",
                    value: function(e) {
                        var t = f["default"].one(".vc-log", this.$tabbox);
                        f["default"].removeClass(t, "vc-log-partly-log"), f["default"].removeClass(t, "vc-log-partly-info"), f["default"].removeClass(t, "vc-log-partly-warn"), f["default"].removeClass(t, "vc-log-partly-error"), "all" == e ? f["default"].removeClass(t, "vc-log-partly") : (f["default"].addClass(t, "vc-log-partly"), f["default"].addClass(t, "vc-log-partly-" + e))
                    }
                }, {
                    key: "scrollToBottom",
                    value: function() {
                        var e = f["default"].one(".vc-content");
                        e && (e.scrollTop = e.scrollHeight - e.offsetHeight)
                    }
                }, {
                    key: "mockConsole",
                    value: function() {
                        var e = this,
                            t = this,
                            o = ["log", "info", "warn", "debug", "error"];
                        window.console ? (o.map(function(e) {
                            t.console[e] = window.console[e]
                        }), t.console.clear = window.console.clear) : window.console = {}, o.map(function(t) {
                            window.console[t] = function() {
                                for (var o = arguments.length, n = Array(o), i = 0; o > i; i++) n[i] = arguments[i];
                                e.printLog({
                                    logType: t,
                                    logs: n
                                })
                            }
                        }), window.console.clear = function() {
                            for (var e = arguments.length, o = Array(e), n = 0; e > n; n++) o[n] = arguments[n];
                            t.clearLog(), t.console.clear.apply(window.console, o)
                        }
                    }
                }, {
                    key: "clearLog",
                    value: function() {
                        f["default"].one(".vc-log", this.$tabbox).innerHTML = ""
                    }
                }, {
                    key: "printOriginLog",
                    value: function(e) {
                        "function" == typeof this.console[e.logType] && this.console[e.logType].apply(window.console, e.logs)
                    }
                }, {
                    key: "printLog",
                    value: function(e) {
                        var t = e.logs || [];
                        if (t.length || e.content) {
                            t = [].slice.call(t || []);
                            var o = !0,
                                n = /^\[(\w+)\]$/i,
                                i = "";
                            if (u.isString(t[0])) {
                                var a = t[0].match(n);
                                null !== a && a.length > 0 && (i = a[1].toLowerCase())
                            }
                            if (i ? o = i == this.id : 0 == this.allowUnformattedLog && (o = !1), !o) return void(e.noOrigin || this.printOriginLog(e));
                            if (e.date || (e.date = +new Date), !this.isReady) return void this.logList.push(e);
                            if (u.isString(t[0]) && (t[0] = t[0].replace(n, ""), "" === t[0] && t.shift()), !e.meta) {
                                var r = u.getDate(e.date);
                                e.meta = r.hour + ":" + r.minute + ":" + r.second
                            }
                            for (var l = f["default"].render(g["default"], {
                                    logType: e.logType,
                                    noMeta: !!e.noMeta,
                                    meta: e.meta,
                                    style: e.style || ""
                                }), s = f["default"].one(".vc-item-content", l), d = 0; d < t.length; d++) {
                                var v = void 0;
                                try {
                                    if ("" === t[d]) continue;
                                    v = u.isFunction(t[d]) ? "<span> " + t[d].toString() + "</span>" : u.isObject(t[d]) || u.isArray(t[d]) ? this.getFoldedLine(t[d]) : "<span> " + u.htmlEncode(t[d]).replace(/\n/g, "<br/>") + "</span>"
                                } catch (p) {
                                    v = "<span> [" + c(t[d]) + "]</span>"
                                }
                                v && ("string" == typeof v ? s.insertAdjacentHTML("beforeend", v) : s.insertAdjacentElement("beforeend", v))
                            }
                            u.isObject(e.content) && s.insertAdjacentElement("beforeend", e.content), f["default"].one(".vc-log", this.$tabbox).insertAdjacentElement("beforeend", l), this.logNumber++, this.limitMaxLogs(), this.isInBottom && this.scrollToBottom(), e.noOrigin || this.printOriginLog(e)
                        }
                    }
                }, {
                    key: "getFoldedLine",
                    value: function(e, t) {
                        var o = this;
                        if (!t) {
                            var n = u.JSONStringify(e),
                                i = n.substr(0, 26);
                            t = u.getObjName(e), n.length > 26 && (i += "..."), t += " " + i
                        }
                        var a = f["default"].render(y["default"], {
                            outer: t,
                            lineType: "obj"
                        });
                        return f["default"].bind(f["default"].one(".vc-fold-outer", a), "click", function(t) {
                            t.preventDefault(), t.stopPropagation(), f["default"].hasClass(a, "vc-toggle") ? (f["default"].removeClass(a, "vc-toggle"), f["default"].removeClass(f["default"].one(".vc-fold-inner", a), "vc-toggle"), f["default"].removeClass(f["default"].one(".vc-fold-outer", a), "vc-toggle")) : (f["default"].addClass(a, "vc-toggle"), f["default"].addClass(f["default"].one(".vc-fold-inner", a), "vc-toggle"), f["default"].addClass(f["default"].one(".vc-fold-outer", a), "vc-toggle"));
                            var n = f["default"].one(".vc-fold-inner", a);
                            if (0 == n.children.length && e) {
                                for (var i = u.getObjAllKeys(e), r = 0; r < i.length; r++) {
                                    var l = e[i[r]],
                                        c = "undefined",
                                        s = "";
                                    u.isString(l) ? (c = "string", l = '"' + l + '"') : u.isNumber(l) ? c = "number" : u.isBoolean(l) ? c = "boolean" : u.isNull(l) ? (c = "null", l = "null") : u.isUndefined(l) ? (c = "undefined", l = "undefined") : u.isFunction(l) ? (c = "function", l = "function()") : u.isSymbol(l) && (c = "symbol");
                                    var d = void 0;
                                    if (u.isArray(l)) {
                                        var v = u.getObjName(l) + "[" + l.length + "]";
                                        d = o.getFoldedLine(l, f["default"].render(w["default"], {
                                            key: i[r],
                                            keyType: s,
                                            value: v,
                                            valueType: "array"
                                        }, !0))
                                    } else if (u.isObject(l)) {
                                        var p = u.getObjName(l);
                                        d = o.getFoldedLine(l, f["default"].render(w["default"], {
                                            key: u.htmlEncode(i[r]),
                                            keyType: s,
                                            value: p,
                                            valueType: "object"
                                        }, !0))
                                    } else {
                                        e.hasOwnProperty && !e.hasOwnProperty(i[r]) && (s = "private");
                                        var h = {
                                            lineType: "kv",
                                            key: u.htmlEncode(i[r]),
                                            keyType: s,
                                            value: u.htmlEncode(l),
                                            valueType: c
                                        };
                                        d = f["default"].render(y["default"], h)
                                    }
                                    n.insertAdjacentElement("beforeend", d)
                                }
                                if (u.isObject(e)) {
                                    var b = e.__proto__,
                                        g = void 0;
                                    g = u.isObject(b) ? o.getFoldedLine(b, f["default"].render(w["default"], {
                                        key: "__proto__",
                                        keyType: "private",
                                        value: u.getObjName(b),
                                        valueType: "object"
                                    }, !0)) : f["default"].render(w["default"], {
                                        key: "__proto__",
                                        keyType: "private",
                                        value: "null",
                                        valueType: "null"
                                    }), n.insertAdjacentElement("beforeend", g)
                                }
                            }
                            return !1
                        }), a
                    }
                }]), t
            }(h["default"]);
        t["default"] = k, e.exports = t["default"]
    }, function(e, t) {
        "use strict";

        function o(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var n = function() {
                function e(e, t) {
                    for (var o = 0; o < t.length; o++) {
                        var n = t[o];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, o, n) {
                    return o && e(t.prototype, o), n && e(t, n), t
                }
            }(),
            i = function() {
                function e(t) {
                    var n = arguments.length <= 1 || void 0 === arguments[1] ? "newPlugin" : arguments[1];
                    o(this, e), this.id = t, this.name = n, this.isReady = !1, this.eventList = {}
                }
                return n(e, [{
                    key: "on",
                    value: function(e, t) {
                        return this.eventList[e] = t, this
                    }
                }, {
                    key: "trigger",
                    value: function(e, t) {
                        if ("function" == typeof this.eventList[e]) this.eventList[e].call(this, t);
                        else {
                            var o = "on" + e.charAt(0).toUpperCase() + e.slice(1);
                            "function" == typeof this[o] && this[o].call(this, t)
                        }
                        return this
                    }
                }, {
                    key: "id",
                    get: function() {
                        return this._id
                    },
                    set: function(e) {
                        if (!e) throw "Plugin ID cannot be empty";
                        this._id = e.toLowerCase()
                    }
                }, {
                    key: "name",
                    get: function() {
                        return this._name
                    },
                    set: function(e) {
                        if (!e) throw "Plugin name cannot be empty";
                        this._name = e
                    }
                }, {
                    key: "vConsole",
                    get: function() {
                        return this._vConsole || void 0
                    },
                    set: function(e) {
                        if (!e) throw "vConsole cannot be empty";
                        this._vConsole = e
                    }
                }]), e
            }();
        t["default"] = i, e.exports = t["default"]
    }, function(e, t) {
        e.exports = '<div class="vc-item vc-item-{{logType}} {{if (!noMeta)}}vc-item-nometa{{/if}} {{style}}">\n	<span class="vc-item-meta">{{if (!noMeta)}}{{meta}}{{/if}}</span>\n	<div class="vc-item-content"></div>\n</div>'
    }, function(e, t) {
        e.exports = '<div class="vc-fold">\n  {{if (lineType == \'obj\')}}\n    <i class="vc-fold-outer">{{outer}}</i>\n    <div class="vc-fold-inner"></div>\n  {{else if (lineType == \'value\')}}\n    <i class="vc-code-{{valueType}}">{{value}}</i>\n  {{else if (lineType == \'kv\')}}\n    <i class="vc-code-key{{if (keyType)}} vc-code-{{keyType}}-key{{/if}}">{{key}}</i>: <i class="vc-code-{{valueType}}">{{value}}</i>\n  {{/if}}\n</div>'
    }, function(e, t) {
        e.exports = '<span>\n  <i class="vc-code-key{{if (keyType)}} vc-code-{{keyType}}-key{{/if}}">{{key}}</i>: <i class="vc-code-{{valueType}}">{{value}}</i>\n</span>'
    }, function(e, t) {
        e.exports = '<div>\n  <div class="vc-log"></div>\n  <form class="vc-cmd">\n    <button class="vc-cmd-btn" type="submit">OK</button>\n    <div class="vc-cmd-input-wrap">\n      <textarea class="vc-cmd-input" placeholder="command..."></textarea>\n    </div>\n  </form>\n</div>'
    }, function(e, t) {
        e.exports = '<pre class="vc-item-code vc-item-code-{{type}}">{{content}}</pre>'
    }, function(e, t, o) {
        "use strict";

        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
                for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            return t["default"] = e, t
        }

        function a(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function r(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function l(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var c = function() {
                function e(e, t) {
                    for (var o = 0; o < t.length; o++) {
                        var n = t[o];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, o, n) {
                    return o && e(t.prototype, o), n && e(t, n), t
                }
            }(),
            s = function b(e, t, o) {
                null === e && (e = Function.prototype);
                var n = Object.getOwnPropertyDescriptor(e, t);
                if (void 0 === n) {
                    var i = Object.getPrototypeOf(e);
                    return null === i ? void 0 : b(i, t, o)
                }
                if ("value" in n) return n.value;
                var a = n.get;
                if (void 0 !== a) return a.call(o)
            },
            d = o(4),
            u = (i(d), o(17)),
            v = n(u),
            f = o(25),
            p = n(f),
            h = function(e) {
                function t() {
                    var e;
                    a(this, t);
                    for (var o = arguments.length, n = Array(o), i = 0; o > i; i++) n[i] = arguments[i];
                    var l = r(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(n)));
                    return l.tplTabbox = p["default"], l.allowUnformattedLog = !1, l
                }
                return l(t, e), c(t, [{
                    key: "onInit",
                    value: function() {
                        s(Object.getPrototypeOf(t.prototype), "onInit", this).call(this), this.printSystemInfo()
                    }
                }, {
                    key: "printSystemInfo",
                    value: function() {
                        var e = navigator.userAgent,
                            t = "",
                            o = e.match(/(ipod).*\s([\d_]+)/i),
                            n = e.match(/(ipad).*\s([\d_]+)/i),
                            i = e.match(/(iphone)\sos\s([\d_]+)/i),
                            a = e.match(/(android)\s([\d\.]+)/i);
                        t = "Unknown", a ? t = "Android " + a[2] : i ? t = "iPhone, iOS " + i[2].replace(/_/g, ".") : n ? t = "iPad, iOS " + n[2].replace(/_/g, ".") : o && (t = "iPod, iOS " + o[2].replace(/_/g, "."));
                        var r = t,
                            l = e.match(/MicroMessenger\/([\d\.]+)/i);
                        t = "Unknown", l && l[1] ? (t = l[1], r += ", WeChat " + t, console.info("[system]", "System:", r)) : console.info("[system]", "System:", r), t = "Unknown", t = "https:" == location.protocol ? "HTTPS" : "http:" == location.protocol ? "HTTP" : location.protocol.replace(":", ""), r = t;
                        var c = e.toLowerCase().match(/ nettype\/([^ ]+)/g);
                        t = "Unknown", c && c[0] ? (c = c[0].split("/"), t = c[1], r += ", " + t, console.info("[system]", "Network:", r)) : console.info("[system]", "Protocol:", r), console.info("[system]", "UA:", e), setTimeout(function() {
                            var e = window.performance || window.msPerformance || window.webkitPerformance;
                            if (e && e.timing) {
                                var t = e.timing;
                                t.navigationStart && console.info("[system]", "navigationStart:", t.navigationStart), t.navigationStart && t.domainLookupStart && console.info("[system]", "navigation:", t.domainLookupStart - t.navigationStart + "ms"), t.domainLookupEnd && t.domainLookupStart && console.info("[system]", "dns:", t.domainLookupEnd - t.domainLookupStart + "ms"), t.connectEnd && t.connectStart && (t.connectEnd && t.secureConnectionStart ? console.info("[system]", "tcp (ssl):", t.connectEnd - t.connectStart + "ms (" + (t.connectEnd - t.secureConnectionStart) + "ms)") : console.info("[system]", "tcp:", t.connectEnd - t.connectStart + "ms")), t.responseStart && t.requestStart && console.info("[system]", "request:", t.responseStart - t.requestStart + "ms"), t.responseEnd && t.responseStart && console.info("[system]", "response:", t.responseEnd - t.responseStart + "ms"), t.domComplete && t.domLoading && (t.domContentLoadedEventStart && t.domLoading ? console.info("[system]", "domComplete (domLoaded):", t.domComplete - t.domLoading + "ms (" + (t.domContentLoadedEventStart - t.domLoading) + "ms)") : console.info("[system]", "domComplete:", t.domComplete - t.domLoading + "ms")), t.loadEventEnd && t.loadEventStart && console.info("[system]", "loadEvent:", t.loadEventEnd - t.loadEventStart + "ms"), t.navigationStart && t.loadEventEnd && console.info("[system]", "total (DOM):", t.loadEventEnd - t.navigationStart + "ms (" + (t.domComplete - t.navigationStart) + "ms)")
                            }
                        }, 0)
                    }
                }]), t
            }(v["default"]);
        t["default"] = h, e.exports = t["default"]
    }, function(e, t) {
        e.exports = '<div>\n  <div class="vc-log"></div>\n</div>'
    }, function(e, t, o) {
        "use strict";

        function n(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
                for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            return t["default"] = e, t
        }

        function i(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function a(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function r(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function l(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var c = function() {
                function e(e, t) {
                    for (var o = 0; o < t.length; o++) {
                        var n = t[o];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, o, n) {
                    return o && e(t.prototype, o), n && e(t, n), t
                }
            }(),
            s = o(5),
            d = i(s),
            u = o(4),
            v = n(u),
            f = o(18),
            p = i(f),
            h = o(27),
            b = i(h),
            g = o(28),
            m = i(g),
            y = o(29),
            _ = i(y),
            w = function(e) {
                function t() {
                    var e;
                    a(this, t);
                    for (var o = arguments.length, n = Array(o), i = 0; o > i; i++) n[i] = arguments[i];
                    var l = r(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(n)));
                    return l.$tabbox = d["default"].render(b["default"], {}), l.$header = null, l.reqList = {}, l.domList = {}, l.isReady = !1, l.isShow = !1, l.isInBottom = !0, l._open = void 0, l._send = void 0, l.mockAjax(), l
                }
                return l(t, e), c(t, [{
                    key: "onRenderTab",
                    value: function(e) {
                        e(this.$tabbox)
                    }
                }, {
                    key: "onAddTool",
                    value: function(e) {
                        var t = this,
                            o = [{
                                name: "Clear",
                                global: !1,
                                onClick: function(e) {
                                    t.clearLog()
                                }
                            }];
                        e(o)
                    }
                }, {
                    key: "onReady",
                    value: function() {
                        var e = this;
                        e.isReady = !0, this.renderHeader(), d["default"].delegate(d["default"].one(".vc-log", this.$tabbox), "click", ".vc-group-preview", function(t) {
                            var o = this.dataset.reqid,
                                n = this.parentNode;
                            d["default"].hasClass(n, "vc-actived") ? (d["default"].removeClass(n, "vc-actived"), e.updateRequest(o, {
                                actived: !1
                            })) : (d["default"].addClass(n, "vc-actived"), e.updateRequest(o, {
                                actived: !0
                            })), t.preventDefault()
                        });
                        var t = d["default"].one(".vc-content");
                        d["default"].bind(t, "scroll", function(o) {
                            e.isShow && (t.scrollTop + t.offsetHeight >= t.scrollHeight ? e.isInBottom = !0 : e.isInBottom = !1)
                        });
                        for (var o in e.reqList) e.updateRequest(o, {})
                    }
                }, {
                    key: "onRemove",
                    value: function() {
                        window.XMLHttpRequest && (window.XMLHttpRequest.prototype.open = this._open, window.XMLHttpRequest.prototype.send = this._send, this._open = void 0, this._send = void 0)
                    }
                }, {
                    key: "onShow",
                    value: function() {
                        this.isShow = !0, 1 == this.isInBottom && this.scrollToBottom()
                    }
                }, {
                    key: "onHide",
                    value: function() {
                        this.isShow = !1
                    }
                }, {
                    key: "onShowConsole",
                    value: function() {
                        1 == this.isInBottom && this.scrollToBottom()
                    }
                }, {
                    key: "scrollToBottom",
                    value: function() {
                        var e = d["default"].one(".vc-content");
                        e.scrollTop = e.scrollHeight - e.offsetHeight
                    }
                }, {
                    key: "clearLog",
                    value: function() {
                        this.reqList = {};
                        for (var e in this.domList) this.domList[e].remove(), this.domList[e] = void 0;
                        this.domList = {}, this.renderHeader()
                    }
                }, {
                    key: "renderHeader",
                    value: function() {
                        var e = Object.keys(this.reqList).length,
                            t = d["default"].render(m["default"], {
                                count: e
                            }),
                            o = d["default"].one(".vc-log", this.$tabbox);
                        this.$header ? this.$header.parentNode.replaceChild(t, this.$header) : o.parentNode.insertBefore(t, o), this.$header = t
                    }
                }, {
                    key: "updateRequest",
                    value: function(e, t) {
                        var o = Object.keys(this.reqList).length,
                            n = this.reqList[e] || {};
                        for (var i in t) n[i] = t[i];
                        if (this.reqList[e] = n, this.isReady) {
                            var a = {
                                id: e,
                                url: n.url,
                                status: n.status,
                                method: n.method || "-",
                                costTime: n.costTime > 0 ? n.costTime + "ms" : "-",
                                header: n.header || null,
                                getData: n.getData || null,
                                postData: n.postData || null,
                                response: null,
                                actived: !!n.actived
                            };
                            switch (n.responseType) {
                                case "":
                                case "text":
                                    if (v.isString(n.response)) try {
                                        a.response = JSON.parse(n.response), a.response = JSON.stringify(a.response, null, 1), a.response = v.htmlEncode(a.response)
                                    } catch (r) {
                                        a.response = v.htmlEncode(n.response)
                                    } else "undefined" != typeof n.response && (a.response = Object.prototype.toString.call(n.response));
                                    break;
                                case "json":
                                    "undefined" != typeof n.response && (a.response = JSON.stringify(n.response, null, 1));
                                    break;
                                case "blob":
                                case "document":
                                case "arraybuffer":
                                default:
                                    "undefined" != typeof n.response && (a.response = Object.prototype.toString.call(n.response))
                            }
                            0 == n.readyState || 1 == n.readyState ? a.status = "Pending" : 2 == n.readyState || 3 == n.readyState ? a.status = "Loading" : 4 == n.readyState || (a.status = "Unknown");
                            var l = d["default"].render(_["default"], a),
                                c = this.domList[e];
                            n.status >= 400 && d["default"].addClass(d["default"].one(".vc-group-preview", l), "vc-table-row-error"), c ? c.parentNode.replaceChild(l, c) : d["default"].one(".vc-log", this.$tabbox).insertAdjacentElement("beforeend", l), this.domList[e] = l;
                            var s = Object.keys(this.reqList).length;
                            s != o && this.renderHeader(), this.isInBottom && this.scrollToBottom()
                        }
                    }
                }, {
                    key: "mockAjax",
                    value: function() {
                        var e = window.XMLHttpRequest;
                        if (e) {
                            var t = this,
                                o = window.XMLHttpRequest.prototype.open,
                                n = window.XMLHttpRequest.prototype.send;
                            t._open = o, t._send = n, window.XMLHttpRequest.prototype.open = function() {
                                var e = this,
                                    n = [].slice.call(arguments),
                                    i = n[0],
                                    a = n[1],
                                    r = t.getUniqueID(),
                                    l = null;
                                e._requestID = r, e._method = i, e._url = a;
                                var c = e.onreadystatechange || function() {},
                                    s = function() {
                                        var o = t.reqList[r] || {};
                                        if (o.readyState = e.readyState, o.status = e.status, o.responseType = e.responseType, 0 == e.readyState) o.startTime || (o.startTime = +new Date);
                                        else if (1 == e.readyState) o.startTime || (o.startTime = +new Date);
                                        else if (2 == e.readyState) {
                                            o.header = {};
                                            for (var n = e.getAllResponseHeaders() || "", i = n.split("\n"), a = 0; a < i.length; a++) {
                                                var s = i[a];
                                                if (s) {
                                                    var d = s.split(": "),
                                                        u = d[0],
                                                        v = d.slice(1).join(": ");
                                                    o.header[u] = v
                                                }
                                            }
                                        } else 3 == e.readyState || (4 == e.readyState ? (clearInterval(l), o.endTime = +new Date, o.costTime = o.endTime - (o.startTime || o.endTime), o.response = e.response) : clearInterval(l));
                                        return e._noVConsole || t.updateRequest(r, o), c.apply(e, arguments)
                                    };
                                e.onreadystatechange = s;
                                var d = -1;
                                return l = setInterval(function() {
                                    d != e.readyState && (d = e.readyState, s.call(e))
                                }, 10), o.apply(e, n)
                            }, window.XMLHttpRequest.prototype.send = function() {
                                var e = this,
                                    o = [].slice.call(arguments),
                                    i = o[0],
                                    a = t.reqList[e._requestID] || {};
                                a.method = e._method.toUpperCase();
                                var r = e._url.split("?");
                                if (a.url = r.shift(), r.length > 0) {
                                    a.getData = {}, r = r.join("?"), r = r.split("&");
                                    var l = !0,
                                        c = !1,
                                        s = void 0;
                                    try {
                                        for (var d, u = r[Symbol.iterator](); !(l = (d = u.next()).done); l = !0) {
                                            var f = d.value;
                                            f = f.split("="), a.getData[f[0]] = f[1]
                                        }
                                    } catch (p) {
                                        c = !0, s = p
                                    } finally {
                                        try {
                                            !l && u["return"] && u["return"]()
                                        } finally {
                                            if (c) throw s
                                        }
                                    }
                                }
                                if ("POST" == a.method)
                                    if (v.isString(i)) {
                                        var h = i.split("&");
                                        a.postData = {};
                                        var b = !0,
                                            g = !1,
                                            m = void 0;
                                        try {
                                            for (var y, _ = h[Symbol.iterator](); !(b = (y = _.next()).done); b = !0) {
                                                var w = y.value;
                                                w = w.split("="), a.postData[w[0]] = w[1]
                                            }
                                        } catch (p) {
                                            g = !0, m = p
                                        } finally {
                                            try {
                                                !b && _["return"] && _["return"]()
                                            } finally {
                                                if (g) throw m
                                            }
                                        }
                                    } else v.isPlainObject(i) && (a.postData = i);
                                return e._noVConsole || t.updateRequest(e._requestID, a), n.apply(e, o)
                            }
                        }
                    }
                }, {
                    key: "getUniqueID",
                    value: function() {
                        var e = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(e) {
                            var t = 16 * Math.random() | 0,
                                o = "x" == e ? t : 3 & t | 8;
                            return o.toString(16)
                        });
                        return e
                    }
                }]), t
            }(p["default"]);
        t["default"] = w, e.exports = t["default"]
    }, function(e, t) {
        e.exports = '<div class="vc-table">\n  <div class="vc-log"></div>\n</div>'
    }, function(e, t) {
        e.exports = '<dl class="vc-table-row">\n  <dd class="vc-table-col vc-table-col-4">Name {{if (count > 0)}}({{count}}){{/if}}</dd>\n  <dd class="vc-table-col">Method</dd>\n  <dd class="vc-table-col">Status</dd>\n  <dd class="vc-table-col">Time</dd>\n</dl>'
    }, function(e, t) {
        e.exports = '<div class="vc-group {{actived ? \'vc-actived\' : \'\'}}">\n  <dl class="vc-table-row vc-group-preview" data-reqid="{{id}}">\n    <dd class="vc-table-col vc-table-col-4">{{url}}</dd>\n    <dd class="vc-table-col">{{method}}</dd>\n    <dd class="vc-table-col">{{status}}</dd>\n    <dd class="vc-table-col">{{costTime}}</dd>\n  </dl>\n  <div class="vc-group-detail">\n    {{if (header !== null)}}\n    <div>\n      <dl class="vc-table-row vc-left-border">\n        <dt class="vc-table-col vc-table-col-title">Headers</dt>\n      </dl>\n      {{for (var key in header)}}\n      <div class="vc-table-row vc-left-border vc-small">\n        <div class="vc-table-col vc-table-col-2">{{key}}</div>\n        <div class="vc-table-col vc-table-col-4 vc-max-height-line">{{header[key]}}</div>\n      </div>\n      {{/for}}\n    </div>\n    {{/if}}\n    {{if (getData !== null)}}\n    <div>\n      <dl class="vc-table-row vc-left-border">\n        <dt class="vc-table-col vc-table-col-title">Query String Parameters</dt>\n      </dl>\n      {{for (var key in getData)}}\n      <div class="vc-table-row vc-left-border vc-small">\n        <div class="vc-table-col vc-table-col-2">{{key}}</div>\n        <div class="vc-table-col vc-table-col-4 vc-max-height-line">{{getData[key]}}</div>\n      </div>\n      {{/for}}\n    </div>\n    {{/if}}\n    {{if (postData !== null)}}\n    <div>\n      <dl class="vc-table-row vc-left-border">\n        <dt class="vc-table-col vc-table-col-title">Form Data</dt>\n      </dl>\n      {{for (var key in postData)}}\n      <div class="vc-table-row vc-left-border vc-small">\n        <div class="vc-table-col vc-table-col-2">{{key}}</div>\n        <div class="vc-table-col vc-table-col-4 vc-max-height-line">{{postData[key]}}</div>\n      </div>\n      {{/for}}\n    </div>\n    {{/if}}\n    <div>\n      <dl class="vc-table-row vc-left-border">\n        <dt class="vc-table-col vc-table-col-title">Response</dt>\n      </dl>\n      <div class="vc-table-row vc-left-border vc-small">\n        <pre class="vc-table-col vc-max-height vc-min-height">{{response || \'\'}}</pre>\n      </div>\n    </div>\n  </div>\n</div>'
    }, function(e, t, o) {
        "use strict";

        function n(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
                for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            return t["default"] = e, t
        }

        function i(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function a(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function r(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function l(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var c = function() {
            function e(e, t) {
                for (var o = 0; o < t.length; o++) {
                    var n = t[o];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, o, n) {
                return o && e(t.prototype, o), n && e(t, n), t
            }
        }();
        o(31);
        var s = o(18),
            d = i(s),
            u = o(33),
            v = i(u),
            f = o(34),
            p = i(f),
            h = o(4),
            b = (n(h), o(5)),
            g = i(b),
            m = function(e) {
                function t() {
                    var e;
                    a(this, t);
                    for (var o = arguments.length, n = Array(o), i = 0; o > i; i++) n[i] = arguments[i];
                    var l = r(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(n))),
                        c = l;
                    c.isInited = !1, c.node = {}, c.$tabbox = g["default"].render(v["default"], {}), c.nodes = [], c.activedElem = {};
                    var s = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
                    return c.observer = new s(function(e) {
                        for (var t = 0; t < e.length; t++) {
                            var o = e[t];
                            c._isInVConsole(o.target) || c.onMutation(o)
                        }
                    }), l
                }
                return l(t, e), c(t, [{
                    key: "onRenderTab",
                    value: function(e) {
                        e(this.$tabbox)
                    }
                }, {
                    key: "onAddTool",
                    value: function(e) {
                        var t = this,
                            o = [{
                                name: "Expend",
                                global: !1,
                                onClick: function(e) {
                                    if (t.activedElem)
                                        if (g["default"].hasClass(t.activedElem, "vc-toggle"))
                                            for (var o = 0; o < t.activedElem.childNodes.length; o++) {
                                                var n = t.activedElem.childNodes[o];
                                                if (g["default"].hasClass(n, "vcelm-l") && !g["default"].hasClass(n, "vcelm-noc") && !g["default"].hasClass(n, "vc-toggle")) {
                                                    g["default"].one(".vcelm-node", n).click();
                                                    break
                                                }
                                            } else g["default"].one(".vcelm-node", t.activedElem).click()
                                }
                            }, {
                                name: "Collapse",
                                global: !1,
                                onClick: function(e) {
                                    t.activedElem && (g["default"].hasClass(t.activedElem, "vc-toggle") ? g["default"].one(".vcelm-node", t.activedElem).click() : t.activedElem.parentNode && g["default"].hasClass(t.activedElem.parentNode, "vcelm-l") && g["default"].one(".vcelm-node", t.activedElem.parentNode).click())
                                }
                            }];
                        e(o)
                    }
                }, {
                    key: "onShow",
                    value: function() {
                        if (!this.isInited) {
                            this.isInited = !0, this.node = this.getNode(document.documentElement);
                            var e = this.renderView(this.node, g["default"].one(".vc-log", this.$tabbox)),
                                t = g["default"].one(".vcelm-node", e);
                            t && t.click();
                            var o = {
                                attributes: !0,
                                childList: !0,
                                characterData: !0,
                                subtree: !0
                            };
                            this.observer.observe(document.documentElement, o)
                        }
                    }
                }, {
                    key: "onRemove",
                    value: function() {
                        this.observer.disconnect()
                    }
                }, {
                    key: "onMutation",
                    value: function(e) {
                        switch (e.type) {
                            case "childList":
                                e.removedNodes.length > 0 && this.onChildRemove(e), e.addedNodes.length > 0 && this.onChildAdd(e);
                                break;
                            case "attributes":
                                this.onAttributesChange(e);
                                break;
                            case "characterData":
                                this.onCharacterDataChange(e)
                        }
                    }
                }, {
                    key: "onChildRemove",
                    value: function(e) {
                        var t = e.target,
                            o = t.__vconsole_node;
                        if (o) {
                            for (var n = 0; n < e.removedNodes.length; n++) {
                                var i = e.removedNodes[n],
                                    a = i.__vconsole_node;
                                a && a.view && a.view.parentNode.removeChild(a.view)
                            }
                            this.getNode(t)
                        }
                    }
                }, {
                    key: "onChildAdd",
                    value: function(e) {
                        var t = e.target,
                            o = t.__vconsole_node;
                        if (o) {
                            this.getNode(t), o.view && g["default"].removeClass(o.view, "vcelm-noc");
                            for (var n = 0; n < e.addedNodes.length; n++) {
                                var i = e.addedNodes[n],
                                    a = i.__vconsole_node;
                                if (a)
                                    if (null !== e.nextSibling) {
                                        var r = e.nextSibling.__vconsole_node;
                                        r.view && this.renderView(a, r.view, "insertBefore")
                                    } else o.view && (o.view.lastChild ? this.renderView(a, o.view.lastChild, "insertBefore") : this.renderView(a, o.view))
                            }
                        }
                    }
                }, {
                    key: "onAttributesChange",
                    value: function(e) {
                        var t = e.target.__vconsole_node;
                        t && (t = this.getNode(e.target), t.view && this.renderView(t, t.view, !0))
                    }
                }, {
                    key: "onCharacterDataChange",
                    value: function(e) {
                        var t = e.target.__vconsole_node;
                        t && (t = this.getNode(e.target), t.view && this.renderView(t, t.view, !0))
                    }
                }, {
                    key: "renderView",
                    value: function(e, t, o) {
                        var n = this,
                            i = new p["default"](e).get();
                        switch (e.view = i, g["default"].delegate(i, "click", ".vcelm-node", function(t) {
                            t.stopPropagation();
                            var o = this.parentNode;
                            if (!g["default"].hasClass(o, "vcelm-noc")) {
                                n.activedElem = o, g["default"].hasClass(o, "vc-toggle") ? g["default"].removeClass(o, "vc-toggle") : g["default"].addClass(o, "vc-toggle");
                                for (var i = -1, a = 0; a < o.children.length; a++) {
                                    var r = o.children[a];
                                    g["default"].hasClass(r, "vcelm-l") && (i++, r.children.length > 0 || (e.childNodes[i] ? n.renderView(e.childNodes[i], r, "replace") : r.style.display = "none"))
                                }
                            }
                        }), o) {
                            case "replace":
                                t.parentNode.replaceChild(i, t);
                                break;
                            case "insertBefore":
                                t.parentNode.insertBefore(i, t);
                                break;
                            default:
                                t.appendChild(i)
                        }
                        return i
                    }
                }, {
                    key: "getNode",
                    value: function(e) {
                        if (!this._isIgnoredElement(e)) {
                            var t = e.__vconsole_node || {};
                            if (t.nodeType = e.nodeType, t.nodeName = e.nodeName, t.tagName = e.tagName || "", t.textContent = "", t.nodeType != e.TEXT_NODE && t.nodeType != e.DOCUMENT_TYPE_NODE || (t.textContent = e.textContent), t.id = e.id || "", t.className = e.className || "", t.attributes = [], e.hasAttributes && e.hasAttributes())
                                for (var o = 0; o < e.attributes.length; o++) t.attributes.push({
                                    name: e.attributes[o].name,
                                    value: e.attributes[o].value || ""
                                });
                            if (t.childNodes = [], e.childNodes.length > 0)
                                for (var n = 0; n < e.childNodes.length; n++) {
                                    var i = this.getNode(e.childNodes[n]);
                                    i && t.childNodes.push(i)
                                }
                            return e.__vconsole_node = t, t
                        }
                    }
                }, {
                    key: "_isIgnoredElement",
                    value: function(e) {
                        return e.nodeType == e.TEXT_NODE && "" == e.textContent.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$|\n+/g, "")
                    }
                }, {
                    key: "_isInVConsole",
                    value: function(e) {
                        for (var t = e; void 0 != t;) {
                            if ("__vconsole" == t.id) return !0;
                            t = t.parentNode || void 0
                        }
                        return !1
                    }
                }]), t
            }(d["default"]);
        t["default"] = m, e.exports = t["default"]
    }, function(e, t, o) {
        var n = o(32);
        "string" == typeof n && (n = [
            [e.id, n, ""]
        ]);
        o(10)(n, {});
        n.locals && (e.exports = n.locals)
    }, function(e, t, o) {
        t = e.exports = o(9)(), t.push([e.id, '.vcelm-node{color:#183691}.vcelm-k{color:#0086b3}.vcelm-v{color:#905}.vcelm-l{padding-left:8px;position:relative;word-wrap:break-word;line-height:1}.vcelm-l.vc-toggle>.vcelm-node{display:block}.vcelm-l .vcelm-node:active{background-color:rgba(0,0,0,.15)}.vcelm-l.vcelm-noc .vcelm-node:active{background-color:transparent}.vcelm-t{white-space:pre-wrap;word-wrap:break-word}.vcelm-l .vcelm-l{display:none}.vcelm-l.vc-toggle>.vcelm-l{margin-left:4px;display:block}.vcelm-l:before{content:"";display:block;position:absolute;top:6px;left:3px;width:0;height:0;border:3px solid transparent;border-left-color:#000}.vcelm-l.vc-toggle:before{display:block;top:6px;left:0;border-top-color:#000;border-left-color:transparent}.vcelm-l.vcelm-noc:before{display:none}', ""])
    }, function(e, t) {
        e.exports = '<div>\n  <div class="vc-log"></div>\n</div>'
    }, function(e, t, o) {
        "use strict";

        function n(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
                for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            return t["default"] = e, t
        }

        function i(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function a(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function r(e) {
            var t = ["br", "hr", "img", "input", "link", "meta"];
            return e = e ? e.toLowerCase() : "", t.indexOf(e) > -1
        }

        function l(e) {
            return document.createTextNode(e)
        }

        function c(e) {
            return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var s = function() {
                function e(e, t) {
                    for (var o = 0; o < t.length; o++) {
                        var n = t[o];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, o, n) {
                    return o && e(t.prototype, o), n && e(t, n), t
                }
            }(),
            d = o(35),
            u = i(d),
            v = o(36),
            f = i(v),
            p = o(4),
            h = (n(p), o(5)),
            b = i(h),
            g = function() {
                function e(t) {
                    a(this, e), this.node = t, this.view = this._create(this.node)
                }
                return s(e, [{
                    key: "get",
                    value: function() {
                        return this.view
                    }
                }, {
                    key: "_create",
                    value: function(e, t) {
                        var o = document.createElement("DIV");
                        switch (b["default"].addClass(o, "vcelm-l"), e.nodeType) {
                            case o.ELEMENT_NODE:
                                this._createElementNode(e, o);
                                break;
                            case o.TEXT_NODE:
                                this._createTextNode(e, o);
                                break;
                            case o.COMMENT_NODE:
                            case o.DOCUMENT_NODE:
                            case o.DOCUMENT_TYPE_NODE:
                            case o.DOCUMENT_FRAGMENT_NODE:
                        }
                        return o
                    }
                }, {
                    key: "_createTextNode",
                    value: function(e, t) {
                        b["default"].addClass(t, "vcelm-t vcelm-noc"), e.textContent && t.appendChild(l(c(e.textContent)))
                    }
                }, {
                    key: "_createElementNode",
                    value: function(e, t) {
                        var o = r(e.tagName),
                            n = o;
                        0 == e.childNodes.length && (n = !0);
                        var i = b["default"].render(u["default"], {
                                node: e
                            }),
                            a = b["default"].render(f["default"], {
                                node: e
                            });
                        if (n) b["default"].addClass(t, "vcelm-noc"), t.appendChild(i), o || t.appendChild(a);
                        else {
                            t.appendChild(i);
                            for (var l = 0; l < e.childNodes.length; l++) {
                                var c = document.createElement("DIV");
                                b["default"].addClass(c, "vcelm-l"), t.appendChild(c)
                            }
                            o || t.appendChild(a)
                        }
                    }
                }]), e
            }();
        t["default"] = g, e.exports = t["default"]
    }, function(e, t) {
        e.exports = '<span class="vcelm-node">&lt;{{node.tagName.toLowerCase()}}{{if (node.className || node.attributes.length)}}\n  <i class="vcelm-k">\n    {{for (var i = 0; i < node.attributes.length; i++)}}\n      {{if (node.attributes[i].value !== \'\')}}\n        {{node.attributes[i].name}}="<i class="vcelm-v">{{node.attributes[i].value}}</i>"{{else}}\n        {{node.attributes[i].name}}{{/if}}{{/for}}</i>{{/if}}&gt;</span>'
    }, function(e, t) {
        e.exports = '<span class="vcelm-node">&lt;/{{node.tagName.toLowerCase()}}&gt;</span>'
    }, function(e, t, o) {
        "use strict";

        function n(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
                for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            return t["default"] = e, t
        }

        function i(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function a(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function r(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function l(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var c = function() {
                function e(e, t) {
                    for (var o = 0; o < t.length; o++) {
                        var n = t[o];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, o, n) {
                    return o && e(t.prototype, o), n && e(t, n), t
                }
            }(),
            s = o(18),
            d = i(s),
            u = o(38),
            v = i(u),
            f = o(39),
            p = i(f),
            h = o(4),
            b = n(h),
            g = o(5),
            m = i(g),
            y = function(e) {
                function t() {
                    var e;
                    a(this, t);
                    for (var o = arguments.length, n = Array(o), i = 0; o > i; i++) n[i] = arguments[i];
                    var l = r(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(n)));
                    return l.$tabbox = m["default"].render(v["default"], {}), l.currentType = "", l.typeNameMap = {
                        cookies: "Cookies",
                        localstorage: "LocalStorage"
                    }, l
                }
                return l(t, e), c(t, [{
                    key: "onRenderTab",
                    value: function(e) {
                        e(this.$tabbox)
                    }
                }, {
                    key: "onAddTopBar",
                    value: function(e) {
                        for (var t = this, o = ["Cookies", "LocalStorage"], n = [], i = 0; i < o.length; i++) n.push({
                            name: o[i],
                            data: {
                                type: o[i].toLowerCase()
                            },
                            className: "",
                            onClick: function() {
                                return m["default"].hasClass(this, "vc-actived") ? !1 : (t.currentType = this.dataset.type, void t.renderStorage())
                            }
                        });
                        n[0].className = "vc-actived", e(n)
                    }
                }, {
                    key: "onAddTool",
                    value: function(e) {
                        var t = this,
                            o = [{
                                name: "Refresh",
                                global: !1,
                                onClick: function(e) {
                                    t.renderStorage()
                                }
                            }, {
                                name: "Clear",
                                global: !1,
                                onClick: function(e) {
                                    t.clearLog()
                                }
                            }];
                        e(o)
                    }
                }, {
                    key: "onReady",
                    value: function() {}
                }, {
                    key: "onShow",
                    value: function() {
                        "" == this.currentType && (this.currentType = "cookies", this.renderStorage())
                    }
                }, {
                    key: "clearLog",
                    value: function() {
                        if (this.currentType && window.confirm) {
                            var e = window.confirm("Remove all " + this.typeNameMap[this.currentType] + "?");
                            if (!e) return !1
                        }
                        switch (this.currentType) {
                            case "cookies":
                                this.clearCookieList();
                                break;
                            case "localstorage":
                                this.clearLocalStorageList();
                                break;
                            default:
                                return !1
                        }
                        this.renderStorage()
                    }
                }, {
                    key: "renderStorage",
                    value: function() {
                        var e = [];
                        switch (this.currentType) {
                            case "cookies":
                                e = this.getCookieList();
                                break;
                            case "localstorage":
                                e = this.getLocalStorageList();
                                break;
                            default:
                                return !1
                        }
                        var t = m["default"].one(".vc-log", this.$tabbox);
                        if (0 == e.length) t.innerHTML = "";
                        else {
                            for (var o = 0; o < e.length; o++) e[o].name = b.htmlEncode(e[o].name), e[o].value = b.htmlEncode(e[o].value);
                            t.innerHTML = m["default"].render(p["default"], {
                                list: e
                            }, !0)
                        }
                    }
                }, {
                    key: "getCookieList",
                    value: function() {
                        if (!document.cookie || !navigator.cookieEnabled) return [];
                        for (var e = [], t = document.cookie.split(";"), o = 0; o < t.length; o++) {
                            var n = t[o].split("="),
                                i = n[0].replace(/^ /, ""),
                                a = n[1];
                            e.push({
                                name: decodeURIComponent(i),
                                value: decodeURIComponent(a)
                            })
                        }
                        return e
                    }
                }, {
                    key: "getLocalStorageList",
                    value: function() {
                        if (!window.localStorage) return [];
                        try {
                            for (var e = [], t = 0; t < localStorage.length; t++) {
                                var o = localStorage.key(t),
                                    n = localStorage.getItem(o);
                                e.push({
                                    name: o,
                                    value: n
                                })
                            }
                            return e
                        } catch (i) {
                            return []
                        }
                    }
                }, {
                    key: "clearCookieList",
                    value: function() {
                        if (document.cookie && navigator.cookieEnabled) {
                            for (var e = this.getCookieList(), t = 0; t < e.length; t++) document.cookie = e[t].name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
                            this.renderStorage()
                        }
                    }
                }, {
                    key: "clearLocalStorageList",
                    value: function() {
                        if (window.localStorage) try {
                            localStorage.clear(), this.renderStorage()
                        } catch (e) {
                            alert("localStorage.clear() fail.")
                        }
                    }
                }]), t
            }(d["default"]);
        t["default"] = y, e.exports = t["default"]
    }, function(e, t) {
        e.exports = '<div class="vc-table">\n  <div class="vc-log"></div>\n</div>'
    }, function(e, t) {
        e.exports = '<div>\n  <dl class="vc-table-row">\n    <dd class="vc-table-col">Name</dd>\n    <dd class="vc-table-col vc-table-col-2">Value</dd>\n  </dl>\n  {{for (var i = 0; i < list.length; i++)}}\n  <dl class="vc-table-row">\n    <dd class="vc-table-col">{{list[i].name}}</dd>\n    <dd class="vc-table-col vc-table-col-2">{{list[i].value}}</dd>\n  </dl>\n  {{/for}}\n</div>'
    }])
});
! function(a) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = a();
    else if ("function" == typeof define && define.amd) define([], a);
    else {
        var b;
        b = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, b.JSZip = a()
    }
}(function() {
    return function a(b, c, d) {
        function e(g, h) {
            if (!c[g]) {
                if (!b[g]) {
                    var i = "function" == typeof require && require;
                    if (!h && i) return i(g, !0);
                    if (f) return f(g, !0);
                    var j = new Error("Cannot find module '" + g + "'");
                    throw j.code = "MODULE_NOT_FOUND", j
                }
                var k = c[g] = {
                    exports: {}
                };
                b[g][0].call(k.exports, function(a) {
                    var c = b[g][1][a];
                    return e(c ? c : a)
                }, k, k.exports, a, b, c, d)
            }
            return c[g].exports
        }
        for (var f = "function" == typeof require && require, g = 0; g < d.length; g++) e(d[g]);
        return e
    }({
        1: [function(a, b, c) {
            "use strict";
            var d = a("./utils"),
                e = a("./support"),
                f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            c.encode = function(a) {
                for (var b, c, e, g, h, i, j, k = [], l = 0, m = a.length, n = m, o = "string" !== d.getTypeOf(a); l < a.length;) n = m - l, o ? (b = a[l++], c = l < m ? a[l++] : 0, e = l < m ? a[l++] : 0) : (b = a.charCodeAt(l++), c = l < m ? a.charCodeAt(l++) : 0, e = l < m ? a.charCodeAt(l++) : 0), g = b >> 2, h = (3 & b) << 4 | c >> 4, i = n > 1 ? (15 & c) << 2 | e >> 6 : 64, j = n > 2 ? 63 & e : 64, k.push(f.charAt(g) + f.charAt(h) + f.charAt(i) + f.charAt(j));
                return k.join("")
            }, c.decode = function(a) {
                var b, c, d, g, h, i, j, k = 0,
                    l = 0,
                    m = "data:";
                if (a.substr(0, m.length) === m) throw new Error("Invalid base64 input, it looks like a data url.");
                a = a.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                var n = 3 * a.length / 4;
                if (a.charAt(a.length - 1) === f.charAt(64) && n--, a.charAt(a.length - 2) === f.charAt(64) && n--, n % 1 !== 0) throw new Error("Invalid base64 input, bad content length.");
                var o;
                for (o = e.uint8array ? new Uint8Array(0 | n) : new Array(0 | n); k < a.length;) g = f.indexOf(a.charAt(k++)), h = f.indexOf(a.charAt(k++)), i = f.indexOf(a.charAt(k++)), j = f.indexOf(a.charAt(k++)), b = g << 2 | h >> 4, c = (15 & h) << 4 | i >> 2, d = (3 & i) << 6 | j, o[l++] = b, 64 !== i && (o[l++] = c), 64 !== j && (o[l++] = d);
                return o
            }
        }, {
            "./support": 30,
            "./utils": 32
        }],
        2: [function(a, b, c) {
            "use strict";

            function d(a, b, c, d, e) {
                this.compressedSize = a, this.uncompressedSize = b, this.crc32 = c, this.compression = d, this.compressedContent = e
            }
            var e = a("./external"),
                f = a("./stream/DataWorker"),
                g = a("./stream/DataLengthProbe"),
                h = a("./stream/Crc32Probe"),
                g = a("./stream/DataLengthProbe");
            d.prototype = {
                getContentWorker: function() {
                    var a = new f(e.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new g("data_length")),
                        b = this;
                    return a.on("end", function() {
                        if (this.streamInfo.data_length !== b.uncompressedSize) throw new Error("Bug : uncompressed data size mismatch")
                    }), a
                },
                getCompressedWorker: function() {
                    return new f(e.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression)
                }
            }, d.createWorkerFrom = function(a, b, c) {
                return a.pipe(new h).pipe(new g("uncompressedSize")).pipe(b.compressWorker(c)).pipe(new g("compressedSize")).withStreamInfo("compression", b)
            }, b.exports = d
        }, {
            "./external": 6,
            "./stream/Crc32Probe": 25,
            "./stream/DataLengthProbe": 26,
            "./stream/DataWorker": 27
        }],
        3: [function(a, b, c) {
            "use strict";
            var d = a("./stream/GenericWorker");
            c.STORE = {
                magic: "\0\0",
                compressWorker: function(a) {
                    return new d("STORE compression")
                },
                uncompressWorker: function() {
                    return new d("STORE decompression")
                }
            }, c.DEFLATE = a("./flate")
        }, {
            "./flate": 7,
            "./stream/GenericWorker": 28
        }],
        4: [function(a, b, c) {
            "use strict";

            function d() {
                for (var a, b = [], c = 0; c < 256; c++) {
                    a = c;
                    for (var d = 0; d < 8; d++) a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;
                    b[c] = a
                }
                return b
            }

            function e(a, b, c, d) {
                var e = h,
                    f = d + c;
                a ^= -1;
                for (var g = d; g < f; g++) a = a >>> 8 ^ e[255 & (a ^ b[g])];
                return a ^ -1
            }

            function f(a, b, c, d) {
                var e = h,
                    f = d + c;
                a ^= -1;
                for (var g = d; g < f; g++) a = a >>> 8 ^ e[255 & (a ^ b.charCodeAt(g))];
                return a ^ -1
            }
            var g = a("./utils"),
                h = d();
            b.exports = function(a, b) {
                if ("undefined" == typeof a || !a.length) return 0;
                var c = "string" !== g.getTypeOf(a);
                return c ? e(0 | b, a, a.length, 0) : f(0 | b, a, a.length, 0)
            }
        }, {
            "./utils": 32
        }],
        5: [function(a, b, c) {
            "use strict";
            c.base64 = !1, c.binary = !1, c.dir = !1, c.createFolders = !0, c.date = null, c.compression = null, c.compressionOptions = null, c.comment = null, c.unixPermissions = null, c.dosPermissions = null
        }, {}],
        6: [function(a, b, c) {
            "use strict";
            var d = null;
            d = "undefined" != typeof Promise ? Promise : a("lie"), b.exports = {
                Promise: d
            }
        }, {
            lie: 58
        }],
        7: [function(a, b, c) {
            "use strict";

            function d(a, b) {
                h.call(this, "FlateWorker/" + a), this._pako = null, this._pakoAction = a, this._pakoOptions = b, this.meta = {}
            }
            var e = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array,
                f = a("pako"),
                g = a("./utils"),
                h = a("./stream/GenericWorker"),
                i = e ? "uint8array" : "array";
            c.magic = "\b\0", g.inherits(d, h), d.prototype.processChunk = function(a) {
                this.meta = a.meta, null === this._pako && this._createPako(), this._pako.push(g.transformTo(i, a.data), !1)
            }, d.prototype.flush = function() {
                h.prototype.flush.call(this), null === this._pako && this._createPako(), this._pako.push([], !0)
            }, d.prototype.cleanUp = function() {
                h.prototype.cleanUp.call(this), this._pako = null
            }, d.prototype._createPako = function() {
                this._pako = new f[this._pakoAction]({
                    raw: !0,
                    level: this._pakoOptions.level || -1
                });
                var a = this;
                this._pako.onData = function(b) {
                    a.push({
                        data: b,
                        meta: a.meta
                    })
                }
            }, c.compressWorker = function(a) {
                return new d("Deflate", a)
            }, c.uncompressWorker = function() {
                return new d("Inflate", {})
            }
        }, {
            "./stream/GenericWorker": 28,
            "./utils": 32,
            pako: 59
        }],
        8: [function(a, b, c) {
            "use strict";

            function d(a, b, c, d) {
                f.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = b, this.zipPlatform = c, this.encodeFileName = d, this.streamFiles = a, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = []
            }
            var e = a("../utils"),
                f = a("../stream/GenericWorker"),
                g = a("../utf8"),
                h = a("../crc32"),
                i = a("../signature"),
                j = function(a, b) {
                    var c, d = "";
                    for (c = 0; c < b; c++) d += String.fromCharCode(255 & a), a >>>= 8;
                    return d
                },
                k = function(a, b) {
                    var c = a;
                    return a || (c = b ? 16893 : 33204), (65535 & c) << 16
                },
                l = function(a, b) {
                    return 63 & (a || 0)
                },
                m = function(a, b, c, d, f, m) {
                    var n, o, p = a.file,
                        q = a.compression,
                        r = m !== g.utf8encode,
                        s = e.transformTo("string", m(p.name)),
                        t = e.transformTo("string", g.utf8encode(p.name)),
                        u = p.comment,
                        v = e.transformTo("string", m(u)),
                        w = e.transformTo("string", g.utf8encode(u)),
                        x = t.length !== p.name.length,
                        y = w.length !== u.length,
                        z = "",
                        A = "",
                        B = "",
                        C = p.dir,
                        D = p.date,
                        E = {
                            crc32: 0,
                            compressedSize: 0,
                            uncompressedSize: 0
                        };
                    b && !c || (E.crc32 = a.crc32, E.compressedSize = a.compressedSize, E.uncompressedSize = a.uncompressedSize);
                    var F = 0;
                    b && (F |= 8), r || !x && !y || (F |= 2048);
                    var G = 0,
                        H = 0;
                    C && (G |= 16), "UNIX" === f ? (H = 798, G |= k(p.unixPermissions, C)) : (H = 20, G |= l(p.dosPermissions, C)), n = D.getUTCHours(), n <<= 6, n |= D.getUTCMinutes(), n <<= 5, n |= D.getUTCSeconds() / 2, o = D.getUTCFullYear() - 1980, o <<= 4, o |= D.getUTCMonth() + 1, o <<= 5, o |= D.getUTCDate(), x && (A = j(1, 1) + j(h(s), 4) + t, z += "up" + j(A.length, 2) + A), y && (B = j(1, 1) + j(h(v), 4) + w, z += "uc" + j(B.length, 2) + B);
                    var I = "";
                    I += "\n\0", I += j(F, 2), I += q.magic, I += j(n, 2), I += j(o, 2), I += j(E.crc32, 4), I += j(E.compressedSize, 4), I += j(E.uncompressedSize, 4), I += j(s.length, 2), I += j(z.length, 2);
                    var J = i.LOCAL_FILE_HEADER + I + s + z,
                        K = i.CENTRAL_FILE_HEADER + j(H, 2) + I + j(v.length, 2) + "\0\0\0\0" + j(G, 4) + j(d, 4) + s + z + v;
                    return {
                        fileRecord: J,
                        dirRecord: K
                    }
                },
                n = function(a, b, c, d, f) {
                    var g = "",
                        h = e.transformTo("string", f(d));
                    return g = i.CENTRAL_DIRECTORY_END + "\0\0\0\0" + j(a, 2) + j(a, 2) + j(b, 4) + j(c, 4) + j(h.length, 2) + h
                },
                o = function(a) {
                    var b = "";
                    return b = i.DATA_DESCRIPTOR + j(a.crc32, 4) + j(a.compressedSize, 4) + j(a.uncompressedSize, 4)
                };
            e.inherits(d, f), d.prototype.push = function(a) {
                var b = a.meta.percent || 0,
                    c = this.entriesCount,
                    d = this._sources.length;
                this.accumulate ? this.contentBuffer.push(a) : (this.bytesWritten += a.data.length, f.prototype.push.call(this, {
                    data: a.data,
                    meta: {
                        currentFile: this.currentFile,
                        percent: c ? (b + 100 * (c - d - 1)) / c : 100
                    }
                }))
            }, d.prototype.openedSource = function(a) {
                this.currentSourceOffset = this.bytesWritten, this.currentFile = a.file.name;
                var b = this.streamFiles && !a.file.dir;
                if (b) {
                    var c = m(a, b, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
                    this.push({
                        data: c.fileRecord,
                        meta: {
                            percent: 0
                        }
                    })
                } else this.accumulate = !0
            }, d.prototype.closedSource = function(a) {
                this.accumulate = !1;
                var b = this.streamFiles && !a.file.dir,
                    c = m(a, b, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
                if (this.dirRecords.push(c.dirRecord), b) this.push({
                    data: o(a),
                    meta: {
                        percent: 100
                    }
                });
                else
                    for (this.push({
                            data: c.fileRecord,
                            meta: {
                                percent: 0
                            }
                        }); this.contentBuffer.length;) this.push(this.contentBuffer.shift());
                this.currentFile = null
            }, d.prototype.flush = function() {
                for (var a = this.bytesWritten, b = 0; b < this.dirRecords.length; b++) this.push({
                    data: this.dirRecords[b],
                    meta: {
                        percent: 100
                    }
                });
                var c = this.bytesWritten - a,
                    d = n(this.dirRecords.length, c, a, this.zipComment, this.encodeFileName);
                this.push({
                    data: d,
                    meta: {
                        percent: 100
                    }
                })
            }, d.prototype.prepareNextSource = function() {
                this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume()
            }, d.prototype.registerPrevious = function(a) {
                this._sources.push(a);
                var b = this;
                return a.on("data", function(a) {
                    b.processChunk(a)
                }), a.on("end", function() {
                    b.closedSource(b.previous.streamInfo), b._sources.length ? b.prepareNextSource() : b.end()
                }), a.on("error", function(a) {
                    b.error(a)
                }), this
            }, d.prototype.resume = function() {
                return !!f.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0))
            }, d.prototype.error = function(a) {
                var b = this._sources;
                if (!f.prototype.error.call(this, a)) return !1;
                for (var c = 0; c < b.length; c++) try {
                    b[c].error(a)
                } catch (a) {}
                return !0
            }, d.prototype.lock = function() {
                f.prototype.lock.call(this);
                for (var a = this._sources, b = 0; b < a.length; b++) a[b].lock()
            }, b.exports = d
        }, {
            "../crc32": 4,
            "../signature": 23,
            "../stream/GenericWorker": 28,
            "../utf8": 31,
            "../utils": 32
        }],
        9: [function(a, b, c) {
            "use strict";
            var d = a("../compressions"),
                e = a("./ZipFileWorker"),
                f = function(a, b) {
                    var c = a || b,
                        e = d[c];
                    if (!e) throw new Error(c + " is not a valid compression method !");
                    return e
                };
            c.generateWorker = function(a, b, c) {
                var d = new e(b.streamFiles, c, b.platform, b.encodeFileName),
                    g = 0;
                try {
                    a.forEach(function(a, c) {
                        g++;
                        var e = f(c.options.compression, b.compression),
                            h = c.options.compressionOptions || b.compressionOptions || {},
                            i = c.dir,
                            j = c.date;
                        c._compressWorker(e, h).withStreamInfo("file", {
                            name: a,
                            dir: i,
                            date: j,
                            comment: c.comment || "",
                            unixPermissions: c.unixPermissions,
                            dosPermissions: c.dosPermissions
                        }).pipe(d)
                    }), d.entriesCount = g
                } catch (h) {
                    d.error(h)
                }
                return d
            }
        }, {
            "../compressions": 3,
            "./ZipFileWorker": 8
        }],
        10: [function(a, b, c) {
            "use strict";

            function d() {
                if (!(this instanceof d)) return new d;
                if (arguments.length) throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
                this.files = {}, this.comment = null, this.root = "", this.clone = function() {
                    var a = new d;
                    for (var b in this) "function" != typeof this[b] && (a[b] = this[b]);
                    return a
                }
            }
            d.prototype = a("./object"), d.prototype.loadAsync = a("./load"), d.support = a("./support"), d.defaults = a("./defaults"), d.version = "3.1.5", d.loadAsync = function(a, b) {
                return (new d).loadAsync(a, b)
            }, d.external = a("./external"), b.exports = d
        }, {
            "./defaults": 5,
            "./external": 6,
            "./load": 11,
            "./object": 15,
            "./support": 30
        }],
        11: [function(a, b, c) {
            "use strict";

            function d(a) {
                return new f.Promise(function(b, c) {
                    var d = a.decompressed.getContentWorker().pipe(new i);
                    d.on("error", function(a) {
                        c(a)
                    }).on("end", function() {
                        d.streamInfo.crc32 !== a.decompressed.crc32 ? c(new Error("Corrupted zip : CRC32 mismatch")) : b()
                    }).resume()
                })
            }
            var e = a("./utils"),
                f = a("./external"),
                g = a("./utf8"),
                e = a("./utils"),
                h = a("./zipEntries"),
                i = a("./stream/Crc32Probe"),
                j = a("./nodejsUtils");
            b.exports = function(a, b) {
                var c = this;
                return b = e.extend(b || {}, {
                    base64: !1,
                    checkCRC32: !1,
                    optimizedBinaryString: !1,
                    createFolders: !1,
                    decodeFileName: g.utf8decode
                }), j.isNode && j.isStream(a) ? f.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : e.prepareContent("the loaded zip file", a, !0, b.optimizedBinaryString, b.base64).then(function(a) {
                    var c = new h(b);
                    return c.load(a), c
                }).then(function(a) {
                    var c = [f.Promise.resolve(a)],
                        e = a.files;
                    if (b.checkCRC32)
                        for (var g = 0; g < e.length; g++) c.push(d(e[g]));
                    return f.Promise.all(c)
                }).then(function(a) {
                    for (var d = a.shift(), e = d.files, f = 0; f < e.length; f++) {
                        var g = e[f];
                        c.file(g.fileNameStr, g.decompressed, {
                            binary: !0,
                            optimizedBinaryString: !0,
                            date: g.date,
                            dir: g.dir,
                            comment: g.fileCommentStr.length ? g.fileCommentStr : null,
                            unixPermissions: g.unixPermissions,
                            dosPermissions: g.dosPermissions,
                            createFolders: b.createFolders
                        })
                    }
                    return d.zipComment.length && (c.comment = d.zipComment), c
                })
            }
        }, {
            "./external": 6,
            "./nodejsUtils": 14,
            "./stream/Crc32Probe": 25,
            "./utf8": 31,
            "./utils": 32,
            "./zipEntries": 33
        }],
        12: [function(a, b, c) {
            "use strict";

            function d(a, b) {
                f.call(this, "Nodejs stream input adapter for " + a), this._upstreamEnded = !1, this._bindStream(b)
            }
            var e = a("../utils"),
                f = a("../stream/GenericWorker");
            e.inherits(d, f), d.prototype._bindStream = function(a) {
                var b = this;
                this._stream = a, a.pause(), a.on("data", function(a) {
                    b.push({
                        data: a,
                        meta: {
                            percent: 0
                        }
                    })
                }).on("error", function(a) {
                    b.isPaused ? this.generatedError = a : b.error(a)
                }).on("end", function() {
                    b.isPaused ? b._upstreamEnded = !0 : b.end()
                })
            }, d.prototype.pause = function() {
                return !!f.prototype.pause.call(this) && (this._stream.pause(), !0)
            }, d.prototype.resume = function() {
                return !!f.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0)
            }, b.exports = d
        }, {
            "../stream/GenericWorker": 28,
            "../utils": 32
        }],
        13: [function(a, b, c) {
            "use strict";

            function d(a, b, c) {
                e.call(this, b), this._helper = a;
                var d = this;
                a.on("data", function(a, b) {
                    d.push(a) || d._helper.pause(), c && c(b)
                }).on("error", function(a) {
                    d.emit("error", a)
                }).on("end", function() {
                    d.push(null)
                })
            }
            var e = a("readable-stream").Readable,
                f = a("../utils");
            f.inherits(d, e), d.prototype._read = function() {
                this._helper.resume()
            }, b.exports = d
        }, {
            "../utils": 32,
            "readable-stream": 16
        }],
        14: [function(a, b, c) {
            "use strict";
            b.exports = {
                isNode: "undefined" != typeof Buffer,
                newBufferFrom: function(a, b) {
                    return new Buffer(a, b)
                },
                allocBuffer: function(a) {
                    return Buffer.alloc ? Buffer.alloc(a) : new Buffer(a)
                },
                isBuffer: function(a) {
                    return Buffer.isBuffer(a)
                },
                isStream: function(a) {
                    return a && "function" == typeof a.on && "function" == typeof a.pause && "function" == typeof a.resume
                }
            }
        }, {}],
        15: [function(a, b, c) {
            "use strict";

            function d(a) {
                return "[object RegExp]" === Object.prototype.toString.call(a)
            }
            var e = a("./utf8"),
                f = a("./utils"),
                g = a("./stream/GenericWorker"),
                h = a("./stream/StreamHelper"),
                i = a("./defaults"),
                j = a("./compressedObject"),
                k = a("./zipObject"),
                l = a("./generate"),
                m = a("./nodejsUtils"),
                n = a("./nodejs/NodejsStreamInputAdapter"),
                o = function(a, b, c) {
                    var d, e = f.getTypeOf(b),
                        h = f.extend(c || {}, i);
                    h.date = h.date || new Date, null !== h.compression && (h.compression = h.compression.toUpperCase()), "string" == typeof h.unixPermissions && (h.unixPermissions = parseInt(h.unixPermissions, 8)), h.unixPermissions && 16384 & h.unixPermissions && (h.dir = !0), h.dosPermissions && 16 & h.dosPermissions && (h.dir = !0), h.dir && (a = q(a)), h.createFolders && (d = p(a)) && r.call(this, d, !0);
                    var l = "string" === e && h.binary === !1 && h.base64 === !1;
                    c && "undefined" != typeof c.binary || (h.binary = !l);
                    var o = b instanceof j && 0 === b.uncompressedSize;
                    (o || h.dir || !b || 0 === b.length) && (h.base64 = !1, h.binary = !0, b = "", h.compression = "STORE", e = "string");
                    var s = null;
                    s = b instanceof j || b instanceof g ? b : m.isNode && m.isStream(b) ? new n(a, b) : f.prepareContent(a, b, h.binary, h.optimizedBinaryString, h.base64);
                    var t = new k(a, s, h);
                    this.files[a] = t
                },
                p = function(a) {
                    "/" === a.slice(-1) && (a = a.substring(0, a.length - 1));
                    var b = a.lastIndexOf("/");
                    return b > 0 ? a.substring(0, b) : ""
                },
                q = function(a) {
                    return "/" !== a.slice(-1) && (a += "/"), a
                },
                r = function(a, b) {
                    return b = "undefined" != typeof b ? b : i.createFolders, a = q(a), this.files[a] || o.call(this, a, null, {
                        dir: !0,
                        createFolders: b
                    }), this.files[a]
                },
                s = {
                    load: function() {
                        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")
                    },
                    forEach: function(a) {
                        var b, c, d;
                        for (b in this.files) this.files.hasOwnProperty(b) && (d = this.files[b], c = b.slice(this.root.length, b.length), c && b.slice(0, this.root.length) === this.root && a(c, d))
                    },
                    filter: function(a) {
                        var b = [];
                        return this.forEach(function(c, d) {
                            a(c, d) && b.push(d)
                        }), b
                    },
                    file: function(a, b, c) {
                        if (1 === arguments.length) {
                            if (d(a)) {
                                var e = a;
                                return this.filter(function(a, b) {
                                    return !b.dir && e.test(a)
                                })
                            }
                            var f = this.files[this.root + a];
                            return f && !f.dir ? f : null
                        }
                        return a = this.root + a, o.call(this, a, b, c), this
                    },
                    folder: function(a) {
                        if (!a) return this;
                        if (d(a)) return this.filter(function(b, c) {
                            return c.dir && a.test(b)
                        });
                        var b = this.root + a,
                            c = r.call(this, b),
                            e = this.clone();
                        return e.root = c.name, e
                    },
                    remove: function(a) {
                        a = this.root + a;
                        var b = this.files[a];
                        if (b || ("/" !== a.slice(-1) && (a += "/"), b = this.files[a]), b && !b.dir) delete this.files[a];
                        else
                            for (var c = this.filter(function(b, c) {
                                    return c.name.slice(0, a.length) === a
                                }), d = 0; d < c.length; d++) delete this.files[c[d].name];
                        return this
                    },
                    generate: function(a) {
                        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")
                    },
                    generateInternalStream: function(a) {
                        var b, c = {};
                        try {
                            if (c = f.extend(a || {}, {
                                    streamFiles: !1,
                                    compression: "STORE",
                                    compressionOptions: null,
                                    type: "",
                                    platform: "DOS",
                                    comment: null,
                                    mimeType: "application/zip",
                                    encodeFileName: e.utf8encode
                                }), c.type = c.type.toLowerCase(), c.compression = c.compression.toUpperCase(), "binarystring" === c.type && (c.type = "string"), !c.type) throw new Error("No output type specified.");
                            f.checkSupport(c.type), "darwin" !== c.platform && "freebsd" !== c.platform && "linux" !== c.platform && "sunos" !== c.platform || (c.platform = "UNIX"), "win32" === c.platform && (c.platform = "DOS");
                            var d = c.comment || this.comment || "";
                            b = l.generateWorker(this, c, d)
                        } catch (i) {
                            b = new g("error"), b.error(i)
                        }
                        return new h(b, c.type || "string", c.mimeType)
                    },
                    generateAsync: function(a, b) {
                        return this.generateInternalStream(a).accumulate(b)
                    },
                    generateNodeStream: function(a, b) {
                        return a = a || {}, a.type || (a.type = "nodebuffer"), this.generateInternalStream(a).toNodejsStream(b)
                    }
                };
            b.exports = s
        }, {
            "./compressedObject": 2,
            "./defaults": 5,
            "./generate": 9,
            "./nodejs/NodejsStreamInputAdapter": 12,
            "./nodejsUtils": 14,
            "./stream/GenericWorker": 28,
            "./stream/StreamHelper": 29,
            "./utf8": 31,
            "./utils": 32,
            "./zipObject": 35
        }],
        16: [function(a, b, c) {
            b.exports = a("stream")
        }, {
            stream: void 0
        }],
        17: [function(a, b, c) {
            "use strict";

            function d(a) {
                e.call(this, a);
                for (var b = 0; b < this.data.length; b++) a[b] = 255 & a[b]
            }
            var e = a("./DataReader"),
                f = a("../utils");
            f.inherits(d, e), d.prototype.byteAt = function(a) {
                return this.data[this.zero + a]
            }, d.prototype.lastIndexOfSignature = function(a) {
                for (var b = a.charCodeAt(0), c = a.charCodeAt(1), d = a.charCodeAt(2), e = a.charCodeAt(3), f = this.length - 4; f >= 0; --f)
                    if (this.data[f] === b && this.data[f + 1] === c && this.data[f + 2] === d && this.data[f + 3] === e) return f - this.zero;
                return -1
            }, d.prototype.readAndCheckSignature = function(a) {
                var b = a.charCodeAt(0),
                    c = a.charCodeAt(1),
                    d = a.charCodeAt(2),
                    e = a.charCodeAt(3),
                    f = this.readData(4);
                return b === f[0] && c === f[1] && d === f[2] && e === f[3]
            }, d.prototype.readData = function(a) {
                if (this.checkOffset(a), 0 === a) return [];
                var b = this.data.slice(this.zero + this.index, this.zero + this.index + a);
                return this.index += a, b
            }, b.exports = d
        }, {
            "../utils": 32,
            "./DataReader": 18
        }],
        18: [function(a, b, c) {
            "use strict";

            function d(a) {
                this.data = a, this.length = a.length, this.index = 0, this.zero = 0
            }
            var e = a("../utils");
            d.prototype = {
                checkOffset: function(a) {
                    this.checkIndex(this.index + a)
                },
                checkIndex: function(a) {
                    if (this.length < this.zero + a || a < 0) throw new Error("End of data reached (data length = " + this.length + ", asked index = " + a + "). Corrupted zip ?")
                },
                setIndex: function(a) {
                    this.checkIndex(a), this.index = a
                },
                skip: function(a) {
                    this.setIndex(this.index + a)
                },
                byteAt: function(a) {},
                readInt: function(a) {
                    var b, c = 0;
                    for (this.checkOffset(a), b = this.index + a - 1; b >= this.index; b--) c = (c << 8) + this.byteAt(b);
                    return this.index += a, c
                },
                readString: function(a) {
                    return e.transformTo("string", this.readData(a))
                },
                readData: function(a) {},
                lastIndexOfSignature: function(a) {},
                readAndCheckSignature: function(a) {},
                readDate: function() {
                    var a = this.readInt(4);
                    return new Date(Date.UTC((a >> 25 & 127) + 1980, (a >> 21 & 15) - 1, a >> 16 & 31, a >> 11 & 31, a >> 5 & 63, (31 & a) << 1))
                }
            }, b.exports = d
        }, {
            "../utils": 32
        }],
        19: [function(a, b, c) {
            "use strict";

            function d(a) {
                e.call(this, a)
            }
            var e = a("./Uint8ArrayReader"),
                f = a("../utils");
            f.inherits(d, e), d.prototype.readData = function(a) {
                this.checkOffset(a);
                var b = this.data.slice(this.zero + this.index, this.zero + this.index + a);
                return this.index += a, b
            }, b.exports = d
        }, {
            "../utils": 32,
            "./Uint8ArrayReader": 21
        }],
        20: [function(a, b, c) {
            "use strict";

            function d(a) {
                e.call(this, a)
            }
            var e = a("./DataReader"),
                f = a("../utils");
            f.inherits(d, e), d.prototype.byteAt = function(a) {
                return this.data.charCodeAt(this.zero + a)
            }, d.prototype.lastIndexOfSignature = function(a) {
                return this.data.lastIndexOf(a) - this.zero
            }, d.prototype.readAndCheckSignature = function(a) {
                var b = this.readData(4);
                return a === b
            }, d.prototype.readData = function(a) {
                this.checkOffset(a);
                var b = this.data.slice(this.zero + this.index, this.zero + this.index + a);
                return this.index += a, b
            }, b.exports = d
        }, {
            "../utils": 32,
            "./DataReader": 18
        }],
        21: [function(a, b, c) {
            "use strict";

            function d(a) {
                e.call(this, a)
            }
            var e = a("./ArrayReader"),
                f = a("../utils");
            f.inherits(d, e), d.prototype.readData = function(a) {
                if (this.checkOffset(a), 0 === a) return new Uint8Array(0);
                var b = this.data.subarray(this.zero + this.index, this.zero + this.index + a);
                return this.index += a, b
            }, b.exports = d
        }, {
            "../utils": 32,
            "./ArrayReader": 17
        }],
        22: [function(a, b, c) {
            "use strict";
            var d = a("../utils"),
                e = a("../support"),
                f = a("./ArrayReader"),
                g = a("./StringReader"),
                h = a("./NodeBufferReader"),
                i = a("./Uint8ArrayReader");
            b.exports = function(a) {
                var b = d.getTypeOf(a);
                return d.checkSupport(b), "string" !== b || e.uint8array ? "nodebuffer" === b ? new h(a) : e.uint8array ? new i(d.transformTo("uint8array", a)) : new f(d.transformTo("array", a)) : new g(a)
            }
        }, {
            "../support": 30,
            "../utils": 32,
            "./ArrayReader": 17,
            "./NodeBufferReader": 19,
            "./StringReader": 20,
            "./Uint8ArrayReader": 21
        }],
        23: [function(a, b, c) {
            "use strict";
            c.LOCAL_FILE_HEADER = "PK", c.CENTRAL_FILE_HEADER = "PK", c.CENTRAL_DIRECTORY_END = "PK", c.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK", c.ZIP64_CENTRAL_DIRECTORY_END = "PK", c.DATA_DESCRIPTOR = "PK\b"
        }, {}],
        24: [function(a, b, c) {
            "use strict";

            function d(a) {
                e.call(this, "ConvertWorker to " + a), this.destType = a
            }
            var e = a("./GenericWorker"),
                f = a("../utils");
            f.inherits(d, e), d.prototype.processChunk = function(a) {
                this.push({
                    data: f.transformTo(this.destType, a.data),
                    meta: a.meta
                })
            }, b.exports = d
        }, {
            "../utils": 32,
            "./GenericWorker": 28
        }],
        25: [function(a, b, c) {
            "use strict";

            function d() {
                e.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0)
            }
            var e = a("./GenericWorker"),
                f = a("../crc32"),
                g = a("../utils");
            g.inherits(d, e), d.prototype.processChunk = function(a) {
                this.streamInfo.crc32 = f(a.data, this.streamInfo.crc32 || 0), this.push(a)
            }, b.exports = d
        }, {
            "../crc32": 4,
            "../utils": 32,
            "./GenericWorker": 28
        }],
        26: [function(a, b, c) {
            "use strict";

            function d(a) {
                f.call(this, "DataLengthProbe for " + a), this.propName = a, this.withStreamInfo(a, 0)
            }
            var e = a("../utils"),
                f = a("./GenericWorker");
            e.inherits(d, f), d.prototype.processChunk = function(a) {
                if (a) {
                    var b = this.streamInfo[this.propName] || 0;
                    this.streamInfo[this.propName] = b + a.data.length
                }
                f.prototype.processChunk.call(this, a)
            }, b.exports = d
        }, {
            "../utils": 32,
            "./GenericWorker": 28
        }],
        27: [function(a, b, c) {
            "use strict";

            function d(a) {
                f.call(this, "DataWorker");
                var b = this;
                this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, a.then(function(a) {
                    b.dataIsReady = !0, b.data = a, b.max = a && a.length || 0, b.type = e.getTypeOf(a), b.isPaused || b._tickAndRepeat()
                }, function(a) {
                    b.error(a)
                })
            }
            var e = a("../utils"),
                f = a("./GenericWorker"),
                g = 16384;
            e.inherits(d, f), d.prototype.cleanUp = function() {
                f.prototype.cleanUp.call(this), this.data = null
            }, d.prototype.resume = function() {
                return !!f.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, e.delay(this._tickAndRepeat, [], this)), !0)
            }, d.prototype._tickAndRepeat = function() {
                this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (e.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0))
            }, d.prototype._tick = function() {
                if (this.isPaused || this.isFinished) return !1;
                var a = g,
                    b = null,
                    c = Math.min(this.max, this.index + a);
                if (this.index >= this.max) return this.end();
                switch (this.type) {
                    case "string":
                        b = this.data.substring(this.index, c);
                        break;
                    case "uint8array":
                        b = this.data.subarray(this.index, c);
                        break;
                    case "array":
                    case "nodebuffer":
                        b = this.data.slice(this.index, c)
                }
                return this.index = c, this.push({
                    data: b,
                    meta: {
                        percent: this.max ? this.index / this.max * 100 : 0
                    }
                })
            }, b.exports = d
        }, {
            "../utils": 32,
            "./GenericWorker": 28
        }],
        28: [function(a, b, c) {
            "use strict";

            function d(a) {
                this.name = a || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = {
                    data: [],
                    end: [],
                    error: []
                }, this.previous = null
            }
            d.prototype = {
                push: function(a) {
                    this.emit("data", a)
                },
                end: function() {
                    if (this.isFinished) return !1;
                    this.flush();
                    try {
                        this.emit("end"), this.cleanUp(), this.isFinished = !0
                    } catch (a) {
                        this.emit("error", a)
                    }
                    return !0
                },
                error: function(a) {
                    return !this.isFinished && (this.isPaused ? this.generatedError = a : (this.isFinished = !0, this.emit("error", a), this.previous && this.previous.error(a), this.cleanUp()), !0)
                },
                on: function(a, b) {
                    return this._listeners[a].push(b), this
                },
                cleanUp: function() {
                    this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = []
                },
                emit: function(a, b) {
                    if (this._listeners[a])
                        for (var c = 0; c < this._listeners[a].length; c++) this._listeners[a][c].call(this, b)
                },
                pipe: function(a) {
                    return a.registerPrevious(this)
                },
                registerPrevious: function(a) {
                    if (this.isLocked) throw new Error("The stream '" + this + "' has already been used.");
                    this.streamInfo = a.streamInfo, this.mergeStreamInfo(), this.previous = a;
                    var b = this;
                    return a.on("data", function(a) {
                        b.processChunk(a)
                    }), a.on("end", function() {
                        b.end()
                    }), a.on("error", function(a) {
                        b.error(a)
                    }), this
                },
                pause: function() {
                    return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0)
                },
                resume: function() {
                    if (!this.isPaused || this.isFinished) return !1;
                    this.isPaused = !1;
                    var a = !1;
                    return this.generatedError && (this.error(this.generatedError), a = !0), this.previous && this.previous.resume(), !a
                },
                flush: function() {},
                processChunk: function(a) {
                    this.push(a)
                },
                withStreamInfo: function(a, b) {
                    return this.extraStreamInfo[a] = b, this.mergeStreamInfo(), this
                },
                mergeStreamInfo: function() {
                    for (var a in this.extraStreamInfo) this.extraStreamInfo.hasOwnProperty(a) && (this.streamInfo[a] = this.extraStreamInfo[a])
                },
                lock: function() {
                    if (this.isLocked) throw new Error("The stream '" + this + "' has already been used.");
                    this.isLocked = !0, this.previous && this.previous.lock()
                },
                toString: function() {
                    var a = "Worker " + this.name;
                    return this.previous ? this.previous + " -> " + a : a
                }
            }, b.exports = d
        }, {}],
        29: [function(a, b, c) {
            "use strict";

            function d(a, b, c) {
                switch (a) {
                    case "blob":
                        return h.newBlob(h.transformTo("arraybuffer", b), c);
                    case "base64":
                        return k.encode(b);
                    default:
                        return h.transformTo(a, b)
                }
            }

            function e(a, b) {
                var c, d = 0,
                    e = null,
                    f = 0;
                for (c = 0; c < b.length; c++) f += b[c].length;
                switch (a) {
                    case "string":
                        return b.join("");
                    case "array":
                        return Array.prototype.concat.apply([], b);
                    case "uint8array":
                        for (e = new Uint8Array(f), c = 0; c < b.length; c++) e.set(b[c], d), d += b[c].length;
                        return e;
                    case "nodebuffer":
                        return Buffer.concat(b);
                    default:
                        throw new Error("concat : unsupported type '" + a + "'")
                }
            }

            function f(a, b) {
                return new m.Promise(function(c, f) {
                    var g = [],
                        h = a._internalType,
                        i = a._outputType,
                        j = a._mimeType;
                    a.on("data", function(a, c) {
                        g.push(a), b && b(c)
                    }).on("error", function(a) {
                        g = [], f(a)
                    }).on("end", function() {
                        try {
                            var a = d(i, e(h, g), j);
                            c(a)
                        } catch (b) {
                            f(b)
                        }
                        g = []
                    }).resume()
                })
            }

            function g(a, b, c) {
                var d = b;
                switch (b) {
                    case "blob":
                    case "arraybuffer":
                        d = "uint8array";
                        break;
                    case "base64":
                        d = "string"
                }
                try {
                    this._internalType = d, this._outputType = b, this._mimeType = c, h.checkSupport(d), this._worker = a.pipe(new i(d)), a.lock()
                } catch (e) {
                    this._worker = new j("error"), this._worker.error(e)
                }
            }
            var h = a("../utils"),
                i = a("./ConvertWorker"),
                j = a("./GenericWorker"),
                k = a("../base64"),
                l = a("../support"),
                m = a("../external"),
                n = null;
            if (l.nodestream) try {
                n = a("../nodejs/NodejsStreamOutputAdapter")
            } catch (o) {}
            g.prototype = {
                accumulate: function(a) {
                    return f(this, a)
                },
                on: function(a, b) {
                    var c = this;
                    return "data" === a ? this._worker.on(a, function(a) {
                        b.call(c, a.data, a.meta)
                    }) : this._worker.on(a, function() {
                        h.delay(b, arguments, c)
                    }), this
                },
                resume: function() {
                    return h.delay(this._worker.resume, [], this._worker), this
                },
                pause: function() {
                    return this._worker.pause(), this
                },
                toNodejsStream: function(a) {
                    if (h.checkSupport("nodestream"), "nodebuffer" !== this._outputType) throw new Error(this._outputType + " is not supported by this method");
                    return new n(this, {
                        objectMode: "nodebuffer" !== this._outputType
                    }, a)
                }
            }, b.exports = g
        }, {
            "../base64": 1,
            "../external": 6,
            "../nodejs/NodejsStreamOutputAdapter": 13,
            "../support": 30,
            "../utils": 32,
            "./ConvertWorker": 24,
            "./GenericWorker": 28
        }],
        30: [function(a, b, c) {
            "use strict";
            if (c.base64 = !0, c.array = !0, c.string = !0, c.arraybuffer = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array, c.nodebuffer = "undefined" != typeof Buffer, c.uint8array = "undefined" != typeof Uint8Array, "undefined" == typeof ArrayBuffer) c.blob = !1;
            else {
                var d = new ArrayBuffer(0);
                try {
                    c.blob = 0 === new Blob([d], {
                        type: "application/zip"
                    }).size
                } catch (e) {
                    try {
                        var f = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder,
                            g = new f;
                        g.append(d), c.blob = 0 === g.getBlob("application/zip").size
                    } catch (e) {
                        c.blob = !1
                    }
                }
            }
            try {
                c.nodestream = !!a("readable-stream").Readable
            } catch (e) {
                c.nodestream = !1
            }
        }, {
            "readable-stream": 16
        }],
        31: [function(a, b, c) {
            "use strict";

            function d() {
                i.call(this, "utf-8 decode"), this.leftOver = null
            }

            function e() {
                i.call(this, "utf-8 encode")
            }
            for (var f = a("./utils"), g = a("./support"), h = a("./nodejsUtils"), i = a("./stream/GenericWorker"), j = new Array(256), k = 0; k < 256; k++) j[k] = k >= 252 ? 6 : k >= 248 ? 5 : k >= 240 ? 4 : k >= 224 ? 3 : k >= 192 ? 2 : 1;
            j[254] = j[254] = 1;
            var l = function(a) {
                    var b, c, d, e, f, h = a.length,
                        i = 0;
                    for (e = 0; e < h; e++) c = a.charCodeAt(e), 55296 === (64512 & c) && e + 1 < h && (d = a.charCodeAt(e + 1), 56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), e++)), i += c < 128 ? 1 : c < 2048 ? 2 : c < 65536 ? 3 : 4;
                    for (b = g.uint8array ? new Uint8Array(i) : new Array(i), f = 0, e = 0; f < i; e++) c = a.charCodeAt(e), 55296 === (64512 & c) && e + 1 < h && (d = a.charCodeAt(e + 1), 56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), e++)), c < 128 ? b[f++] = c : c < 2048 ? (b[f++] = 192 | c >>> 6, b[f++] = 128 | 63 & c) : c < 65536 ? (b[f++] = 224 | c >>> 12, b[f++] = 128 | c >>> 6 & 63, b[f++] = 128 | 63 & c) : (b[f++] = 240 | c >>> 18, b[f++] = 128 | c >>> 12 & 63, b[f++] = 128 | c >>> 6 & 63, b[f++] = 128 | 63 & c);
                    return b
                },
                m = function(a, b) {
                    var c;
                    for (b = b || a.length, b > a.length && (b = a.length), c = b - 1; c >= 0 && 128 === (192 & a[c]);) c--;
                    return c < 0 ? b : 0 === c ? b : c + j[a[c]] > b ? c : b
                },
                n = function(a) {
                    var b, c, d, e, g = a.length,
                        h = new Array(2 * g);
                    for (c = 0, b = 0; b < g;)
                        if (d = a[b++], d < 128) h[c++] = d;
                        else if (e = j[d], e > 4) h[c++] = 65533, b += e - 1;
                    else {
                        for (d &= 2 === e ? 31 : 3 === e ? 15 : 7; e > 1 && b < g;) d = d << 6 | 63 & a[b++], e--;
                        e > 1 ? h[c++] = 65533 : d < 65536 ? h[c++] = d : (d -= 65536, h[c++] = 55296 | d >> 10 & 1023, h[c++] = 56320 | 1023 & d)
                    }
                    return h.length !== c && (h.subarray ? h = h.subarray(0, c) : h.length = c), f.applyFromCharCode(h)
                };
            c.utf8encode = function(a) {
                return g.nodebuffer ? h.newBufferFrom(a, "utf-8") : l(a)
            }, c.utf8decode = function(a) {
                return g.nodebuffer ? f.transformTo("nodebuffer", a).toString("utf-8") : (a = f.transformTo(g.uint8array ? "uint8array" : "array", a), n(a))
            }, f.inherits(d, i), d.prototype.processChunk = function(a) {
                var b = f.transformTo(g.uint8array ? "uint8array" : "array", a.data);
                if (this.leftOver && this.leftOver.length) {
                    if (g.uint8array) {
                        var d = b;
                        b = new Uint8Array(d.length + this.leftOver.length), b.set(this.leftOver, 0), b.set(d, this.leftOver.length)
                    } else b = this.leftOver.concat(b);
                    this.leftOver = null
                }
                var e = m(b),
                    h = b;
                e !== b.length && (g.uint8array ? (h = b.subarray(0, e), this.leftOver = b.subarray(e, b.length)) : (h = b.slice(0, e), this.leftOver = b.slice(e, b.length))), this.push({
                    data: c.utf8decode(h),
                    meta: a.meta
                })
            }, d.prototype.flush = function() {
                this.leftOver && this.leftOver.length && (this.push({
                    data: c.utf8decode(this.leftOver),
                    meta: {}
                }), this.leftOver = null)
            }, c.Utf8DecodeWorker = d, f.inherits(e, i), e.prototype.processChunk = function(a) {
                this.push({
                    data: c.utf8encode(a.data),
                    meta: a.meta
                })
            }, c.Utf8EncodeWorker = e
        }, {
            "./nodejsUtils": 14,
            "./stream/GenericWorker": 28,
            "./support": 30,
            "./utils": 32
        }],
        32: [function(a, b, c) {
            "use strict";

            function d(a) {
                var b = null;
                return b = i.uint8array ? new Uint8Array(a.length) : new Array(a.length), f(a, b)
            }

            function e(a) {
                return a
            }

            function f(a, b) {
                for (var c = 0; c < a.length; ++c) b[c] = 255 & a.charCodeAt(c);
                return b
            }

            function g(a) {
                var b = 65536,
                    d = c.getTypeOf(a),
                    e = !0;
                if ("uint8array" === d ? e = n.applyCanBeUsed.uint8array : "nodebuffer" === d && (e = n.applyCanBeUsed.nodebuffer), e)
                    for (; b > 1;) try {
                        return n.stringifyByChunk(a, d, b)
                    } catch (f) {
                        b = Math.floor(b / 2)
                    }
                return n.stringifyByChar(a)
            }

            function h(a, b) {
                for (var c = 0; c < a.length; c++) b[c] = a[c];
                return b
            }
            var i = a("./support"),
                j = a("./base64"),
                k = a("./nodejsUtils"),
                l = a("core-js/library/fn/set-immediate"),
                m = a("./external");
            c.newBlob = function(a, b) {
                c.checkSupport("blob");
                try {
                    return new Blob([a], {
                        type: b
                    })
                } catch (d) {
                    try {
                        var e = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder,
                            f = new e;
                        return f.append(a), f.getBlob(b)
                    } catch (d) {
                        throw new Error("Bug : can't construct the Blob.")
                    }
                }
            };
            var n = {
                stringifyByChunk: function(a, b, c) {
                    var d = [],
                        e = 0,
                        f = a.length;
                    if (f <= c) return String.fromCharCode.apply(null, a);
                    for (; e < f;) "array" === b || "nodebuffer" === b ? d.push(String.fromCharCode.apply(null, a.slice(e, Math.min(e + c, f)))) : d.push(String.fromCharCode.apply(null, a.subarray(e, Math.min(e + c, f)))), e += c;
                    return d.join("")
                },
                stringifyByChar: function(a) {
                    for (var b = "", c = 0; c < a.length; c++) b += String.fromCharCode(a[c]);
                    return b
                },
                applyCanBeUsed: {
                    uint8array: function() {
                        try {
                            return i.uint8array && 1 === String.fromCharCode.apply(null, new Uint8Array(1)).length
                        } catch (a) {
                            return !1
                        }
                    }(),
                    nodebuffer: function() {
                        try {
                            return i.nodebuffer && 1 === String.fromCharCode.apply(null, k.allocBuffer(1)).length
                        } catch (a) {
                            return !1
                        }
                    }()
                }
            };
            c.applyFromCharCode = g;
            var o = {};
            o.string = {
                string: e,
                array: function(a) {
                    return f(a, new Array(a.length))
                },
                arraybuffer: function(a) {
                    return o.string.uint8array(a).buffer
                },
                uint8array: function(a) {
                    return f(a, new Uint8Array(a.length))
                },
                nodebuffer: function(a) {
                    return f(a, k.allocBuffer(a.length))
                }
            }, o.array = {
                string: g,
                array: e,
                arraybuffer: function(a) {
                    return new Uint8Array(a).buffer
                },
                uint8array: function(a) {
                    return new Uint8Array(a)
                },
                nodebuffer: function(a) {
                    return k.newBufferFrom(a)
                }
            }, o.arraybuffer = {
                string: function(a) {
                    return g(new Uint8Array(a))
                },
                array: function(a) {
                    return h(new Uint8Array(a), new Array(a.byteLength))
                },
                arraybuffer: e,
                uint8array: function(a) {
                    return new Uint8Array(a)
                },
                nodebuffer: function(a) {
                    return k.newBufferFrom(new Uint8Array(a))
                }
            }, o.uint8array = {
                string: g,
                array: function(a) {
                    return h(a, new Array(a.length))
                },
                arraybuffer: function(a) {
                    return a.buffer
                },
                uint8array: e,
                nodebuffer: function(a) {
                    return k.newBufferFrom(a)
                }
            }, o.nodebuffer = {
                string: g,
                array: function(a) {
                    return h(a, new Array(a.length))
                },
                arraybuffer: function(a) {
                    return o.nodebuffer.uint8array(a).buffer
                },
                uint8array: function(a) {
                    return h(a, new Uint8Array(a.length))
                },
                nodebuffer: e
            }, c.transformTo = function(a, b) {
                if (b || (b = ""), !a) return b;
                c.checkSupport(a);
                var d = c.getTypeOf(b),
                    e = o[d][a](b);
                return e
            }, c.getTypeOf = function(a) {
                return "string" == typeof a ? "string" : "[object Array]" === Object.prototype.toString.call(a) ? "array" : i.nodebuffer && k.isBuffer(a) ? "nodebuffer" : i.uint8array && a instanceof Uint8Array ? "uint8array" : i.arraybuffer && a instanceof ArrayBuffer ? "arraybuffer" : void 0
            }, c.checkSupport = function(a) {
                var b = i[a.toLowerCase()];
                if (!b) throw new Error(a + " is not supported by this platform")
            }, c.MAX_VALUE_16BITS = 65535, c.MAX_VALUE_32BITS = -1, c.pretty = function(a) {
                var b, c, d = "";
                for (c = 0; c < (a || "").length; c++) b = a.charCodeAt(c), d += "\\x" + (b < 16 ? "0" : "") + b.toString(16).toUpperCase();
                return d
            }, c.delay = function(a, b, c) {
                l(function() {
                    a.apply(c || null, b || [])
                })
            }, c.inherits = function(a, b) {
                var c = function() {};
                c.prototype = b.prototype, a.prototype = new c
            }, c.extend = function() {
                var a, b, c = {};
                for (a = 0; a < arguments.length; a++)
                    for (b in arguments[a]) arguments[a].hasOwnProperty(b) && "undefined" == typeof c[b] && (c[b] = arguments[a][b]);
                return c
            }, c.prepareContent = function(a, b, e, f, g) {
                var h = m.Promise.resolve(b).then(function(a) {
                    var b = i.blob && (a instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(a)) !== -1);
                    return b && "undefined" != typeof FileReader ? new m.Promise(function(b, c) {
                        var d = new FileReader;
                        d.onload = function(a) {
                            b(a.target.result)
                        }, d.onerror = function(a) {
                            c(a.target.error)
                        }, d.readAsArrayBuffer(a)
                    }) : a
                });
                return h.then(function(b) {
                    var h = c.getTypeOf(b);
                    return h ? ("arraybuffer" === h ? b = c.transformTo("uint8array", b) : "string" === h && (g ? b = j.decode(b) : e && f !== !0 && (b = d(b))), b) : m.Promise.reject(new Error("Can't read the data of '" + a + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))
                })
            }
        }, {
            "./base64": 1,
            "./external": 6,
            "./nodejsUtils": 14,
            "./support": 30,
            "core-js/library/fn/set-immediate": 36
        }],
        33: [function(a, b, c) {
            "use strict";

            function d(a) {
                this.files = [], this.loadOptions = a
            }
            var e = a("./reader/readerFor"),
                f = a("./utils"),
                g = a("./signature"),
                h = a("./zipEntry"),
                i = (a("./utf8"), a("./support"));
            d.prototype = {
                checkSignature: function(a) {
                    if (!this.reader.readAndCheckSignature(a)) {
                        this.reader.index -= 4;
                        var b = this.reader.readString(4);
                        throw new Error("Corrupted zip or bug: unexpected signature (" + f.pretty(b) + ", expected " + f.pretty(a) + ")")
                    }
                },
                isSignature: function(a, b) {
                    var c = this.reader.index;
                    this.reader.setIndex(a);
                    var d = this.reader.readString(4),
                        e = d === b;
                    return this.reader.setIndex(c), e
                },
                readBlockEndOfCentral: function() {
                    this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
                    var a = this.reader.readData(this.zipCommentLength),
                        b = i.uint8array ? "uint8array" : "array",
                        c = f.transformTo(b, a);
                    this.zipComment = this.loadOptions.decodeFileName(c)
                },
                readBlockZip64EndOfCentral: function() {
                    this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
                    for (var a, b, c, d = this.zip64EndOfCentralSize - 44, e = 0; e < d;) a = this.reader.readInt(2), b = this.reader.readInt(4), c = this.reader.readData(b), this.zip64ExtensibleData[a] = {
                        id: a,
                        length: b,
                        value: c
                    }
                },
                readBlockZip64EndOfCentralLocator: function() {
                    if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), this.disksCount > 1) throw new Error("Multi-volumes zip are not supported")
                },
                readLocalFiles: function() {
                    var a, b;
                    for (a = 0; a < this.files.length; a++) b = this.files[a], this.reader.setIndex(b.localHeaderOffset), this.checkSignature(g.LOCAL_FILE_HEADER), b.readLocalPart(this.reader), b.handleUTF8(), b.processAttributes()
                },
                readCentralDir: function() {
                    var a;
                    for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(g.CENTRAL_FILE_HEADER);) a = new h({
                        zip64: this.zip64
                    }, this.loadOptions), a.readCentralPart(this.reader), this.files.push(a);
                    if (this.centralDirRecords !== this.files.length && 0 !== this.centralDirRecords && 0 === this.files.length) throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length)
                },
                readEndOfCentral: function() {
                    var a = this.reader.lastIndexOfSignature(g.CENTRAL_DIRECTORY_END);
                    if (a < 0) {
                        var b = !this.isSignature(0, g.LOCAL_FILE_HEADER);
                        throw b ? new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html") : new Error("Corrupted zip: can't find end of central directory")
                    }
                    this.reader.setIndex(a);
                    var c = a;
                    if (this.checkSignature(g.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === f.MAX_VALUE_16BITS || this.diskWithCentralDirStart === f.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === f.MAX_VALUE_16BITS || this.centralDirRecords === f.MAX_VALUE_16BITS || this.centralDirSize === f.MAX_VALUE_32BITS || this.centralDirOffset === f.MAX_VALUE_32BITS) {
                        if (this.zip64 = !0, a = this.reader.lastIndexOfSignature(g.ZIP64_CENTRAL_DIRECTORY_LOCATOR), a < 0) throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
                        if (this.reader.setIndex(a), this.checkSignature(g.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, g.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(g.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0)) throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
                        this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(g.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral()
                    }
                    var d = this.centralDirOffset + this.centralDirSize;
                    this.zip64 && (d += 20, d += 12 + this.zip64EndOfCentralSize);
                    var e = c - d;
                    if (e > 0) this.isSignature(c, g.CENTRAL_FILE_HEADER) || (this.reader.zero = e);
                    else if (e < 0) throw new Error("Corrupted zip: missing " + Math.abs(e) + " bytes.")
                },
                prepareReader: function(a) {
                    this.reader = e(a)
                },
                load: function(a) {
                    this.prepareReader(a), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles()
                }
            }, b.exports = d
        }, {
            "./reader/readerFor": 22,
            "./signature": 23,
            "./support": 30,
            "./utf8": 31,
            "./utils": 32,
            "./zipEntry": 34
        }],
        34: [function(a, b, c) {
            "use strict";

            function d(a, b) {
                this.options = a, this.loadOptions = b
            }
            var e = a("./reader/readerFor"),
                f = a("./utils"),
                g = a("./compressedObject"),
                h = a("./crc32"),
                i = a("./utf8"),
                j = a("./compressions"),
                k = a("./support"),
                l = 0,
                m = 3,
                n = function(a) {
                    for (var b in j)
                        if (j.hasOwnProperty(b) && j[b].magic === a) return j[b];
                    return null
                };
            d.prototype = {
                isEncrypted: function() {
                    return 1 === (1 & this.bitFlag)
                },
                useUTF8: function() {
                    return 2048 === (2048 & this.bitFlag)
                },
                readLocalPart: function(a) {
                    var b, c;
                    if (a.skip(22), this.fileNameLength = a.readInt(2), c = a.readInt(2), this.fileName = a.readData(this.fileNameLength), a.skip(c), this.compressedSize === -1 || this.uncompressedSize === -1) throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize === -1 || uncompressedSize === -1)");
                    if (b = n(this.compressionMethod), null === b) throw new Error("Corrupted zip : compression " + f.pretty(this.compressionMethod) + " unknown (inner file : " + f.transformTo("string", this.fileName) + ")");
                    this.decompressed = new g(this.compressedSize, this.uncompressedSize, this.crc32, b, a.readData(this.compressedSize))
                },
                readCentralPart: function(a) {
                    this.versionMadeBy = a.readInt(2), a.skip(2), this.bitFlag = a.readInt(2), this.compressionMethod = a.readString(2), this.date = a.readDate(), this.crc32 = a.readInt(4), this.compressedSize = a.readInt(4), this.uncompressedSize = a.readInt(4);
                    var b = a.readInt(2);
                    if (this.extraFieldsLength = a.readInt(2), this.fileCommentLength = a.readInt(2), this.diskNumberStart = a.readInt(2), this.internalFileAttributes = a.readInt(2), this.externalFileAttributes = a.readInt(4), this.localHeaderOffset = a.readInt(4), this.isEncrypted()) throw new Error("Encrypted zip are not supported");
                    a.skip(b), this.readExtraFields(a), this.parseZIP64ExtraField(a), this.fileComment = a.readData(this.fileCommentLength)
                },
                processAttributes: function() {
                    this.unixPermissions = null, this.dosPermissions = null;
                    var a = this.versionMadeBy >> 8;
                    this.dir = !!(16 & this.externalFileAttributes), a === l && (this.dosPermissions = 63 & this.externalFileAttributes), a === m && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || "/" !== this.fileNameStr.slice(-1) || (this.dir = !0)
                },
                parseZIP64ExtraField: function(a) {
                    if (this.extraFields[1]) {
                        var b = e(this.extraFields[1].value);
                        this.uncompressedSize === f.MAX_VALUE_32BITS && (this.uncompressedSize = b.readInt(8)), this.compressedSize === f.MAX_VALUE_32BITS && (this.compressedSize = b.readInt(8)), this.localHeaderOffset === f.MAX_VALUE_32BITS && (this.localHeaderOffset = b.readInt(8)), this.diskNumberStart === f.MAX_VALUE_32BITS && (this.diskNumberStart = b.readInt(4))
                    }
                },
                readExtraFields: function(a) {
                    var b, c, d, e = a.index + this.extraFieldsLength;
                    for (this.extraFields || (this.extraFields = {}); a.index < e;) b = a.readInt(2), c = a.readInt(2), d = a.readData(c), this.extraFields[b] = {
                        id: b,
                        length: c,
                        value: d
                    }
                },
                handleUTF8: function() {
                    var a = k.uint8array ? "uint8array" : "array";
                    if (this.useUTF8()) this.fileNameStr = i.utf8decode(this.fileName), this.fileCommentStr = i.utf8decode(this.fileComment);
                    else {
                        var b = this.findExtraFieldUnicodePath();
                        if (null !== b) this.fileNameStr = b;
                        else {
                            var c = f.transformTo(a, this.fileName);
                            this.fileNameStr = this.loadOptions.decodeFileName(c)
                        }
                        var d = this.findExtraFieldUnicodeComment();
                        if (null !== d) this.fileCommentStr = d;
                        else {
                            var e = f.transformTo(a, this.fileComment);
                            this.fileCommentStr = this.loadOptions.decodeFileName(e)
                        }
                    }
                },
                findExtraFieldUnicodePath: function() {
                    var a = this.extraFields[28789];
                    if (a) {
                        var b = e(a.value);
                        return 1 !== b.readInt(1) ? null : h(this.fileName) !== b.readInt(4) ? null : i.utf8decode(b.readData(a.length - 5))
                    }
                    return null
                },
                findExtraFieldUnicodeComment: function() {
                    var a = this.extraFields[25461];
                    if (a) {
                        var b = e(a.value);
                        return 1 !== b.readInt(1) ? null : h(this.fileComment) !== b.readInt(4) ? null : i.utf8decode(b.readData(a.length - 5))
                    }
                    return null
                }
            }, b.exports = d
        }, {
            "./compressedObject": 2,
            "./compressions": 3,
            "./crc32": 4,
            "./reader/readerFor": 22,
            "./support": 30,
            "./utf8": 31,
            "./utils": 32
        }],
        35: [function(a, b, c) {
            "use strict";
            var d = a("./stream/StreamHelper"),
                e = a("./stream/DataWorker"),
                f = a("./utf8"),
                g = a("./compressedObject"),
                h = a("./stream/GenericWorker"),
                i = function(a, b, c) {
                    this.name = a, this.dir = c.dir, this.date = c.date, this.comment = c.comment, this.unixPermissions = c.unixPermissions, this.dosPermissions = c.dosPermissions, this._data = b, this._dataBinary = c.binary, this.options = {
                        compression: c.compression,
                        compressionOptions: c.compressionOptions
                    }
                };
            i.prototype = {
                internalStream: function(a) {
                    var b = null,
                        c = "string";
                    try {
                        if (!a) throw new Error("No output type specified.");
                        c = a.toLowerCase();
                        var e = "string" === c || "text" === c;
                        "binarystring" !== c && "text" !== c || (c = "string"), b = this._decompressWorker();
                        var g = !this._dataBinary;
                        g && !e && (b = b.pipe(new f.Utf8EncodeWorker)), !g && e && (b = b.pipe(new f.Utf8DecodeWorker))
                    } catch (i) {
                        b = new h("error"), b.error(i)
                    }
                    return new d(b, c, "")
                },
                async: function(a, b) {
                    return this.internalStream(a).accumulate(b)
                },
                nodeStream: function(a, b) {
                    return this.internalStream(a || "nodebuffer").toNodejsStream(b)
                },
                _compressWorker: function(a, b) {
                    if (this._data instanceof g && this._data.compression.magic === a.magic) return this._data.getCompressedWorker();
                    var c = this._decompressWorker();
                    return this._dataBinary || (c = c.pipe(new f.Utf8EncodeWorker)), g.createWorkerFrom(c, a, b)
                },
                _decompressWorker: function() {
                    return this._data instanceof g ? this._data.getContentWorker() : this._data instanceof h ? this._data : new e(this._data)
                }
            };
            for (var j = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], k = function() {
                    throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")
                }, l = 0; l < j.length; l++) i.prototype[j[l]] = k;
            b.exports = i
        }, {
            "./compressedObject": 2,
            "./stream/DataWorker": 27,
            "./stream/GenericWorker": 28,
            "./stream/StreamHelper": 29,
            "./utf8": 31
        }],
        36: [function(a, b, c) {
            a("../modules/web.immediate"), b.exports = a("../modules/_core").setImmediate
        }, {
            "../modules/_core": 40,
            "../modules/web.immediate": 56
        }],
        37: [function(a, b, c) {
            b.exports = function(a) {
                if ("function" != typeof a) throw TypeError(a + " is not a function!");
                return a
            }
        }, {}],
        38: [function(a, b, c) {
            var d = a("./_is-object");
            b.exports = function(a) {
                if (!d(a)) throw TypeError(a + " is not an object!");
                return a
            }
        }, {
            "./_is-object": 51
        }],
        39: [function(a, b, c) {
            var d = {}.toString;
            b.exports = function(a) {
                return d.call(a).slice(8, -1)
            }
        }, {}],
        40: [function(a, b, c) {
            var d = b.exports = {
                version: "2.3.0"
            };
            "number" == typeof __e && (__e = d)
        }, {}],
        41: [function(a, b, c) {
            var d = a("./_a-function");
            b.exports = function(a, b, c) {
                if (d(a), void 0 === b) return a;
                switch (c) {
                    case 1:
                        return function(c) {
                            return a.call(b, c)
                        };
                    case 2:
                        return function(c, d) {
                            return a.call(b, c, d)
                        };
                    case 3:
                        return function(c, d, e) {
                            return a.call(b, c, d, e)
                        }
                }
                return function() {
                    return a.apply(b, arguments)
                }
            }
        }, {
            "./_a-function": 37
        }],
        42: [function(a, b, c) {
            b.exports = !a("./_fails")(function() {
                return 7 != Object.defineProperty({}, "a", {
                    get: function() {
                        return 7
                    }
                }).a
            })
        }, {
            "./_fails": 45
        }],
        43: [function(a, b, c) {
            var d = a("./_is-object"),
                e = a("./_global").document,
                f = d(e) && d(e.createElement);
            b.exports = function(a) {
                return f ? e.createElement(a) : {}
            }
        }, {
            "./_global": 46,
            "./_is-object": 51
        }],
        44: [function(a, b, c) {
            var d = a("./_global"),
                e = a("./_core"),
                f = a("./_ctx"),
                g = a("./_hide"),
                h = "prototype",
                i = function(a, b, c) {
                    var j, k, l, m = a & i.F,
                        n = a & i.G,
                        o = a & i.S,
                        p = a & i.P,
                        q = a & i.B,
                        r = a & i.W,
                        s = n ? e : e[b] || (e[b] = {}),
                        t = s[h],
                        u = n ? d : o ? d[b] : (d[b] || {})[h];
                    n && (c = b);
                    for (j in c) k = !m && u && void 0 !== u[j], k && j in s || (l = k ? u[j] : c[j], s[j] = n && "function" != typeof u[j] ? c[j] : q && k ? f(l, d) : r && u[j] == l ? function(a) {
                        var b = function(b, c, d) {
                            if (this instanceof a) {
                                switch (arguments.length) {
                                    case 0:
                                        return new a;
                                    case 1:
                                        return new a(b);
                                    case 2:
                                        return new a(b, c)
                                }
                                return new a(b, c, d)
                            }
                            return a.apply(this, arguments)
                        };
                        return b[h] = a[h], b
                    }(l) : p && "function" == typeof l ? f(Function.call, l) : l, p && ((s.virtual || (s.virtual = {}))[j] = l, a & i.R && t && !t[j] && g(t, j, l)))
                };
            i.F = 1, i.G = 2, i.S = 4, i.P = 8, i.B = 16, i.W = 32, i.U = 64, i.R = 128, b.exports = i
        }, {
            "./_core": 40,
            "./_ctx": 41,
            "./_global": 46,
            "./_hide": 47
        }],
        45: [function(a, b, c) {
            b.exports = function(a) {
                try {
                    return !!a()
                } catch (b) {
                    return !0
                }
            }
        }, {}],
        46: [function(a, b, c) {
            var d = b.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
            "number" == typeof __g && (__g = d)
        }, {}],
        47: [function(a, b, c) {
            var d = a("./_object-dp"),
                e = a("./_property-desc");
            b.exports = a("./_descriptors") ? function(a, b, c) {
                return d.f(a, b, e(1, c))
            } : function(a, b, c) {
                return a[b] = c, a
            }
        }, {
            "./_descriptors": 42,
            "./_object-dp": 52,
            "./_property-desc": 53
        }],
        48: [function(a, b, c) {
            b.exports = a("./_global").document && document.documentElement
        }, {
            "./_global": 46
        }],
        49: [function(a, b, c) {
            b.exports = !a("./_descriptors") && !a("./_fails")(function() {
                return 7 != Object.defineProperty(a("./_dom-create")("div"), "a", {
                    get: function() {
                        return 7
                    }
                }).a
            })
        }, {
            "./_descriptors": 42,
            "./_dom-create": 43,
            "./_fails": 45
        }],
        50: [function(a, b, c) {
            b.exports = function(a, b, c) {
                var d = void 0 === c;
                switch (b.length) {
                    case 0:
                        return d ? a() : a.call(c);
                    case 1:
                        return d ? a(b[0]) : a.call(c, b[0]);
                    case 2:
                        return d ? a(b[0], b[1]) : a.call(c, b[0], b[1]);
                    case 3:
                        return d ? a(b[0], b[1], b[2]) : a.call(c, b[0], b[1], b[2]);
                    case 4:
                        return d ? a(b[0], b[1], b[2], b[3]) : a.call(c, b[0], b[1], b[2], b[3])
                }
                return a.apply(c, b)
            }
        }, {}],
        51: [function(a, b, c) {
            b.exports = function(a) {
                return "object" == typeof a ? null !== a : "function" == typeof a
            }
        }, {}],
        52: [function(a, b, c) {
            var d = a("./_an-object"),
                e = a("./_ie8-dom-define"),
                f = a("./_to-primitive"),
                g = Object.defineProperty;
            c.f = a("./_descriptors") ? Object.defineProperty : function(a, b, c) {
                if (d(a), b = f(b, !0), d(c), e) try {
                    return g(a, b, c)
                } catch (h) {}
                if ("get" in c || "set" in c) throw TypeError("Accessors not supported!");
                return "value" in c && (a[b] = c.value), a
            }
        }, {
            "./_an-object": 38,
            "./_descriptors": 42,
            "./_ie8-dom-define": 49,
            "./_to-primitive": 55
        }],
        53: [function(a, b, c) {
            b.exports = function(a, b) {
                return {
                    enumerable: !(1 & a),
                    configurable: !(2 & a),
                    writable: !(4 & a),
                    value: b
                }
            }
        }, {}],
        54: [function(a, b, c) {
            var d, e, f, g = a("./_ctx"),
                h = a("./_invoke"),
                i = a("./_html"),
                j = a("./_dom-create"),
                k = a("./_global"),
                l = k.process,
                m = k.setImmediate,
                n = k.clearImmediate,
                o = k.MessageChannel,
                p = 0,
                q = {},
                r = "onreadystatechange",
                s = function() {
                    var a = +this;
                    if (q.hasOwnProperty(a)) {
                        var b = q[a];
                        delete q[a], b()
                    }
                },
                t = function(a) {
                    s.call(a.data)
                };
            m && n || (m = function(a) {
                for (var b = [], c = 1; arguments.length > c;) b.push(arguments[c++]);
                return q[++p] = function() {
                    h("function" == typeof a ? a : Function(a), b)
                }, d(p), p
            }, n = function(a) {
                delete q[a]
            }, "process" == a("./_cof")(l) ? d = function(a) {
                l.nextTick(g(s, a, 1))
            } : o ? (e = new o, f = e.port2, e.port1.onmessage = t, d = g(f.postMessage, f, 1)) : k.addEventListener && "function" == typeof postMessage && !k.importScripts ? (d = function(a) {
                k.postMessage(a + "", "*")
            }, k.addEventListener("message", t, !1)) : d = r in j("script") ? function(a) {
                i.appendChild(j("script"))[r] = function() {
                    i.removeChild(this), s.call(a)
                }
            } : function(a) {
                setTimeout(g(s, a, 1), 0)
            }), b.exports = {
                set: m,
                clear: n
            }
        }, {
            "./_cof": 39,
            "./_ctx": 41,
            "./_dom-create": 43,
            "./_global": 46,
            "./_html": 48,
            "./_invoke": 50
        }],
        55: [function(a, b, c) {
            var d = a("./_is-object");
            b.exports = function(a, b) {
                if (!d(a)) return a;
                var c, e;
                if (b && "function" == typeof(c = a.toString) && !d(e = c.call(a))) return e;
                if ("function" == typeof(c = a.valueOf) && !d(e = c.call(a))) return e;
                if (!b && "function" == typeof(c = a.toString) && !d(e = c.call(a))) return e;
                throw TypeError("Can't convert object to primitive value")
            }
        }, {
            "./_is-object": 51
        }],
        56: [function(a, b, c) {
            var d = a("./_export"),
                e = a("./_task");
            d(d.G + d.B, {
                setImmediate: e.set,
                clearImmediate: e.clear
            })
        }, {
            "./_export": 44,
            "./_task": 54
        }],
        57: [function(a, b, c) {
            (function(a) {
                "use strict";

                function c() {
                    k = !0;
                    for (var a, b, c = l.length; c;) {
                        for (b = l, l = [], a = -1; ++a < c;) b[a]();
                        c = l.length
                    }
                    k = !1
                }

                function d(a) {
                    1 !== l.push(a) || k || e()
                }
                var e, f = a.MutationObserver || a.WebKitMutationObserver;
                if (f) {
                    var g = 0,
                        h = new f(c),
                        i = a.document.createTextNode("");
                    h.observe(i, {
                        characterData: !0
                    }), e = function() {
                        i.data = g = ++g % 2
                    }
                } else if (a.setImmediate || "undefined" == typeof a.MessageChannel) e = "document" in a && "onreadystatechange" in a.document.createElement("script") ? function() {
                    var b = a.document.createElement("script");
                    b.onreadystatechange = function() {
                        c(), b.onreadystatechange = null, b.parentNode.removeChild(b), b = null
                    }, a.document.documentElement.appendChild(b)
                } : function() {
                    setTimeout(c, 0)
                };
                else {
                    var j = new a.MessageChannel;
                    j.port1.onmessage = c, e = function() {
                        j.port2.postMessage(0)
                    }
                }
                var k, l = [];
                b.exports = d
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        58: [function(a, b, c) {
            "use strict";

            function d() {}

            function e(a) {
                if ("function" != typeof a) throw new TypeError("resolver must be a function");
                this.state = s, this.queue = [], this.outcome = void 0, a !== d && i(this, a)
            }

            function f(a, b, c) {
                this.promise = a, "function" == typeof b && (this.onFulfilled = b, this.callFulfilled = this.otherCallFulfilled), "function" == typeof c && (this.onRejected = c, this.callRejected = this.otherCallRejected)
            }

            function g(a, b, c) {
                o(function() {
                    var d;
                    try {
                        d = b(c)
                    } catch (e) {
                        return p.reject(a, e)
                    }
                    d === a ? p.reject(a, new TypeError("Cannot resolve promise with itself")) : p.resolve(a, d)
                })
            }

            function h(a) {
                var b = a && a.then;
                if (a && ("object" == typeof a || "function" == typeof a) && "function" == typeof b) return function() {
                    b.apply(a, arguments)
                }
            }

            function i(a, b) {
                function c(b) {
                    f || (f = !0, p.reject(a, b))
                }

                function d(b) {
                    f || (f = !0, p.resolve(a, b))
                }

                function e() {
                    b(d, c)
                }
                var f = !1,
                    g = j(e);
                "error" === g.status && c(g.value)
            }

            function j(a, b) {
                var c = {};
                try {
                    c.value = a(b), c.status = "success"
                } catch (d) {
                    c.status = "error", c.value = d
                }
                return c
            }

            function k(a) {
                return a instanceof this ? a : p.resolve(new this(d), a)
            }

            function l(a) {
                var b = new this(d);
                return p.reject(b, a)
            }

            function m(a) {
                function b(a, b) {
                    function d(a) {
                        g[b] = a, ++h !== e || f || (f = !0, p.resolve(j, g))
                    }
                    c.resolve(a).then(d, function(a) {
                        f || (f = !0, p.reject(j, a))
                    })
                }
                var c = this;
                if ("[object Array]" !== Object.prototype.toString.call(a)) return this.reject(new TypeError("must be an array"));
                var e = a.length,
                    f = !1;
                if (!e) return this.resolve([]);
                for (var g = new Array(e), h = 0, i = -1, j = new this(d); ++i < e;) b(a[i], i);
                return j
            }

            function n(a) {
                function b(a) {
                    c.resolve(a).then(function(a) {
                        f || (f = !0, p.resolve(h, a))
                    }, function(a) {
                        f || (f = !0, p.reject(h, a))
                    })
                }
                var c = this;
                if ("[object Array]" !== Object.prototype.toString.call(a)) return this.reject(new TypeError("must be an array"));
                var e = a.length,
                    f = !1;
                if (!e) return this.resolve([]);
                for (var g = -1, h = new this(d); ++g < e;) b(a[g]);
                return h
            }
            var o = a("immediate"),
                p = {},
                q = ["REJECTED"],
                r = ["FULFILLED"],
                s = ["PENDING"];
            b.exports = e, e.prototype["catch"] = function(a) {
                return this.then(null, a)
            }, e.prototype.then = function(a, b) {
                if ("function" != typeof a && this.state === r || "function" != typeof b && this.state === q) return this;
                var c = new this.constructor(d);
                if (this.state !== s) {
                    var e = this.state === r ? a : b;
                    g(c, e, this.outcome)
                } else this.queue.push(new f(c, a, b));
                return c
            }, f.prototype.callFulfilled = function(a) {
                p.resolve(this.promise, a)
            }, f.prototype.otherCallFulfilled = function(a) {
                g(this.promise, this.onFulfilled, a)
            }, f.prototype.callRejected = function(a) {
                p.reject(this.promise, a)
            }, f.prototype.otherCallRejected = function(a) {
                g(this.promise, this.onRejected, a)
            }, p.resolve = function(a, b) {
                var c = j(h, b);
                if ("error" === c.status) return p.reject(a, c.value);
                var d = c.value;
                if (d) i(a, d);
                else {
                    a.state = r, a.outcome = b;
                    for (var e = -1, f = a.queue.length; ++e < f;) a.queue[e].callFulfilled(b)
                }
                return a
            }, p.reject = function(a, b) {
                a.state = q, a.outcome = b;
                for (var c = -1, d = a.queue.length; ++c < d;) a.queue[c].callRejected(b);
                return a
            }, e.resolve = k, e.reject = l, e.all = m, e.race = n
        }, {
            immediate: 57
        }],
        59: [function(a, b, c) {
            "use strict";
            var d = a("./lib/utils/common").assign,
                e = a("./lib/deflate"),
                f = a("./lib/inflate"),
                g = a("./lib/zlib/constants"),
                h = {};
            d(h, e, f, g), b.exports = h
        }, {
            "./lib/deflate": 60,
            "./lib/inflate": 61,
            "./lib/utils/common": 62,
            "./lib/zlib/constants": 65
        }],
        60: [function(a, b, c) {
            "use strict";

            function d(a) {
                if (!(this instanceof d)) return new d(a);
                this.options = i.assign({
                    level: s,
                    method: u,
                    chunkSize: 16384,
                    windowBits: 15,
                    memLevel: 8,
                    strategy: t,
                    to: ""
                }, a || {});
                var b = this.options;
                b.raw && b.windowBits > 0 ? b.windowBits = -b.windowBits : b.gzip && b.windowBits > 0 && b.windowBits < 16 && (b.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new l, this.strm.avail_out = 0;
                var c = h.deflateInit2(this.strm, b.level, b.method, b.windowBits, b.memLevel, b.strategy);
                if (c !== p) throw new Error(k[c]);
                if (b.header && h.deflateSetHeader(this.strm, b.header), b.dictionary) {
                    var e;
                    if (e = "string" == typeof b.dictionary ? j.string2buf(b.dictionary) : "[object ArrayBuffer]" === m.call(b.dictionary) ? new Uint8Array(b.dictionary) : b.dictionary, c = h.deflateSetDictionary(this.strm, e), c !== p) throw new Error(k[c]);
                    this._dict_set = !0
                }
            }

            function e(a, b) {
                var c = new d(b);
                if (c.push(a, !0), c.err) throw c.msg || k[c.err];
                return c.result
            }

            function f(a, b) {
                return b = b || {}, b.raw = !0, e(a, b)
            }

            function g(a, b) {
                return b = b || {}, b.gzip = !0, e(a, b)
            }
            var h = a("./zlib/deflate"),
                i = a("./utils/common"),
                j = a("./utils/strings"),
                k = a("./zlib/messages"),
                l = a("./zlib/zstream"),
                m = Object.prototype.toString,
                n = 0,
                o = 4,
                p = 0,
                q = 1,
                r = 2,
                s = -1,
                t = 0,
                u = 8;
            d.prototype.push = function(a, b) {
                var c, d, e = this.strm,
                    f = this.options.chunkSize;
                if (this.ended) return !1;
                d = b === ~~b ? b : b === !0 ? o : n, "string" == typeof a ? e.input = j.string2buf(a) : "[object ArrayBuffer]" === m.call(a) ? e.input = new Uint8Array(a) : e.input = a, e.next_in = 0, e.avail_in = e.input.length;
                do {
                    if (0 === e.avail_out && (e.output = new i.Buf8(f), e.next_out = 0, e.avail_out = f), c = h.deflate(e, d), c !== q && c !== p) return this.onEnd(c), this.ended = !0, !1;
                    0 !== e.avail_out && (0 !== e.avail_in || d !== o && d !== r) || ("string" === this.options.to ? this.onData(j.buf2binstring(i.shrinkBuf(e.output, e.next_out))) : this.onData(i.shrinkBuf(e.output, e.next_out)))
                } while ((e.avail_in > 0 || 0 === e.avail_out) && c !== q);
                return d === o ? (c = h.deflateEnd(this.strm), this.onEnd(c), this.ended = !0, c === p) : d !== r || (this.onEnd(p), e.avail_out = 0, !0)
            }, d.prototype.onData = function(a) {
                this.chunks.push(a)
            }, d.prototype.onEnd = function(a) {
                a === p && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = i.flattenChunks(this.chunks)), this.chunks = [], this.err = a, this.msg = this.strm.msg
            }, c.Deflate = d, c.deflate = e, c.deflateRaw = f, c.gzip = g
        }, {
            "./utils/common": 62,
            "./utils/strings": 63,
            "./zlib/deflate": 67,
            "./zlib/messages": 72,
            "./zlib/zstream": 74
        }],
        61: [function(a, b, c) {
            "use strict";

            function d(a) {
                if (!(this instanceof d)) return new d(a);
                this.options = h.assign({
                    chunkSize: 16384,
                    windowBits: 0,
                    to: ""
                }, a || {});
                var b = this.options;
                b.raw && b.windowBits >= 0 && b.windowBits < 16 && (b.windowBits = -b.windowBits, 0 === b.windowBits && (b.windowBits = -15)), !(b.windowBits >= 0 && b.windowBits < 16) || a && a.windowBits || (b.windowBits += 32), b.windowBits > 15 && b.windowBits < 48 && 0 === (15 & b.windowBits) && (b.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new l, this.strm.avail_out = 0;
                var c = g.inflateInit2(this.strm, b.windowBits);
                if (c !== j.Z_OK) throw new Error(k[c]);
                this.header = new m, g.inflateGetHeader(this.strm, this.header)
            }

            function e(a, b) {
                var c = new d(b);
                if (c.push(a, !0), c.err) throw c.msg || k[c.err];
                return c.result
            }

            function f(a, b) {
                return b = b || {}, b.raw = !0, e(a, b)
            }
            var g = a("./zlib/inflate"),
                h = a("./utils/common"),
                i = a("./utils/strings"),
                j = a("./zlib/constants"),
                k = a("./zlib/messages"),
                l = a("./zlib/zstream"),
                m = a("./zlib/gzheader"),
                n = Object.prototype.toString;
            d.prototype.push = function(a, b) {
                var c, d, e, f, k, l, m = this.strm,
                    o = this.options.chunkSize,
                    p = this.options.dictionary,
                    q = !1;
                if (this.ended) return !1;
                d = b === ~~b ? b : b === !0 ? j.Z_FINISH : j.Z_NO_FLUSH, "string" == typeof a ? m.input = i.binstring2buf(a) : "[object ArrayBuffer]" === n.call(a) ? m.input = new Uint8Array(a) : m.input = a, m.next_in = 0, m.avail_in = m.input.length;
                do {
                    if (0 === m.avail_out && (m.output = new h.Buf8(o), m.next_out = 0, m.avail_out = o), c = g.inflate(m, j.Z_NO_FLUSH), c === j.Z_NEED_DICT && p && (l = "string" == typeof p ? i.string2buf(p) : "[object ArrayBuffer]" === n.call(p) ? new Uint8Array(p) : p, c = g.inflateSetDictionary(this.strm, l)), c === j.Z_BUF_ERROR && q === !0 && (c = j.Z_OK, q = !1), c !== j.Z_STREAM_END && c !== j.Z_OK) return this.onEnd(c), this.ended = !0, !1;
                    m.next_out && (0 !== m.avail_out && c !== j.Z_STREAM_END && (0 !== m.avail_in || d !== j.Z_FINISH && d !== j.Z_SYNC_FLUSH) || ("string" === this.options.to ? (e = i.utf8border(m.output, m.next_out), f = m.next_out - e, k = i.buf2string(m.output, e), m.next_out = f, m.avail_out = o - f, f && h.arraySet(m.output, m.output, e, f, 0), this.onData(k)) : this.onData(h.shrinkBuf(m.output, m.next_out)))), 0 === m.avail_in && 0 === m.avail_out && (q = !0)
                } while ((m.avail_in > 0 || 0 === m.avail_out) && c !== j.Z_STREAM_END);
                return c === j.Z_STREAM_END && (d = j.Z_FINISH), d === j.Z_FINISH ? (c = g.inflateEnd(this.strm), this.onEnd(c), this.ended = !0, c === j.Z_OK) : d !== j.Z_SYNC_FLUSH || (this.onEnd(j.Z_OK), m.avail_out = 0, !0)
            }, d.prototype.onData = function(a) {
                this.chunks.push(a)
            }, d.prototype.onEnd = function(a) {
                a === j.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = h.flattenChunks(this.chunks)), this.chunks = [], this.err = a, this.msg = this.strm.msg
            }, c.Inflate = d, c.inflate = e, c.inflateRaw = f, c.ungzip = e
        }, {
            "./utils/common": 62,
            "./utils/strings": 63,
            "./zlib/constants": 65,
            "./zlib/gzheader": 68,
            "./zlib/inflate": 70,
            "./zlib/messages": 72,
            "./zlib/zstream": 74
        }],
        62: [function(a, b, c) {
            "use strict";
            var d = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
            c.assign = function(a) {
                for (var b = Array.prototype.slice.call(arguments, 1); b.length;) {
                    var c = b.shift();
                    if (c) {
                        if ("object" != typeof c) throw new TypeError(c + "must be non-object");
                        for (var d in c) c.hasOwnProperty(d) && (a[d] = c[d])
                    }
                }
                return a
            }, c.shrinkBuf = function(a, b) {
                return a.length === b ? a : a.subarray ? a.subarray(0, b) : (a.length = b, a)
            };
            var e = {
                    arraySet: function(a, b, c, d, e) {
                        if (b.subarray && a.subarray) return void a.set(b.subarray(c, c + d), e);
                        for (var f = 0; f < d; f++) a[e + f] = b[c + f]
                    },
                    flattenChunks: function(a) {
                        var b, c, d, e, f, g;
                        for (d = 0, b = 0, c = a.length; b < c; b++) d += a[b].length;
                        for (g = new Uint8Array(d), e = 0, b = 0, c = a.length; b < c; b++) f = a[b], g.set(f, e), e += f.length;
                        return g
                    }
                },
                f = {
                    arraySet: function(a, b, c, d, e) {
                        for (var f = 0; f < d; f++) a[e + f] = b[c + f]
                    },
                    flattenChunks: function(a) {
                        return [].concat.apply([], a)
                    }
                };
            c.setTyped = function(a) {
                a ? (c.Buf8 = Uint8Array, c.Buf16 = Uint16Array, c.Buf32 = Int32Array, c.assign(c, e)) : (c.Buf8 = Array, c.Buf16 = Array, c.Buf32 = Array, c.assign(c, f))
            }, c.setTyped(d)
        }, {}],
        63: [function(a, b, c) {
            "use strict";

            function d(a, b) {
                if (b < 65537 && (a.subarray && g || !a.subarray && f)) return String.fromCharCode.apply(null, e.shrinkBuf(a, b));
                for (var c = "", d = 0; d < b; d++) c += String.fromCharCode(a[d]);
                return c
            }
            var e = a("./common"),
                f = !0,
                g = !0;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (h) {
                f = !1
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (h) {
                g = !1
            }
            for (var i = new e.Buf8(256), j = 0; j < 256; j++) i[j] = j >= 252 ? 6 : j >= 248 ? 5 : j >= 240 ? 4 : j >= 224 ? 3 : j >= 192 ? 2 : 1;
            i[254] = i[254] = 1, c.string2buf = function(a) {
                var b, c, d, f, g, h = a.length,
                    i = 0;
                for (f = 0; f < h; f++) c = a.charCodeAt(f), 55296 === (64512 & c) && f + 1 < h && (d = a.charCodeAt(f + 1), 56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), f++)), i += c < 128 ? 1 : c < 2048 ? 2 : c < 65536 ? 3 : 4;
                for (b = new e.Buf8(i), g = 0, f = 0; g < i; f++) c = a.charCodeAt(f), 55296 === (64512 & c) && f + 1 < h && (d = a.charCodeAt(f + 1), 56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), f++)), c < 128 ? b[g++] = c : c < 2048 ? (b[g++] = 192 | c >>> 6, b[g++] = 128 | 63 & c) : c < 65536 ? (b[g++] = 224 | c >>> 12, b[g++] = 128 | c >>> 6 & 63, b[g++] = 128 | 63 & c) : (b[g++] = 240 | c >>> 18, b[g++] = 128 | c >>> 12 & 63, b[g++] = 128 | c >>> 6 & 63, b[g++] = 128 | 63 & c);
                return b
            }, c.buf2binstring = function(a) {
                return d(a, a.length)
            }, c.binstring2buf = function(a) {
                for (var b = new e.Buf8(a.length), c = 0, d = b.length; c < d; c++) b[c] = a.charCodeAt(c);
                return b
            }, c.buf2string = function(a, b) {
                var c, e, f, g, h = b || a.length,
                    j = new Array(2 * h);
                for (e = 0, c = 0; c < h;)
                    if (f = a[c++], f < 128) j[e++] = f;
                    else if (g = i[f], g > 4) j[e++] = 65533, c += g - 1;
                else {
                    for (f &= 2 === g ? 31 : 3 === g ? 15 : 7; g > 1 && c < h;) f = f << 6 | 63 & a[c++], g--;
                    g > 1 ? j[e++] = 65533 : f < 65536 ? j[e++] = f : (f -= 65536, j[e++] = 55296 | f >> 10 & 1023, j[e++] = 56320 | 1023 & f)
                }
                return d(j, e)
            }, c.utf8border = function(a, b) {
                var c;
                for (b = b || a.length, b > a.length && (b = a.length), c = b - 1; c >= 0 && 128 === (192 & a[c]);) c--;
                return c < 0 ? b : 0 === c ? b : c + i[a[c]] > b ? c : b
            }
        }, {
            "./common": 62
        }],
        64: [function(a, b, c) {
            "use strict";

            function d(a, b, c, d) {
                for (var e = 65535 & a | 0, f = a >>> 16 & 65535 | 0, g = 0; 0 !== c;) {
                    g = c > 2e3 ? 2e3 : c, c -= g;
                    do e = e + b[d++] | 0, f = f + e | 0; while (--g);
                    e %= 65521, f %= 65521
                }
                return e | f << 16 | 0;
            }
            b.exports = d
        }, {}],
        65: [function(a, b, c) {
            "use strict";
            b.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8
            }
        }, {}],
        66: [function(a, b, c) {
            "use strict";

            function d() {
                for (var a, b = [], c = 0; c < 256; c++) {
                    a = c;
                    for (var d = 0; d < 8; d++) a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;
                    b[c] = a
                }
                return b
            }

            function e(a, b, c, d) {
                var e = f,
                    g = d + c;
                a ^= -1;
                for (var h = d; h < g; h++) a = a >>> 8 ^ e[255 & (a ^ b[h])];
                return a ^ -1
            }
            var f = d();
            b.exports = e
        }, {}],
        67: [function(a, b, c) {
            "use strict";

            function d(a, b) {
                return a.msg = I[b], b
            }

            function e(a) {
                return (a << 1) - (a > 4 ? 9 : 0)
            }

            function f(a) {
                for (var b = a.length; --b >= 0;) a[b] = 0
            }

            function g(a) {
                var b = a.state,
                    c = b.pending;
                c > a.avail_out && (c = a.avail_out), 0 !== c && (E.arraySet(a.output, b.pending_buf, b.pending_out, c, a.next_out), a.next_out += c, b.pending_out += c, a.total_out += c, a.avail_out -= c, b.pending -= c, 0 === b.pending && (b.pending_out = 0))
            }

            function h(a, b) {
                F._tr_flush_block(a, a.block_start >= 0 ? a.block_start : -1, a.strstart - a.block_start, b), a.block_start = a.strstart, g(a.strm)
            }

            function i(a, b) {
                a.pending_buf[a.pending++] = b
            }

            function j(a, b) {
                a.pending_buf[a.pending++] = b >>> 8 & 255, a.pending_buf[a.pending++] = 255 & b
            }

            function k(a, b, c, d) {
                var e = a.avail_in;
                return e > d && (e = d), 0 === e ? 0 : (a.avail_in -= e, E.arraySet(b, a.input, a.next_in, e, c), 1 === a.state.wrap ? a.adler = G(a.adler, b, e, c) : 2 === a.state.wrap && (a.adler = H(a.adler, b, e, c)), a.next_in += e, a.total_in += e, e)
            }

            function l(a, b) {
                var c, d, e = a.max_chain_length,
                    f = a.strstart,
                    g = a.prev_length,
                    h = a.nice_match,
                    i = a.strstart > a.w_size - la ? a.strstart - (a.w_size - la) : 0,
                    j = a.window,
                    k = a.w_mask,
                    l = a.prev,
                    m = a.strstart + ka,
                    n = j[f + g - 1],
                    o = j[f + g];
                a.prev_length >= a.good_match && (e >>= 2), h > a.lookahead && (h = a.lookahead);
                do
                    if (c = b, j[c + g] === o && j[c + g - 1] === n && j[c] === j[f] && j[++c] === j[f + 1]) {
                        f += 2, c++;
                        do; while (j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && f < m);
                        if (d = ka - (m - f), f = m - ka, d > g) {
                            if (a.match_start = b, g = d, d >= h) break;
                            n = j[f + g - 1], o = j[f + g]
                        }
                    }
                while ((b = l[b & k]) > i && 0 !== --e);
                return g <= a.lookahead ? g : a.lookahead
            }

            function m(a) {
                var b, c, d, e, f, g = a.w_size;
                do {
                    if (e = a.window_size - a.lookahead - a.strstart, a.strstart >= g + (g - la)) {
                        E.arraySet(a.window, a.window, g, g, 0), a.match_start -= g, a.strstart -= g, a.block_start -= g, c = a.hash_size, b = c;
                        do d = a.head[--b], a.head[b] = d >= g ? d - g : 0; while (--c);
                        c = g, b = c;
                        do d = a.prev[--b], a.prev[b] = d >= g ? d - g : 0; while (--c);
                        e += g
                    }
                    if (0 === a.strm.avail_in) break;
                    if (c = k(a.strm, a.window, a.strstart + a.lookahead, e), a.lookahead += c, a.lookahead + a.insert >= ja)
                        for (f = a.strstart - a.insert, a.ins_h = a.window[f], a.ins_h = (a.ins_h << a.hash_shift ^ a.window[f + 1]) & a.hash_mask; a.insert && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[f + ja - 1]) & a.hash_mask, a.prev[f & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = f, f++, a.insert--, !(a.lookahead + a.insert < ja)););
                } while (a.lookahead < la && 0 !== a.strm.avail_in)
            }

            function n(a, b) {
                var c = 65535;
                for (c > a.pending_buf_size - 5 && (c = a.pending_buf_size - 5);;) {
                    if (a.lookahead <= 1) {
                        if (m(a), 0 === a.lookahead && b === J) return ua;
                        if (0 === a.lookahead) break
                    }
                    a.strstart += a.lookahead, a.lookahead = 0;
                    var d = a.block_start + c;
                    if ((0 === a.strstart || a.strstart >= d) && (a.lookahead = a.strstart - d, a.strstart = d, h(a, !1), 0 === a.strm.avail_out)) return ua;
                    if (a.strstart - a.block_start >= a.w_size - la && (h(a, !1), 0 === a.strm.avail_out)) return ua
                }
                return a.insert = 0, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.strstart > a.block_start && (h(a, !1), 0 === a.strm.avail_out) ? ua : ua
            }

            function o(a, b) {
                for (var c, d;;) {
                    if (a.lookahead < la) {
                        if (m(a), a.lookahead < la && b === J) return ua;
                        if (0 === a.lookahead) break
                    }
                    if (c = 0, a.lookahead >= ja && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart), 0 !== c && a.strstart - c <= a.w_size - la && (a.match_length = l(a, c)), a.match_length >= ja)
                        if (d = F._tr_tally(a, a.strstart - a.match_start, a.match_length - ja), a.lookahead -= a.match_length, a.match_length <= a.max_lazy_match && a.lookahead >= ja) {
                            a.match_length--;
                            do a.strstart++, a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart; while (0 !== --a.match_length);
                            a.strstart++
                        } else a.strstart += a.match_length, a.match_length = 0, a.ins_h = a.window[a.strstart], a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + 1]) & a.hash_mask;
                    else d = F._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, a.strstart++;
                    if (d && (h(a, !1), 0 === a.strm.avail_out)) return ua
                }
                return a.insert = a.strstart < ja - 1 ? a.strstart : ja - 1, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? ua : va
            }

            function p(a, b) {
                for (var c, d, e;;) {
                    if (a.lookahead < la) {
                        if (m(a), a.lookahead < la && b === J) return ua;
                        if (0 === a.lookahead) break
                    }
                    if (c = 0, a.lookahead >= ja && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart), a.prev_length = a.match_length, a.prev_match = a.match_start, a.match_length = ja - 1, 0 !== c && a.prev_length < a.max_lazy_match && a.strstart - c <= a.w_size - la && (a.match_length = l(a, c), a.match_length <= 5 && (a.strategy === U || a.match_length === ja && a.strstart - a.match_start > 4096) && (a.match_length = ja - 1)), a.prev_length >= ja && a.match_length <= a.prev_length) {
                        e = a.strstart + a.lookahead - ja, d = F._tr_tally(a, a.strstart - 1 - a.prev_match, a.prev_length - ja), a.lookahead -= a.prev_length - 1, a.prev_length -= 2;
                        do ++a.strstart <= e && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart); while (0 !== --a.prev_length);
                        if (a.match_available = 0, a.match_length = ja - 1, a.strstart++, d && (h(a, !1), 0 === a.strm.avail_out)) return ua
                    } else if (a.match_available) {
                        if (d = F._tr_tally(a, 0, a.window[a.strstart - 1]), d && h(a, !1), a.strstart++, a.lookahead--, 0 === a.strm.avail_out) return ua
                    } else a.match_available = 1, a.strstart++, a.lookahead--
                }
                return a.match_available && (d = F._tr_tally(a, 0, a.window[a.strstart - 1]), a.match_available = 0), a.insert = a.strstart < ja - 1 ? a.strstart : ja - 1, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? ua : va
            }

            function q(a, b) {
                for (var c, d, e, f, g = a.window;;) {
                    if (a.lookahead <= ka) {
                        if (m(a), a.lookahead <= ka && b === J) return ua;
                        if (0 === a.lookahead) break
                    }
                    if (a.match_length = 0, a.lookahead >= ja && a.strstart > 0 && (e = a.strstart - 1, d = g[e], d === g[++e] && d === g[++e] && d === g[++e])) {
                        f = a.strstart + ka;
                        do; while (d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && e < f);
                        a.match_length = ka - (f - e), a.match_length > a.lookahead && (a.match_length = a.lookahead)
                    }
                    if (a.match_length >= ja ? (c = F._tr_tally(a, 1, a.match_length - ja), a.lookahead -= a.match_length, a.strstart += a.match_length, a.match_length = 0) : (c = F._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, a.strstart++), c && (h(a, !1), 0 === a.strm.avail_out)) return ua
                }
                return a.insert = 0, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? ua : va
            }

            function r(a, b) {
                for (var c;;) {
                    if (0 === a.lookahead && (m(a), 0 === a.lookahead)) {
                        if (b === J) return ua;
                        break
                    }
                    if (a.match_length = 0, c = F._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, a.strstart++, c && (h(a, !1), 0 === a.strm.avail_out)) return ua
                }
                return a.insert = 0, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? ua : va
            }

            function s(a, b, c, d, e) {
                this.good_length = a, this.max_lazy = b, this.nice_length = c, this.max_chain = d, this.func = e
            }

            function t(a) {
                a.window_size = 2 * a.w_size, f(a.head), a.max_lazy_match = D[a.level].max_lazy, a.good_match = D[a.level].good_length, a.nice_match = D[a.level].nice_length, a.max_chain_length = D[a.level].max_chain, a.strstart = 0, a.block_start = 0, a.lookahead = 0, a.insert = 0, a.match_length = a.prev_length = ja - 1, a.match_available = 0, a.ins_h = 0
            }

            function u() {
                this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = $, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new E.Buf16(2 * ha), this.dyn_dtree = new E.Buf16(2 * (2 * fa + 1)), this.bl_tree = new E.Buf16(2 * (2 * ga + 1)), f(this.dyn_ltree), f(this.dyn_dtree), f(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new E.Buf16(ia + 1), this.heap = new E.Buf16(2 * ea + 1), f(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new E.Buf16(2 * ea + 1), f(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0
            }

            function v(a) {
                var b;
                return a && a.state ? (a.total_in = a.total_out = 0, a.data_type = Z, b = a.state, b.pending = 0, b.pending_out = 0, b.wrap < 0 && (b.wrap = -b.wrap), b.status = b.wrap ? na : sa, a.adler = 2 === b.wrap ? 0 : 1, b.last_flush = J, F._tr_init(b), O) : d(a, Q)
            }

            function w(a) {
                var b = v(a);
                return b === O && t(a.state), b
            }

            function x(a, b) {
                return a && a.state ? 2 !== a.state.wrap ? Q : (a.state.gzhead = b, O) : Q
            }

            function y(a, b, c, e, f, g) {
                if (!a) return Q;
                var h = 1;
                if (b === T && (b = 6), e < 0 ? (h = 0, e = -e) : e > 15 && (h = 2, e -= 16), f < 1 || f > _ || c !== $ || e < 8 || e > 15 || b < 0 || b > 9 || g < 0 || g > X) return d(a, Q);
                8 === e && (e = 9);
                var i = new u;
                return a.state = i, i.strm = a, i.wrap = h, i.gzhead = null, i.w_bits = e, i.w_size = 1 << i.w_bits, i.w_mask = i.w_size - 1, i.hash_bits = f + 7, i.hash_size = 1 << i.hash_bits, i.hash_mask = i.hash_size - 1, i.hash_shift = ~~((i.hash_bits + ja - 1) / ja), i.window = new E.Buf8(2 * i.w_size), i.head = new E.Buf16(i.hash_size), i.prev = new E.Buf16(i.w_size), i.lit_bufsize = 1 << f + 6, i.pending_buf_size = 4 * i.lit_bufsize, i.pending_buf = new E.Buf8(i.pending_buf_size), i.d_buf = 1 * i.lit_bufsize, i.l_buf = 3 * i.lit_bufsize, i.level = b, i.strategy = g, i.method = c, w(a)
            }

            function z(a, b) {
                return y(a, b, $, aa, ba, Y)
            }

            function A(a, b) {
                var c, h, k, l;
                if (!a || !a.state || b > N || b < 0) return a ? d(a, Q) : Q;
                if (h = a.state, !a.output || !a.input && 0 !== a.avail_in || h.status === ta && b !== M) return d(a, 0 === a.avail_out ? S : Q);
                if (h.strm = a, c = h.last_flush, h.last_flush = b, h.status === na)
                    if (2 === h.wrap) a.adler = 0, i(h, 31), i(h, 139), i(h, 8), h.gzhead ? (i(h, (h.gzhead.text ? 1 : 0) + (h.gzhead.hcrc ? 2 : 0) + (h.gzhead.extra ? 4 : 0) + (h.gzhead.name ? 8 : 0) + (h.gzhead.comment ? 16 : 0)), i(h, 255 & h.gzhead.time), i(h, h.gzhead.time >> 8 & 255), i(h, h.gzhead.time >> 16 & 255), i(h, h.gzhead.time >> 24 & 255), i(h, 9 === h.level ? 2 : h.strategy >= V || h.level < 2 ? 4 : 0), i(h, 255 & h.gzhead.os), h.gzhead.extra && h.gzhead.extra.length && (i(h, 255 & h.gzhead.extra.length), i(h, h.gzhead.extra.length >> 8 & 255)), h.gzhead.hcrc && (a.adler = H(a.adler, h.pending_buf, h.pending, 0)), h.gzindex = 0, h.status = oa) : (i(h, 0), i(h, 0), i(h, 0), i(h, 0), i(h, 0), i(h, 9 === h.level ? 2 : h.strategy >= V || h.level < 2 ? 4 : 0), i(h, ya), h.status = sa);
                    else {
                        var m = $ + (h.w_bits - 8 << 4) << 8,
                            n = -1;
                        n = h.strategy >= V || h.level < 2 ? 0 : h.level < 6 ? 1 : 6 === h.level ? 2 : 3, m |= n << 6, 0 !== h.strstart && (m |= ma), m += 31 - m % 31, h.status = sa, j(h, m), 0 !== h.strstart && (j(h, a.adler >>> 16), j(h, 65535 & a.adler)), a.adler = 1
                    }
                if (h.status === oa)
                    if (h.gzhead.extra) {
                        for (k = h.pending; h.gzindex < (65535 & h.gzhead.extra.length) && (h.pending !== h.pending_buf_size || (h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), g(a), k = h.pending, h.pending !== h.pending_buf_size));) i(h, 255 & h.gzhead.extra[h.gzindex]), h.gzindex++;
                        h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), h.gzindex === h.gzhead.extra.length && (h.gzindex = 0, h.status = pa)
                    } else h.status = pa;
                if (h.status === pa)
                    if (h.gzhead.name) {
                        k = h.pending;
                        do {
                            if (h.pending === h.pending_buf_size && (h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), g(a), k = h.pending, h.pending === h.pending_buf_size)) {
                                l = 1;
                                break
                            }
                            l = h.gzindex < h.gzhead.name.length ? 255 & h.gzhead.name.charCodeAt(h.gzindex++) : 0, i(h, l)
                        } while (0 !== l);
                        h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 0 === l && (h.gzindex = 0, h.status = qa)
                    } else h.status = qa;
                if (h.status === qa)
                    if (h.gzhead.comment) {
                        k = h.pending;
                        do {
                            if (h.pending === h.pending_buf_size && (h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), g(a), k = h.pending, h.pending === h.pending_buf_size)) {
                                l = 1;
                                break
                            }
                            l = h.gzindex < h.gzhead.comment.length ? 255 & h.gzhead.comment.charCodeAt(h.gzindex++) : 0, i(h, l)
                        } while (0 !== l);
                        h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 0 === l && (h.status = ra)
                    } else h.status = ra;
                if (h.status === ra && (h.gzhead.hcrc ? (h.pending + 2 > h.pending_buf_size && g(a), h.pending + 2 <= h.pending_buf_size && (i(h, 255 & a.adler), i(h, a.adler >> 8 & 255), a.adler = 0, h.status = sa)) : h.status = sa), 0 !== h.pending) {
                    if (g(a), 0 === a.avail_out) return h.last_flush = -1, O
                } else if (0 === a.avail_in && e(b) <= e(c) && b !== M) return d(a, S);
                if (h.status === ta && 0 !== a.avail_in) return d(a, S);
                if (0 !== a.avail_in || 0 !== h.lookahead || b !== J && h.status !== ta) {
                    var o = h.strategy === V ? r(h, b) : h.strategy === W ? q(h, b) : D[h.level].func(h, b);
                    if (o !== wa && o !== xa || (h.status = ta), o === ua || o === wa) return 0 === a.avail_out && (h.last_flush = -1), O;
                    if (o === va && (b === K ? F._tr_align(h) : b !== N && (F._tr_stored_block(h, 0, 0, !1), b === L && (f(h.head), 0 === h.lookahead && (h.strstart = 0, h.block_start = 0, h.insert = 0))), g(a), 0 === a.avail_out)) return h.last_flush = -1, O
                }
                return b !== M ? O : h.wrap <= 0 ? P : (2 === h.wrap ? (i(h, 255 & a.adler), i(h, a.adler >> 8 & 255), i(h, a.adler >> 16 & 255), i(h, a.adler >> 24 & 255), i(h, 255 & a.total_in), i(h, a.total_in >> 8 & 255), i(h, a.total_in >> 16 & 255), i(h, a.total_in >> 24 & 255)) : (j(h, a.adler >>> 16), j(h, 65535 & a.adler)), g(a), h.wrap > 0 && (h.wrap = -h.wrap), 0 !== h.pending ? O : P)
            }

            function B(a) {
                var b;
                return a && a.state ? (b = a.state.status, b !== na && b !== oa && b !== pa && b !== qa && b !== ra && b !== sa && b !== ta ? d(a, Q) : (a.state = null, b === sa ? d(a, R) : O)) : Q
            }

            function C(a, b) {
                var c, d, e, g, h, i, j, k, l = b.length;
                if (!a || !a.state) return Q;
                if (c = a.state, g = c.wrap, 2 === g || 1 === g && c.status !== na || c.lookahead) return Q;
                for (1 === g && (a.adler = G(a.adler, b, l, 0)), c.wrap = 0, l >= c.w_size && (0 === g && (f(c.head), c.strstart = 0, c.block_start = 0, c.insert = 0), k = new E.Buf8(c.w_size), E.arraySet(k, b, l - c.w_size, c.w_size, 0), b = k, l = c.w_size), h = a.avail_in, i = a.next_in, j = a.input, a.avail_in = l, a.next_in = 0, a.input = b, m(c); c.lookahead >= ja;) {
                    d = c.strstart, e = c.lookahead - (ja - 1);
                    do c.ins_h = (c.ins_h << c.hash_shift ^ c.window[d + ja - 1]) & c.hash_mask, c.prev[d & c.w_mask] = c.head[c.ins_h], c.head[c.ins_h] = d, d++; while (--e);
                    c.strstart = d, c.lookahead = ja - 1, m(c)
                }
                return c.strstart += c.lookahead, c.block_start = c.strstart, c.insert = c.lookahead, c.lookahead = 0, c.match_length = c.prev_length = ja - 1, c.match_available = 0, a.next_in = i, a.input = j, a.avail_in = h, c.wrap = g, O
            }
            var D, E = a("../utils/common"),
                F = a("./trees"),
                G = a("./adler32"),
                H = a("./crc32"),
                I = a("./messages"),
                J = 0,
                K = 1,
                L = 3,
                M = 4,
                N = 5,
                O = 0,
                P = 1,
                Q = -2,
                R = -3,
                S = -5,
                T = -1,
                U = 1,
                V = 2,
                W = 3,
                X = 4,
                Y = 0,
                Z = 2,
                $ = 8,
                _ = 9,
                aa = 15,
                ba = 8,
                ca = 29,
                da = 256,
                ea = da + 1 + ca,
                fa = 30,
                ga = 19,
                ha = 2 * ea + 1,
                ia = 15,
                ja = 3,
                ka = 258,
                la = ka + ja + 1,
                ma = 32,
                na = 42,
                oa = 69,
                pa = 73,
                qa = 91,
                ra = 103,
                sa = 113,
                ta = 666,
                ua = 1,
                va = 2,
                wa = 3,
                xa = 4,
                ya = 3;
            D = [new s(0, 0, 0, 0, n), new s(4, 4, 8, 4, o), new s(4, 5, 16, 8, o), new s(4, 6, 32, 32, o), new s(4, 4, 16, 16, p), new s(8, 16, 32, 32, p), new s(8, 16, 128, 128, p), new s(8, 32, 128, 256, p), new s(32, 128, 258, 1024, p), new s(32, 258, 258, 4096, p)], c.deflateInit = z, c.deflateInit2 = y, c.deflateReset = w, c.deflateResetKeep = v, c.deflateSetHeader = x, c.deflate = A, c.deflateEnd = B, c.deflateSetDictionary = C, c.deflateInfo = "pako deflate (from Nodeca project)"
        }, {
            "../utils/common": 62,
            "./adler32": 64,
            "./crc32": 66,
            "./messages": 72,
            "./trees": 73
        }],
        68: [function(a, b, c) {
            "use strict";

            function d() {
                this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1
            }
            b.exports = d
        }, {}],
        69: [function(a, b, c) {
            "use strict";
            var d = 30,
                e = 12;
            b.exports = function(a, b) {
                var c, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C;
                c = a.state, f = a.next_in, B = a.input, g = f + (a.avail_in - 5), h = a.next_out, C = a.output, i = h - (b - a.avail_out), j = h + (a.avail_out - 257), k = c.dmax, l = c.wsize, m = c.whave, n = c.wnext, o = c.window, p = c.hold, q = c.bits, r = c.lencode, s = c.distcode, t = (1 << c.lenbits) - 1, u = (1 << c.distbits) - 1;
                a: do {
                    q < 15 && (p += B[f++] << q, q += 8, p += B[f++] << q, q += 8), v = r[p & t];
                    b: for (;;) {
                        if (w = v >>> 24, p >>>= w, q -= w, w = v >>> 16 & 255, 0 === w) C[h++] = 65535 & v;
                        else {
                            if (!(16 & w)) {
                                if (0 === (64 & w)) {
                                    v = r[(65535 & v) + (p & (1 << w) - 1)];
                                    continue b
                                }
                                if (32 & w) {
                                    c.mode = e;
                                    break a
                                }
                                a.msg = "invalid literal/length code", c.mode = d;
                                break a
                            }
                            x = 65535 & v, w &= 15, w && (q < w && (p += B[f++] << q, q += 8), x += p & (1 << w) - 1, p >>>= w, q -= w), q < 15 && (p += B[f++] << q, q += 8, p += B[f++] << q, q += 8), v = s[p & u];
                            c: for (;;) {
                                if (w = v >>> 24, p >>>= w, q -= w, w = v >>> 16 & 255, !(16 & w)) {
                                    if (0 === (64 & w)) {
                                        v = s[(65535 & v) + (p & (1 << w) - 1)];
                                        continue c
                                    }
                                    a.msg = "invalid distance code", c.mode = d;
                                    break a
                                }
                                if (y = 65535 & v, w &= 15, q < w && (p += B[f++] << q, q += 8, q < w && (p += B[f++] << q, q += 8)), y += p & (1 << w) - 1, y > k) {
                                    a.msg = "invalid distance too far back", c.mode = d;
                                    break a
                                }
                                if (p >>>= w, q -= w, w = h - i, y > w) {
                                    if (w = y - w, w > m && c.sane) {
                                        a.msg = "invalid distance too far back", c.mode = d;
                                        break a
                                    }
                                    if (z = 0, A = o, 0 === n) {
                                        if (z += l - w, w < x) {
                                            x -= w;
                                            do C[h++] = o[z++]; while (--w);
                                            z = h - y, A = C
                                        }
                                    } else if (n < w) {
                                        if (z += l + n - w, w -= n, w < x) {
                                            x -= w;
                                            do C[h++] = o[z++]; while (--w);
                                            if (z = 0, n < x) {
                                                w = n, x -= w;
                                                do C[h++] = o[z++]; while (--w);
                                                z = h - y, A = C
                                            }
                                        }
                                    } else if (z += n - w, w < x) {
                                        x -= w;
                                        do C[h++] = o[z++]; while (--w);
                                        z = h - y, A = C
                                    }
                                    for (; x > 2;) C[h++] = A[z++], C[h++] = A[z++], C[h++] = A[z++], x -= 3;
                                    x && (C[h++] = A[z++], x > 1 && (C[h++] = A[z++]))
                                } else {
                                    z = h - y;
                                    do C[h++] = C[z++], C[h++] = C[z++], C[h++] = C[z++], x -= 3; while (x > 2);
                                    x && (C[h++] = C[z++], x > 1 && (C[h++] = C[z++]))
                                }
                                break
                            }
                        }
                        break
                    }
                } while (f < g && h < j);
                x = q >> 3, f -= x, q -= x << 3, p &= (1 << q) - 1, a.next_in = f, a.next_out = h, a.avail_in = f < g ? 5 + (g - f) : 5 - (f - g), a.avail_out = h < j ? 257 + (j - h) : 257 - (h - j), c.hold = p, c.bits = q
            }
        }, {}],
        70: [function(a, b, c) {
            "use strict";

            function d(a) {
                return (a >>> 24 & 255) + (a >>> 8 & 65280) + ((65280 & a) << 8) + ((255 & a) << 24)
            }

            function e() {
                this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new s.Buf16(320), this.work = new s.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0
            }

            function f(a) {
                var b;
                return a && a.state ? (b = a.state, a.total_in = a.total_out = b.total = 0, a.msg = "", b.wrap && (a.adler = 1 & b.wrap), b.mode = L, b.last = 0, b.havedict = 0, b.dmax = 32768, b.head = null, b.hold = 0, b.bits = 0, b.lencode = b.lendyn = new s.Buf32(pa), b.distcode = b.distdyn = new s.Buf32(qa), b.sane = 1, b.back = -1, D) : G
            }

            function g(a) {
                var b;
                return a && a.state ? (b = a.state, b.wsize = 0, b.whave = 0, b.wnext = 0, f(a)) : G
            }

            function h(a, b) {
                var c, d;
                return a && a.state ? (d = a.state, b < 0 ? (c = 0, b = -b) : (c = (b >> 4) + 1, b < 48 && (b &= 15)), b && (b < 8 || b > 15) ? G : (null !== d.window && d.wbits !== b && (d.window = null), d.wrap = c, d.wbits = b, g(a))) : G
            }

            function i(a, b) {
                var c, d;
                return a ? (d = new e, a.state = d, d.window = null, c = h(a, b), c !== D && (a.state = null), c) : G
            }

            function j(a) {
                return i(a, sa)
            }

            function k(a) {
                if (ta) {
                    var b;
                    for (q = new s.Buf32(512), r = new s.Buf32(32), b = 0; b < 144;) a.lens[b++] = 8;
                    for (; b < 256;) a.lens[b++] = 9;
                    for (; b < 280;) a.lens[b++] = 7;
                    for (; b < 288;) a.lens[b++] = 8;
                    for (w(y, a.lens, 0, 288, q, 0, a.work, {
                            bits: 9
                        }), b = 0; b < 32;) a.lens[b++] = 5;
                    w(z, a.lens, 0, 32, r, 0, a.work, {
                        bits: 5
                    }), ta = !1
                }
                a.lencode = q, a.lenbits = 9, a.distcode = r, a.distbits = 5
            }

            function l(a, b, c, d) {
                var e, f = a.state;
                return null === f.window && (f.wsize = 1 << f.wbits, f.wnext = 0, f.whave = 0, f.window = new s.Buf8(f.wsize)), d >= f.wsize ? (s.arraySet(f.window, b, c - f.wsize, f.wsize, 0), f.wnext = 0, f.whave = f.wsize) : (e = f.wsize - f.wnext, e > d && (e = d), s.arraySet(f.window, b, c - d, e, f.wnext), d -= e, d ? (s.arraySet(f.window, b, c - d, d, 0), f.wnext = d, f.whave = f.wsize) : (f.wnext += e, f.wnext === f.wsize && (f.wnext = 0), f.whave < f.wsize && (f.whave += e))), 0
            }

            function m(a, b) {
                var c, e, f, g, h, i, j, m, n, o, p, q, r, pa, qa, ra, sa, ta, ua, va, wa, xa, ya, za, Aa = 0,
                    Ba = new s.Buf8(4),
                    Ca = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                if (!a || !a.state || !a.output || !a.input && 0 !== a.avail_in) return G;
                c = a.state, c.mode === W && (c.mode = X), h = a.next_out, f = a.output, j = a.avail_out, g = a.next_in, e = a.input, i = a.avail_in, m = c.hold, n = c.bits, o = i, p = j, xa = D;
                a: for (;;) switch (c.mode) {
                    case L:
                        if (0 === c.wrap) {
                            c.mode = X;
                            break
                        }
                        for (; n < 16;) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (2 & c.wrap && 35615 === m) {
                            c.check = 0, Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0), m = 0, n = 0, c.mode = M;
                            break
                        }
                        if (c.flags = 0, c.head && (c.head.done = !1), !(1 & c.wrap) || (((255 & m) << 8) + (m >> 8)) % 31) {
                            a.msg = "incorrect header check", c.mode = ma;
                            break
                        }
                        if ((15 & m) !== K) {
                            a.msg = "unknown compression method", c.mode = ma;
                            break
                        }
                        if (m >>>= 4, n -= 4, wa = (15 & m) + 8, 0 === c.wbits) c.wbits = wa;
                        else if (wa > c.wbits) {
                            a.msg = "invalid window size", c.mode = ma;
                            break
                        }
                        c.dmax = 1 << wa, a.adler = c.check = 1, c.mode = 512 & m ? U : W, m = 0, n = 0;
                        break;
                    case M:
                        for (; n < 16;) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (c.flags = m, (255 & c.flags) !== K) {
                            a.msg = "unknown compression method", c.mode = ma;
                            break
                        }
                        if (57344 & c.flags) {
                            a.msg = "unknown header flags set", c.mode = ma;
                            break
                        }
                        c.head && (c.head.text = m >> 8 & 1), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0)), m = 0, n = 0, c.mode = N;
                    case N:
                        for (; n < 32;) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        c.head && (c.head.time = m), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, Ba[2] = m >>> 16 & 255, Ba[3] = m >>> 24 & 255, c.check = u(c.check, Ba, 4, 0)), m = 0, n = 0, c.mode = O;
                    case O:
                        for (; n < 16;) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        c.head && (c.head.xflags = 255 & m, c.head.os = m >> 8), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0)), m = 0, n = 0, c.mode = P;
                    case P:
                        if (1024 & c.flags) {
                            for (; n < 16;) {
                                if (0 === i) break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            c.length = m, c.head && (c.head.extra_len = m), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0)), m = 0, n = 0
                        } else c.head && (c.head.extra = null);
                        c.mode = Q;
                    case Q:
                        if (1024 & c.flags && (q = c.length, q > i && (q = i), q && (c.head && (wa = c.head.extra_len - c.length, c.head.extra || (c.head.extra = new Array(c.head.extra_len)), s.arraySet(c.head.extra, e, g, q, wa)), 512 & c.flags && (c.check = u(c.check, e, q, g)), i -= q, g += q, c.length -= q), c.length)) break a;
                        c.length = 0, c.mode = R;
                    case R:
                        if (2048 & c.flags) {
                            if (0 === i) break a;
                            q = 0;
                            do wa = e[g + q++], c.head && wa && c.length < 65536 && (c.head.name += String.fromCharCode(wa)); while (wa && q < i);
                            if (512 & c.flags && (c.check = u(c.check, e, q, g)), i -= q, g += q, wa) break a
                        } else c.head && (c.head.name = null);
                        c.length = 0, c.mode = S;
                    case S:
                        if (4096 & c.flags) {
                            if (0 === i) break a;
                            q = 0;
                            do wa = e[g + q++], c.head && wa && c.length < 65536 && (c.head.comment += String.fromCharCode(wa)); while (wa && q < i);
                            if (512 & c.flags && (c.check = u(c.check, e, q, g)), i -= q, g += q, wa) break a
                        } else c.head && (c.head.comment = null);
                        c.mode = T;
                    case T:
                        if (512 & c.flags) {
                            for (; n < 16;) {
                                if (0 === i) break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            if (m !== (65535 & c.check)) {
                                a.msg = "header crc mismatch", c.mode = ma;
                                break
                            }
                            m = 0, n = 0
                        }
                        c.head && (c.head.hcrc = c.flags >> 9 & 1, c.head.done = !0), a.adler = c.check = 0, c.mode = W;
                        break;
                    case U:
                        for (; n < 32;) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        a.adler = c.check = d(m), m = 0, n = 0, c.mode = V;
                    case V:
                        if (0 === c.havedict) return a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, F;
                        a.adler = c.check = 1, c.mode = W;
                    case W:
                        if (b === B || b === C) break a;
                    case X:
                        if (c.last) {
                            m >>>= 7 & n, n -= 7 & n, c.mode = ja;
                            break
                        }
                        for (; n < 3;) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        switch (c.last = 1 & m, m >>>= 1, n -= 1, 3 & m) {
                            case 0:
                                c.mode = Y;
                                break;
                            case 1:
                                if (k(c), c.mode = ca, b === C) {
                                    m >>>= 2, n -= 2;
                                    break a
                                }
                                break;
                            case 2:
                                c.mode = _;
                                break;
                            case 3:
                                a.msg = "invalid block type", c.mode = ma
                        }
                        m >>>= 2, n -= 2;
                        break;
                    case Y:
                        for (m >>>= 7 & n, n -= 7 & n; n < 32;) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if ((65535 & m) !== (m >>> 16 ^ 65535)) {
                            a.msg = "invalid stored block lengths", c.mode = ma;
                            break
                        }
                        if (c.length = 65535 & m, m = 0, n = 0, c.mode = Z, b === C) break a;
                    case Z:
                        c.mode = $;
                    case $:
                        if (q = c.length) {
                            if (q > i && (q = i), q > j && (q = j), 0 === q) break a;
                            s.arraySet(f, e, g, q, h), i -= q, g += q, j -= q, h += q, c.length -= q;
                            break
                        }
                        c.mode = W;
                        break;
                    case _:
                        for (; n < 14;) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (c.nlen = (31 & m) + 257, m >>>= 5, n -= 5, c.ndist = (31 & m) + 1, m >>>= 5, n -= 5, c.ncode = (15 & m) + 4, m >>>= 4, n -= 4, c.nlen > 286 || c.ndist > 30) {
                            a.msg = "too many length or distance symbols", c.mode = ma;
                            break
                        }
                        c.have = 0, c.mode = aa;
                    case aa:
                        for (; c.have < c.ncode;) {
                            for (; n < 3;) {
                                if (0 === i) break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            c.lens[Ca[c.have++]] = 7 & m, m >>>= 3, n -= 3
                        }
                        for (; c.have < 19;) c.lens[Ca[c.have++]] = 0;
                        if (c.lencode = c.lendyn, c.lenbits = 7, ya = {
                                bits: c.lenbits
                            }, xa = w(x, c.lens, 0, 19, c.lencode, 0, c.work, ya), c.lenbits = ya.bits, xa) {
                            a.msg = "invalid code lengths set", c.mode = ma;
                            break
                        }
                        c.have = 0, c.mode = ba;
                    case ba:
                        for (; c.have < c.nlen + c.ndist;) {
                            for (; Aa = c.lencode[m & (1 << c.lenbits) - 1], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(qa <= n);) {
                                if (0 === i) break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            if (sa < 16) m >>>= qa, n -= qa, c.lens[c.have++] = sa;
                            else {
                                if (16 === sa) {
                                    for (za = qa + 2; n < za;) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    if (m >>>= qa, n -= qa, 0 === c.have) {
                                        a.msg = "invalid bit length repeat", c.mode = ma;
                                        break
                                    }
                                    wa = c.lens[c.have - 1], q = 3 + (3 & m), m >>>= 2, n -= 2
                                } else if (17 === sa) {
                                    for (za = qa + 3; n < za;) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    m >>>= qa, n -= qa, wa = 0, q = 3 + (7 & m), m >>>= 3, n -= 3
                                } else {
                                    for (za = qa + 7; n < za;) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    m >>>= qa, n -= qa, wa = 0, q = 11 + (127 & m), m >>>= 7, n -= 7
                                }
                                if (c.have + q > c.nlen + c.ndist) {
                                    a.msg = "invalid bit length repeat", c.mode = ma;
                                    break
                                }
                                for (; q--;) c.lens[c.have++] = wa
                            }
                        }
                        if (c.mode === ma) break;
                        if (0 === c.lens[256]) {
                            a.msg = "invalid code -- missing end-of-block", c.mode = ma;
                            break
                        }
                        if (c.lenbits = 9, ya = {
                                bits: c.lenbits
                            }, xa = w(y, c.lens, 0, c.nlen, c.lencode, 0, c.work, ya), c.lenbits = ya.bits, xa) {
                            a.msg = "invalid literal/lengths set", c.mode = ma;
                            break
                        }
                        if (c.distbits = 6, c.distcode = c.distdyn, ya = {
                                bits: c.distbits
                            }, xa = w(z, c.lens, c.nlen, c.ndist, c.distcode, 0, c.work, ya), c.distbits = ya.bits, xa) {
                            a.msg = "invalid distances set", c.mode = ma;
                            break
                        }
                        if (c.mode = ca, b === C) break a;
                    case ca:
                        c.mode = da;
                    case da:
                        if (i >= 6 && j >= 258) {
                            a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, v(a, p), h = a.next_out, f = a.output, j = a.avail_out, g = a.next_in, e = a.input, i = a.avail_in, m = c.hold, n = c.bits, c.mode === W && (c.back = -1);
                            break
                        }
                        for (c.back = 0; Aa = c.lencode[m & (1 << c.lenbits) - 1], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(qa <= n);) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (ra && 0 === (240 & ra)) {
                            for (ta = qa, ua = ra, va = sa; Aa = c.lencode[va + ((m & (1 << ta + ua) - 1) >> ta)], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(ta + qa <= n);) {
                                if (0 === i) break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            m >>>= ta, n -= ta, c.back += ta
                        }
                        if (m >>>= qa, n -= qa, c.back += qa, c.length = sa, 0 === ra) {
                            c.mode = ia;
                            break
                        }
                        if (32 & ra) {
                            c.back = -1, c.mode = W;
                            break
                        }
                        if (64 & ra) {
                            a.msg = "invalid literal/length code", c.mode = ma;
                            break
                        }
                        c.extra = 15 & ra, c.mode = ea;
                    case ea:
                        if (c.extra) {
                            for (za = c.extra; n < za;) {
                                if (0 === i) break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            c.length += m & (1 << c.extra) - 1, m >>>= c.extra, n -= c.extra, c.back += c.extra
                        }
                        c.was = c.length, c.mode = fa;
                    case fa:
                        for (; Aa = c.distcode[m & (1 << c.distbits) - 1], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(qa <= n);) {
                            if (0 === i) break a;
                            i--, m += e[g++] << n, n += 8
                        }
                        if (0 === (240 & ra)) {
                            for (ta = qa, ua = ra, va = sa; Aa = c.distcode[va + ((m & (1 << ta + ua) - 1) >> ta)], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(ta + qa <= n);) {
                                if (0 === i) break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            m >>>= ta, n -= ta, c.back += ta
                        }
                        if (m >>>= qa, n -= qa, c.back += qa, 64 & ra) {
                            a.msg = "invalid distance code", c.mode = ma;
                            break
                        }
                        c.offset = sa, c.extra = 15 & ra, c.mode = ga;
                    case ga:
                        if (c.extra) {
                            for (za = c.extra; n < za;) {
                                if (0 === i) break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            c.offset += m & (1 << c.extra) - 1, m >>>= c.extra, n -= c.extra, c.back += c.extra
                        }
                        if (c.offset > c.dmax) {
                            a.msg = "invalid distance too far back", c.mode = ma;
                            break
                        }
                        c.mode = ha;
                    case ha:
                        if (0 === j) break a;
                        if (q = p - j, c.offset > q) {
                            if (q = c.offset - q, q > c.whave && c.sane) {
                                a.msg = "invalid distance too far back", c.mode = ma;
                                break
                            }
                            q > c.wnext ? (q -= c.wnext, r = c.wsize - q) : r = c.wnext - q, q > c.length && (q = c.length), pa = c.window
                        } else pa = f, r = h - c.offset, q = c.length;
                        q > j && (q = j), j -= q, c.length -= q;
                        do f[h++] = pa[r++]; while (--q);
                        0 === c.length && (c.mode = da);
                        break;
                    case ia:
                        if (0 === j) break a;
                        f[h++] = c.length, j--, c.mode = da;
                        break;
                    case ja:
                        if (c.wrap) {
                            for (; n < 32;) {
                                if (0 === i) break a;
                                i--, m |= e[g++] << n, n += 8
                            }
                            if (p -= j, a.total_out += p, c.total += p, p && (a.adler = c.check = c.flags ? u(c.check, f, p, h - p) : t(c.check, f, p, h - p)), p = j, (c.flags ? m : d(m)) !== c.check) {
                                a.msg = "incorrect data check", c.mode = ma;
                                break
                            }
                            m = 0, n = 0
                        }
                        c.mode = ka;
                    case ka:
                        if (c.wrap && c.flags) {
                            for (; n < 32;) {
                                if (0 === i) break a;
                                i--, m += e[g++] << n, n += 8
                            }
                            if (m !== (4294967295 & c.total)) {
                                a.msg = "incorrect length check", c.mode = ma;
                                break
                            }
                            m = 0, n = 0
                        }
                        c.mode = la;
                    case la:
                        xa = E;
                        break a;
                    case ma:
                        xa = H;
                        break a;
                    case na:
                        return I;
                    case oa:
                    default:
                        return G
                }
                return a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, (c.wsize || p !== a.avail_out && c.mode < ma && (c.mode < ja || b !== A)) && l(a, a.output, a.next_out, p - a.avail_out) ? (c.mode = na, I) : (o -= a.avail_in, p -= a.avail_out, a.total_in += o, a.total_out += p, c.total += p, c.wrap && p && (a.adler = c.check = c.flags ? u(c.check, f, p, a.next_out - p) : t(c.check, f, p, a.next_out - p)), a.data_type = c.bits + (c.last ? 64 : 0) + (c.mode === W ? 128 : 0) + (c.mode === ca || c.mode === Z ? 256 : 0), (0 === o && 0 === p || b === A) && xa === D && (xa = J), xa)
            }

            function n(a) {
                if (!a || !a.state) return G;
                var b = a.state;
                return b.window && (b.window = null), a.state = null, D
            }

            function o(a, b) {
                var c;
                return a && a.state ? (c = a.state, 0 === (2 & c.wrap) ? G : (c.head = b, b.done = !1, D)) : G
            }

            function p(a, b) {
                var c, d, e, f = b.length;
                return a && a.state ? (c = a.state, 0 !== c.wrap && c.mode !== V ? G : c.mode === V && (d = 1, d = t(d, b, f, 0), d !== c.check) ? H : (e = l(a, b, f, f)) ? (c.mode = na, I) : (c.havedict = 1, D)) : G
            }
            var q, r, s = a("../utils/common"),
                t = a("./adler32"),
                u = a("./crc32"),
                v = a("./inffast"),
                w = a("./inftrees"),
                x = 0,
                y = 1,
                z = 2,
                A = 4,
                B = 5,
                C = 6,
                D = 0,
                E = 1,
                F = 2,
                G = -2,
                H = -3,
                I = -4,
                J = -5,
                K = 8,
                L = 1,
                M = 2,
                N = 3,
                O = 4,
                P = 5,
                Q = 6,
                R = 7,
                S = 8,
                T = 9,
                U = 10,
                V = 11,
                W = 12,
                X = 13,
                Y = 14,
                Z = 15,
                $ = 16,
                _ = 17,
                aa = 18,
                ba = 19,
                ca = 20,
                da = 21,
                ea = 22,
                fa = 23,
                ga = 24,
                ha = 25,
                ia = 26,
                ja = 27,
                ka = 28,
                la = 29,
                ma = 30,
                na = 31,
                oa = 32,
                pa = 852,
                qa = 592,
                ra = 15,
                sa = ra,
                ta = !0;
            c.inflateReset = g, c.inflateReset2 = h, c.inflateResetKeep = f, c.inflateInit = j, c.inflateInit2 = i, c.inflate = m, c.inflateEnd = n, c.inflateGetHeader = o, c.inflateSetDictionary = p, c.inflateInfo = "pako inflate (from Nodeca project)"
        }, {
            "../utils/common": 62,
            "./adler32": 64,
            "./crc32": 66,
            "./inffast": 69,
            "./inftrees": 71
        }],
        71: [function(a, b, c) {
            "use strict";
            var d = a("../utils/common"),
                e = 15,
                f = 852,
                g = 592,
                h = 0,
                i = 1,
                j = 2,
                k = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
                l = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],
                m = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],
                n = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
            b.exports = function(a, b, c, o, p, q, r, s) {
                var t, u, v, w, x, y, z, A, B, C = s.bits,
                    D = 0,
                    E = 0,
                    F = 0,
                    G = 0,
                    H = 0,
                    I = 0,
                    J = 0,
                    K = 0,
                    L = 0,
                    M = 0,
                    N = null,
                    O = 0,
                    P = new d.Buf16(e + 1),
                    Q = new d.Buf16(e + 1),
                    R = null,
                    S = 0;
                for (D = 0; D <= e; D++) P[D] = 0;
                for (E = 0; E < o; E++) P[b[c + E]]++;
                for (H = C, G = e; G >= 1 && 0 === P[G]; G--);
                if (H > G && (H = G), 0 === G) return p[q++] = 20971520, p[q++] = 20971520, s.bits = 1, 0;
                for (F = 1; F < G && 0 === P[F]; F++);
                for (H < F && (H = F), K = 1, D = 1; D <= e; D++)
                    if (K <<= 1, K -= P[D], K < 0) return -1;
                if (K > 0 && (a === h || 1 !== G)) return -1;
                for (Q[1] = 0, D = 1; D < e; D++) Q[D + 1] = Q[D] + P[D];
                for (E = 0; E < o; E++) 0 !== b[c + E] && (r[Q[b[c + E]]++] = E);
                if (a === h ? (N = R = r, y = 19) : a === i ? (N = k, O -= 257, R = l, S -= 257, y = 256) : (N = m, R = n, y = -1), M = 0, E = 0, D = F, x = q, I = H, J = 0, v = -1, L = 1 << H, w = L - 1, a === i && L > f || a === j && L > g) return 1;
                for (;;) {
                    z = D - J, r[E] < y ? (A = 0, B = r[E]) : r[E] > y ? (A = R[S + r[E]], B = N[O + r[E]]) : (A = 96, B = 0), t = 1 << D - J, u = 1 << I, F = u;
                    do u -= t, p[x + (M >> J) + u] = z << 24 | A << 16 | B | 0; while (0 !== u);
                    for (t = 1 << D - 1; M & t;) t >>= 1;
                    if (0 !== t ? (M &= t - 1, M += t) : M = 0, E++, 0 === --P[D]) {
                        if (D === G) break;
                        D = b[c + r[E]]
                    }
                    if (D > H && (M & w) !== v) {
                        for (0 === J && (J = H), x += F, I = D - J, K = 1 << I; I + J < G && (K -= P[I + J], !(K <= 0));) I++, K <<= 1;
                        if (L += 1 << I, a === i && L > f || a === j && L > g) return 1;
                        v = M & w, p[v] = H << 24 | I << 16 | x - q | 0
                    }
                }
                return 0 !== M && (p[x + M] = D - J << 24 | 64 << 16 | 0), s.bits = H, 0
            }
        }, {
            "../utils/common": 62
        }],
        72: [function(a, b, c) {
            "use strict";
            b.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version"
            }
        }, {}],
        73: [function(a, b, c) {
            "use strict";

            function d(a) {
                for (var b = a.length; --b >= 0;) a[b] = 0
            }

            function e(a, b, c, d, e) {
                this.static_tree = a, this.extra_bits = b, this.extra_base = c, this.elems = d, this.max_length = e, this.has_stree = a && a.length
            }

            function f(a, b) {
                this.dyn_tree = a, this.max_code = 0, this.stat_desc = b
            }

            function g(a) {
                return a < 256 ? ia[a] : ia[256 + (a >>> 7)]
            }

            function h(a, b) {
                a.pending_buf[a.pending++] = 255 & b, a.pending_buf[a.pending++] = b >>> 8 & 255
            }

            function i(a, b, c) {
                a.bi_valid > X - c ? (a.bi_buf |= b << a.bi_valid & 65535, h(a, a.bi_buf), a.bi_buf = b >> X - a.bi_valid, a.bi_valid += c - X) : (a.bi_buf |= b << a.bi_valid & 65535, a.bi_valid += c)
            }

            function j(a, b, c) {
                i(a, c[2 * b], c[2 * b + 1])
            }

            function k(a, b) {
                var c = 0;
                do c |= 1 & a, a >>>= 1, c <<= 1; while (--b > 0);
                return c >>> 1
            }

            function l(a) {
                16 === a.bi_valid ? (h(a, a.bi_buf), a.bi_buf = 0, a.bi_valid = 0) : a.bi_valid >= 8 && (a.pending_buf[a.pending++] = 255 & a.bi_buf, a.bi_buf >>= 8, a.bi_valid -= 8)
            }

            function m(a, b) {
                var c, d, e, f, g, h, i = b.dyn_tree,
                    j = b.max_code,
                    k = b.stat_desc.static_tree,
                    l = b.stat_desc.has_stree,
                    m = b.stat_desc.extra_bits,
                    n = b.stat_desc.extra_base,
                    o = b.stat_desc.max_length,
                    p = 0;
                for (f = 0; f <= W; f++) a.bl_count[f] = 0;
                for (i[2 * a.heap[a.heap_max] + 1] = 0,
                    c = a.heap_max + 1; c < V; c++) d = a.heap[c], f = i[2 * i[2 * d + 1] + 1] + 1, f > o && (f = o, p++), i[2 * d + 1] = f, d > j || (a.bl_count[f]++, g = 0, d >= n && (g = m[d - n]), h = i[2 * d], a.opt_len += h * (f + g), l && (a.static_len += h * (k[2 * d + 1] + g)));
                if (0 !== p) {
                    do {
                        for (f = o - 1; 0 === a.bl_count[f];) f--;
                        a.bl_count[f]--, a.bl_count[f + 1] += 2, a.bl_count[o]--, p -= 2
                    } while (p > 0);
                    for (f = o; 0 !== f; f--)
                        for (d = a.bl_count[f]; 0 !== d;) e = a.heap[--c], e > j || (i[2 * e + 1] !== f && (a.opt_len += (f - i[2 * e + 1]) * i[2 * e], i[2 * e + 1] = f), d--)
                }
            }

            function n(a, b, c) {
                var d, e, f = new Array(W + 1),
                    g = 0;
                for (d = 1; d <= W; d++) f[d] = g = g + c[d - 1] << 1;
                for (e = 0; e <= b; e++) {
                    var h = a[2 * e + 1];
                    0 !== h && (a[2 * e] = k(f[h]++, h))
                }
            }

            function o() {
                var a, b, c, d, f, g = new Array(W + 1);
                for (c = 0, d = 0; d < Q - 1; d++)
                    for (ka[d] = c, a = 0; a < 1 << ba[d]; a++) ja[c++] = d;
                for (ja[c - 1] = d, f = 0, d = 0; d < 16; d++)
                    for (la[d] = f, a = 0; a < 1 << ca[d]; a++) ia[f++] = d;
                for (f >>= 7; d < T; d++)
                    for (la[d] = f << 7, a = 0; a < 1 << ca[d] - 7; a++) ia[256 + f++] = d;
                for (b = 0; b <= W; b++) g[b] = 0;
                for (a = 0; a <= 143;) ga[2 * a + 1] = 8, a++, g[8]++;
                for (; a <= 255;) ga[2 * a + 1] = 9, a++, g[9]++;
                for (; a <= 279;) ga[2 * a + 1] = 7, a++, g[7]++;
                for (; a <= 287;) ga[2 * a + 1] = 8, a++, g[8]++;
                for (n(ga, S + 1, g), a = 0; a < T; a++) ha[2 * a + 1] = 5, ha[2 * a] = k(a, 5);
                ma = new e(ga, ba, R + 1, S, W), na = new e(ha, ca, 0, T, W), oa = new e(new Array(0), da, 0, U, Y)
            }

            function p(a) {
                var b;
                for (b = 0; b < S; b++) a.dyn_ltree[2 * b] = 0;
                for (b = 0; b < T; b++) a.dyn_dtree[2 * b] = 0;
                for (b = 0; b < U; b++) a.bl_tree[2 * b] = 0;
                a.dyn_ltree[2 * Z] = 1, a.opt_len = a.static_len = 0, a.last_lit = a.matches = 0
            }

            function q(a) {
                a.bi_valid > 8 ? h(a, a.bi_buf) : a.bi_valid > 0 && (a.pending_buf[a.pending++] = a.bi_buf), a.bi_buf = 0, a.bi_valid = 0
            }

            function r(a, b, c, d) {
                q(a), d && (h(a, c), h(a, ~c)), G.arraySet(a.pending_buf, a.window, b, c, a.pending), a.pending += c
            }

            function s(a, b, c, d) {
                var e = 2 * b,
                    f = 2 * c;
                return a[e] < a[f] || a[e] === a[f] && d[b] <= d[c]
            }

            function t(a, b, c) {
                for (var d = a.heap[c], e = c << 1; e <= a.heap_len && (e < a.heap_len && s(b, a.heap[e + 1], a.heap[e], a.depth) && e++, !s(b, d, a.heap[e], a.depth));) a.heap[c] = a.heap[e], c = e, e <<= 1;
                a.heap[c] = d
            }

            function u(a, b, c) {
                var d, e, f, h, k = 0;
                if (0 !== a.last_lit)
                    do d = a.pending_buf[a.d_buf + 2 * k] << 8 | a.pending_buf[a.d_buf + 2 * k + 1], e = a.pending_buf[a.l_buf + k], k++, 0 === d ? j(a, e, b) : (f = ja[e], j(a, f + R + 1, b), h = ba[f], 0 !== h && (e -= ka[f], i(a, e, h)), d--, f = g(d), j(a, f, c), h = ca[f], 0 !== h && (d -= la[f], i(a, d, h))); while (k < a.last_lit);
                j(a, Z, b)
            }

            function v(a, b) {
                var c, d, e, f = b.dyn_tree,
                    g = b.stat_desc.static_tree,
                    h = b.stat_desc.has_stree,
                    i = b.stat_desc.elems,
                    j = -1;
                for (a.heap_len = 0, a.heap_max = V, c = 0; c < i; c++) 0 !== f[2 * c] ? (a.heap[++a.heap_len] = j = c, a.depth[c] = 0) : f[2 * c + 1] = 0;
                for (; a.heap_len < 2;) e = a.heap[++a.heap_len] = j < 2 ? ++j : 0, f[2 * e] = 1, a.depth[e] = 0, a.opt_len--, h && (a.static_len -= g[2 * e + 1]);
                for (b.max_code = j, c = a.heap_len >> 1; c >= 1; c--) t(a, f, c);
                e = i;
                do c = a.heap[1], a.heap[1] = a.heap[a.heap_len--], t(a, f, 1), d = a.heap[1], a.heap[--a.heap_max] = c, a.heap[--a.heap_max] = d, f[2 * e] = f[2 * c] + f[2 * d], a.depth[e] = (a.depth[c] >= a.depth[d] ? a.depth[c] : a.depth[d]) + 1, f[2 * c + 1] = f[2 * d + 1] = e, a.heap[1] = e++, t(a, f, 1); while (a.heap_len >= 2);
                a.heap[--a.heap_max] = a.heap[1], m(a, b), n(f, j, a.bl_count)
            }

            function w(a, b, c) {
                var d, e, f = -1,
                    g = b[1],
                    h = 0,
                    i = 7,
                    j = 4;
                for (0 === g && (i = 138, j = 3), b[2 * (c + 1) + 1] = 65535, d = 0; d <= c; d++) e = g, g = b[2 * (d + 1) + 1], ++h < i && e === g || (h < j ? a.bl_tree[2 * e] += h : 0 !== e ? (e !== f && a.bl_tree[2 * e]++, a.bl_tree[2 * $]++) : h <= 10 ? a.bl_tree[2 * _]++ : a.bl_tree[2 * aa]++, h = 0, f = e, 0 === g ? (i = 138, j = 3) : e === g ? (i = 6, j = 3) : (i = 7, j = 4))
            }

            function x(a, b, c) {
                var d, e, f = -1,
                    g = b[1],
                    h = 0,
                    k = 7,
                    l = 4;
                for (0 === g && (k = 138, l = 3), d = 0; d <= c; d++)
                    if (e = g, g = b[2 * (d + 1) + 1], !(++h < k && e === g)) {
                        if (h < l) {
                            do j(a, e, a.bl_tree); while (0 !== --h)
                        } else 0 !== e ? (e !== f && (j(a, e, a.bl_tree), h--), j(a, $, a.bl_tree), i(a, h - 3, 2)) : h <= 10 ? (j(a, _, a.bl_tree), i(a, h - 3, 3)) : (j(a, aa, a.bl_tree), i(a, h - 11, 7));
                        h = 0, f = e, 0 === g ? (k = 138, l = 3) : e === g ? (k = 6, l = 3) : (k = 7, l = 4)
                    }
            }

            function y(a) {
                var b;
                for (w(a, a.dyn_ltree, a.l_desc.max_code), w(a, a.dyn_dtree, a.d_desc.max_code), v(a, a.bl_desc), b = U - 1; b >= 3 && 0 === a.bl_tree[2 * ea[b] + 1]; b--);
                return a.opt_len += 3 * (b + 1) + 5 + 5 + 4, b
            }

            function z(a, b, c, d) {
                var e;
                for (i(a, b - 257, 5), i(a, c - 1, 5), i(a, d - 4, 4), e = 0; e < d; e++) i(a, a.bl_tree[2 * ea[e] + 1], 3);
                x(a, a.dyn_ltree, b - 1), x(a, a.dyn_dtree, c - 1)
            }

            function A(a) {
                var b, c = 4093624447;
                for (b = 0; b <= 31; b++, c >>>= 1)
                    if (1 & c && 0 !== a.dyn_ltree[2 * b]) return I;
                if (0 !== a.dyn_ltree[18] || 0 !== a.dyn_ltree[20] || 0 !== a.dyn_ltree[26]) return J;
                for (b = 32; b < R; b++)
                    if (0 !== a.dyn_ltree[2 * b]) return J;
                return I
            }

            function B(a) {
                pa || (o(), pa = !0), a.l_desc = new f(a.dyn_ltree, ma), a.d_desc = new f(a.dyn_dtree, na), a.bl_desc = new f(a.bl_tree, oa), a.bi_buf = 0, a.bi_valid = 0, p(a)
            }

            function C(a, b, c, d) {
                i(a, (L << 1) + (d ? 1 : 0), 3), r(a, b, c, !0)
            }

            function D(a) {
                i(a, M << 1, 3), j(a, Z, ga), l(a)
            }

            function E(a, b, c, d) {
                var e, f, g = 0;
                a.level > 0 ? (a.strm.data_type === K && (a.strm.data_type = A(a)), v(a, a.l_desc), v(a, a.d_desc), g = y(a), e = a.opt_len + 3 + 7 >>> 3, f = a.static_len + 3 + 7 >>> 3, f <= e && (e = f)) : e = f = c + 5, c + 4 <= e && b !== -1 ? C(a, b, c, d) : a.strategy === H || f === e ? (i(a, (M << 1) + (d ? 1 : 0), 3), u(a, ga, ha)) : (i(a, (N << 1) + (d ? 1 : 0), 3), z(a, a.l_desc.max_code + 1, a.d_desc.max_code + 1, g + 1), u(a, a.dyn_ltree, a.dyn_dtree)), p(a), d && q(a)
            }

            function F(a, b, c) {
                return a.pending_buf[a.d_buf + 2 * a.last_lit] = b >>> 8 & 255, a.pending_buf[a.d_buf + 2 * a.last_lit + 1] = 255 & b, a.pending_buf[a.l_buf + a.last_lit] = 255 & c, a.last_lit++, 0 === b ? a.dyn_ltree[2 * c]++ : (a.matches++, b--, a.dyn_ltree[2 * (ja[c] + R + 1)]++, a.dyn_dtree[2 * g(b)]++), a.last_lit === a.lit_bufsize - 1
            }
            var G = a("../utils/common"),
                H = 4,
                I = 0,
                J = 1,
                K = 2,
                L = 0,
                M = 1,
                N = 2,
                O = 3,
                P = 258,
                Q = 29,
                R = 256,
                S = R + 1 + Q,
                T = 30,
                U = 19,
                V = 2 * S + 1,
                W = 15,
                X = 16,
                Y = 7,
                Z = 256,
                $ = 16,
                _ = 17,
                aa = 18,
                ba = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],
                ca = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
                da = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                ea = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                fa = 512,
                ga = new Array(2 * (S + 2));
            d(ga);
            var ha = new Array(2 * T);
            d(ha);
            var ia = new Array(fa);
            d(ia);
            var ja = new Array(P - O + 1);
            d(ja);
            var ka = new Array(Q);
            d(ka);
            var la = new Array(T);
            d(la);
            var ma, na, oa, pa = !1;
            c._tr_init = B, c._tr_stored_block = C, c._tr_flush_block = E, c._tr_tally = F, c._tr_align = D
        }, {
            "../utils/common": 62
        }],
        74: [function(a, b, c) {
            "use strict";

            function d() {
                this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0
            }
            b.exports = d
        }, {}]
    }, {}, [10])(10)
});